/*! For license information please see main.js.LICENSE.txt */
(() => {
    var e = {
        669: (e, t, n) => {
            e.exports = n(609)
        },
        448: (e, t, n) => {
            "use strict";
            var i = n(867),
            a = n(26),
            r = n(372),
            o = n(327),
            s = n(97),
            c = n(109),
            l = n(985),
            h = n(61);
            e.exports = function (e) {
                return new Promise((function (t, n) {
                        var u = e.data,
                        f = e.headers;
                        i.isFormData(u) && delete f["Content-Type"];
                        var d = new XMLHttpRequest;
                        if (e.auth) {
                            var p = e.auth.username || "",
                            m = e.auth.password ? unescape(encodeURIComponent(e.auth.password)) : "";
                            f.Authorization = "Basic " + btoa(p + ":" + m)
                        }
                        var v = s(e.baseURL, e.url);
                        if (d.open(e.method.toUpperCase(), o(v, e.params, e.paramsSerializer), !0), d.timeout = e.timeout, d.onreadystatechange = function () {
                            if (d && 4 === d.readyState && (0 !== d.status || d.responseURL && 0 === d.responseURL.indexOf("file:"))) {
                                var i = "getAllResponseHeaders" in d ? c(d.getAllResponseHeaders()) : null,
                                r = {
                                    data: e.responseType && "text" !== e.responseType ? d.response : d.responseText,
                                    status: d.status,
                                    statusText: d.statusText,
                                    headers: i,
                                    config: e,
                                    request: d
                                };
                                a(t, n, r),
                                d = null
                            }
                        }, d.onabort = function () {
                            d && (n(h("Request aborted", e, "ECONNABORTED", d)), d = null)
                        }, d.onerror = function () {
                            n(h("Network Error", e, null, d)),
                            d = null
                        }, d.ontimeout = function () {
                            var t = "timeout of " + e.timeout + "ms exceeded";
                            e.timeoutErrorMessage && (t = e.timeoutErrorMessage),
                            n(h(t, e, "ECONNABORTED", d)),
                            d = null
                        }, i.isStandardBrowserEnv()) {
                            var g = (e.withCredentials || l(v)) && e.xsrfCookieName ? r.read(e.xsrfCookieName) : void 0;
                            g && (f[e.xsrfHeaderName] = g)
                        }
                        if ("setRequestHeader" in d && i.forEach(f, (function (e, t) {
                                    void 0 === u && "content-type" === t.toLowerCase() ? delete f[t] : d.setRequestHeader(t, e)
                                })), i.isUndefined(e.withCredentials) || (d.withCredentials = !!e.withCredentials), e.responseType)
                            try {
                                d.responseType = e.responseType
                            } catch (t) {
                                if ("json" !== e.responseType)
                                    throw t
                            }
                        "function" == typeof e.onDownloadProgress && d.addEventListener("progress", e.onDownloadProgress),
                        "function" == typeof e.onUploadProgress && d.upload && d.upload.addEventListener("progress", e.onUploadProgress),
                        e.cancelToken && e.cancelToken.promise.then((function (e) {
                                d && (d.abort(), n(e), d = null)
                            })),
                        u || (u = null),
                        d.send(u)
                    }))
            }
        },
        609: (e, t, n) => {
            "use strict";
            var i = n(867),
            a = n(849),
            r = n(321),
            o = n(185);
            function s(e) {
                var t = new r(e),
                n = a(r.prototype.request, t);
                return i.extend(n, r.prototype, t),
                i.extend(n, t),
                n
            }
            var c = s(n(655));
            c.Axios = r,
            c.create = function (e) {
                return s(o(c.defaults, e))
            },
            c.Cancel = n(263),
            c.CancelToken = n(972),
            c.isCancel = n(502),
            c.all = function (e) {
                return Promise.all(e)
            },
            c.spread = n(713),
            c.isAxiosError = n(268),
            e.exports = c,
            e.exports.default = c
        },
        263: e => {
            "use strict";
            function t(e) {
                this.message = e
            }
            t.prototype.toString = function () {
                return "Cancel" + (this.message ? ": " + this.message : "")
            },
            t.prototype.__CANCEL__ = !0,
            e.exports = t
        },
        972: (e, t, n) => {
            "use strict";
            var i = n(263);
            function a(e) {
                if ("function" != typeof e)
                    throw new TypeError("executor must be a function.");
                var t;
                this.promise = new Promise((function (e) {
                            t = e
                        }));
                var n = this;
                e((function (e) {
                        n.reason || (n.reason = new i(e), t(n.reason))
                    }))
            }
            a.prototype.throwIfRequested = function () {
                if (this.reason)
                    throw this.reason
            },
            a.source = function () {
                var e;
                return {
                    token: new a((function (t) {
                            e = t
                        })),
                    cancel: e
                }
            },
            e.exports = a
        },
        502: e => {
            "use strict";
            e.exports = function (e) {
                return !(!e || !e.__CANCEL__)
            }
        },
        321: (e, t, n) => {
            "use strict";
            var i = n(867),
            a = n(327),
            r = n(782),
            o = n(572),
            s = n(185);
            function c(e) {
                this.defaults = e,
                this.interceptors = {
                    request: new r,
                    response: new r
                }
            }
            c.prototype.request = function (e) {
                "string" == typeof e ? (e = arguments[1] || {}).url = arguments[0] : e = e || {},
                (e = s(this.defaults, e)).method ? e.method = e.method.toLowerCase() : this.defaults.method ? e.method = this.defaults.method.toLowerCase() : e.method = "get";
                var t = [o, void 0],
                n = Promise.resolve(e);
                for (this.interceptors.request.forEach((function (e) {
                            t.unshift(e.fulfilled, e.rejected)
                        })), this.interceptors.response.forEach((function (e) {
                            t.push(e.fulfilled, e.rejected)
                        })); t.length; )
                    n = n.then(t.shift(), t.shift());
                return n
            },
            c.prototype.getUri = function (e) {
                return e = s(this.defaults, e),
                a(e.url, e.params, e.paramsSerializer).replace(/^\?/, "")
            },
            i.forEach(["delete", "get", "head", "options"], (function (e) {
                    c.prototype[e] = function (t, n) {
                        return this.request(s(n || {}, {
                                method: e,
                                url: t,
                                data: (n || {}).data
                            }))
                    }
                })),
            i.forEach(["post", "put", "patch"], (function (e) {
                    c.prototype[e] = function (t, n, i) {
                        return this.request(s(i || {}, {
                                method: e,
                                url: t,
                                data: n
                            }))
                    }
                })),
            e.exports = c
        },
        782: (e, t, n) => {
            "use strict";
            var i = n(867);
            function a() {
                this.handlers = []
            }
            a.prototype.use = function (e, t) {
                return this.handlers.push({
                    fulfilled: e,
                    rejected: t
                }),
                this.handlers.length - 1
            },
            a.prototype.eject = function (e) {
                this.handlers[e] && (this.handlers[e] = null)
            },
            a.prototype.forEach = function (e) {
                i.forEach(this.handlers, (function (t) {
                        null !== t && e(t)
                    }))
            },
            e.exports = a
        },
        97: (e, t, n) => {
            "use strict";
            var i = n(793),
            a = n(303);
            e.exports = function (e, t) {
                return e && !i(t) ? a(e, t) : t
            }
        },
        61: (e, t, n) => {
            "use strict";
            var i = n(481);
            e.exports = function (e, t, n, a, r) {
                var o = new Error(e);
                return i(o, t, n, a, r)
            }
        },
        572: (e, t, n) => {
            "use strict";
            var i = n(867),
            a = n(527),
            r = n(502),
            o = n(655);
            function s(e) {
                e.cancelToken && e.cancelToken.throwIfRequested()
            }
            e.exports = function (e) {
                return s(e),
                e.headers = e.headers || {},
                e.data = a(e.data, e.headers, e.transformRequest),
                e.headers = i.merge(e.headers.common || {}, e.headers[e.method] || {}, e.headers),
                i.forEach(["delete", "get", "head", "post", "put", "patch", "common"], (function (t) {
                        delete e.headers[t]
                    })),
                (e.adapter || o.adapter)(e).then((function (t) {
                        return s(e),
                        t.data = a(t.data, t.headers, e.transformResponse),
                        t
                    }), (function (t) {
                        return r(t) || (s(e), t && t.response && (t.response.data = a(t.response.data, t.response.headers, e.transformResponse))),
                        Promise.reject(t)
                    }))
            }
        },
        481: e => {
            "use strict";
            e.exports = function (e, t, n, i, a) {
                return e.config = t,
                n && (e.code = n),
                e.request = i,
                e.response = a,
                e.isAxiosError = !0,
                e.toJSON = function () {
                    return {
                        message: this.message,
                        name: this.name,
                        description: this.description,
                        number: this.number,
                        fileName: this.fileName,
                        lineNumber: this.lineNumber,
                        columnNumber: this.columnNumber,
                        stack: this.stack,
                        config: this.config,
                        code: this.code
                    }
                },
                e
            }
        },
        185: (e, t, n) => {
            "use strict";
            var i = n(867);
            e.exports = function (e, t) {
                t = t || {};
                var n = {},
                a = ["url", "method", "data"],
                r = ["headers", "auth", "proxy", "params"],
                o = ["baseURL", "transformRequest", "transformResponse", "paramsSerializer", "timeout", "timeoutMessage", "withCredentials", "adapter", "responseType", "xsrfCookieName", "xsrfHeaderName", "onUploadProgress", "onDownloadProgress", "decompress", "maxContentLength", "maxBodyLength", "maxRedirects", "transport", "httpAgent", "httpsAgent", "cancelToken", "socketPath", "responseEncoding"],
                s = ["validateStatus"];
                function c(e, t) {
                    return i.isPlainObject(e) && i.isPlainObject(t) ? i.merge(e, t) : i.isPlainObject(t) ? i.merge({}, t) : i.isArray(t) ? t.slice() : t
                }
                function l(a) {
                    i.isUndefined(t[a]) ? i.isUndefined(e[a]) || (n[a] = c(void 0, e[a])) : n[a] = c(e[a], t[a])
                }
                i.forEach(a, (function (e) {
                        i.isUndefined(t[e]) || (n[e] = c(void 0, t[e]))
                    })),
                i.forEach(r, l),
                i.forEach(o, (function (a) {
                        i.isUndefined(t[a]) ? i.isUndefined(e[a]) || (n[a] = c(void 0, e[a])) : n[a] = c(void 0, t[a])
                    })),
                i.forEach(s, (function (i) {
                        i in t ? n[i] = c(e[i], t[i]) : i in e && (n[i] = c(void 0, e[i]))
                    }));
                var h = a.concat(r).concat(o).concat(s),
                u = Object.keys(e).concat(Object.keys(t)).filter((function (e) {
                            return -1 === h.indexOf(e)
                        }));
                return i.forEach(u, l),
                n
            }
        },
        26: (e, t, n) => {
            "use strict";
            var i = n(61);
            e.exports = function (e, t, n) {
                var a = n.config.validateStatus;
                n.status && a && !a(n.status) ? t(i("Request failed with status code " + n.status, n.config, null, n.request, n)) : e(n)
            }
        },
        527: (e, t, n) => {
            "use strict";
            var i = n(867);
            e.exports = function (e, t, n) {
                return i.forEach(n, (function (n) {
                        e = n(e, t)
                    })),
                e
            }
        },
        655: (e, t, n) => {
            "use strict";
            var i = n(867),
            a = n(16),
            r = {
                "Content-Type": "application/x-www-form-urlencoded"
            };
            function o(e, t) {
                !i.isUndefined(e) && i.isUndefined(e["Content-Type"]) && (e["Content-Type"] = t)
            }
            var s,
            c = {
                adapter: (("undefined" != typeof XMLHttpRequest || "undefined" != typeof process && "[object process]" === Object.prototype.toString.call(process)) && (s = n(448)), s),
                transformRequest: [function (e, t) {
                        return a(t, "Accept"),
                        a(t, "Content-Type"),
                        i.isFormData(e) || i.isArrayBuffer(e) || i.isBuffer(e) || i.isStream(e) || i.isFile(e) || i.isBlob(e) ? e : i.isArrayBufferView(e) ? e.buffer : i.isURLSearchParams(e) ? (o(t, "application/x-www-form-urlencoded;charset=utf-8"), e.toString()) : i.isObject(e) ? (o(t, "application/json;charset=utf-8"), JSON.stringify(e)) : e
                    }
                ],
                transformResponse: [function (e) {
                        if ("string" == typeof e)
                            try {
                                e = JSON.parse(e)
                            } catch (e) {}
                        return e
                    }
                ],
                timeout: 0,
                xsrfCookieName: "XSRF-TOKEN",
                xsrfHeaderName: "X-XSRF-TOKEN",
                maxContentLength: -1,
                maxBodyLength: -1,
                validateStatus: function (e) {
                    return e >= 200 && e < 300
                },
                headers: {
                    common: {
                        Accept: "application/json, text/plain, */*"
                    }
                }
            };
            i.forEach(["delete", "get", "head"], (function (e) {
                    c.headers[e] = {}
                })),
            i.forEach(["post", "put", "patch"], (function (e) {
                    c.headers[e] = i.merge(r)
                })),
            e.exports = c
        },
        849: e => {
            "use strict";
            e.exports = function (e, t) {
                return function () {
                    for (var n = new Array(arguments.length), i = 0; i < n.length; i++)
                        n[i] = arguments[i];
                    return e.apply(t, n)
                }
            }
        },
        327: (e, t, n) => {
            "use strict";
            var i = n(867);
            function a(e) {
                return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
            }
            e.exports = function (e, t, n) {
                if (!t)
                    return e;
                var r;
                if (n)
                    r = n(t);
                else if (i.isURLSearchParams(t))
                    r = t.toString();
                else {
                    var o = [];
                    i.forEach(t, (function (e, t) {
                            null != e && (i.isArray(e) ? t += "[]" : e = [e], i.forEach(e, (function (e) {
                                        i.isDate(e) ? e = e.toISOString() : i.isObject(e) && (e = JSON.stringify(e)),
                                        o.push(a(t) + "=" + a(e))
                                    })))
                        })),
                    r = o.join("&")
                }
                if (r) {
                    var s = e.indexOf("#");
                    -1 !== s && (e = e.slice(0, s)),
                    e += (-1 === e.indexOf("?") ? "?" : "&") + r
                }
                return e
            }
        },
        303: e => {
            "use strict";
            e.exports = function (e, t) {
                return t ? e.replace(/\/+$/, "") + "/" + t.replace(/^\/+/, "") : e
            }
        },
        372: (e, t, n) => {
            "use strict";
            var i = n(867);
            e.exports = i.isStandardBrowserEnv() ? {
                write: function (e, t, n, a, r, o) {
                    var s = [];
                    s.push(e + "=" + encodeURIComponent(t)),
                    i.isNumber(n) && s.push("expires=" + new Date(n).toGMTString()),
                    i.isString(a) && s.push("path=" + a),
                    i.isString(r) && s.push("domain=" + r),
                    !0 === o && s.push("secure"),
                    document.cookie = s.join("; ")
                },
                read: function (e) {
                    var t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
                    return t ? decodeURIComponent(t[3]) : null
                },
                remove: function (e) {
                    this.write(e, "", Date.now() - 864e5)
                }
            }
             : {
                write: function () {},
                read: function () {
                    return null
                },
                remove: function () {}
            }
        },
        793: e => {
            "use strict";
            e.exports = function (e) {
                return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)
            }
        },
        268: e => {
            "use strict";
            e.exports = function (e) {
                return "object" == typeof e && !0 === e.isAxiosError
            }
        },
        985: (e, t, n) => {
            "use strict";
            var i = n(867);
            e.exports = i.isStandardBrowserEnv() ? function () {
                var e,
                t = /(msie|trident)/i.test(navigator.userAgent),
                n = document.createElement("a");
                function a(e) {
                    var i = e;
                    return t && (n.setAttribute("href", i), i = n.href),
                    n.setAttribute("href", i), {
                        href: n.href,
                        protocol: n.protocol ? n.protocol.replace(/:$/, "") : "",
                        host: n.host,
                        search: n.search ? n.search.replace(/^\?/, "") : "",
                        hash: n.hash ? n.hash.replace(/^#/, "") : "",
                        hostname: n.hostname,
                        port: n.port,
                        pathname: "/" === n.pathname.charAt(0) ? n.pathname : "/" + n.pathname
                    }
                }
                return e = a(window.location.href),
                function (t) {
                    var n = i.isString(t) ? a(t) : t;
                    return n.protocol === e.protocol && n.host === e.host
                }
            }
            () : function () {
                return !0
            }
        },
        16: (e, t, n) => {
            "use strict";
            var i = n(867);
            e.exports = function (e, t) {
                i.forEach(e, (function (n, i) {
                        i !== t && i.toUpperCase() === t.toUpperCase() && (e[t] = n, delete e[i])
                    }))
            }
        },
        109: (e, t, n) => {
            "use strict";
            var i = n(867),
            a = ["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"];
            e.exports = function (e) {
                var t,
                n,
                r,
                o = {};
                return e ? (i.forEach(e.split("\n"), (function (e) {
                            if (r = e.indexOf(":"), t = i.trim(e.substr(0, r)).toLowerCase(), n = i.trim(e.substr(r + 1)), t) {
                                if (o[t] && a.indexOf(t) >= 0)
                                    return;
                                o[t] = "set-cookie" === t ? (o[t] ? o[t] : []).concat([n]) : o[t] ? o[t] + ", " + n : n
                            }
                        })), o) : o
            }
        },
        713: e => {
            "use strict";
            e.exports = function (e) {
                return function (t) {
                    return e.apply(null, t)
                }
            }
        },
        867: (e, t, n) => {
            "use strict";
            var i = n(849),
            a = Object.prototype.toString;
            function r(e) {
                return "[object Array]" === a.call(e)
            }
            function o(e) {
                return void 0 === e
            }
            function s(e) {
                return null !== e && "object" == typeof e
            }
            function c(e) {
                if ("[object Object]" !== a.call(e))
                    return !1;
                var t = Object.getPrototypeOf(e);
                return null === t || t === Object.prototype
            }
            function l(e) {
                return "[object Function]" === a.call(e)
            }
            function h(e, t) {
                if (null != e)
                    if ("object" != typeof e && (e = [e]), r(e))
                        for (var n = 0, i = e.length; n < i; n++)
                            t.call(null, e[n], n, e);
                    else
                        for (var a in e)
                            Object.prototype.hasOwnProperty.call(e, a) && t.call(null, e[a], a, e)
            }
            e.exports = {
                isArray: r,
                isArrayBuffer: function (e) {
                    return "[object ArrayBuffer]" === a.call(e)
                },
                isBuffer: function (e) {
                    return null !== e && !o(e) && null !== e.constructor && !o(e.constructor) && "function" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e)
                },
                isFormData: function (e) {
                    return "undefined" != typeof FormData && e instanceof FormData
                },
                isArrayBufferView: function (e) {
                    return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e) : e && e.buffer && e.buffer instanceof ArrayBuffer
                },
                isString: function (e) {
                    return "string" == typeof e
                },
                isNumber: function (e) {
                    return "number" == typeof e
                },
                isObject: s,
                isPlainObject: c,
                isUndefined: o,
                isDate: function (e) {
                    return "[object Date]" === a.call(e)
                },
                isFile: function (e) {
                    return "[object File]" === a.call(e)
                },
                isBlob: function (e) {
                    return "[object Blob]" === a.call(e)
                },
                isFunction: l,
                isStream: function (e) {
                    return s(e) && l(e.pipe)
                },
                isURLSearchParams: function (e) {
                    return "undefined" != typeof URLSearchParams && e instanceof URLSearchParams
                },
                isStandardBrowserEnv: function () {
                    return ("undefined" == typeof navigator || "ReactNative" !== navigator.product && "NativeScript" !== navigator.product && "NS" !== navigator.product) && "undefined" != typeof window && "undefined" != typeof document
                },
                forEach: h,
                merge: function e() {
                    var t = {};
                    function n(n, i) {
                        c(t[i]) && c(n) ? t[i] = e(t[i], n) : c(n) ? t[i] = e({}, n) : r(n) ? t[i] = n.slice() : t[i] = n
                    }
                    for (var i = 0, a = arguments.length; i < a; i++)
                        h(arguments[i], n);
                    return t
                },
                extend: function (e, t, n) {
                    return h(t, (function (t, a) {
                            e[a] = n && "function" == typeof t ? i(t, n) : t
                        })),
                    e
                },
                trim: function (e) {
                    return e.replace(/^\s*/, "").replace(/\s*$/, "")
                },
                stripBOM: function (e) {
                    return 65279 === e.charCodeAt(0) && (e = e.slice(1)),
                    e
                }
            }
        },
        380: (e, t, n) => {
            "use strict";
            n.d(t, {
                Z: () => h
            });
            var i = n(645),
            a = n.n(i),
            r = n(667),
            o = n.n(r),
            s = n(581),
            c = a()((function (e) {
                        return e[1]
                    })),
            l = o()(s.Z);
            c.push([e.id, 'body{scroll-behavior:smooth;pointer-events:none;width:100vw;height:calc( 1vh + 0px );overflow:hidden;color:#fff;font-family:"Quicksand",sans-serif;background-color:#000}@media(max-device-aspect-ratio: 3/4)and (max-width: 768px){body{height:calc( ((100vw * (4 / 3)) * (1 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 2/3)and (max-width: 768px){body{height:calc( ((100vw * (3 / 2)) * (1 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 10/16)and (max-width: 768px){body{height:calc( ((100vw * (16 / 10)) * (1 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 9/16)and (max-width: 768px){body{height:calc( ((100vw * (16 / 9)) * (1 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 10/17)and (max-width: 768px){body{height:calc( ((100vw * (17 / 10)) * (1 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 3/4)and (max-width: 768px){body{height:calc( ((100vw * (4 / 3)) * (1 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 2/3)and (max-width: 768px){body{height:calc( ((100vw * (3 / 2)) * (1 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 10/16)and (max-width: 768px){body{height:calc( ((100vw * (16 / 10)) * (1 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 9/16)and (max-width: 768px){body{height:calc( ((100vw * (16 / 9)) * (1 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 10/17)and (max-width: 768px){body{height:calc( ((100vw * (17 / 10)) * (1 / 100) * 0.91) + 0px + 40px )}}.initial-hide{display:none}#logo{position:absolute;width:70px;height:18px;left:20px;top:20px;background:url(' + l + ') no-repeat}#stage{opacity:0}#stage.on{cursor:grab;opacity:1;transition:opacity 6s ease-in-out}#stage.on.grabbing{cursor:grabbing}section{position:absolute;z-index:10;width:100vw;height:100%;text-align:center;pointer-events:none}#home .container{position:relative;width:100%;height:100%;margin-left:auto;margin-right:auto;text-align:center;pointer-events:none}#home .container ul li{pointer-events:all;cursor:pointer;padding:0 0px;display:inline;text-align:center;user-select:none;line-height:15px}#home .container ul li a{color:rgba(255,255,255,.8)}#home .container ul li.off{color:#fff;pointer-events:none}#home .container ul li:not(:last-child):after{content:"|";padding:0 15px;color:rgba(255,255,255,.5)}#home .menu-holder{position:relative;width:100%;height:100%;height:80px;margin-left:auto;margin-right:auto;margin-top:calc( 50vh + -100px );transition:all 1s ease-in-out}@media(max-device-aspect-ratio: 3/4)and (max-width: 768px){#home .menu-holder{margin-top:calc( ((100vw * (4 / 3)) * (50 / 100) * 0.91) + -100px + 40px )}}@media(max-device-aspect-ratio: 2/3)and (max-width: 768px){#home .menu-holder{margin-top:calc( ((100vw * (3 / 2)) * (50 / 100) * 0.91) + -100px + 40px )}}@media(max-device-aspect-ratio: 10/16)and (max-width: 768px){#home .menu-holder{margin-top:calc( ((100vw * (16 / 10)) * (50 / 100) * 0.91) + -100px + 40px )}}@media(max-device-aspect-ratio: 9/16)and (max-width: 768px){#home .menu-holder{margin-top:calc( ((100vw * (16 / 9)) * (50 / 100) * 0.91) + -100px + 40px )}}@media(max-device-aspect-ratio: 10/17)and (max-width: 768px){#home .menu-holder{margin-top:calc( ((100vw * (17 / 10)) * (50 / 100) * 0.91) + -100px + 40px )}}@media(max-device-aspect-ratio: 3/4)and (max-width: 768px){#home .menu-holder{margin-top:calc( ((100vw * (4 / 3)) * (50 / 100) * 0.91) + -100px + 40px )}}@media(max-device-aspect-ratio: 2/3)and (max-width: 768px){#home .menu-holder{margin-top:calc( ((100vw * (3 / 2)) * (50 / 100) * 0.91) + -100px + 40px )}}@media(max-device-aspect-ratio: 10/16)and (max-width: 768px){#home .menu-holder{margin-top:calc( ((100vw * (16 / 10)) * (50 / 100) * 0.91) + -100px + 40px )}}@media(max-device-aspect-ratio: 9/16)and (max-width: 768px){#home .menu-holder{margin-top:calc( ((100vw * (16 / 9)) * (50 / 100) * 0.91) + -100px + 40px )}}@media(max-device-aspect-ratio: 10/17)and (max-width: 768px){#home .menu-holder{margin-top:calc( ((100vw * (17 / 10)) * (50 / 100) * 0.91) + -100px + 40px )}}#home .menu-holder.in{margin-top:calc( 3vh + 0px )}@media(max-device-aspect-ratio: 3/4)and (max-width: 768px){#home .menu-holder.in{margin-top:calc( ((100vw * (4 / 3)) * (3 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 2/3)and (max-width: 768px){#home .menu-holder.in{margin-top:calc( ((100vw * (3 / 2)) * (3 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 10/16)and (max-width: 768px){#home .menu-holder.in{margin-top:calc( ((100vw * (16 / 10)) * (3 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 9/16)and (max-width: 768px){#home .menu-holder.in{margin-top:calc( ((100vw * (16 / 9)) * (3 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 10/17)and (max-width: 768px){#home .menu-holder.in{margin-top:calc( ((100vw * (17 / 10)) * (3 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 3/4)and (max-width: 768px){#home .menu-holder.in{margin-top:calc( ((100vw * (4 / 3)) * (3 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 2/3)and (max-width: 768px){#home .menu-holder.in{margin-top:calc( ((100vw * (3 / 2)) * (3 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 10/16)and (max-width: 768px){#home .menu-holder.in{margin-top:calc( ((100vw * (16 / 10)) * (3 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 9/16)and (max-width: 768px){#home .menu-holder.in{margin-top:calc( ((100vw * (16 / 9)) * (3 / 100) * 0.91) + 0px + 40px )}}@media(max-device-aspect-ratio: 10/17)and (max-width: 768px){#home .menu-holder.in{margin-top:calc( ((100vw * (17 / 10)) * (3 / 100) * 0.91) + 0px + 40px )}}#home .menu-holder.on{opacity:1}#home .menu-holder h1{pointer-events:none;cursor:pointer;font-family:"Oswald",sans-serif;text-align:center;font-size:22px;text-rendering:geometricPrecision;letter-spacing:10px;display:inline-block;margin:0 auto;padding:3px 0 5px 8px;user-select:none;border:1px solid #fff;box-sizing:border-box}#home .menu-holder .menu-home{pointer-events:none;opacity:0;width:300px;height:40px;font-family:"Quicksand",sans-serif;font-size:12px;color:rgba(255,255,255,.8);display:block;line-height:40px;list-style:none;margin:10px auto 0 auto;padding:0;user-select:none;transition:all 3s 3s ease-in-out}#home .menu-holder .menu-home.on{opacity:1}.credits{pointer-events:none;position:fixed;width:100vh;bottom:0;left:25px;font-family:"Oswald",sans-serif;font-size:9px;letter-spacing:1px;line-height:10px;color:rgba(255,255,255,.4);margin:0;padding-top:0px;transform-origin:bottom left;transform:rotate3d(0, 0, 1, -90deg)}.credits ul{padding-top:5px;padding-left:10px;box-sizing:border-box;width:100%;height:15px}.credits li{display:block !important;width:100%;height:15px;text-align:left}.credits li a{pointer-events:all;text-decoration:none;color:rgba(255,255,255,.4)}#dom-elements{position:absolute;opacity:0;visibility:hidden;width:60vw;height:85vh;left:20%;bottom:0;pointer-events:all;background:transparent;transition:visibility 0s,opacity 1s linear;overflow-x:visible;overflow-y:auto;-ms-overflow-style:none;scrollbar-width:none}#dom-elements.on{opacity:1;visibility:visible}#dom-elements::-webkit-scrollbar{display:none}@media screen and (orientation: landscape)and (max-width: 1024px){#dom-elements{height:75vh}}@media screen and (orientation: portrait){#dom-elements{width:85vw;height:75vh;left:7.5%}}@media screen and (max-height: 512px){#dom-elements{height:70vh}}@media screen and (max-height: 340px){#dom-elements{height:55vh}}.div-null{height:100%}form{width:100%;max-width:400px;pointer-events:all;position:absolute;left:50%;transform:translateX(-50%);visibility:visible;opacity:1;transition:opacity 2s cubic-bezier(0.19, 1, 0.22, 1),visibility 0s linear 0s}form input,form textarea{width:0%;background:transparent;padding:5px;margin:10px 0;border:1px #fff solid;outline:none !important;opacity:0;font-size:12px;line-height:24px;letter-spacing:2px;transition:width 2s cubic-bezier(0.19, 1, 0.22, 1),opacity 1s linear}form input.on,form textarea.on{opacity:1;width:100%}form.off{opacity:0;visibility:hidden;transition:opacity 2s cubic-bezier(0.19, 1, 0.22, 1),visibility 0s linear 2s}@media screen and (orientation: portrait){form input.on,form textarea.on{opacity:1;width:100%}}::placeholder{color:#fff;opacity:1}#infos{width:100%;margin-top:40px;padding:0;opacity:0;visibility:hidden;font-size:12px;transition:opacity 2s cubic-bezier(0.19, 1, 0.22, 1),visibility 0s linear 2s}#infos.on{opacity:1;visibility:visible;transition:opacity 2s cubic-bezier(0.19, 1, 0.22, 1),visibility 0s linear 0s}#infos a{cursor:pointer;text-decoration:none;color:#fff}#feedback{position:absolute;display:flex;align-items:center;justify-content:center;z-index:10;width:200px;height:200px;padding:20px;left:50%;transform:translateX(-50%);overflow:hidden;border:1px solid #fff;cursor:pointer;opacity:0;visibility:hidden;transition:opacity 2s cubic-bezier(0.19, 1, 0.22, 1),visibility 0s linear 2s}#feedback.on{opacity:1;visibility:visible;transition:opacity 2s cubic-bezier(0.19, 1, 0.22, 1),visibility 0s linear 0s}#content-about{position:absolute;left:50%;transform:translateX(-50%);opacity:0;width:0;height:0;top:0;padding-bottom:50px;box-sizing:border-box;text-align:left;font-size:12px;line-height:20px;letter-spacing:1px;overflow-x:hidden;overflow-y:auto;-ms-overflow-style:none;scrollbar-width:none;transition:width 8s cubic-bezier(0.19, 1, 0.22, 1),height 8s cubic-bezier(0.19, 1, 0.22, 1),opacity 1s linear}#content-about.on{opacity:1;width:100%;max-width:500px;height:100%}#content-about p{display:inline;background-color:rgba(0,0,0,.7);padding:3px 5px;-webkit-box-decoration-break:clone;box-decoration-break:clone}#content-about p a{color:rgba(0,200,255,.8);text-decoration:none}#content-about::-webkit-scrollbar{display:none}@media screen and (orientation: portrait){#content-about{line-height:18px}#content-about.on{opacity:1;width:70%;max-width:400px;height:85%}}#about-photo{width:150px;margin-bottom:25px;margin-left:50%;opacity:.8;transform:translateX(-53%)}.send-message{cursor:pointer;color:rgba(0,200,255,.8)}#content-works{opacity:0;width:0%;height:70vh;overflow:hidden;transition:width 1.5s cubic-bezier(0.19, 1, 0.22, 1),height 1s cubic-bezier(0.19, 1, 0.22, 1),opacity 1s linear}#content-works.on{opacity:1;width:100%;height:auto}.image-mosaic{display:grid;padding-top:50px;padding-bottom:100px;margin-left:auto;margin-right:auto;width:100%;gap:1rem;grid-template-columns:repeat(auto-fit, minmax(240px, 1fr));grid-auto-rows:240px}.card{perspective:100px;transform-style:preserve-3d;position:relative;cursor:pointer;pointer-events:all;display:flex;flex-direction:column;justify-content:center;align-items:center;background-position:center;background-repeat:no-repeat;background-size:auto 100%;opacity:.6;font-size:3rem;color:#fff;box-shadow:rgba(3,8,20,.1) 0px .15rem .5rem,rgba(2,8,20,.1) 0px .075rem .175rem;transition:all 500ms;overflow:hidden;padding:0;margin:0;transition:all 1.5s cubic-bezier(0.19, 1, 0.22, 1)}.card.on{background-size:auto 120%}.card .bg{pointer-events:none;position:absolute;top:0;bottom:0;left:0;right:0;background-position:center;background-repeat:no-repeat;background-size:auto 100%;background-blend-mode:color;opacity:1;transition:all 1.5s cubic-bezier(0.19, 1, 0.22, 1)}.card .bg.on{background-size:auto 120%;opacity:0}.card .bg-wide{background-size:100% auto;transition:all 1.5s cubic-bezier(0.19, 1, 0.22, 1)}.card .bg-wide.on{background-size:120% auto}.card .title{pointer-events:none;display:flex;align-items:center;justify-content:center;width:100%;height:100%;word-spacing:1000px;font-family:"Oswald",sans-serif;font-size:16px;font-weight:bold;line-height:30px;text-transform:uppercase;letter-spacing:8px;vertical-align:middle;background-color:rgba(10,0,30,.4);transform:translateZ(0px);transition:transform 2s cubic-bezier(0.19, 1, 0.22, 1),background-color 2s cubic-bezier(0.19, 1, 0.22, 1),opacity 1s cubic-bezier(0.19, 1, 0.22, 1)}.card .title.on{opacity:0;transform:translateY(0vh) translateZ(-1vw) rotate3d(0, 0, 0, 0deg);background-color:rgba(20,2,40,.4)}.card .title.deep{opacity:0;transform:translateY(0vh) translateZ(-1vw) rotate3d(0, 0, 0, 0deg);background-color:rgba(20,2,40,.4)}@media screen and (max-width: 979px){.card .title{font-size:12px;letter-spacing:8px;line-height:22px;opacity:1}.card .bg{opacity:.25;background-size:auto 160%}.card .bg-wide{opacity:.25;background-size:160% auto}}@media screen and (min-width: 980px){.card-tall{grid-row:span 2/auto;background-size:auto 100%}.card-tall.on{background-size:auto 120%}.card-wide{grid-column:span 2/auto;background-size:100% auto}.card-wide.on{background-size:120% auto}.card-tall.card-wide{background-size:auto 100%}.card-tall.card-wide.on{background-size:auto 120%}}#bt-fechar{position:fixed;pointer-events:all;cursor:pointer;margin-left:-50px;transform:translateY(-35px);padding:0;width:100px;height:20px;min-width:25px;min-height:25px;border:1px solid #fff;display:inline-flex;align-items:center;justify-content:center;vertical-align:middle;font-size:11px}#bt-fechar::after{content:"X Close"}#card-inside{position:absolute;top:0;visibility:hidden;opacity:0;width:100%;padding-bottom:100px;overflow:hidden;transition:opacity 1.5s cubic-bezier(0.19, 1, 0.22, 1),visibility 0s linear 1.5s}#card-inside.on{opacity:1;visibility:visible;transition:visibility 0s linear 0s,opacity 5s cubic-bezier(0.19, 1, 0.22, 1) .1s}#card-inside-title{width:90%;min-width:300px;margin:0 auto;padding-bottom:10px;text-transform:uppercase;font-family:"Oswald",sans-serif;letter-spacing:5px}#card-inside-subtitle{width:90%;min-width:300px;margin:0 auto;padding-bottom:15px;font-size:10px;font-weight:lighter;color:rgba(255,255,255,.8)}#card-inside-subtitle span{color:#fff}#card-inside-description{width:90%;min-width:300px;margin:0 auto;padding-top:15px;text-align:left;font-size:12px;font-weight:lighter;line-height:18px;color:rgba(255,255,255,.8)}#card-inside-description span{font-weight:bold;color:#fff}#player{pointer-events:all;width:50vw;min-width:300px;height:28.125vw;min-height:166px}#content-lab{opacity:0;width:0%;height:70vh;overflow:hidden;transition:width 1.5s cubic-bezier(0.19, 1, 0.22, 1),height 1s cubic-bezier(0.19, 1, 0.22, 1),opacity 1s linear}#content-lab.on{opacity:1;width:100%;height:auto}#bt-fechar-lab{position:fixed;pointer-events:all;cursor:pointer;margin-left:-50px;transform:translateY(-35px);padding:0;width:100px;height:20px;min-width:25px;min-height:25px;border:1px solid #fff;display:inline-flex;align-items:center;justify-content:center;vertical-align:middle;font-size:11px}#bt-fechar-lab::after{content:"X Close"}#card-inside-lab{position:absolute;top:0;visibility:hidden;opacity:0;width:100%;padding-bottom:100px;overflow:hidden;transition:opacity 1.5s cubic-bezier(0.19, 1, 0.22, 1),visibility 0s linear 1.5s}#card-inside-lab.on{opacity:1;visibility:visible;transition:visibility 0s linear 0s,opacity 5s cubic-bezier(0.19, 1, 0.22, 1) .1s}#card-inside-lab-title{width:50vw;min-width:300px;margin:0 auto;padding-bottom:10px;text-transform:uppercase;font-family:"Oswald",sans-serif;letter-spacing:5px}#card-inside-lab-subtitle{width:50vw;min-width:300px;margin:0 auto;padding-bottom:15px;font-size:10px;font-weight:lighter;color:rgba(255,255,255,.8)}#card-inside-lab-subtitle span{color:#fff}#card-inside-lab-description{width:50vw;min-width:300px;margin:0 auto;padding-top:15px;text-align:left;font-size:12px;font-weight:lighter;line-height:18px;color:rgba(255,255,255,.8)}#card-inside-lab-description span{font-weight:bold;color:#fff}#player-lab{pointer-events:all;width:50vw;min-width:300px;height:28.125vw;min-height:166px}#content-soon{opacity:0;width:0%;height:70vh;margin-left:50vw;transform:translateX(-50%);overflow:hidden;display:flex;align-items:center;justify-content:center;vertical-align:middle;border:1px solid #fff;font-size:12px;line-height:18px;transition:width 5s cubic-bezier(0.19, 1, 0.22, 1),height 5s cubic-bezier(0.19, 1, 0.22, 1),opacity 1s linear}#content-soon.on{opacity:1;width:200px;height:150px}', ""]);
            const h = c
        },
        423: (e, t, n) => {
            "use strict";
            n.d(t, {
                Z: () => r
            });
            var i = n(645),
            a = n.n(i)()((function (e) {
                        return e[1]
                    }));
            a.push([e.id, '/*! normalize.css v3.0.2 | MIT License | git.io/normalize */\r\n\r\n/**\r\n * 1. Set default font family to sans-serif.\r\n * 2. Prevent iOS text size adjust after orientation change, without disabling\r\n *    user zoom.\r\n */\r\n\r\nhtml {\r\n  font-family: sans-serif; /* 1 */\r\n  -ms-text-size-adjust: 100%; /* 2 */\r\n  -webkit-text-size-adjust: 100%; /* 2 */\r\n}\r\n\r\n/**\r\n   * Remove default margin.\r\n   */\r\n\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\n/* HTML5 display definitions\r\n     ========================================================================== */\r\n\r\n/**\r\n   * Correct `block` display not defined for any HTML5 element in IE 8/9.\r\n   * Correct `block` display not defined for `details` or `summary` in IE 10/11\r\n   * and Firefox.\r\n   * Correct `block` display not defined for `main` in IE 11.\r\n   */\r\n\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmain,\r\nmenu,\r\nnav,\r\nsection,\r\nsummary {\r\n  display: block;\r\n}\r\n\r\n/**\r\n   * 1. Correct `inline-block` display not defined in IE 8/9.\r\n   * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\r\n   */\r\n\r\naudio,\r\ncanvas,\r\nprogress,\r\nvideo {\r\n  display: inline-block; /* 1 */\r\n  vertical-align: baseline; /* 2 */\r\n}\r\n\r\n/**\r\n   * Prevent modern browsers from displaying `audio` without controls.\r\n   * Remove excess height in iOS 5 devices.\r\n   */\r\n\r\naudio:not([controls]) {\r\n  display: none;\r\n  height: 0;\r\n}\r\n\r\n/**\r\n   * Address `[hidden]` styling not present in IE 8/9/10.\r\n   * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.\r\n   */\r\n\r\n[hidden],\r\ntemplate {\r\n  display: none;\r\n}\r\n\r\n/* Links\r\n     ========================================================================== */\r\n\r\n/**\r\n   * Remove the gray background color from active links in IE 10.\r\n   */\r\n\r\na {\r\n  background-color: transparent;\r\n}\r\n\r\n/**\r\n   * Improve readability when focused and also mouse hovered in all browsers.\r\n   */\r\n\r\na:active,\r\na:hover {\r\n  outline: 0;\r\n}\r\n\r\n/* Text-level semantics\r\n     ========================================================================== */\r\n\r\n/**\r\n   * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\r\n   */\r\n\r\nabbr[title] {\r\n  border-bottom: 1px dotted;\r\n}\r\n\r\n/**\r\n   * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\r\n   */\r\n\r\nb,\r\nstrong {\r\n  font-weight: bold;\r\n}\r\n\r\n/**\r\n   * Address styling not present in Safari and Chrome.\r\n   */\r\n\r\ndfn {\r\n  font-style: italic;\r\n}\r\n\r\n/**\r\n   * Address variable `h1` font-size and margin within `section` and `article`\r\n   * contexts in Firefox 4+, Safari, and Chrome.\r\n   */\r\n\r\nh1 {\r\n  font-size: 2em;\r\n  margin: 0.67em 0;\r\n}\r\n\r\n/**\r\n   * Address styling not present in IE 8/9.\r\n   */\r\n\r\nmark {\r\n  background: #ff0;\r\n  color: #000;\r\n}\r\n\r\n/**\r\n   * Address inconsistent and variable font size in all browsers.\r\n   */\r\n\r\nsmall {\r\n  font-size: 80%;\r\n}\r\n\r\n/**\r\n   * Prevent `sub` and `sup` affecting `line-height` in all browsers.\r\n   */\r\n\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline;\r\n}\r\n\r\nsup {\r\n  top: -0.5em;\r\n}\r\n\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\n\r\n/* Embedded content\r\n     ========================================================================== */\r\n\r\n/**\r\n   * Remove border when inside `a` element in IE 8/9/10.\r\n   */\r\n\r\nimg {\r\n  border: 0;\r\n}\r\n\r\n/**\r\n   * Correct overflow not hidden in IE 9/10/11.\r\n   */\r\n\r\nsvg:not(:root) {\r\n  overflow: hidden;\r\n}\r\n\r\n/* Grouping content\r\n     ========================================================================== */\r\n\r\n/**\r\n   * Address margin not present in IE 8/9 and Safari.\r\n   */\r\n\r\nfigure {\r\n  margin: 1em 40px;\r\n}\r\n\r\n/**\r\n   * Address differences between Firefox and other browsers.\r\n   */\r\n\r\nhr {\r\n  -moz-box-sizing: content-box;\r\n  box-sizing: content-box;\r\n  height: 0;\r\n}\r\n\r\n/**\r\n   * Contain overflow in all browsers.\r\n   */\r\n\r\npre {\r\n  overflow: auto;\r\n}\r\n\r\n/**\r\n   * Address odd `em`-unit font size rendering in all browsers.\r\n   */\r\n\r\ncode,\r\nkbd,\r\npre,\r\nsamp {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em;\r\n}\r\n\r\n/* Forms\r\n     ========================================================================== */\r\n\r\n/**\r\n   * Known limitation: by default, Chrome and Safari on OS X allow very limited\r\n   * styling of `select`, unless a `border` property is set.\r\n   */\r\n\r\n/**\r\n   * 1. Correct color not being inherited.\r\n   *    Known issue: affects color of disabled elements.\r\n   * 2. Correct font properties not being inherited.\r\n   * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\r\n   */\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  color: inherit; /* 1 */\r\n  font: inherit; /* 2 */\r\n  margin: 0; /* 3 */\r\n}\r\n\r\n/**\r\n   * Address `overflow` set to `hidden` in IE 8/9/10/11.\r\n   */\r\n\r\nbutton {\r\n  overflow: visible;\r\n}\r\n\r\n/**\r\n   * Address inconsistent `text-transform` inheritance for `button` and `select`.\r\n   * All other form control elements do not inherit `text-transform` values.\r\n   * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\r\n   * Correct `select` style inheritance in Firefox.\r\n   */\r\n\r\nbutton,\r\nselect {\r\n  text-transform: none;\r\n}\r\n\r\n/**\r\n   * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\r\n   *    and `video` controls.\r\n   * 2. Correct inability to style clickable `input` types in iOS.\r\n   * 3. Improve usability and consistency of cursor style between image-type\r\n   *    `input` and others.\r\n   */\r\n\r\nbutton,\r\n  html input[type="button"], /* 1 */\r\n  input[type="reset"],\r\n  input[type="submit"] {\r\n  -webkit-appearance: button; /* 2 */\r\n  cursor: pointer; /* 3 */\r\n}\r\n\r\n/**\r\n   * Re-set default cursor for disabled elements.\r\n   */\r\n\r\nbutton[disabled],\r\nhtml input[disabled] {\r\n  cursor: default;\r\n}\r\n\r\n/**\r\n   * Remove inner padding and border in Firefox 4+.\r\n   */\r\n\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n  border: 0;\r\n  padding: 0;\r\n}\r\n\r\n/**\r\n   * Address Firefox 4+ setting `line-height` on `input` using `!important` in\r\n   * the UA stylesheet.\r\n   */\r\n\r\ninput {\r\n  line-height: normal;\r\n}\r\n\r\n/**\r\n   * It\'s recommended that you don\'t attempt to style these elements.\r\n   * Firefox\'s implementation doesn\'t respect box-sizing, padding, or width.\r\n   *\r\n   * 1. Address box sizing set to `content-box` in IE 8/9/10.\r\n   * 2. Remove excess padding in IE 8/9/10.\r\n   */\r\n\r\ninput[type="checkbox"],\r\ninput[type="radio"] {\r\n  box-sizing: border-box; /* 1 */\r\n  padding: 0; /* 2 */\r\n}\r\n\r\n/**\r\n   * Fix the cursor style for Chrome\'s increment/decrement buttons. For certain\r\n   * `font-size` values of the `input`, it causes the cursor style of the\r\n   * decrement button to change from `default` to `text`.\r\n   */\r\n\r\ninput[type="number"]::-webkit-inner-spin-button,\r\ninput[type="number"]::-webkit-outer-spin-button {\r\n  height: auto;\r\n}\r\n\r\n/**\r\n   * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\r\n   * 2. Address `box-sizing` set to `border-box` in Safari and Chrome\r\n   *    (include `-moz` to future-proof).\r\n   */\r\n\r\ninput[type="search"] {\r\n  -webkit-appearance: textfield; /* 1 */\r\n  -moz-box-sizing: content-box;\r\n  -webkit-box-sizing: content-box; /* 2 */\r\n  box-sizing: content-box;\r\n}\r\n\r\n/**\r\n   * Remove inner padding and search cancel button in Safari and Chrome on OS X.\r\n   * Safari (but not Chrome) clips the cancel button when the search input has\r\n   * padding (and `textfield` appearance).\r\n   */\r\n\r\ninput[type="search"]::-webkit-search-cancel-button,\r\ninput[type="search"]::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\n/**\r\n   * Define consistent border, margin, and padding.\r\n   */\r\n\r\nfieldset {\r\n  border: 1px solid #c0c0c0;\r\n  margin: 0 2px;\r\n  padding: 0.35em 0.625em 0.75em;\r\n}\r\n\r\n/**\r\n   * 1. Correct `color` not being inherited in IE 8/9/10/11.\r\n   * 2. Remove padding so people aren\'t caught out if they zero out fieldsets.\r\n   */\r\n\r\nlegend {\r\n  border: 0; /* 1 */\r\n  padding: 0; /* 2 */\r\n}\r\n\r\n/**\r\n   * Remove default vertical scrollbar in IE 8/9/10/11.\r\n   */\r\n\r\ntextarea {\r\n  overflow: auto;\r\n}\r\n\r\n/**\r\n   * Don\'t inherit the `font-weight` (applied by a rule above).\r\n   * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\r\n   */\r\n\r\noptgroup {\r\n  font-weight: bold;\r\n}\r\n\r\n/* Tables\r\n     ========================================================================== */\r\n\r\n/**\r\n   * Remove most spacing between table cells.\r\n   */\r\n\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n\r\ntd,\r\nth {\r\n  padding: 0;\r\n}\r\n', ""]);
            const r = a
        },
        414: (e, t, n) => {
            "use strict";
            n.d(t, {
                Z: () => r
            });
            var i = n(645),
            a = n.n(i)()((function (e) {
                        return e[1]
                    }));
            a.push([e.id, "@import url(https://fonts.googleapis.com/css2?family=Oswald&family=Staatliches&display=swap);"]),
            a.push([e.id, "\r\n", ""]);
            const r = a
        },
        645: e => {
            "use strict";
            e.exports = function (e) {
                var t = [];
                return t.toString = function () {
                    return this.map((function (t) {
                            var n = e(t);
                            return t[2] ? "@media ".concat(t[2], " {").concat(n, "}") : n
                        })).join("")
                },
                t.i = function (e, n, i) {
                    "string" == typeof e && (e = [[null, e, ""]]);
                    var a = {};
                    if (i)
                        for (var r = 0; r < this.length; r++) {
                            var o = this[r][0];
                            null != o && (a[o] = !0)
                        }
                    for (var s = 0; s < e.length; s++) {
                        var c = [].concat(e[s]);
                        i && a[c[0]] || (n && (c[2] ? c[2] = "".concat(n, " and ").concat(c[2]) : c[2] = n), t.push(c))
                    }
                },
                t
            }
        },
        667: e => {
            "use strict";
            e.exports = function (e, t) {
                return t || (t = {}),
                "string" != typeof(e = e && e.__esModule ? e.default : e) ? e : (/^['"].*['"]$/.test(e) && (e = e.slice(1, -1)), t.hash && (e += t.hash), /["'() \t\n]/.test(e) || t.needQuotes ? '"'.concat(e.replace(/"/g, '\\"').replace(/\n/g, "\\n"), '"') : e)
            }
        },
        187: e => {
            "use strict";
            var t,
            n = "object" == typeof Reflect ? Reflect : null,
            i = n && "function" == typeof n.apply ? n.apply : function (e, t, n) {
                return Function.prototype.apply.call(e, t, n)
            };
            t = n && "function" == typeof n.ownKeys ? n.ownKeys : Object.getOwnPropertySymbols ? function (e) {
                return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))
            }
             : function (e) {
                return Object.getOwnPropertyNames(e)
            };
            var a = Number.isNaN || function (e) {
                return e != e
            };
            function r() {
                r.init.call(this)
            }
            e.exports = r,
            e.exports.once = function (e, t) {
                return new Promise((function (n, i) {
                        function a() {
                            void 0 !== r && e.removeListener("error", r),
                            n([].slice.call(arguments))
                        }
                        var r;
                        "error" !== t && (r = function (n) {
                            e.removeListener(t, a),
                            i(n)
                        }, e.once("error", r)),
                        e.once(t, a)
                    }))
            },
            r.EventEmitter = r,
            r.prototype._events = void 0,
            r.prototype._eventsCount = 0,
            r.prototype._maxListeners = void 0;
            var o = 10;
            function s(e) {
                if ("function" != typeof e)
                    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e)
            }
            function c(e) {
                return void 0 === e._maxListeners ? r.defaultMaxListeners : e._maxListeners
            }
            function l(e, t, n, i) {
                var a,
                r,
                o,
                l;
                if (s(n), void 0 === (r = e._events) ? (r = e._events = Object.create(null), e._eventsCount = 0) : (void 0 !== r.newListener && (e.emit("newListener", t, n.listener ? n.listener : n), r = e._events), o = r[t]), void 0 === o)
                    o = r[t] = n, ++e._eventsCount;
                else if ("function" == typeof o ? o = r[t] = i ? [n, o] : [o, n] : i ? o.unshift(n) : o.push(n), (a = c(e)) > 0 && o.length > a && !o.warned) {
                    o.warned = !0;
                    var h = new Error("Possible EventEmitter memory leak detected. " + o.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                    h.name = "MaxListenersExceededWarning",
                    h.emitter = e,
                    h.type = t,
                    h.count = o.length,
                    l = h,
                    console && console.warn && console.warn(l)
                }
                return e
            }
            function h() {
                if (!this.fired)
                    return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
            }
            function u(e, t, n) {
                var i = {
                    fired: !1,
                    wrapFn: void 0,
                    target: e,
                    type: t,
                    listener: n
                },
                a = h.bind(i);
                return a.listener = n,
                i.wrapFn = a,
                a
            }
            function f(e, t, n) {
                var i = e._events;
                if (void 0 === i)
                    return [];
                var a = i[t];
                return void 0 === a ? [] : "function" == typeof a ? n ? [a.listener || a] : [a] : n ? function (e) {
                    for (var t = new Array(e.length), n = 0; n < t.length; ++n)
                        t[n] = e[n].listener || e[n];
                    return t
                }
                (a) : p(a, a.length)
            }
            function d(e) {
                var t = this._events;
                if (void 0 !== t) {
                    var n = t[e];
                    if ("function" == typeof n)
                        return 1;
                    if (void 0 !== n)
                        return n.length
                }
                return 0
            }
            function p(e, t) {
                for (var n = new Array(t), i = 0; i < t; ++i)
                    n[i] = e[i];
                return n
            }
            Object.defineProperty(r, "defaultMaxListeners", {
                enumerable: !0,
                get: function () {
                    return o
                },
                set: function (e) {
                    if ("number" != typeof e || e < 0 || a(e))
                        throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
                    o = e
                }
            }),
            r.init = function () {
                void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0),
                this._maxListeners = this._maxListeners || void 0
            },
            r.prototype.setMaxListeners = function (e) {
                if ("number" != typeof e || e < 0 || a(e))
                    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
                return this._maxListeners = e,
                this
            },
            r.prototype.getMaxListeners = function () {
                return c(this)
            },
            r.prototype.emit = function (e) {
                for (var t = [], n = 1; n < arguments.length; n++)
                    t.push(arguments[n]);
                var a = "error" === e,
                r = this._events;
                if (void 0 !== r)
                    a = a && void 0 === r.error;
                else if (!a)
                    return !1;
                if (a) {
                    var o;
                    if (t.length > 0 && (o = t[0]), o instanceof Error)
                        throw o;
                    var s = new Error("Unhandled error." + (o ? " (" + o.message + ")" : ""));
                    throw s.context = o,
                    s
                }
                var c = r[e];
                if (void 0 === c)
                    return !1;
                if ("function" == typeof c)
                    i(c, this, t);
                else {
                    var l = c.length,
                    h = p(c, l);
                    for (n = 0; n < l; ++n)
                        i(h[n], this, t)
                }
                return !0
            },
            r.prototype.addListener = function (e, t) {
                return l(this, e, t, !1)
            },
            r.prototype.on = r.prototype.addListener,
            r.prototype.prependListener = function (e, t) {
                return l(this, e, t, !0)
            },
            r.prototype.once = function (e, t) {
                return s(t),
                this.on(e, u(this, e, t)),
                this
            },
            r.prototype.prependOnceListener = function (e, t) {
                return s(t),
                this.prependListener(e, u(this, e, t)),
                this
            },
            r.prototype.removeListener = function (e, t) {
                var n,
                i,
                a,
                r,
                o;
                if (s(t), void 0 === (i = this._events))
                    return this;
                if (void 0 === (n = i[e]))
                    return this;
                if (n === t || n.listener === t)
                    0 == --this._eventsCount ? this._events = Object.create(null) : (delete i[e], i.removeListener && this.emit("removeListener", e, n.listener || t));
                else if ("function" != typeof n) {
                    for (a = -1, r = n.length - 1; r >= 0; r--)
                        if (n[r] === t || n[r].listener === t) {
                            o = n[r].listener,
                            a = r;
                            break
                        }
                    if (a < 0)
                        return this;
                    0 === a ? n.shift() : function (e, t) {
                        for (; t + 1 < e.length; t++)
                            e[t] = e[t + 1];
                        e.pop()
                    }
                    (n, a),
                    1 === n.length && (i[e] = n[0]),
                    void 0 !== i.removeListener && this.emit("removeListener", e, o || t)
                }
                return this
            },
            r.prototype.off = r.prototype.removeListener,
            r.prototype.removeAllListeners = function (e) {
                var t,
                n,
                i;
                if (void 0 === (n = this._events))
                    return this;
                if (void 0 === n.removeListener)
                    return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== n[e] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete n[e]), this;
                if (0 === arguments.length) {
                    var a,
                    r = Object.keys(n);
                    for (i = 0; i < r.length; ++i)
                        "removeListener" !== (a = r[i]) && this.removeAllListeners(a);
                    return this.removeAllListeners("removeListener"),
                    this._events = Object.create(null),
                    this._eventsCount = 0,
                    this
                }
                if ("function" == typeof(t = n[e]))
                    this.removeListener(e, t);
                else if (void 0 !== t)
                    for (i = t.length - 1; i >= 0; i--)
                        this.removeListener(e, t[i]);
                return this
            },
            r.prototype.listeners = function (e) {
                return f(this, e, !0)
            },
            r.prototype.rawListeners = function (e) {
                return f(this, e, !1)
            },
            r.listenerCount = function (e, t) {
                return "function" == typeof e.listenerCount ? e.listenerCount(t) : d.call(e, t)
            },
            r.prototype.listenerCount = d,
            r.prototype.eventNames = function () {
                return this._eventsCount > 0 ? t(this._events) : []
            }
        },
        581: (e, t, n) => {
            "use strict";
            n.d(t, {
                Z: () => i
            });
            const i = "https://z-z-m.github.io/webpage/images/logo.svg" //n.p + "https://z-z-m.github.io/webpage/images/logo.svg"
        },
        298: e => {
            e.exports = function (e, t, n) {
                return new Promise(((i, a) => {
                        const r = document.createElement("script");
                        r.async = !0,
                        r.src = e;
                        for (const[e, n]of Object.entries(t || {}))
                            r.setAttribute(e, n);
                        r.onload = () => {
                            r.onerror = r.onload = null,
                            i(r)
                        },
                        r.onerror = () => {
                            r.onerror = r.onload = null,
                            a(new Error("Failed to load " + e))
                        },
                        (n || document.head || document.getElementsByTagName("head")[0]).appendChild(r)
                    }))
            }
        },
        379: (e, t, n) => {
            "use strict";
            var i,
            a = function () {
                var e = {};
                return function (t) {
                    if (void 0 === e[t]) {
                        var n = document.querySelector(t);
                        if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement)
                            try {
                                n = n.contentDocument.head
                            } catch (e) {
                                n = null
                            }
                        e[t] = n
                    }
                    return e[t]
                }
            }
            (),
            r = [];
            function o(e) {
                for (var t = -1, n = 0; n < r.length; n++)
                    if (r[n].identifier === e) {
                        t = n;
                        break
                    }
                return t
            }
            function s(e, t) {
                for (var n = {}, i = [], a = 0; a < e.length; a++) {
                    var s = e[a],
                    c = t.base ? s[0] + t.base : s[0],
                    l = n[c] || 0,
                    h = "".concat(c, " ").concat(l);
                    n[c] = l + 1;
                    var u = o(h),
                    f = {
                        css: s[1],
                        media: s[2],
                        sourceMap: s[3]
                    };
                    -1 !== u ? (r[u].references++, r[u].updater(f)) : r.push({
                        identifier: h,
                        updater: m(f, t),
                        references: 1
                    }),
                    i.push(h)
                }
                return i
            }
            function c(e) {
                var t = document.createElement("style"),
                i = e.attributes || {};
                if (void 0 === i.nonce) {
                    var r = n.nc;
                    r && (i.nonce = r)
                }
                if (Object.keys(i).forEach((function (e) {
                            t.setAttribute(e, i[e])
                        })), "function" == typeof e.insert)
                    e.insert(t);
                else {
                    var o = a(e.insert || "head");
                    if (!o)
                        throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
                    o.appendChild(t)
                }
                return t
            }
            var l,
            h = (l = [], function (e, t) {
                return l[e] = t,
                l.filter(Boolean).join("\n")
            });
            function u(e, t, n, i) {
                var a = n ? "" : i.media ? "@media ".concat(i.media, " {").concat(i.css, "}") : i.css;
                if (e.styleSheet)
                    e.styleSheet.cssText = h(t, a);
                else {
                    var r = document.createTextNode(a),
                    o = e.childNodes;
                    o[t] && e.removeChild(o[t]),
                    o.length ? e.insertBefore(r, o[t]) : e.appendChild(r)
                }
            }
            function f(e, t, n) {
                var i = n.css,
                a = n.media,
                r = n.sourceMap;
                if (a ? e.setAttribute("media", a) : e.removeAttribute("media"), r && "undefined" != typeof btoa && (i += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r)))), " */")), e.styleSheet)
                    e.styleSheet.cssText = i;
                else {
                    for (; e.firstChild; )
                        e.removeChild(e.firstChild);
                    e.appendChild(document.createTextNode(i))
                }
            }
            var d = null,
            p = 0;
            function m(e, t) {
                var n,
                i,
                a;
                if (t.singleton) {
                    var r = p++;
                    n = d || (d = c(t)),
                    i = u.bind(null, n, r, !1),
                    a = u.bind(null, n, r, !0)
                } else
                    n = c(t), i = f.bind(null, n, t), a = function () {
                        !function (e) {
                            if (null === e.parentNode)
                                return !1;
                            e.parentNode.removeChild(e)
                        }
                        (n)
                    };
                return i(e),
                function (t) {
                    if (t) {
                        if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap)
                            return;
                        i(e = t)
                    } else
                        a()
                }
            }
            e.exports = function (e, t) {
                (t = t || {}).singleton || "boolean" == typeof t.singleton || (t.singleton = (void 0 === i && (i = Boolean(window && document && document.all && !window.atob)), i));
                var n = s(e = e || [], t);
                return function (e) {
                    if (e = e || [], "[object Array]" === Object.prototype.toString.call(e)) {
                        for (var i = 0; i < n.length; i++) {
                            var a = o(n[i]);
                            r[a].references--
                        }
                        for (var c = s(e, t), l = 0; l < n.length; l++) {
                            var h = o(n[l]);
                            0 === r[h].references && (r[h].updater(), r.splice(h, 1))
                        }
                        n = c
                    }
                }
            }
        },
        277: (e, t, n) => {
            var i = n(212),
            a = function () {
                function e(e) {
                    i.Loader.call(this, e),
                    this.dracoLoader = null,
                    this.ddsLoader = null
                }
                function t() {
                    var e = {};
                    return {
                        get: function (t) {
                            return e[t]
                        },
                        add: function (t, n) {
                            e[t] = n
                        },
                        remove: function (t) {
                            delete e[t]
                        },
                        removeAll: function () {
                            e = {}
                        }
                    }
                }
                e.prototype = Object.assign(Object.create(i.Loader.prototype), {
                    constructor: e,
                    load: function (e, t, n, a) {
                        var r,
                        o = this;
                        r = "" !== this.resourcePath ? this.resourcePath : "" !== this.path ? this.path : i.LoaderUtils.extractUrlBase(e),
                        o.manager.itemStart(e);
                        var s = function (t) {
                            a ? a(t) : console.error(t),
                            o.manager.itemError(e),
                            o.manager.itemEnd(e)
                        },
                        c = new i.FileLoader(o.manager);
                        c.setPath(this.path),
                        c.setResponseType("arraybuffer"),
                        "use-credentials" === o.crossOrigin && c.setWithCredentials(!0),
                        c.load(e, (function (n) {
                                try {
                                    o.parse(n, r, (function (n) {
                                            t(n),
                                            o.manager.itemEnd(e)
                                        }), s)
                                } catch (e) {
                                    s(e)
                                }
                            }), n, s)
                    },
                    setDRACOLoader: function (e) {
                        return this.dracoLoader = e,
                        this
                    },
                    setDDSLoader: function (e) {
                        return this.ddsLoader = e,
                        this
                    },
                    parse: function (e, t, d, p) {
                        var m,
                        v = {};
                        if ("string" == typeof e)
                            m = e;
                        else if (i.LoaderUtils.decodeText(new Uint8Array(e, 0, 4)) === s) {
                            try {
                                v[n.KHR_BINARY_GLTF] = new c(e)
                            } catch (e) {
                                return void(p && p(e))
                            }
                            m = v[n.KHR_BINARY_GLTF].content
                        } else
                            m = i.LoaderUtils.decodeText(new Uint8Array(e));
                        var g = JSON.parse(m);
                        if (void 0 === g.asset || g.asset.version[0] < 2)
                            p && p(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));
                        else {
                            if (g.extensionsUsed)
                                for (var x = 0; x < g.extensionsUsed.length; ++x) {
                                    var y = g.extensionsUsed[x],
                                    b = g.extensionsRequired || [];
                                    switch (y) {
                                    case n.KHR_LIGHTS_PUNCTUAL:
                                        v[y] = new r(g);
                                        break;
                                    case n.KHR_MATERIALS_UNLIT:
                                        v[y] = new o;
                                        break;
                                    case n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:
                                        v[y] = new u;
                                        break;
                                    case n.KHR_DRACO_MESH_COMPRESSION:
                                        v[y] = new l(g, this.dracoLoader);
                                        break;
                                    case n.MSFT_TEXTURE_DDS:
                                        v[y] = new a(this.ddsLoader);
                                        break;
                                    case n.KHR_TEXTURE_TRANSFORM:
                                        v[y] = new h;
                                        break;
                                    case n.KHR_MESH_QUANTIZATION:
                                        v[y] = new f;
                                        break;
                                    default:
                                        b.indexOf(y) >= 0 && console.warn('THREE.GLTFLoader: Unknown extension "' + y + '".')
                                    }
                                }
                            new T(g, v, {
                                path: t || this.resourcePath || "",
                                crossOrigin: this.crossOrigin,
                                manager: this.manager
                            }).parse(d, p)
                        }
                    }
                });
                var n = {
                    KHR_BINARY_GLTF: "KHR_binary_glTF",
                    KHR_DRACO_MESH_COMPRESSION: "KHR_draco_mesh_compression",
                    KHR_LIGHTS_PUNCTUAL: "KHR_lights_punctual",
                    KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: "KHR_materials_pbrSpecularGlossiness",
                    KHR_MATERIALS_UNLIT: "KHR_materials_unlit",
                    KHR_TEXTURE_TRANSFORM: "KHR_texture_transform",
                    KHR_MESH_QUANTIZATION: "KHR_mesh_quantization",
                    MSFT_TEXTURE_DDS: "MSFT_texture_dds"
                };
                function a(e) {
                    if (!e)
                        throw new Error("THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader");
                    this.name = n.MSFT_TEXTURE_DDS,
                    this.ddsLoader = e
                }
                function r(e) {
                    this.name = n.KHR_LIGHTS_PUNCTUAL;
                    var t = e.extensions && e.extensions[n.KHR_LIGHTS_PUNCTUAL] || {};
                    this.lightDefs = t.lights || []
                }
                function o() {
                    this.name = n.KHR_MATERIALS_UNLIT
                }
                r.prototype.loadLight = function (e) {
                    var t,
                    n = this.lightDefs[e],
                    a = new i.Color(16777215);
                    void 0 !== n.color && a.fromArray(n.color);
                    var r = void 0 !== n.range ? n.range : 0;
                    switch (n.type) {
                    case "directional":
                        (t = new i.DirectionalLight(a)).target.position.set(0, 0, -1),
                        t.add(t.target);
                        break;
                    case "point":
                        (t = new i.PointLight(a)).distance = r;
                        break;
                    case "spot":
                        (t = new i.SpotLight(a)).distance = r,
                        n.spot = n.spot || {},
                        n.spot.innerConeAngle = void 0 !== n.spot.innerConeAngle ? n.spot.innerConeAngle : 0,
                        n.spot.outerConeAngle = void 0 !== n.spot.outerConeAngle ? n.spot.outerConeAngle : Math.PI / 4,
                        t.angle = n.spot.outerConeAngle,
                        t.penumbra = 1 - n.spot.innerConeAngle / n.spot.outerConeAngle,
                        t.target.position.set(0, 0, -1),
                        t.add(t.target);
                        break;
                    default:
                        throw new Error('THREE.GLTFLoader: Unexpected light type, "' + n.type + '".')
                    }
                    return t.position.set(0, 0, 0),
                    t.decay = 2,
                    void 0 !== n.intensity && (t.intensity = n.intensity),
                    t.name = n.name || "light_" + e,
                    Promise.resolve(t)
                },
                o.prototype.getMaterialType = function () {
                    return i.MeshBasicMaterial
                },
                o.prototype.extendParams = function (e, t, n) {
                    var a = [];
                    e.color = new i.Color(1, 1, 1),
                    e.opacity = 1;
                    var r = t.pbrMetallicRoughness;
                    if (r) {
                        if (Array.isArray(r.baseColorFactor)) {
                            var o = r.baseColorFactor;
                            e.color.fromArray(o),
                            e.opacity = o[3]
                        }
                        void 0 !== r.baseColorTexture && a.push(n.assignTexture(e, "map", r.baseColorTexture))
                    }
                    return Promise.all(a)
                };
                var s = "glTF";
                function c(e) {
                    this.name = n.KHR_BINARY_GLTF,
                    this.content = null,
                    this.body = null;
                    var t = new DataView(e, 0, 12);
                    if (this.header = {
                            magic: i.LoaderUtils.decodeText(new Uint8Array(e.slice(0, 4))),
                            version: t.getUint32(4, !0),
                            length: t.getUint32(8, !0)
                        }, this.header.magic !== s)
                        throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");
                    if (this.header.version < 2)
                        throw new Error("THREE.GLTFLoader: Legacy binary file detected.");
                    for (var a = new DataView(e, 12), r = 0; r < a.byteLength; ) {
                        var o = a.getUint32(r, !0);
                        r += 4;
                        var c = a.getUint32(r, !0);
                        if (r += 4, 1313821514 === c) {
                            var l = new Uint8Array(e, 12 + r, o);
                            this.content = i.LoaderUtils.decodeText(l)
                        } else if (5130562 === c) {
                            var h = 12 + r;
                            this.body = e.slice(h, h + o)
                        }
                        r += o
                    }
                    if (null === this.content)
                        throw new Error("THREE.GLTFLoader: JSON content not found.")
                }
                function l(e, t) {
                    if (!t)
                        throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");
                    this.name = n.KHR_DRACO_MESH_COMPRESSION,
                    this.json = e,
                    this.dracoLoader = t
                }
                function h() {
                    this.name = n.KHR_TEXTURE_TRANSFORM
                }
                function u() {
                    return {
                        name: n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,
                        specularGlossinessParams: ["color", "map", "lightMap", "lightMapIntensity", "aoMap", "aoMapIntensity", "emissive", "emissiveIntensity", "emissiveMap", "bumpMap", "bumpScale", "normalMap", "displacementMap", "displacementScale", "displacementBias", "specularMap", "specular", "glossinessMap", "glossiness", "alphaMap", "envMap", "envMapIntensity", "refractionRatio"],
                        getMaterialType: function () {
                            return i.ShaderMaterial
                        },
                        extendParams: function (e, t, n) {
                            var a = t.extensions[this.name],
                            r = i.ShaderLib.standard,
                            o = i.UniformsUtils.clone(r.uniforms),
                            s = ["#ifdef USE_SPECULARMAP", "\tuniform sampler2D specularMap;", "#endif"].join("\n"),
                            c = ["#ifdef USE_GLOSSINESSMAP", "\tuniform sampler2D glossinessMap;", "#endif"].join("\n"),
                            l = ["vec3 specularFactor = specular;", "#ifdef USE_SPECULARMAP", "\tvec4 texelSpecular = texture2D( specularMap, vUv );", "\ttexelSpecular = sRGBToLinear( texelSpecular );", "\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture", "\tspecularFactor *= texelSpecular.rgb;", "#endif"].join("\n"),
                            h = ["float glossinessFactor = glossiness;", "#ifdef USE_GLOSSINESSMAP", "\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );", "\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture", "\tglossinessFactor *= texelGlossiness.a;", "#endif"].join("\n"),
                            u = ["PhysicalMaterial material;", "material.diffuseColor = diffuseColor.rgb;", "material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );", "material.specularColor = specularFactor.rgb;"].join("\n"),
                            f = r.fragmentShader.replace("uniform float roughness;", "uniform vec3 specular;").replace("uniform float metalness;", "uniform float glossiness;").replace("#include <roughnessmap_pars_fragment>", s).replace("#include <metalnessmap_pars_fragment>", c).replace("#include <roughnessmap_fragment>", l).replace("#include <metalnessmap_fragment>", h).replace("#include <lights_physical_fragment>", u);
                            delete o.roughness,
                            delete o.metalness,
                            delete o.roughnessMap,
                            delete o.metalnessMap,
                            o.specular = {
                                value: (new i.Color).setHex(1118481)
                            },
                            o.glossiness = {
                                value: .5
                            },
                            o.specularMap = {
                                value: null
                            },
                            o.glossinessMap = {
                                value: null
                            },
                            e.vertexShader = r.vertexShader,
                            e.fragmentShader = f,
                            e.uniforms = o,
                            e.defines = {
                                STANDARD: ""
                            },
                            e.color = new i.Color(1, 1, 1),
                            e.opacity = 1;
                            var d = [];
                            if (Array.isArray(a.diffuseFactor)) {
                                var p = a.diffuseFactor;
                                e.color.fromArray(p),
                                e.opacity = p[3]
                            }
                            if (void 0 !== a.diffuseTexture && d.push(n.assignTexture(e, "map", a.diffuseTexture)), e.emissive = new i.Color(0, 0, 0), e.glossiness = void 0 !== a.glossinessFactor ? a.glossinessFactor : 1, e.specular = new i.Color(1, 1, 1), Array.isArray(a.specularFactor) && e.specular.fromArray(a.specularFactor), void 0 !== a.specularGlossinessTexture) {
                                var m = a.specularGlossinessTexture;
                                d.push(n.assignTexture(e, "glossinessMap", m)),
                                d.push(n.assignTexture(e, "specularMap", m))
                            }
                            return Promise.all(d)
                        },
                        createMaterial: function (e) {
                            var t = new i.ShaderMaterial({
                                defines: e.defines,
                                vertexShader: e.vertexShader,
                                fragmentShader: e.fragmentShader,
                                uniforms: e.uniforms,
                                fog: !0,
                                lights: !0,
                                opacity: e.opacity,
                                transparent: e.transparent
                            });
                            return t.isGLTFSpecularGlossinessMaterial = !0,
                            t.color = e.color,
                            t.map = void 0 === e.map ? null : e.map,
                            t.lightMap = null,
                            t.lightMapIntensity = 1,
                            t.aoMap = void 0 === e.aoMap ? null : e.aoMap,
                            t.aoMapIntensity = 1,
                            t.emissive = e.emissive,
                            t.emissiveIntensity = 1,
                            t.emissiveMap = void 0 === e.emissiveMap ? null : e.emissiveMap,
                            t.bumpMap = void 0 === e.bumpMap ? null : e.bumpMap,
                            t.bumpScale = 1,
                            t.normalMap = void 0 === e.normalMap ? null : e.normalMap,
                            e.normalScale && (t.normalScale = e.normalScale),
                            t.displacementMap = null,
                            t.displacementScale = 1,
                            t.displacementBias = 0,
                            t.specularMap = void 0 === e.specularMap ? null : e.specularMap,
                            t.specular = e.specular,
                            t.glossinessMap = void 0 === e.glossinessMap ? null : e.glossinessMap,
                            t.glossiness = e.glossiness,
                            t.alphaMap = null,
                            t.envMap = void 0 === e.envMap ? null : e.envMap,
                            t.envMapIntensity = 1,
                            t.refractionRatio = .98,
                            t.extensions.derivatives = !0,
                            t
                        },
                        cloneMaterial: function (e) {
                            var t = e.clone();
                            t.isGLTFSpecularGlossinessMaterial = !0;
                            for (var n = this.specularGlossinessParams, i = 0, a = n.length; i < a; i++) {
                                var r = e[n[i]];
                                t[n[i]] = r && r.isColor ? r.clone() : r
                            }
                            return t
                        },
                        refreshUniforms: function (e, t, n, i, a) {
                            if (!0 === a.isGLTFSpecularGlossinessMaterial) {
                                var r,
                                o = a.uniforms,
                                s = a.defines;
                                o.opacity.value = a.opacity,
                                o.diffuse.value.copy(a.color),
                                o.emissive.value.copy(a.emissive).multiplyScalar(a.emissiveIntensity),
                                o.map.value = a.map,
                                o.specularMap.value = a.specularMap,
                                o.alphaMap.value = a.alphaMap,
                                o.lightMap.value = a.lightMap,
                                o.lightMapIntensity.value = a.lightMapIntensity,
                                o.aoMap.value = a.aoMap,
                                o.aoMapIntensity.value = a.aoMapIntensity,
                                a.map ? r = a.map : a.specularMap ? r = a.specularMap : a.displacementMap ? r = a.displacementMap : a.normalMap ? r = a.normalMap : a.bumpMap ? r = a.bumpMap : a.glossinessMap ? r = a.glossinessMap : a.alphaMap ? r = a.alphaMap : a.emissiveMap && (r = a.emissiveMap),
                                void 0 !== r && (r.isWebGLRenderTarget && (r = r.texture), !0 === r.matrixAutoUpdate && r.updateMatrix(), o.uvTransform.value.copy(r.matrix)),
                                a.envMap && (o.envMap.value = a.envMap, o.envMapIntensity.value = a.envMapIntensity, o.flipEnvMap.value = a.envMap.isCubeTexture ? -1 : 1, o.reflectivity.value = a.reflectivity, o.refractionRatio.value = a.refractionRatio, o.maxMipLevel.value = e.properties.get(a.envMap).__maxMipLevel),
                                o.specular.value.copy(a.specular),
                                o.glossiness.value = a.glossiness,
                                o.glossinessMap.value = a.glossinessMap,
                                o.emissiveMap.value = a.emissiveMap,
                                o.bumpMap.value = a.bumpMap,
                                o.normalMap.value = a.normalMap,
                                o.displacementMap.value = a.displacementMap,
                                o.displacementScale.value = a.displacementScale,
                                o.displacementBias.value = a.displacementBias,
                                null !== o.glossinessMap.value && void 0 === s.USE_GLOSSINESSMAP && (s.USE_GLOSSINESSMAP = "", s.USE_ROUGHNESSMAP = ""),
                                null === o.glossinessMap.value && void 0 !== s.USE_GLOSSINESSMAP && (delete s.USE_GLOSSINESSMAP, delete s.USE_ROUGHNESSMAP)
                            }
                        }
                    }
                }
                function f() {
                    this.name = n.KHR_MESH_QUANTIZATION
                }
                function d(e, t, n, a) {
                    i.Interpolant.call(this, e, t, n, a)
                }
                l.prototype.decodePrimitive = function (e, t) {
                    var n = this.json,
                    i = this.dracoLoader,
                    a = e.extensions[this.name].bufferView,
                    r = e.extensions[this.name].attributes,
                    o = {},
                    s = {},
                    c = {};
                    for (var l in r) {
                        var h = y[l] || l.toLowerCase();
                        o[h] = r[l]
                    }
                    for (l in e.attributes)
                        if (h = y[l] || l.toLowerCase(), void 0 !== r[l]) {
                            var u = n.accessors[e.attributes[l]],
                            f = m[u.componentType];
                            c[h] = f,
                            s[h] = !0 === u.normalized
                        }
                    return t.getDependency("bufferView", a).then((function (e) {
                            return new Promise((function (t) {
                                    i.decodeDracoFile(e, (function (e) {
                                            for (var n in e.attributes) {
                                                var i = e.attributes[n],
                                                a = s[n];
                                                void 0 !== a && (i.normalized = a)
                                            }
                                            t(e)
                                        }), o, c)
                                }))
                        }))
                },
                h.prototype.extendTexture = function (e, t) {
                    return e = e.clone(),
                    void 0 !== t.offset && e.offset.fromArray(t.offset),
                    void 0 !== t.rotation && (e.rotation = t.rotation),
                    void 0 !== t.scale && e.repeat.fromArray(t.scale),
                    void 0 !== t.texCoord && console.warn('THREE.GLTFLoader: Custom UV sets in "' + this.name + '" extension not yet supported.'),
                    e.needsUpdate = !0,
                    e
                },
                d.prototype = Object.create(i.Interpolant.prototype),
                d.prototype.constructor = d,
                d.prototype.copySampleValue_ = function (e) {
                    for (var t = this.resultBuffer, n = this.sampleValues, i = this.valueSize, a = e * i * 3 + i, r = 0; r !== i; r++)
                        t[r] = n[a + r];
                    return t
                },
                d.prototype.beforeStart_ = d.prototype.copySampleValue_,
                d.prototype.afterEnd_ = d.prototype.copySampleValue_,
                d.prototype.interpolate_ = function (e, t, n, i) {
                    for (var a = this.resultBuffer, r = this.sampleValues, o = this.valueSize, s = 2 * o, c = 3 * o, l = i - t, h = (n - t) / l, u = h * h, f = u * h, d = e * c, p = d - c, m = -2 * f + 3 * u, v = f - u, g = 1 - m, x = v - u + h, y = 0; y !== o; y++) {
                        var b = r[p + y + o],
                        M = r[p + y + s] * l,
                        z = r[d + y + o],
                        w = r[d + y] * l;
                        a[y] = g * b + x * M + m * z + v * w
                    }
                    return a
                };
                var p,
                m = {
                    5120: Int8Array,
                    5121: Uint8Array,
                    5122: Int16Array,
                    5123: Uint16Array,
                    5125: Uint32Array,
                    5126: Float32Array
                },
                v = {
                    9728: i.NearestFilter,
                    9729: i.LinearFilter,
                    9984: i.NearestMipmapNearestFilter,
                    9985: i.LinearMipmapNearestFilter,
                    9986: i.NearestMipmapLinearFilter,
                    9987: i.LinearMipmapLinearFilter
                },
                g = {
                    33071: i.ClampToEdgeWrapping,
                    33648: i.MirroredRepeatWrapping,
                    10497: i.RepeatWrapping
                },
                x = {
                    SCALAR: 1,
                    VEC2: 2,
                    VEC3: 3,
                    VEC4: 4,
                    MAT2: 4,
                    MAT3: 9,
                    MAT4: 16
                },
                y = {
                    POSITION: "position",
                    NORMAL: "normal",
                    TANGENT: "tangent",
                    TEXCOORD_0: "uv",
                    TEXCOORD_1: "uv2",
                    COLOR_0: "color",
                    WEIGHTS_0: "skinWeight",
                    JOINTS_0: "skinIndex"
                },
                b = {
                    scale: "scale",
                    translation: "position",
                    rotation: "quaternion",
                    weights: "morphTargetInfluences"
                },
                M = {
                    CUBICSPLINE: void 0,
                    LINEAR: i.InterpolateLinear,
                    STEP: i.InterpolateDiscrete
                },
                z = {
                    "image/png": i.RGBAFormat,
                    "image/jpeg": i.RGBFormat
                };
                function w(e, t) {
                    return "string" != typeof e || "" === e ? "" : (/^https?:\/\//i.test(t) && /^\//.test(e) && (t = t.replace(/(^https?:\/\/[^\/]+).*/i, "$1")), /^(https?:)?\/\//i.test(e) || /^data:.*,.*$/i.test(e) || /^blob:.*$/i.test(e) ? e : t + e)
                }
                function _(e, t, n) {
                    for (var i in n.extensions)
                        void 0 === e[i] && (t.userData.gltfExtensions = t.userData.gltfExtensions || {}, t.userData.gltfExtensions[i] = n.extensions[i])
                }
                function S(e, t) {
                    void 0 !== t.extras && ("object" == typeof t.extras ? Object.assign(e.userData, t.extras) : console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, " + t.extras))
                }
                function L(e, t) {
                    if (e.updateMorphTargets(), void 0 !== t.weights)
                        for (var n = 0, i = t.weights.length; n < i; n++)
                            e.morphTargetInfluences[n] = t.weights[n];
                    if (t.extras && Array.isArray(t.extras.targetNames)) {
                        var a = t.extras.targetNames;
                        if (e.morphTargetInfluences.length === a.length)
                            for (e.morphTargetDictionary = {}, n = 0, i = a.length; n < i; n++)
                                e.morphTargetDictionary[a[n]] = n;
                        else
                            console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")
                    }
                }
                function A(e) {
                    for (var t = "", n = Object.keys(e).sort(), i = 0, a = n.length; i < a; i++)
                        t += n[i] + ":" + e[n[i]] + ";";
                    return t
                }
                function T(e, n, a) {
                    this.json = e || {},
                    this.extensions = n || {},
                    this.options = a || {},
                    this.cache = new t,
                    this.primitiveCache = {},
                    this.textureLoader = new i.TextureLoader(this.options.manager),
                    this.textureLoader.setCrossOrigin(this.options.crossOrigin),
                    this.fileLoader = new i.FileLoader(this.options.manager),
                    this.fileLoader.setResponseType("arraybuffer"),
                    "use-credentials" === this.options.crossOrigin && this.fileLoader.setWithCredentials(!0)
                }
                function C(e, t, n) {
                    var a = t.attributes,
                    r = [];
                    function o(t, i) {
                        return n.getDependency("accessor", t).then((function (t) {
                                e.setAttribute(i, t)
                            }))
                    }
                    for (var s in a) {
                        var c = y[s] || s.toLowerCase();
                        c in e.attributes || r.push(o(a[s], c))
                    }
                    if (void 0 !== t.indices && !e.index) {
                        var l = n.getDependency("accessor", t.indices).then((function (t) {
                                    e.setIndex(t)
                                }));
                        r.push(l)
                    }
                    return S(e, t),
                    function (e, t, n) {
                        var a = t.attributes,
                        r = new i.Box3;
                        if (void 0 !== a.POSITION) {
                            var o = (f = n.json.accessors[a.POSITION]).min,
                            s = f.max;
                            r.set(new i.Vector3(o[0], o[1], o[2]), new i.Vector3(s[0], s[1], s[2]));
                            var c = t.targets;
                            if (void 0 !== c)
                                for (var l = new i.Vector3, h = 0, u = c.length; h < u; h++) {
                                    var f,
                                    d = c[h];
                                    void 0 !== d.POSITION && (o = (f = n.json.accessors[d.POSITION]).min, s = f.max, l.setX(Math.max(Math.abs(o[0]), Math.abs(s[0]))), l.setY(Math.max(Math.abs(o[1]), Math.abs(s[1]))), l.setZ(Math.max(Math.abs(o[2]), Math.abs(s[2]))), r.expandByVector(l))
                                }
                            e.boundingBox = r;
                            var p = new i.Sphere;
                            r.getCenter(p.center),
                            p.radius = r.min.distanceTo(r.max) / 2,
                            e.boundingSphere = p
                        }
                    }
                    (e, t, n),
                    Promise.all(r).then((function () {
                            return void 0 !== t.targets ? function (e, t, n) {
                                for (var i = !1, a = !1, r = 0, o = t.length; r < o && (void 0 !== (l = t[r]).POSITION && (i = !0), void 0 !== l.NORMAL && (a = !0), !i || !a); r++);
                                if (!i && !a)
                                    return Promise.resolve(e);
                                var s = [],
                                c = [];
                                for (r = 0, o = t.length; r < o; r++) {
                                    var l = t[r];
                                    if (i) {
                                        var h = void 0 !== l.POSITION ? n.getDependency("accessor", l.POSITION) : e.attributes.position;
                                        s.push(h)
                                    }
                                    a && (h = void 0 !== l.NORMAL ? n.getDependency("accessor", l.NORMAL) : e.attributes.normal, c.push(h))
                                }
                                return Promise.all([Promise.all(s), Promise.all(c)]).then((function (t) {
                                        var n = t[0],
                                        r = t[1];
                                        return i && (e.morphAttributes.position = n),
                                        a && (e.morphAttributes.normal = r),
                                        e.morphTargetsRelative = !0,
                                        e
                                    }))
                            }
                            (e, t.targets, n) : e
                        }))
                }
                return T.prototype.parse = function (e, t) {
                    var n = this,
                    i = this.json,
                    a = this.extensions;
                    this.cache.removeAll(),
                    this.markDefs(),
                    Promise.all([this.getDependencies("scene"), this.getDependencies("animation"), this.getDependencies("camera")]).then((function (t) {
                            var r = {
                                scene: t[0][i.scene || 0],
                                scenes: t[0],
                                animations: t[1],
                                cameras: t[2],
                                asset: i.asset,
                                parser: n,
                                userData: {}
                            };
                            _(a, r, i),
                            S(r, i),
                            e(r)
                        })).catch(t)
                },
                T.prototype.markDefs = function () {
                    for (var e = this.json.nodes || [], t = this.json.skins || [], n = this.json.meshes || [], i = {}, a = {}, r = 0, o = t.length; r < o; r++)
                        for (var s = t[r].joints, c = 0, l = s.length; c < l; c++)
                            e[s[c]].isBone = !0;
                    for (var h = 0, u = e.length; h < u; h++) {
                        var f = e[h];
                        void 0 !== f.mesh && (void 0 === i[f.mesh] && (i[f.mesh] = a[f.mesh] = 0), i[f.mesh]++, void 0 !== f.skin && (n[f.mesh].isSkinnedMesh = !0))
                    }
                    this.json.meshReferences = i,
                    this.json.meshUses = a
                },
                T.prototype.getDependency = function (e, t) {
                    var i = e + ":" + t,
                    a = this.cache.get(i);
                    if (!a) {
                        switch (e) {
                        case "scene":
                            a = this.loadScene(t);
                            break;
                        case "node":
                            a = this.loadNode(t);
                            break;
                        case "mesh":
                            a = this.loadMesh(t);
                            break;
                        case "accessor":
                            a = this.loadAccessor(t);
                            break;
                        case "bufferView":
                            a = this.loadBufferView(t);
                            break;
                        case "buffer":
                            a = this.loadBuffer(t);
                            break;
                        case "material":
                            a = this.loadMaterial(t);
                            break;
                        case "texture":
                            a = this.loadTexture(t);
                            break;
                        case "skin":
                            a = this.loadSkin(t);
                            break;
                        case "animation":
                            a = this.loadAnimation(t);
                            break;
                        case "camera":
                            a = this.loadCamera(t);
                            break;
                        case "light":
                            a = this.extensions[n.KHR_LIGHTS_PUNCTUAL].loadLight(t);
                            break;
                        default:
                            throw new Error("Unknown type: " + e)
                        }
                        this.cache.add(i, a)
                    }
                    return a
                },
                T.prototype.getDependencies = function (e) {
                    var t = this.cache.get(e);
                    if (!t) {
                        var n = this,
                        i = this.json[e + ("mesh" === e ? "es" : "s")] || [];
                        t = Promise.all(i.map((function (t, i) {
                                        return n.getDependency(e, i)
                                    }))),
                        this.cache.add(e, t)
                    }
                    return t
                },
                T.prototype.loadBuffer = function (e) {
                    var t = this.json.buffers[e],
                    i = this.fileLoader;
                    if (t.type && "arraybuffer" !== t.type)
                        throw new Error("THREE.GLTFLoader: " + t.type + " buffer type is not supported.");
                    if (void 0 === t.uri && 0 === e)
                        return Promise.resolve(this.extensions[n.KHR_BINARY_GLTF].body);
                    var a = this.options;
                    return new Promise((function (e, n) {
                            i.load(w(t.uri, a.path), e, void 0, (function () {
                                    n(new Error('THREE.GLTFLoader: Failed to load buffer "' + t.uri + '".'))
                                }))
                        }))
                },
                T.prototype.loadBufferView = function (e) {
                    var t = this.json.bufferViews[e];
                    return this.getDependency("buffer", t.buffer).then((function (e) {
                            var n = t.byteLength || 0,
                            i = t.byteOffset || 0;
                            return e.slice(i, i + n)
                        }))
                },
                T.prototype.loadAccessor = function (e) {
                    var t = this,
                    n = this.json,
                    a = this.json.accessors[e];
                    if (void 0 === a.bufferView && void 0 === a.sparse)
                        return Promise.resolve(null);
                    var r = [];
                    return void 0 !== a.bufferView ? r.push(this.getDependency("bufferView", a.bufferView)) : r.push(null),
                    void 0 !== a.sparse && (r.push(this.getDependency("bufferView", a.sparse.indices.bufferView)), r.push(this.getDependency("bufferView", a.sparse.values.bufferView))),
                    Promise.all(r).then((function (e) {
                            var r,
                            o,
                            s = e[0],
                            c = x[a.type],
                            l = m[a.componentType],
                            h = l.BYTES_PER_ELEMENT,
                            u = h * c,
                            f = a.byteOffset || 0,
                            d = void 0 !== a.bufferView ? n.bufferViews[a.bufferView].byteStride : void 0,
                            p = !0 === a.normalized;
                            if (d && d !== u) {
                                var v = Math.floor(f / d),
                                g = "InterleavedBuffer:" + a.bufferView + ":" + a.componentType + ":" + v + ":" + a.count,
                                y = t.cache.get(g);
                                y || (r = new l(s, v * d, a.count * d / h), y = new i.InterleavedBuffer(r, d / h), t.cache.add(g, y)),
                                o = new i.InterleavedBufferAttribute(y, c, f % d / h, p)
                            } else
                                r = null === s ? new l(a.count * c) : new l(s, f, a.count * c), o = new i.BufferAttribute(r, c, p);
                            if (void 0 !== a.sparse) {
                                var b = x.SCALAR,
                                M = m[a.sparse.indices.componentType],
                                z = a.sparse.indices.byteOffset || 0,
                                w = a.sparse.values.byteOffset || 0,
                                _ = new M(e[1], z, a.sparse.count * b),
                                S = new l(e[2], w, a.sparse.count * c);
                                null !== s && (o = new i.BufferAttribute(o.array.slice(), o.itemSize, o.normalized));
                                for (var L = 0, A = _.length; L < A; L++) {
                                    var T = _[L];
                                    if (o.setX(T, S[L * c]), c >= 2 && o.setY(T, S[L * c + 1]), c >= 3 && o.setZ(T, S[L * c + 2]), c >= 4 && o.setW(T, S[L * c + 3]), c >= 5)
                                        throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")
                                }
                            }
                            return o
                        }))
                },
                T.prototype.loadTexture = function (e) {
                    var t,
                    a = this,
                    r = this.json,
                    o = this.options,
                    s = this.textureLoader,
                    c = window.URL || window.webkitURL,
                    l = r.textures[e],
                    h = l.extensions || {},
                    u = (t = h[n.MSFT_TEXTURE_DDS] ? r.images[h[n.MSFT_TEXTURE_DDS].source] : r.images[l.source]).uri,
                    f = !1;
                    return void 0 !== t.bufferView && (u = a.getDependency("bufferView", t.bufferView).then((function (e) {
                                    f = !0;
                                    var n = new Blob([e], {
                                        type: t.mimeType
                                    });
                                    return u = c.createObjectURL(n)
                                }))),
                    Promise.resolve(u).then((function (e) {
                            var t = o.manager.getHandler(e);
                            return t || (t = h[n.MSFT_TEXTURE_DDS] ? a.extensions[n.MSFT_TEXTURE_DDS].ddsLoader : s),
                            new Promise((function (n, i) {
                                    t.load(w(e, o.path), n, void 0, i)
                                }))
                        })).then((function (e) {
                            !0 === f && c.revokeObjectURL(u),
                            e.flipY = !1,
                            void 0 !== l.name && (e.name = l.name),
                            t.mimeType in z && (e.format = z[t.mimeType]);
                            var n = (r.samplers || {})[l.sampler] || {};
                            return e.magFilter = v[n.magFilter] || i.LinearFilter,
                            e.minFilter = v[n.minFilter] || i.LinearMipmapLinearFilter,
                            e.wrapS = g[n.wrapS] || i.RepeatWrapping,
                            e.wrapT = g[n.wrapT] || i.RepeatWrapping,
                            e
                        }))
                },
                T.prototype.assignTexture = function (e, t, a) {
                    var r = this;
                    return this.getDependency("texture", a.index).then((function (o) {
                            if (!o.isCompressedTexture)
                                switch (t) {
                                case "aoMap":
                                case "emissiveMap":
                                case "metalnessMap":
                                case "normalMap":
                                case "roughnessMap":
                                    o.format = i.RGBFormat
                                }
                            if (r.extensions[n.KHR_TEXTURE_TRANSFORM]) {
                                var s = void 0 !== a.extensions ? a.extensions[n.KHR_TEXTURE_TRANSFORM] : void 0;
                                s && (o = r.extensions[n.KHR_TEXTURE_TRANSFORM].extendTexture(o, s))
                            }
                            e[t] = o
                        }))
                },
                T.prototype.assignFinalMaterial = function (e) {
                    var t = e.geometry,
                    a = e.material,
                    r = this.extensions,
                    o = void 0 !== t.attributes.tangent,
                    s = void 0 !== t.attributes.color,
                    c = void 0 === t.attributes.normal,
                    l = !0 === e.isSkinnedMesh,
                    h = Object.keys(t.morphAttributes).length > 0,
                    u = h && void 0 !== t.morphAttributes.normal;
                    if (e.isPoints) {
                        var f = "PointsMaterial:" + a.uuid,
                        d = this.cache.get(f);
                        d || (d = new i.PointsMaterial, i.Material.prototype.copy.call(d, a), d.color.copy(a.color), d.map = a.map, d.sizeAttenuation = !1, this.cache.add(f, d)),
                        a = d
                    } else if (e.isLine) {
                        f = "LineBasicMaterial:" + a.uuid;
                        var p = this.cache.get(f);
                        p || (p = new i.LineBasicMaterial, i.Material.prototype.copy.call(p, a), p.color.copy(a.color), this.cache.add(f, p)),
                        a = p
                    }
                    if (o || s || c || l || h) {
                        f = "ClonedMaterial:" + a.uuid + ":",
                        a.isGLTFSpecularGlossinessMaterial && (f += "specular-glossiness:"),
                        l && (f += "skinning:"),
                        o && (f += "vertex-tangents:"),
                        s && (f += "vertex-colors:"),
                        c && (f += "flat-shading:"),
                        h && (f += "morph-targets:"),
                        u && (f += "morph-normals:");
                        var m = this.cache.get(f);
                        m || (m = a.isGLTFSpecularGlossinessMaterial ? r[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(a) : a.clone(), l && (m.skinning = !0), o && (m.vertexTangents = !0), s && (m.vertexColors = i.VertexColors), c && (m.flatShading = !0), h && (m.morphTargets = !0), u && (m.morphNormals = !0), this.cache.add(f, m)),
                        a = m
                    }
                    a.aoMap && void 0 === t.attributes.uv2 && void 0 !== t.attributes.uv && (console.log("THREE.GLTFLoader: Duplicating UVs to support aoMap."), t.setAttribute("uv2", new i.BufferAttribute(t.attributes.uv.array, 2))),
                    a.isGLTFSpecularGlossinessMaterial && (e.onBeforeRender = r[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms),
                    e.material = a
                },
                T.prototype.loadMaterial = function (e) {
                    var t,
                    a = this,
                    r = this.json,
                    o = this.extensions,
                    s = r.materials[e],
                    c = {},
                    l = s.extensions || {},
                    h = [];
                    if (l[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {
                        var u = o[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];
                        t = u.getMaterialType(),
                        h.push(u.extendParams(c, s, a))
                    } else if (l[n.KHR_MATERIALS_UNLIT]) {
                        var f = o[n.KHR_MATERIALS_UNLIT];
                        t = f.getMaterialType(),
                        h.push(f.extendParams(c, s, a))
                    } else {
                        t = i.MeshStandardMaterial;
                        var d = s.pbrMetallicRoughness || {};
                        if (c.color = new i.Color(1, 1, 1), c.opacity = 1, Array.isArray(d.baseColorFactor)) {
                            var p = d.baseColorFactor;
                            c.color.fromArray(p),
                            c.opacity = p[3]
                        }
                        void 0 !== d.baseColorTexture && h.push(a.assignTexture(c, "map", d.baseColorTexture)),
                        c.metalness = void 0 !== d.metallicFactor ? d.metallicFactor : 1,
                        c.roughness = void 0 !== d.roughnessFactor ? d.roughnessFactor : 1,
                        void 0 !== d.metallicRoughnessTexture && (h.push(a.assignTexture(c, "metalnessMap", d.metallicRoughnessTexture)), h.push(a.assignTexture(c, "roughnessMap", d.metallicRoughnessTexture)))
                    }
                    !0 === s.doubleSided && (c.side = i.DoubleSide);
                    var m = s.alphaMode || "OPAQUE";
                    return "BLEND" === m ? c.transparent = !0 : (c.transparent = !1, "MASK" === m && (c.alphaTest = void 0 !== s.alphaCutoff ? s.alphaCutoff : .5)),
                    void 0 !== s.normalTexture && t !== i.MeshBasicMaterial && (h.push(a.assignTexture(c, "normalMap", s.normalTexture)), c.normalScale = new i.Vector2(1, 1), void 0 !== s.normalTexture.scale && c.normalScale.set(s.normalTexture.scale, s.normalTexture.scale)),
                    void 0 !== s.occlusionTexture && t !== i.MeshBasicMaterial && (h.push(a.assignTexture(c, "aoMap", s.occlusionTexture)), void 0 !== s.occlusionTexture.strength && (c.aoMapIntensity = s.occlusionTexture.strength)),
                    void 0 !== s.emissiveFactor && t !== i.MeshBasicMaterial && (c.emissive = (new i.Color).fromArray(s.emissiveFactor)),
                    void 0 !== s.emissiveTexture && t !== i.MeshBasicMaterial && h.push(a.assignTexture(c, "emissiveMap", s.emissiveTexture)),
                    Promise.all(h).then((function () {
                            var e;
                            return e = t === i.ShaderMaterial ? o[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(c) : new t(c),
                            void 0 !== s.name && (e.name = s.name),
                            e.map && (e.map.encoding = i.sRGBEncoding),
                            e.emissiveMap && (e.emissiveMap.encoding = i.sRGBEncoding),
                            e.specularMap && (e.specularMap.encoding = i.sRGBEncoding),
                            S(e, s),
                            s.extensions && _(o, e, s),
                            e
                        }))
                },
                T.prototype.loadGeometries = function (e) {
                    var t = this,
                    a = this.extensions,
                    r = this.primitiveCache;
                    function o(e) {
                        return a[n.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(e, t).then((function (n) {
                                return C(n, e, t)
                            }))
                    }
                    for (var s, c, l = [], h = 0, u = e.length; h < u; h++) {
                        var f,
                        d = e[h],
                        p = (void 0, (c = (s = d).extensions && s.extensions[n.KHR_DRACO_MESH_COMPRESSION]) ? "draco:" + c.bufferView + ":" + c.indices + ":" + A(c.attributes) : s.indices + ":" + A(s.attributes) + ":" + s.mode),
                        m = r[p];
                        m ? l.push(m.promise) : (f = d.extensions && d.extensions[n.KHR_DRACO_MESH_COMPRESSION] ? o(d) : C(new i.BufferGeometry, d, t), r[p] = {
                                primitive: d,
                                promise: f
                            }, l.push(f))
                    }
                    return Promise.all(l)
                },
                T.prototype.loadMesh = function (e) {
                    for (var t = this, n = this.json.meshes[e], a = n.primitives, r = [], o = 0, s = a.length; o < s; o++) {
                        var c = void 0 === a[o].material ? p = p || new i.MeshStandardMaterial({
                            color: 16777215,
                            emissive: 0,
                            metalness: 1,
                            roughness: 1,
                            transparent: !1,
                            depthTest: !0,
                            side: i.FrontSide
                        }) : this.getDependency("material", a[o].material);
                        r.push(c)
                    }
                    return Promise.all(r).then((function (r) {
                            return t.loadGeometries(a).then((function (o) {
                                    for (var s = [], c = 0, l = o.length; c < l; c++) {
                                        var h,
                                        u = o[c],
                                        f = a[c],
                                        d = r[c];
                                        if (4 === f.mode || 5 === f.mode || 6 === f.mode || void 0 === f.mode)
                                            !0 !== (h = !0 === n.isSkinnedMesh ? new i.SkinnedMesh(u, d) : new i.Mesh(u, d)).isSkinnedMesh || h.geometry.attributes.skinWeight.normalized || h.normalizeSkinWeights(), 5 === f.mode ? h.drawMode = i.TriangleStripDrawMode : 6 === f.mode && (h.drawMode = i.TriangleFanDrawMode);
                                        else if (1 === f.mode)
                                            h = new i.LineSegments(u, d);
                                        else if (3 === f.mode)
                                            h = new i.Line(u, d);
                                        else if (2 === f.mode)
                                            h = new i.LineLoop(u, d);
                                        else {
                                            if (0 !== f.mode)
                                                throw new Error("THREE.GLTFLoader: Primitive mode unsupported: " + f.mode);
                                            h = new i.Points(u, d)
                                        }
                                        Object.keys(h.geometry.morphAttributes).length > 0 && L(h, n),
                                        h.name = n.name || "mesh_" + e,
                                        o.length > 1 && (h.name += "_" + c),
                                        S(h, n),
                                        t.assignFinalMaterial(h),
                                        s.push(h)
                                    }
                                    if (1 === s.length)
                                        return s[0];
                                    var p = new i.Group;
                                    for (c = 0, l = s.length; c < l; c++)
                                        p.add(s[c]);
                                    return p
                                }))
                        }))
                },
                T.prototype.loadCamera = function (e) {
                    var t,
                    n = this.json.cameras[e],
                    a = n[n.type];
                    if (a)
                        return "perspective" === n.type ? t = new i.PerspectiveCamera(i.Math.radToDeg(a.yfov), a.aspectRatio || 1, a.znear || 1, a.zfar || 2e6) : "orthographic" === n.type && (t = new i.OrthographicCamera(a.xmag / -2, a.xmag / 2, a.ymag / 2, a.ymag / -2, a.znear, a.zfar)), void 0 !== n.name && (t.name = n.name), S(t, n), Promise.resolve(t);
                    console.warn("THREE.GLTFLoader: Missing camera parameters.")
                },
                T.prototype.loadSkin = function (e) {
                    var t = this.json.skins[e],
                    n = {
                        joints: t.joints
                    };
                    return void 0 === t.inverseBindMatrices ? Promise.resolve(n) : this.getDependency("accessor", t.inverseBindMatrices).then((function (e) {
                            return n.inverseBindMatrices = e,
                            n
                        }))
                },
                T.prototype.loadAnimation = function (e) {
                    for (var t = this.json.animations[e], n = [], a = [], r = [], o = [], s = [], c = 0, l = t.channels.length; c < l; c++) {
                        var h = t.channels[c],
                        u = t.samplers[h.sampler],
                        f = h.target,
                        p = void 0 !== f.node ? f.node : f.id,
                        m = void 0 !== t.parameters ? t.parameters[u.input] : u.input,
                        v = void 0 !== t.parameters ? t.parameters[u.output] : u.output;
                        n.push(this.getDependency("node", p)),
                        a.push(this.getDependency("accessor", m)),
                        r.push(this.getDependency("accessor", v)),
                        o.push(u),
                        s.push(f)
                    }
                    return Promise.all([Promise.all(n), Promise.all(a), Promise.all(r), Promise.all(o), Promise.all(s)]).then((function (n) {
                            for (var a = n[0], r = n[1], o = n[2], s = n[3], c = n[4], l = [], h = 0, u = a.length; h < u; h++) {
                                var f = a[h],
                                p = r[h],
                                m = o[h],
                                v = s[h],
                                g = c[h];
                                if (void 0 !== f) {
                                    var x;
                                    switch (f.updateMatrix(), f.matrixAutoUpdate = !0, b[g.path]) {
                                    case b.weights:
                                        x = i.NumberKeyframeTrack;
                                        break;
                                    case b.rotation:
                                        x = i.QuaternionKeyframeTrack;
                                        break;
                                    case b.position:
                                    case b.scale:
                                    default:
                                        x = i.VectorKeyframeTrack
                                    }
                                    var y = f.name ? f.name : f.uuid,
                                    z = void 0 !== v.interpolation ? M[v.interpolation] : i.InterpolateLinear,
                                    w = [];
                                    b[g.path] === b.weights ? f.traverse((function (e) {
                                            !0 === e.isMesh && e.morphTargetInfluences && w.push(e.name ? e.name : e.uuid)
                                        })) : w.push(y);
                                    var _ = m.array;
                                    if (m.normalized) {
                                        var S;
                                        if (_.constructor === Int8Array)
                                            S = 1 / 127;
                                        else if (_.constructor === Uint8Array)
                                            S = 1 / 255;
                                        else if (_.constructor == Int16Array)
                                            S = 1 / 32767;
                                        else {
                                            if (_.constructor !== Uint16Array)
                                                throw new Error("THREE.GLTFLoader: Unsupported output accessor component type.");
                                            S = 1 / 65535
                                        }
                                        for (var L = new Float32Array(_.length), A = 0, T = _.length; A < T; A++)
                                            L[A] = _[A] * S;
                                        _ = L
                                    }
                                    for (A = 0, T = w.length; A < T; A++) {
                                        var C = new x(w[A] + "." + b[g.path], p.array, _, z);
                                        "CUBICSPLINE" === v.interpolation && (C.createInterpolant = function (e) {
                                            return new d(this.times, this.values, this.getValueSize() / 3, e)
                                        }, C.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = !0),
                                        l.push(C)
                                    }
                                }
                            }
                            var E = void 0 !== t.name ? t.name : "animation_" + e;
                            return new i.AnimationClip(E, void 0, l)
                        }))
                },
                T.prototype.loadNode = function (e) {
                    var t,
                    a = this.json,
                    r = this.extensions,
                    o = this,
                    s = a.meshReferences,
                    c = a.meshUses,
                    l = a.nodes[e];
                    return (t = [], void 0 !== l.mesh && t.push(o.getDependency("mesh", l.mesh).then((function (e) {
                                    var t;
                                    if (s[l.mesh] > 1) {
                                        var n = c[l.mesh]++;
                                        (t = e.clone()).name += "_instance_" + n,
                                        t.onBeforeRender = e.onBeforeRender;
                                        for (var i = 0, a = t.children.length; i < a; i++)
                                            t.children[i].name += "_instance_" + n, t.children[i].onBeforeRender = e.children[i].onBeforeRender
                                    } else
                                        t = e;
                                    return void 0 !== l.weights && t.traverse((function (e) {
                                            if (e.isMesh)
                                                for (var t = 0, n = l.weights.length; t < n; t++)
                                                    e.morphTargetInfluences[t] = l.weights[t]
                                        })),
                                    t
                                }))), void 0 !== l.camera && t.push(o.getDependency("camera", l.camera)), l.extensions && l.extensions[n.KHR_LIGHTS_PUNCTUAL] && void 0 !== l.extensions[n.KHR_LIGHTS_PUNCTUAL].light && t.push(o.getDependency("light", l.extensions[n.KHR_LIGHTS_PUNCTUAL].light)), Promise.all(t)).then((function (e) {
                            var t;
                            if ((t = !0 === l.isBone ? new i.Bone : e.length > 1 ? new i.Group : 1 === e.length ? e[0] : new i.Object3D) !== e[0])
                                for (var n = 0, a = e.length; n < a; n++)
                                    t.add(e[n]);
                            if (void 0 !== l.name && (t.userData.name = l.name, t.name = i.PropertyBinding.sanitizeNodeName(l.name)), S(t, l), l.extensions && _(r, t, l), void 0 !== l.matrix) {
                                var o = new i.Matrix4;
                                o.fromArray(l.matrix),
                                t.applyMatrix(o)
                            } else
                                void 0 !== l.translation && t.position.fromArray(l.translation), void 0 !== l.rotation && t.quaternion.fromArray(l.rotation), void 0 !== l.scale && t.scale.fromArray(l.scale);
                            return t
                        }))
                },
                T.prototype.loadScene = function () {
                    function e(t, n, a, r) {
                        var o = a.nodes[t];
                        return r.getDependency("node", t).then((function (e) {
                                return void 0 === o.skin ? e : r.getDependency("skin", o.skin).then((function (e) {
                                        for (var n = [], i = 0, a = (t = e).joints.length; i < a; i++)
                                            n.push(r.getDependency("node", t.joints[i]));
                                        return Promise.all(n)
                                    })).then((function (n) {
                                        return e.traverse((function (e) {
                                                if (e.isMesh) {
                                                    for (var a = [], r = [], o = 0, s = n.length; o < s; o++) {
                                                        var c = n[o];
                                                        if (c) {
                                                            a.push(c);
                                                            var l = new i.Matrix4;
                                                            void 0 !== t.inverseBindMatrices && l.fromArray(t.inverseBindMatrices.array, 16 * o),
                                                            r.push(l)
                                                        } else
                                                            console.warn('THREE.GLTFLoader: Joint "%s" could not be found.', t.joints[o])
                                                    }
                                                    e.bind(new i.Skeleton(a, r), e.matrixWorld)
                                                }
                                            })),
                                        e
                                    }));
                                var t
                            })).then((function (t) {
                                n.add(t);
                                var i = [];
                                if (o.children)
                                    for (var s = o.children, c = 0, l = s.length; c < l; c++) {
                                        var h = s[c];
                                        i.push(e(h, t, a, r))
                                    }
                                return Promise.all(i)
                            }))
                    }
                    return function (t) {
                        var n = this.json,
                        a = this.extensions,
                        r = this.json.scenes[t],
                        o = new i.Scene;
                        void 0 !== r.name && (o.name = r.name),
                        S(o, r),
                        r.extensions && _(a, o, r);
                        for (var s = r.nodes || [], c = [], l = 0, h = s.length; l < h; l++)
                            c.push(e(s[l], o, n, this));
                        return Promise.all(c).then((function () {
                                return o
                            }))
                    }
                }
                (),
                e
            }
            ();
            e.exports = a
        },
        212: (e, t, n) => {
            "use strict";
            n.r(t),
            n.d(t, {
                ACESFilmicToneMapping: () => ne,
                AddEquation: () => S,
                AddOperation: () => J,
                AdditiveAnimationBlendMode: () => Xt,
                AdditiveBlending: () => M,
                AlphaFormat: () => Fe,
                AlwaysDepth: () => k,
                AlwaysStencilFunc: () => _n,
                AmbientLight: () => _u,
                AmbientLightProbe: () => qu,
                AnimationClip: () => Hh,
                AnimationLoader: () => Dh,
                AnimationMixer: () => Sf,
                AnimationObjectGroup: () => wf,
                AnimationUtils: () => xh,
                ArcCurve: () => qh,
                ArrayCamera: () => As,
                ArrowHelper: () => md,
                Audio: () => af,
                AudioAnalyser: () => hf,
                AudioContext: () => ju,
                AudioListener: () => nf,
                AudioLoader: () => Wu,
                AxesHelper: () => vd,
                AxisHelper: () => hp,
                BackSide: () => m,
                BasicDepthPacking: () => rn,
                BasicShadowMap: () => h,
                BinaryTextureLoader: () => mp,
                Bone: () => lc,
                BooleanKeyframeTrack: () => _h,
                BoundingBoxHelper: () => up,
                Box2: () => Rf,
                Box3: () => $n,
                Box3Helper: () => hd,
                BoxBufferGeometry: () => hr,
                BoxGeometry: () => kc,
                BoxHelper: () => ld,
                BufferAttribute: () => _a,
                BufferGeometry: () => Ga,
                BufferGeometryLoader: () => Nu,
                ByteType: () => Se,
                Cache: () => Ph,
                Camera: () => mr,
                CameraHelper: () => od,
                CanvasRenderer: () => xp,
                CanvasTexture: () => Rc,
                CatmullRomCurve3: () => $h,
                CineonToneMapping: () => te,
                CircleBufferGeometry: () => Gc,
                CircleGeometry: () => jc,
                ClampToEdgeWrapping: () => fe,
                Clock: () => Ju,
                ClosedSplineCurve3: () => sp,
                Color: () => ga,
                ColorKeyframeTrack: () => Sh,
                CompressedTexture: () => Vc,
                CompressedTextureLoader: () => Uh,
                ConeBufferGeometry: () => Yc,
                ConeGeometry: () => qc,
                CubeCamera: () => xr,
                CubeGeometry: () => kc,
                CubeReflectionMapping: () => re,
                CubeRefractionMapping: () => oe,
                CubeTexture: () => yr,
                CubeTextureLoader: () => kh,
                CubeUVReflectionMapping: () => le,
                CubeUVRefractionMapping: () => he,
                CubicBezierCurve: () => iu,
                CubicBezierCurve3: () => au,
                CubicInterpolant: () => bh,
                CullFaceBack: () => s,
                CullFaceFront: () => c,
                CullFaceFrontBack: () => l,
                CullFaceNone: () => o,
                Curve: () => Wh,
                CurvePath: () => uu,
                CustomBlending: () => _,
                CustomToneMapping: () => ie,
                CylinderBufferGeometry: () => Wc,
                CylinderGeometry: () => Xc,
                Cylindrical: () => Pf,
                DataTexture: () => Mr,
                DataTexture2DArray: () => Wr,
                DataTexture3D: () => Xr,
                DataTextureLoader: () => Gh,
                DecrementStencilOp: () => dn,
                DecrementWrapStencilOp: () => mn,
                DefaultLoadingManager: () => Rh,
                DepthFormat: () => ke,
                DepthStencilFormat: () => Ge,
                DepthTexture: () => Fc,
                DirectionalLight: () => wu,
                DirectionalLightHelper: () => id,
                DiscreteInterpolant: () => zh,
                DodecahedronBufferGeometry: () => Qc,
                DodecahedronGeometry: () => Jc,
                DoubleSide: () => v,
                DstAlphaFactor: () => F,
                DstColorFactor: () => O,
                DynamicBufferAttribute: () => Jd,
                DynamicCopyUsage: () => Nn,
                DynamicDrawUsage: () => Ln,
                DynamicReadUsage: () => Cn,
                EdgesGeometry: () => nl,
                EdgesHelper: () => fp,
                EllipseCurve: () => Xh,
                EqualDepth: () => W,
                EqualStencilFunc: () => yn,
                EquirectangularReflectionMapping: () => se,
                EquirectangularRefractionMapping: () => ce,
                Euler: () => Ni,
                EventDispatcher: () => Fn,
                ExtrudeBufferGeometry: () => El,
                ExtrudeGeometry: () => Nl,
                Face3: () => xa,
                Face4: () => Fd,
                FaceColors: () => Ud,
                FileLoader: () => Oh,
                FlatShading: () => g,
                Float32Attribute: () => rp,
                Float32BufferAttribute: () => Na,
                Float64Attribute: () => op,
                Float64BufferAttribute: () => Pa,
                FloatType: () => Ee,
                Fog: () => Rs,
                FogExp2: () => Vs,
                Font: () => Uu,
                FontLoader: () => ku,
                FrontSide: () => p,
                Frustum: () => _r,
                GLBufferAttribute: () => Tf,
                GLSL1: () => Vn,
                GLSL3: () => Rn,
                GammaEncoding: () => Kt,
                Geometry: () => Bc,
                GeometryUtils: () => gp,
                GreaterDepth: () => q,
                GreaterEqualDepth: () => X,
                GreaterEqualStencilFunc: () => wn,
                GreaterStencilFunc: () => Mn,
                GridHelper: () => Kf,
                Group: () => Ts,
                HalfFloatType: () => He,
                HemisphereLight: () => mu,
                HemisphereLightHelper: () => Jf,
                HemisphereLightProbe: () => Xu,
                IcosahedronBufferGeometry: () => Pl,
                IcosahedronGeometry: () => Vl,
                ImageBitmapLoader: () => Ou,
                ImageLoader: () => Bh,
                ImageUtils: () => Gn,
                ImmediateRenderObject: () => Df,
                IncrementStencilOp: () => fn,
                IncrementWrapStencilOp: () => pn,
                InstancedBufferAttribute: () => Hu,
                InstancedBufferGeometry: () => Eu,
                InstancedInterleavedBuffer: () => Af,
                InstancedMesh: () => pc,
                Int16Attribute: () => tp,
                Int16BufferAttribute: () => Ta,
                Int32Attribute: () => ip,
                Int32BufferAttribute: () => Ea,
                Int8Attribute: () => Kd,
                Int8BufferAttribute: () => Sa,
                IntType: () => Te,
                InterleavedBuffer: () => Is,
                InterleavedBufferAttribute: () => Ds,
                Interpolant: () => yh,
                InterpolateDiscrete: () => Dt,
                InterpolateLinear: () => Ut,
                InterpolateSmooth: () => Bt,
                InvertStencilOp: () => vn,
                JSONLoader: () => yp,
                KeepStencilOp: () => hn,
                KeyframeTrack: () => wh,
                LOD: () => ac,
                LatheBufferGeometry: () => Rl,
                LatheGeometry: () => Fl,
                Layers: () => Ri,
                LensFlare: () => Mp,
                LessDepth: () => G,
                LessEqualDepth: () => j,
                LessEqualStencilFunc: () => bn,
                LessStencilFunc: () => xn,
                Light: () => pu,
                LightProbe: () => Au,
                Line: () => Mc,
                Line3: () => Of,
                LineBasicMaterial: () => mc,
                LineCurve: () => ru,
                LineCurve3: () => ou,
                LineDashedMaterial: () => vh,
                LineLoop: () => Sc,
                LinePieces: () => Od,
                LineSegments: () => _c,
                LineStrip: () => Id,
                LinearEncoding: () => Qt,
                LinearFilter: () => ye,
                LinearInterpolant: () => Mh,
                LinearMipMapLinearFilter: () => we,
                LinearMipMapNearestFilter: () => Me,
                LinearMipmapLinearFilter: () => ze,
                LinearMipmapNearestFilter: () => be,
                LinearToneMapping: () => $,
                Loader: () => Fh,
                LoaderUtils: () => Cu,
                LoadingManager: () => Vh,
                LogLuvEncoding: () => en,
                LoopOnce: () => Ft,
                LoopPingPong: () => Ot,
                LoopRepeat: () => It,
                LuminanceAlphaFormat: () => Ue,
                LuminanceFormat: () => De,
                MOUSE: () => a,
                Material: () => ba,
                MaterialLoader: () => Tu,
                Math: () => Dn,
                MathUtils: () => Dn,
                Matrix3: () => Bn,
                Matrix4: () => _i,
                MaxEquation: () => C,
                Mesh: () => sr,
                MeshBasicMaterial: () => Ma,
                MeshDepthMaterial: () => Ms,
                MeshDistanceMaterial: () => zs,
                MeshFaceMaterial: () => kd,
                MeshLambertMaterial: () => ph,
                MeshMatcapMaterial: () => mh,
                MeshNormalMaterial: () => dh,
                MeshPhongMaterial: () => uh,
                MeshPhysicalMaterial: () => hh,
                MeshStandardMaterial: () => lh,
                MeshToonMaterial: () => fh,
                MinEquation: () => T,
                MirroredRepeatWrapping: () => de,
                MixOperation: () => Q,
                MultiMaterial: () => Gd,
                MultiplyBlending: () => w,
                MultiplyOperation: () => Z,
                NearestFilter: () => pe,
                NearestMipMapLinearFilter: () => xe,
                NearestMipMapNearestFilter: () => ve,
                NearestMipmapLinearFilter: () => ge,
                NearestMipmapNearestFilter: () => me,
                NeverDepth: () => B,
                NeverStencilFunc: () => gn,
                NoBlending: () => y,
                NoColors: () => Dd,
                NoToneMapping: () => K,
                NormalAnimationBlendMode: () => Wt,
                NormalBlending: () => b,
                NotEqualDepth: () => Y,
                NotEqualStencilFunc: () => zn,
                NumberKeyframeTrack: () => Lh,
                Object3D: () => Zi,
                ObjectLoader: () => Vu,
                ObjectSpaceNormalMap: () => cn,
                OctahedronBufferGeometry: () => Il,
                OctahedronGeometry: () => Ol,
                OneFactor: () => H,
                OneMinusDstAlphaFactor: () => I,
                OneMinusDstColorFactor: () => D,
                OneMinusSrcAlphaFactor: () => R,
                OneMinusSrcColorFactor: () => P,
                OrthographicCamera: () => Mu,
                PCFShadowMap: () => u,
                PCFSoftShadowMap: () => f,
                PMREMGenerator: () => Cd,
                ParametricBufferGeometry: () => Dl,
                ParametricGeometry: () => Ul,
                Particle: () => Wd,
                ParticleBasicMaterial: () => Yd,
                ParticleSystem: () => Xd,
                ParticleSystemMaterial: () => Zd,
                Path: () => fu,
                PerspectiveCamera: () => vr,
                Plane: () => $i,
                PlaneBufferGeometry: () => Ar,
                PlaneGeometry: () => Bl,
                PlaneHelper: () => ud,
                PointCloud: () => jd,
                PointCloudMaterial: () => qd,
                PointLight: () => bu,
                PointLightHelper: () => qf,
                Points: () => Hc,
                PointsMaterial: () => Lc,
                PolarGridHelper: () => $f,
                PolyhedronBufferGeometry: () => Zc,
                PolyhedronGeometry: () => kl,
                PositionalAudio: () => lf,
                PropertyBinding: () => zf,
                PropertyMixer: () => uf,
                QuadraticBezierCurve: () => su,
                QuadraticBezierCurve3: () => cu,
                Quaternion: () => Zn,
                QuaternionKeyframeTrack: () => Th,
                QuaternionLinearInterpolant: () => Ah,
                REVISION: () => i,
                RGBADepthPacking: () => on,
                RGBAFormat: () => Oe,
                RGBAIntegerFormat: () => Ze,
                RGBA_ASTC_10x10_Format: () => xt,
                RGBA_ASTC_10x5_Format: () => mt,
                RGBA_ASTC_10x6_Format: () => vt,
                RGBA_ASTC_10x8_Format: () => gt,
                RGBA_ASTC_12x10_Format: () => yt,
                RGBA_ASTC_12x12_Format: () => bt,
                RGBA_ASTC_4x4_Format: () => st,
                RGBA_ASTC_5x4_Format: () => ct,
                RGBA_ASTC_5x5_Format: () => lt,
                RGBA_ASTC_6x5_Format: () => ht,
                RGBA_ASTC_6x6_Format: () => ut,
                RGBA_ASTC_8x5_Format: () => ft,
                RGBA_ASTC_8x6_Format: () => dt,
                RGBA_ASTC_8x8_Format: () => pt,
                RGBA_BPTC_Format: () => Mt,
                RGBA_ETC2_EAC_Format: () => ot,
                RGBA_PVRTC_2BPPV1_Format: () => it,
                RGBA_PVRTC_4BPPV1_Format: () => nt,
                RGBA_S3TC_DXT1_Format: () => Je,
                RGBA_S3TC_DXT3_Format: () => Ke,
                RGBA_S3TC_DXT5_Format: () => $e,
                RGBDEncoding: () => an,
                RGBEEncoding: () => $t,
                RGBEFormat: () => Be,
                RGBFormat: () => Ie,
                RGBIntegerFormat: () => Ye,
                RGBM16Encoding: () => nn,
                RGBM7Encoding: () => tn,
                RGB_ETC1_Format: () => at,
                RGB_ETC2_Format: () => rt,
                RGB_PVRTC_2BPPV1_Format: () => tt,
                RGB_PVRTC_4BPPV1_Format: () => et,
                RGB_S3TC_DXT1_Format: () => Qe,
                RGFormat: () => Xe,
                RGIntegerFormat: () => qe,
                RawShaderMaterial: () => ch,
                Ray: () => wi,
                Raycaster: () => Cf,
                RectAreaLight: () => Su,
                RedFormat: () => je,
                RedIntegerFormat: () => We,
                ReinhardToneMapping: () => ee,
                RepeatWrapping: () => ue,
                ReplaceStencilOp: () => un,
                ReverseSubtractEquation: () => A,
                RingBufferGeometry: () => Gl,
                RingGeometry: () => jl,
                SRGB8_ALPHA8_ASTC_10x10_Format: () => Pt,
                SRGB8_ALPHA8_ASTC_10x5_Format: () => Et,
                SRGB8_ALPHA8_ASTC_10x6_Format: () => Ht,
                SRGB8_ALPHA8_ASTC_10x8_Format: () => Nt,
                SRGB8_ALPHA8_ASTC_12x10_Format: () => Vt,
                SRGB8_ALPHA8_ASTC_12x12_Format: () => Rt,
                SRGB8_ALPHA8_ASTC_4x4_Format: () => zt,
                SRGB8_ALPHA8_ASTC_5x4_Format: () => wt,
                SRGB8_ALPHA8_ASTC_5x5_Format: () => _t,
                SRGB8_ALPHA8_ASTC_6x5_Format: () => St,
                SRGB8_ALPHA8_ASTC_6x6_Format: () => Lt,
                SRGB8_ALPHA8_ASTC_8x5_Format: () => At,
                SRGB8_ALPHA8_ASTC_8x6_Format: () => Tt,
                SRGB8_ALPHA8_ASTC_8x8_Format: () => Ct,
                Scene: () => Fs,
                SceneUtils: () => bp,
                ShaderChunk: () => Tr,
                ShaderLib: () => Er,
                ShaderMaterial: () => pr,
                ShadowMaterial: () => sh,
                Shape: () => du,
                ShapeBufferGeometry: () => Wl,
                ShapeGeometry: () => Xl,
                ShapePath: () => Du,
                ShapeUtils: () => Al,
                ShortType: () => Le,
                Skeleton: () => cc,
                SkeletonHelper: () => Wf,
                SkinnedMesh: () => rc,
                SmoothShading: () => x,
                Sphere: () => mi,
                SphereBufferGeometry: () => ql,
                SphereGeometry: () => Yl,
                Spherical: () => Nf,
                SphericalHarmonics3: () => Lu,
                Spline: () => lp,
                SplineCurve: () => lu,
                SplineCurve3: () => cp,
                SpotLight: () => xu,
                SpotLightHelper: () => Bf,
                Sprite: () => ec,
                SpriteMaterial: () => Us,
                SrcAlphaFactor: () => V,
                SrcAlphaSaturateFactor: () => U,
                SrcColorFactor: () => N,
                StaticCopyUsage: () => Hn,
                StaticDrawUsage: () => Sn,
                StaticReadUsage: () => Tn,
                StereoCamera: () => Qu,
                StreamCopyUsage: () => Pn,
                StreamDrawUsage: () => An,
                StreamReadUsage: () => En,
                StringKeyframeTrack: () => Ch,
                SubtractEquation: () => L,
                SubtractiveBlending: () => z,
                TOUCH: () => r,
                TangentSpaceNormalMap: () => sn,
                TetrahedronBufferGeometry: () => Zl,
                TetrahedronGeometry: () => Ql,
                TextBufferGeometry: () => Jl,
                TextGeometry: () => Kl,
                Texture: () => Wn,
                TextureLoader: () => jh,
                TorusBufferGeometry: () => $l,
                TorusGeometry: () => eh,
                TorusKnotBufferGeometry: () => th,
                TorusKnotGeometry: () => nh,
                Triangle: () => ha,
                TriangleFanDrawMode: () => Zt,
                TriangleStripDrawMode: () => Yt,
                TrianglesDrawMode: () => qt,
                TubeBufferGeometry: () => ih,
                TubeGeometry: () => ah,
                UVMapping: () => ae,
                Uint16Attribute: () => np,
                Uint16BufferAttribute: () => Ca,
                Uint32Attribute: () => ap,
                Uint32BufferAttribute: () => Ha,
                Uint8Attribute: () => $d,
                Uint8BufferAttribute: () => La,
                Uint8ClampedAttribute: () => ep,
                Uint8ClampedBufferAttribute: () => Aa,
                Uniform: () => Lf,
                UniformsLib: () => Cr,
                UniformsUtils: () => dr,
                UnsignedByteType: () => _e,
                UnsignedInt248Type: () => Re,
                UnsignedIntType: () => Ce,
                UnsignedShort4444Type: () => Ne,
                UnsignedShort5551Type: () => Pe,
                UnsignedShort565Type: () => Ve,
                UnsignedShortType: () => Ae,
                VSMShadowMap: () => d,
                Vector2: () => Un,
                Vector3: () => Qn,
                Vector4: () => Xn,
                VectorKeyframeTrack: () => Eh,
                Vertex: () => Qd,
                VertexColors: () => Bd,
                VideoTexture: () => Pc,
                WebGL1Renderer: () => Ps,
                WebGLCubeRenderTarget: () => br,
                WebGLMultisampleRenderTarget: () => Yn,
                WebGLRenderTarget: () => qn,
                WebGLRenderTargetCube: () => vp,
                WebGLRenderer: () => Ns,
                WebGLUtils: () => Ls,
                WireframeGeometry: () => rh,
                WireframeHelper: () => dp,
                WrapAroundEnding: () => jt,
                XHRLoader: () => pp,
                ZeroCurvatureEnding: () => kt,
                ZeroFactor: () => E,
                ZeroSlopeEnding: () => Gt,
                ZeroStencilOp: () => ln,
                sRGBEncoding: () => Jt
            });
            const i = "121",
            a = {
                LEFT: 0,
                MIDDLE: 1,
                RIGHT: 2,
                ROTATE: 0,
                DOLLY: 1,
                PAN: 2
            },
            r = {
                ROTATE: 0,
                PAN: 1,
                DOLLY_PAN: 2,
                DOLLY_ROTATE: 3
            },
            o = 0,
            s = 1,
            c = 2,
            l = 3,
            h = 0,
            u = 1,
            f = 2,
            d = 3,
            p = 0,
            m = 1,
            v = 2,
            g = 1,
            x = 2,
            y = 0,
            b = 1,
            M = 2,
            z = 3,
            w = 4,
            _ = 5,
            S = 100,
            L = 101,
            A = 102,
            T = 103,
            C = 104,
            E = 200,
            H = 201,
            N = 202,
            P = 203,
            V = 204,
            R = 205,
            F = 206,
            I = 207,
            O = 208,
            D = 209,
            U = 210,
            B = 0,
            k = 1,
            G = 2,
            j = 3,
            W = 4,
            X = 5,
            q = 6,
            Y = 7,
            Z = 0,
            Q = 1,
            J = 2,
            K = 0,
            $ = 1,
            ee = 2,
            te = 3,
            ne = 4,
            ie = 5,
            ae = 300,
            re = 301,
            oe = 302,
            se = 303,
            ce = 304,
            le = 306,
            he = 307,
            ue = 1e3,
            fe = 1001,
            de = 1002,
            pe = 1003,
            me = 1004,
            ve = 1004,
            ge = 1005,
            xe = 1005,
            ye = 1006,
            be = 1007,
            Me = 1007,
            ze = 1008,
            we = 1008,
            _e = 1009,
            Se = 1010,
            Le = 1011,
            Ae = 1012,
            Te = 1013,
            Ce = 1014,
            Ee = 1015,
            He = 1016,
            Ne = 1017,
            Pe = 1018,
            Ve = 1019,
            Re = 1020,
            Fe = 1021,
            Ie = 1022,
            Oe = 1023,
            De = 1024,
            Ue = 1025,
            Be = Oe,
            ke = 1026,
            Ge = 1027,
            je = 1028,
            We = 1029,
            Xe = 1030,
            qe = 1031,
            Ye = 1032,
            Ze = 1033,
            Qe = 33776,
            Je = 33777,
            Ke = 33778,
            $e = 33779,
            et = 35840,
            tt = 35841,
            nt = 35842,
            it = 35843,
            at = 36196,
            rt = 37492,
            ot = 37496,
            st = 37808,
            ct = 37809,
            lt = 37810,
            ht = 37811,
            ut = 37812,
            ft = 37813,
            dt = 37814,
            pt = 37815,
            mt = 37816,
            vt = 37817,
            gt = 37818,
            xt = 37819,
            yt = 37820,
            bt = 37821,
            Mt = 36492,
            zt = 37840,
            wt = 37841,
            _t = 37842,
            St = 37843,
            Lt = 37844,
            At = 37845,
            Tt = 37846,
            Ct = 37847,
            Et = 37848,
            Ht = 37849,
            Nt = 37850,
            Pt = 37851,
            Vt = 37852,
            Rt = 37853,
            Ft = 2200,
            It = 2201,
            Ot = 2202,
            Dt = 2300,
            Ut = 2301,
            Bt = 2302,
            kt = 2400,
            Gt = 2401,
            jt = 2402,
            Wt = 2500,
            Xt = 2501,
            qt = 0,
            Yt = 1,
            Zt = 2,
            Qt = 3e3,
            Jt = 3001,
            Kt = 3007,
            $t = 3002,
            en = 3003,
            tn = 3004,
            nn = 3005,
            an = 3006,
            rn = 3200,
            on = 3201,
            sn = 0,
            cn = 1,
            ln = 0,
            hn = 7680,
            un = 7681,
            fn = 7682,
            dn = 7683,
            pn = 34055,
            mn = 34056,
            vn = 5386,
            gn = 512,
            xn = 513,
            yn = 514,
            bn = 515,
            Mn = 516,
            zn = 517,
            wn = 518,
            _n = 519,
            Sn = 35044,
            Ln = 35048,
            An = 35040,
            Tn = 35045,
            Cn = 35049,
            En = 35041,
            Hn = 35046,
            Nn = 35050,
            Pn = 35042,
            Vn = "100",
            Rn = "300 es";
            function Fn() {}
            Object.assign(Fn.prototype, {
                addEventListener: function (e, t) {
                    void 0 === this._listeners && (this._listeners = {});
                    const n = this._listeners;
                    void 0 === n[e] && (n[e] = []),
                    -1 === n[e].indexOf(t) && n[e].push(t)
                },
                hasEventListener: function (e, t) {
                    if (void 0 === this._listeners)
                        return !1;
                    const n = this._listeners;
                    return void 0 !== n[e] && -1 !== n[e].indexOf(t)
                },
                removeEventListener: function (e, t) {
                    if (void 0 === this._listeners)
                        return;
                    const n = this._listeners[e];
                    if (void 0 !== n) {
                        const e = n.indexOf(t);
                        -1 !== e && n.splice(e, 1)
                    }
                },
                dispatchEvent: function (e) {
                    if (void 0 === this._listeners)
                        return;
                    const t = this._listeners[e.type];
                    if (void 0 !== t) {
                        e.target = this;
                        const n = t.slice(0);
                        for (let t = 0, i = n.length; t < i; t++)
                            n[t].call(this, e)
                    }
                }
            });
            const In = [];
            for (let e = 0; e < 256; e++)
                In[e] = (e < 16 ? "0" : "") + e.toString(16);
            let On = 1234567;
            const Dn = {
                DEG2RAD: Math.PI / 180,
                RAD2DEG: 180 / Math.PI,
                generateUUID: function () {
                    const e = 4294967295 * Math.random() | 0,
                    t = 4294967295 * Math.random() | 0,
                    n = 4294967295 * Math.random() | 0,
                    i = 4294967295 * Math.random() | 0;
                    return (In[255 & e] + In[e >> 8 & 255] + In[e >> 16 & 255] + In[e >> 24 & 255] + "-" + In[255 & t] + In[t >> 8 & 255] + "-" + In[t >> 16 & 15 | 64] + In[t >> 24 & 255] + "-" + In[63 & n | 128] + In[n >> 8 & 255] + "-" + In[n >> 16 & 255] + In[n >> 24 & 255] + In[255 & i] + In[i >> 8 & 255] + In[i >> 16 & 255] + In[i >> 24 & 255]).toUpperCase()
                },
                clamp: function (e, t, n) {
                    return Math.max(t, Math.min(n, e))
                },
                euclideanModulo: function (e, t) {
                    return (e % t + t) % t
                },
                mapLinear: function (e, t, n, i, a) {
                    return i + (e - t) * (a - i) / (n - t)
                },
                lerp: function (e, t, n) {
                    return (1 - n) * e + n * t
                },
                smoothstep: function (e, t, n) {
                    return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * (3 - 2 * e)
                },
                smootherstep: function (e, t, n) {
                    return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * e * (e * (6 * e - 15) + 10)
                },
                randInt: function (e, t) {
                    return e + Math.floor(Math.random() * (t - e + 1))
                },
                randFloat: function (e, t) {
                    return e + Math.random() * (t - e)
                },
                randFloatSpread: function (e) {
                    return e * (.5 - Math.random())
                },
                seededRandom: function (e) {
                    return void 0 !== e && (On = e % 2147483647),
                    On = 16807 * On % 2147483647,
                    (On - 1) / 2147483646
                },
                degToRad: function (e) {
                    return e * Dn.DEG2RAD
                },
                radToDeg: function (e) {
                    return e * Dn.RAD2DEG
                },
                isPowerOfTwo: function (e) {
                    return 0 == (e & e - 1) && 0 !== e
                },
                ceilPowerOfTwo: function (e) {
                    return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2))
                },
                floorPowerOfTwo: function (e) {
                    return Math.pow(2, Math.floor(Math.log(e) / Math.LN2))
                },
                setQuaternionFromProperEuler: function (e, t, n, i, a) {
                    const r = Math.cos,
                    o = Math.sin,
                    s = r(n / 2),
                    c = o(n / 2),
                    l = r((t + i) / 2),
                    h = o((t + i) / 2),
                    u = r((t - i) / 2),
                    f = o((t - i) / 2),
                    d = r((i - t) / 2),
                    p = o((i - t) / 2);
                    switch (a) {
                    case "XYX":
                        e.set(s * h, c * u, c * f, s * l);
                        break;
                    case "YZY":
                        e.set(c * f, s * h, c * u, s * l);
                        break;
                    case "ZXZ":
                        e.set(c * u, c * f, s * h, s * l);
                        break;
                    case "XZX":
                        e.set(s * h, c * p, c * d, s * l);
                        break;
                    case "YXY":
                        e.set(c * d, s * h, c * p, s * l);
                        break;
                    case "ZYZ":
                        e.set(c * p, c * d, s * h, s * l);
                        break;
                    default:
                        console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + a)
                    }
                }
            };
            class Un {
                constructor(e = 0, t = 0) {
                    Object.defineProperty(this, "isVector2", {
                        value: !0
                    }),
                    this.x = e,
                    this.y = t
                }
                get width() {
                    return this.x
                }
                set width(e) {
                    this.x = e
                }
                get height() {
                    return this.y
                }
                set height(e) {
                    this.y = e
                }
                set(e, t) {
                    return this.x = e,
                    this.y = t,
                    this
                }
                setScalar(e) {
                    return this.x = e,
                    this.y = e,
                    this
                }
                setX(e) {
                    return this.x = e,
                    this
                }
                setY(e) {
                    return this.y = e,
                    this
                }
                setComponent(e, t) {
                    switch (e) {
                    case 0:
                        this.x = t;
                        break;
                    case 1:
                        this.y = t;
                        break;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                    return this
                }
                getComponent(e) {
                    switch (e) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                }
                clone() {
                    return new this.constructor(this.x, this.y)
                }
                copy(e) {
                    return this.x = e.x,
                    this.y = e.y,
                    this
                }
                add(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this)
                }
                addScalar(e) {
                    return this.x += e,
                    this.y += e,
                    this
                }
                addVectors(e, t) {
                    return this.x = e.x + t.x,
                    this.y = e.y + t.y,
                    this
                }
                addScaledVector(e, t) {
                    return this.x += e.x * t,
                    this.y += e.y * t,
                    this
                }
                sub(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this)
                }
                subScalar(e) {
                    return this.x -= e,
                    this.y -= e,
                    this
                }
                subVectors(e, t) {
                    return this.x = e.x - t.x,
                    this.y = e.y - t.y,
                    this
                }
                multiply(e) {
                    return this.x *= e.x,
                    this.y *= e.y,
                    this
                }
                multiplyScalar(e) {
                    return this.x *= e,
                    this.y *= e,
                    this
                }
                divide(e) {
                    return this.x /= e.x,
                    this.y /= e.y,
                    this
                }
                divideScalar(e) {
                    return this.multiplyScalar(1 / e)
                }
                applyMatrix3(e) {
                    const t = this.x,
                    n = this.y,
                    i = e.elements;
                    return this.x = i[0] * t + i[3] * n + i[6],
                    this.y = i[1] * t + i[4] * n + i[7],
                    this
                }
                min(e) {
                    return this.x = Math.min(this.x, e.x),
                    this.y = Math.min(this.y, e.y),
                    this
                }
                max(e) {
                    return this.x = Math.max(this.x, e.x),
                    this.y = Math.max(this.y, e.y),
                    this
                }
                clamp(e, t) {
                    return this.x = Math.max(e.x, Math.min(t.x, this.x)),
                    this.y = Math.max(e.y, Math.min(t.y, this.y)),
                    this
                }
                clampScalar(e, t) {
                    return this.x = Math.max(e, Math.min(t, this.x)),
                    this.y = Math.max(e, Math.min(t, this.y)),
                    this
                }
                clampLength(e, t) {
                    const n = this.length();
                    return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
                }
                floor() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this
                }
                ceil() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this
                }
                round() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this
                }
                roundToZero() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this
                }
                negate() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this
                }
                dot(e) {
                    return this.x * e.x + this.y * e.y
                }
                cross(e) {
                    return this.x * e.y - this.y * e.x
                }
                lengthSq() {
                    return this.x * this.x + this.y * this.y
                }
                length() {
                    return Math.sqrt(this.x * this.x + this.y * this.y)
                }
                manhattanLength() {
                    return Math.abs(this.x) + Math.abs(this.y)
                }
                normalize() {
                    return this.divideScalar(this.length() || 1)
                }
                angle() {
                    return Math.atan2(-this.y, -this.x) + Math.PI
                }
                distanceTo(e) {
                    return Math.sqrt(this.distanceToSquared(e))
                }
                distanceToSquared(e) {
                    const t = this.x - e.x,
                    n = this.y - e.y;
                    return t * t + n * n
                }
                manhattanDistanceTo(e) {
                    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y)
                }
                setLength(e) {
                    return this.normalize().multiplyScalar(e)
                }
                lerp(e, t) {
                    return this.x += (e.x - this.x) * t,
                    this.y += (e.y - this.y) * t,
                    this
                }
                lerpVectors(e, t, n) {
                    return this.x = e.x + (t.x - e.x) * n,
                    this.y = e.y + (t.y - e.y) * n,
                    this
                }
                equals(e) {
                    return e.x === this.x && e.y === this.y
                }
                fromArray(e, t) {
                    return void 0 === t && (t = 0),
                    this.x = e[t],
                    this.y = e[t + 1],
                    this
                }
                toArray(e, t) {
                    return void 0 === e && (e = []),
                    void 0 === t && (t = 0),
                    e[t] = this.x,
                    e[t + 1] = this.y,
                    e
                }
                fromBufferAttribute(e, t, n) {
                    return void 0 !== n && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),
                    this.x = e.getX(t),
                    this.y = e.getY(t),
                    this
                }
                rotateAround(e, t) {
                    const n = Math.cos(t),
                    i = Math.sin(t),
                    a = this.x - e.x,
                    r = this.y - e.y;
                    return this.x = a * n - r * i + e.x,
                    this.y = a * i + r * n + e.y,
                    this
                }
                random() {
                    return this.x = Math.random(),
                    this.y = Math.random(),
                    this
                }
            }
            class Bn {
                constructor() {
                    Object.defineProperty(this, "isMatrix3", {
                        value: !0
                    }),
                    this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1],
                    arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
                }
                set(e, t, n, i, a, r, o, s, c) {
                    const l = this.elements;
                    return l[0] = e,
                    l[1] = i,
                    l[2] = o,
                    l[3] = t,
                    l[4] = a,
                    l[5] = s,
                    l[6] = n,
                    l[7] = r,
                    l[8] = c,
                    this
                }
                identity() {
                    return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
                    this
                }
                clone() {
                    return (new this.constructor).fromArray(this.elements)
                }
                copy(e) {
                    const t = this.elements,
                    n = e.elements;
                    return t[0] = n[0],
                    t[1] = n[1],
                    t[2] = n[2],
                    t[3] = n[3],
                    t[4] = n[4],
                    t[5] = n[5],
                    t[6] = n[6],
                    t[7] = n[7],
                    t[8] = n[8],
                    this
                }
                extractBasis(e, t, n) {
                    return e.setFromMatrix3Column(this, 0),
                    t.setFromMatrix3Column(this, 1),
                    n.setFromMatrix3Column(this, 2),
                    this
                }
                setFromMatrix4(e) {
                    const t = e.elements;
                    return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]),
                    this
                }
                multiply(e) {
                    return this.multiplyMatrices(this, e)
                }
                premultiply(e) {
                    return this.multiplyMatrices(e, this)
                }
                multiplyMatrices(e, t) {
                    const n = e.elements,
                    i = t.elements,
                    a = this.elements,
                    r = n[0],
                    o = n[3],
                    s = n[6],
                    c = n[1],
                    l = n[4],
                    h = n[7],
                    u = n[2],
                    f = n[5],
                    d = n[8],
                    p = i[0],
                    m = i[3],
                    v = i[6],
                    g = i[1],
                    x = i[4],
                    y = i[7],
                    b = i[2],
                    M = i[5],
                    z = i[8];
                    return a[0] = r * p + o * g + s * b,
                    a[3] = r * m + o * x + s * M,
                    a[6] = r * v + o * y + s * z,
                    a[1] = c * p + l * g + h * b,
                    a[4] = c * m + l * x + h * M,
                    a[7] = c * v + l * y + h * z,
                    a[2] = u * p + f * g + d * b,
                    a[5] = u * m + f * x + d * M,
                    a[8] = u * v + f * y + d * z,
                    this
                }
                multiplyScalar(e) {
                    const t = this.elements;
                    return t[0] *= e,
                    t[3] *= e,
                    t[6] *= e,
                    t[1] *= e,
                    t[4] *= e,
                    t[7] *= e,
                    t[2] *= e,
                    t[5] *= e,
                    t[8] *= e,
                    this
                }
                determinant() {
                    const e = this.elements,
                    t = e[0],
                    n = e[1],
                    i = e[2],
                    a = e[3],
                    r = e[4],
                    o = e[5],
                    s = e[6],
                    c = e[7],
                    l = e[8];
                    return t * r * l - t * o * c - n * a * l + n * o * s + i * a * c - i * r * s
                }
                getInverse(e, t) {
                    void 0 !== t && console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");
                    const n = e.elements,
                    i = this.elements,
                    a = n[0],
                    r = n[1],
                    o = n[2],
                    s = n[3],
                    c = n[4],
                    l = n[5],
                    h = n[6],
                    u = n[7],
                    f = n[8],
                    d = f * c - l * u,
                    p = l * h - f * s,
                    m = u * s - c * h,
                    v = a * d + r * p + o * m;
                    if (0 === v)
                        return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
                    const g = 1 / v;
                    return i[0] = d * g,
                    i[1] = (o * u - f * r) * g,
                    i[2] = (l * r - o * c) * g,
                    i[3] = p * g,
                    i[4] = (f * a - o * h) * g,
                    i[5] = (o * s - l * a) * g,
                    i[6] = m * g,
                    i[7] = (r * h - u * a) * g,
                    i[8] = (c * a - r * s) * g,
                    this
                }
                transpose() {
                    let e;
                    const t = this.elements;
                    return e = t[1],
                    t[1] = t[3],
                    t[3] = e,
                    e = t[2],
                    t[2] = t[6],
                    t[6] = e,
                    e = t[5],
                    t[5] = t[7],
                    t[7] = e,
                    this
                }
                getNormalMatrix(e) {
                    return this.setFromMatrix4(e).getInverse(this).transpose()
                }
                transposeIntoArray(e) {
                    const t = this.elements;
                    return e[0] = t[0],
                    e[1] = t[3],
                    e[2] = t[6],
                    e[3] = t[1],
                    e[4] = t[4],
                    e[5] = t[7],
                    e[6] = t[2],
                    e[7] = t[5],
                    e[8] = t[8],
                    this
                }
                setUvTransform(e, t, n, i, a, r, o) {
                    const s = Math.cos(a),
                    c = Math.sin(a);
                    this.set(n * s, n * c, -n * (s * r + c * o) + r + e, -i * c, i * s, -i * (-c * r + s * o) + o + t, 0, 0, 1)
                }
                scale(e, t) {
                    const n = this.elements;
                    return n[0] *= e,
                    n[3] *= e,
                    n[6] *= e,
                    n[1] *= t,
                    n[4] *= t,
                    n[7] *= t,
                    this
                }
                rotate(e) {
                    const t = Math.cos(e),
                    n = Math.sin(e),
                    i = this.elements,
                    a = i[0],
                    r = i[3],
                    o = i[6],
                    s = i[1],
                    c = i[4],
                    l = i[7];
                    return i[0] = t * a + n * s,
                    i[3] = t * r + n * c,
                    i[6] = t * o + n * l,
                    i[1] = -n * a + t * s,
                    i[4] = -n * r + t * c,
                    i[7] = -n * o + t * l,
                    this
                }
                translate(e, t) {
                    const n = this.elements;
                    return n[0] += e * n[2],
                    n[3] += e * n[5],
                    n[6] += e * n[8],
                    n[1] += t * n[2],
                    n[4] += t * n[5],
                    n[7] += t * n[8],
                    this
                }
                equals(e) {
                    const t = this.elements,
                    n = e.elements;
                    for (let e = 0; e < 9; e++)
                        if (t[e] !== n[e])
                            return !1;
                    return !0
                }
                fromArray(e, t) {
                    void 0 === t && (t = 0);
                    for (let n = 0; n < 9; n++)
                        this.elements[n] = e[n + t];
                    return this
                }
                toArray(e, t) {
                    void 0 === e && (e = []),
                    void 0 === t && (t = 0);
                    const n = this.elements;
                    return e[t] = n[0],
                    e[t + 1] = n[1],
                    e[t + 2] = n[2],
                    e[t + 3] = n[3],
                    e[t + 4] = n[4],
                    e[t + 5] = n[5],
                    e[t + 6] = n[6],
                    e[t + 7] = n[7],
                    e[t + 8] = n[8],
                    e
                }
            }
            let kn;
            const Gn = {
                getDataURL: function (e) {
                    if (/^data:/i.test(e.src))
                        return e.src;
                    if ("undefined" == typeof HTMLCanvasElement)
                        return e.src;
                    let t;
                    if (e instanceof HTMLCanvasElement)
                        t = e;
                    else {
                        void 0 === kn && (kn = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")),
                        kn.width = e.width,
                        kn.height = e.height;
                        const n = kn.getContext("2d");
                        e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height),
                        t = kn
                    }
                    return t.width > 2048 || t.height > 2048 ? t.toDataURL("image/jpeg", .6) : t.toDataURL("image/png")
                }
            };
            let jn = 0;
            function Wn(e, t, n, i, a, r, o, s, c, l) {
                Object.defineProperty(this, "id", {
                    value: jn++
                }),
                this.uuid = Dn.generateUUID(),
                this.name = "",
                this.image = void 0 !== e ? e : Wn.DEFAULT_IMAGE,
                this.mipmaps = [],
                this.mapping = void 0 !== t ? t : Wn.DEFAULT_MAPPING,
                this.wrapS = void 0 !== n ? n : fe,
                this.wrapT = void 0 !== i ? i : fe,
                this.magFilter = void 0 !== a ? a : ye,
                this.minFilter = void 0 !== r ? r : ze,
                this.anisotropy = void 0 !== c ? c : 1,
                this.format = void 0 !== o ? o : Oe,
                this.internalFormat = null,
                this.type = void 0 !== s ? s : _e,
                this.offset = new Un(0, 0),
                this.repeat = new Un(1, 1),
                this.center = new Un(0, 0),
                this.rotation = 0,
                this.matrixAutoUpdate = !0,
                this.matrix = new Bn,
                this.generateMipmaps = !0,
                this.premultiplyAlpha = !1,
                this.flipY = !0,
                this.unpackAlignment = 4,
                this.encoding = void 0 !== l ? l : Qt,
                this.version = 0,
                this.onUpdate = null
            }
            Wn.DEFAULT_IMAGE = void 0,
            Wn.DEFAULT_MAPPING = ae,
            Wn.prototype = Object.assign(Object.create(Fn.prototype), {
                constructor: Wn,
                isTexture: !0,
                updateMatrix: function () {
                    this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y)
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.name = e.name,
                    this.image = e.image,
                    this.mipmaps = e.mipmaps.slice(0),
                    this.mapping = e.mapping,
                    this.wrapS = e.wrapS,
                    this.wrapT = e.wrapT,
                    this.magFilter = e.magFilter,
                    this.minFilter = e.minFilter,
                    this.anisotropy = e.anisotropy,
                    this.format = e.format,
                    this.internalFormat = e.internalFormat,
                    this.type = e.type,
                    this.offset.copy(e.offset),
                    this.repeat.copy(e.repeat),
                    this.center.copy(e.center),
                    this.rotation = e.rotation,
                    this.matrixAutoUpdate = e.matrixAutoUpdate,
                    this.matrix.copy(e.matrix),
                    this.generateMipmaps = e.generateMipmaps,
                    this.premultiplyAlpha = e.premultiplyAlpha,
                    this.flipY = e.flipY,
                    this.unpackAlignment = e.unpackAlignment,
                    this.encoding = e.encoding,
                    this
                },
                toJSON: function (e) {
                    const t = void 0 === e || "string" == typeof e;
                    if (!t && void 0 !== e.textures[this.uuid])
                        return e.textures[this.uuid];
                    const n = {
                        metadata: {
                            version: 4.5,
                            type: "Texture",
                            generator: "Texture.toJSON"
                        },
                        uuid: this.uuid,
                        name: this.name,
                        mapping: this.mapping,
                        repeat: [this.repeat.x, this.repeat.y],
                        offset: [this.offset.x, this.offset.y],
                        center: [this.center.x, this.center.y],
                        rotation: this.rotation,
                        wrap: [this.wrapS, this.wrapT],
                        format: this.format,
                        type: this.type,
                        encoding: this.encoding,
                        minFilter: this.minFilter,
                        magFilter: this.magFilter,
                        anisotropy: this.anisotropy,
                        flipY: this.flipY,
                        premultiplyAlpha: this.premultiplyAlpha,
                        unpackAlignment: this.unpackAlignment
                    };
                    if (void 0 !== this.image) {
                        const i = this.image;
                        if (void 0 === i.uuid && (i.uuid = Dn.generateUUID()), !t && void 0 === e.images[i.uuid]) {
                            let t;
                            if (Array.isArray(i)) {
                                t = [];
                                for (let e = 0, n = i.length; e < n; e++)
                                    t.push(Gn.getDataURL(i[e]))
                            } else
                                t = Gn.getDataURL(i);
                            e.images[i.uuid] = {
                                uuid: i.uuid,
                                url: t
                            }
                        }
                        n.image = i.uuid
                    }
                    return t || (e.textures[this.uuid] = n),
                    n
                },
                dispose: function () {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                },
                transformUv: function (e) {
                    if (this.mapping !== ae)
                        return e;
                    if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1)
                        switch (this.wrapS) {
                        case ue:
                            e.x = e.x - Math.floor(e.x);
                            break;
                        case fe:
                            e.x = e.x < 0 ? 0 : 1;
                            break;
                        case de:
                            1 === Math.abs(Math.floor(e.x) % 2) ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x)
                        }
                    if (e.y < 0 || e.y > 1)
                        switch (this.wrapT) {
                        case ue:
                            e.y = e.y - Math.floor(e.y);
                            break;
                        case fe:
                            e.y = e.y < 0 ? 0 : 1;
                            break;
                        case de:
                            1 === Math.abs(Math.floor(e.y) % 2) ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y)
                        }
                    return this.flipY && (e.y = 1 - e.y),
                    e
                }
            }),
            Object.defineProperty(Wn.prototype, "needsUpdate", {
                set: function (e) {
                    !0 === e && this.version++
                }
            });
            class Xn {
                constructor(e = 0, t = 0, n = 0, i = 1) {
                    Object.defineProperty(this, "isVector4", {
                        value: !0
                    }),
                    this.x = e,
                    this.y = t,
                    this.z = n,
                    this.w = i
                }
                get width() {
                    return this.z
                }
                set width(e) {
                    this.z = e
                }
                get height() {
                    return this.w
                }
                set height(e) {
                    this.w = e
                }
                set(e, t, n, i) {
                    return this.x = e,
                    this.y = t,
                    this.z = n,
                    this.w = i,
                    this
                }
                setScalar(e) {
                    return this.x = e,
                    this.y = e,
                    this.z = e,
                    this.w = e,
                    this
                }
                setX(e) {
                    return this.x = e,
                    this
                }
                setY(e) {
                    return this.y = e,
                    this
                }
                setZ(e) {
                    return this.z = e,
                    this
                }
                setW(e) {
                    return this.w = e,
                    this
                }
                setComponent(e, t) {
                    switch (e) {
                    case 0:
                        this.x = t;
                        break;
                    case 1:
                        this.y = t;
                        break;
                    case 2:
                        this.z = t;
                        break;
                    case 3:
                        this.w = t;
                        break;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                    return this
                }
                getComponent(e) {
                    switch (e) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    case 2:
                        return this.z;
                    case 3:
                        return this.w;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                }
                clone() {
                    return new this.constructor(this.x, this.y, this.z, this.w)
                }
                copy(e) {
                    return this.x = e.x,
                    this.y = e.y,
                    this.z = e.z,
                    this.w = void 0 !== e.w ? e.w : 1,
                    this
                }
                add(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this)
                }
                addScalar(e) {
                    return this.x += e,
                    this.y += e,
                    this.z += e,
                    this.w += e,
                    this
                }
                addVectors(e, t) {
                    return this.x = e.x + t.x,
                    this.y = e.y + t.y,
                    this.z = e.z + t.z,
                    this.w = e.w + t.w,
                    this
                }
                addScaledVector(e, t) {
                    return this.x += e.x * t,
                    this.y += e.y * t,
                    this.z += e.z * t,
                    this.w += e.w * t,
                    this
                }
                sub(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this)
                }
                subScalar(e) {
                    return this.x -= e,
                    this.y -= e,
                    this.z -= e,
                    this.w -= e,
                    this
                }
                subVectors(e, t) {
                    return this.x = e.x - t.x,
                    this.y = e.y - t.y,
                    this.z = e.z - t.z,
                    this.w = e.w - t.w,
                    this
                }
                multiplyScalar(e) {
                    return this.x *= e,
                    this.y *= e,
                    this.z *= e,
                    this.w *= e,
                    this
                }
                applyMatrix4(e) {
                    const t = this.x,
                    n = this.y,
                    i = this.z,
                    a = this.w,
                    r = e.elements;
                    return this.x = r[0] * t + r[4] * n + r[8] * i + r[12] * a,
                    this.y = r[1] * t + r[5] * n + r[9] * i + r[13] * a,
                    this.z = r[2] * t + r[6] * n + r[10] * i + r[14] * a,
                    this.w = r[3] * t + r[7] * n + r[11] * i + r[15] * a,
                    this
                }
                divideScalar(e) {
                    return this.multiplyScalar(1 / e)
                }
                setAxisAngleFromQuaternion(e) {
                    this.w = 2 * Math.acos(e.w);
                    const t = Math.sqrt(1 - e.w * e.w);
                    return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t),
                    this
                }
                setAxisAngleFromRotationMatrix(e) {
                    let t,
                    n,
                    i,
                    a;
                    const r = .01,
                    o = .1,
                    s = e.elements,
                    c = s[0],
                    l = s[4],
                    h = s[8],
                    u = s[1],
                    f = s[5],
                    d = s[9],
                    p = s[2],
                    m = s[6],
                    v = s[10];
                    if (Math.abs(l - u) < r && Math.abs(h - p) < r && Math.abs(d - m) < r) {
                        if (Math.abs(l + u) < o && Math.abs(h + p) < o && Math.abs(d + m) < o && Math.abs(c + f + v - 3) < o)
                            return this.set(1, 0, 0, 0), this;
                        t = Math.PI;
                        const e = (c + 1) / 2,
                        s = (f + 1) / 2,
                        g = (v + 1) / 2,
                        x = (l + u) / 4,
                        y = (h + p) / 4,
                        b = (d + m) / 4;
                        return e > s && e > g ? e < r ? (n = 0, i = .707106781, a = .707106781) : (n = Math.sqrt(e), i = x / n, a = y / n) : s > g ? s < r ? (n = .707106781, i = 0, a = .707106781) : (i = Math.sqrt(s), n = x / i, a = b / i) : g < r ? (n = .707106781, i = .707106781, a = 0) : (a = Math.sqrt(g), n = y / a, i = b / a),
                        this.set(n, i, a, t),
                        this
                    }
                    let g = Math.sqrt((m - d) * (m - d) + (h - p) * (h - p) + (u - l) * (u - l));
                    return Math.abs(g) < .001 && (g = 1),
                    this.x = (m - d) / g,
                    this.y = (h - p) / g,
                    this.z = (u - l) / g,
                    this.w = Math.acos((c + f + v - 1) / 2),
                    this
                }
                min(e) {
                    return this.x = Math.min(this.x, e.x),
                    this.y = Math.min(this.y, e.y),
                    this.z = Math.min(this.z, e.z),
                    this.w = Math.min(this.w, e.w),
                    this
                }
                max(e) {
                    return this.x = Math.max(this.x, e.x),
                    this.y = Math.max(this.y, e.y),
                    this.z = Math.max(this.z, e.z),
                    this.w = Math.max(this.w, e.w),
                    this
                }
                clamp(e, t) {
                    return this.x = Math.max(e.x, Math.min(t.x, this.x)),
                    this.y = Math.max(e.y, Math.min(t.y, this.y)),
                    this.z = Math.max(e.z, Math.min(t.z, this.z)),
                    this.w = Math.max(e.w, Math.min(t.w, this.w)),
                    this
                }
                clampScalar(e, t) {
                    return this.x = Math.max(e, Math.min(t, this.x)),
                    this.y = Math.max(e, Math.min(t, this.y)),
                    this.z = Math.max(e, Math.min(t, this.z)),
                    this.w = Math.max(e, Math.min(t, this.w)),
                    this
                }
                clampLength(e, t) {
                    const n = this.length();
                    return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
                }
                floor() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this.z = Math.floor(this.z),
                    this.w = Math.floor(this.w),
                    this
                }
                ceil() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this.z = Math.ceil(this.z),
                    this.w = Math.ceil(this.w),
                    this
                }
                round() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this.z = Math.round(this.z),
                    this.w = Math.round(this.w),
                    this
                }
                roundToZero() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
                    this
                }
                negate() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this.z = -this.z,
                    this.w = -this.w,
                    this
                }
                dot(e) {
                    return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
                }
                lengthSq() {
                    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
                }
                length() {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
                }
                manhattanLength() {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
                }
                normalize() {
                    return this.divideScalar(this.length() || 1)
                }
                setLength(e) {
                    return this.normalize().multiplyScalar(e)
                }
                lerp(e, t) {
                    return this.x += (e.x - this.x) * t,
                    this.y += (e.y - this.y) * t,
                    this.z += (e.z - this.z) * t,
                    this.w += (e.w - this.w) * t,
                    this
                }
                lerpVectors(e, t, n) {
                    return this.x = e.x + (t.x - e.x) * n,
                    this.y = e.y + (t.y - e.y) * n,
                    this.z = e.z + (t.z - e.z) * n,
                    this.w = e.w + (t.w - e.w) * n,
                    this
                }
                equals(e) {
                    return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
                }
                fromArray(e, t) {
                    return void 0 === t && (t = 0),
                    this.x = e[t],
                    this.y = e[t + 1],
                    this.z = e[t + 2],
                    this.w = e[t + 3],
                    this
                }
                toArray(e, t) {
                    return void 0 === e && (e = []),
                    void 0 === t && (t = 0),
                    e[t] = this.x,
                    e[t + 1] = this.y,
                    e[t + 2] = this.z,
                    e[t + 3] = this.w,
                    e
                }
                fromBufferAttribute(e, t, n) {
                    return void 0 !== n && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),
                    this.x = e.getX(t),
                    this.y = e.getY(t),
                    this.z = e.getZ(t),
                    this.w = e.getW(t),
                    this
                }
                random() {
                    return this.x = Math.random(),
                    this.y = Math.random(),
                    this.z = Math.random(),
                    this.w = Math.random(),
                    this
                }
            }
            function qn(e, t, n) {
                this.width = e,
                this.height = t,
                this.scissor = new Xn(0, 0, e, t),
                this.scissorTest = !1,
                this.viewport = new Xn(0, 0, e, t),
                n = n || {},
                this.texture = new Wn(void 0, n.mapping, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.encoding),
                this.texture.image = {},
                this.texture.image.width = e,
                this.texture.image.height = t,
                this.texture.generateMipmaps = void 0 !== n.generateMipmaps && n.generateMipmaps,
                this.texture.minFilter = void 0 !== n.minFilter ? n.minFilter : ye,
                this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer,
                this.stencilBuffer = void 0 !== n.stencilBuffer && n.stencilBuffer,
                this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null
            }
            function Yn(e, t, n) {
                qn.call(this, e, t, n),
                this.samples = 4
            }
            qn.prototype = Object.assign(Object.create(Fn.prototype), {
                constructor: qn,
                isWebGLRenderTarget: !0,
                setSize: function (e, t) {
                    this.width === e && this.height === t || (this.width = e, this.height = t, this.texture.image.width = e, this.texture.image.height = t, this.dispose()),
                    this.viewport.set(0, 0, e, t),
                    this.scissor.set(0, 0, e, t)
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.width = e.width,
                    this.height = e.height,
                    this.viewport.copy(e.viewport),
                    this.texture = e.texture.clone(),
                    this.depthBuffer = e.depthBuffer,
                    this.stencilBuffer = e.stencilBuffer,
                    this.depthTexture = e.depthTexture,
                    this
                },
                dispose: function () {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }),
            Yn.prototype = Object.assign(Object.create(qn.prototype), {
                constructor: Yn,
                isWebGLMultisampleRenderTarget: !0,
                copy: function (e) {
                    return qn.prototype.copy.call(this, e),
                    this.samples = e.samples,
                    this
                }
            });
            class Zn {
                constructor(e = 0, t = 0, n = 0, i = 1) {
                    Object.defineProperty(this, "isQuaternion", {
                        value: !0
                    }),
                    this._x = e,
                    this._y = t,
                    this._z = n,
                    this._w = i
                }
                static slerp(e, t, n, i) {
                    return n.copy(e).slerp(t, i)
                }
                static slerpFlat(e, t, n, i, a, r, o) {
                    let s = n[i + 0],
                    c = n[i + 1],
                    l = n[i + 2],
                    h = n[i + 3];
                    const u = a[r + 0],
                    f = a[r + 1],
                    d = a[r + 2],
                    p = a[r + 3];
                    if (h !== p || s !== u || c !== f || l !== d) {
                        let e = 1 - o;
                        const t = s * u + c * f + l * d + h * p,
                        n = t >= 0 ? 1 : -1,
                        i = 1 - t * t;
                        if (i > Number.EPSILON) {
                            const a = Math.sqrt(i),
                            r = Math.atan2(a, t * n);
                            e = Math.sin(e * r) / a,
                            o = Math.sin(o * r) / a
                        }
                        const a = o * n;
                        if (s = s * e + u * a, c = c * e + f * a, l = l * e + d * a, h = h * e + p * a, e === 1 - o) {
                            const e = 1 / Math.sqrt(s * s + c * c + l * l + h * h);
                            s *= e,
                            c *= e,
                            l *= e,
                            h *= e
                        }
                    }
                    e[t] = s,
                    e[t + 1] = c,
                    e[t + 2] = l,
                    e[t + 3] = h
                }
                static multiplyQuaternionsFlat(e, t, n, i, a, r) {
                    const o = n[i],
                    s = n[i + 1],
                    c = n[i + 2],
                    l = n[i + 3],
                    h = a[r],
                    u = a[r + 1],
                    f = a[r + 2],
                    d = a[r + 3];
                    return e[t] = o * d + l * h + s * f - c * u,
                    e[t + 1] = s * d + l * u + c * h - o * f,
                    e[t + 2] = c * d + l * f + o * u - s * h,
                    e[t + 3] = l * d - o * h - s * u - c * f,
                    e
                }
                get x() {
                    return this._x
                }
                set x(e) {
                    this._x = e,
                    this._onChangeCallback()
                }
                get y() {
                    return this._y
                }
                set y(e) {
                    this._y = e,
                    this._onChangeCallback()
                }
                get z() {
                    return this._z
                }
                set z(e) {
                    this._z = e,
                    this._onChangeCallback()
                }
                get w() {
                    return this._w
                }
                set w(e) {
                    this._w = e,
                    this._onChangeCallback()
                }
                set(e, t, n, i) {
                    return this._x = e,
                    this._y = t,
                    this._z = n,
                    this._w = i,
                    this._onChangeCallback(),
                    this
                }
                clone() {
                    return new this.constructor(this._x, this._y, this._z, this._w)
                }
                copy(e) {
                    return this._x = e.x,
                    this._y = e.y,
                    this._z = e.z,
                    this._w = e.w,
                    this._onChangeCallback(),
                    this
                }
                setFromEuler(e, t) {
                    if (!e || !e.isEuler)
                        throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
                    const n = e._x,
                    i = e._y,
                    a = e._z,
                    r = e._order,
                    o = Math.cos,
                    s = Math.sin,
                    c = o(n / 2),
                    l = o(i / 2),
                    h = o(a / 2),
                    u = s(n / 2),
                    f = s(i / 2),
                    d = s(a / 2);
                    switch (r) {
                    case "XYZ":
                        this._x = u * l * h + c * f * d,
                        this._y = c * f * h - u * l * d,
                        this._z = c * l * d + u * f * h,
                        this._w = c * l * h - u * f * d;
                        break;
                    case "YXZ":
                        this._x = u * l * h + c * f * d,
                        this._y = c * f * h - u * l * d,
                        this._z = c * l * d - u * f * h,
                        this._w = c * l * h + u * f * d;
                        break;
                    case "ZXY":
                        this._x = u * l * h - c * f * d,
                        this._y = c * f * h + u * l * d,
                        this._z = c * l * d + u * f * h,
                        this._w = c * l * h - u * f * d;
                        break;
                    case "ZYX":
                        this._x = u * l * h - c * f * d,
                        this._y = c * f * h + u * l * d,
                        this._z = c * l * d - u * f * h,
                        this._w = c * l * h + u * f * d;
                        break;
                    case "YZX":
                        this._x = u * l * h + c * f * d,
                        this._y = c * f * h + u * l * d,
                        this._z = c * l * d - u * f * h,
                        this._w = c * l * h - u * f * d;
                        break;
                    case "XZY":
                        this._x = u * l * h - c * f * d,
                        this._y = c * f * h - u * l * d,
                        this._z = c * l * d + u * f * h,
                        this._w = c * l * h + u * f * d;
                        break;
                    default:
                        console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + r)
                    }
                    return !1 !== t && this._onChangeCallback(),
                    this
                }
                setFromAxisAngle(e, t) {
                    const n = t / 2,
                    i = Math.sin(n);
                    return this._x = e.x * i,
                    this._y = e.y * i,
                    this._z = e.z * i,
                    this._w = Math.cos(n),
                    this._onChangeCallback(),
                    this
                }
                setFromRotationMatrix(e) {
                    const t = e.elements,
                    n = t[0],
                    i = t[4],
                    a = t[8],
                    r = t[1],
                    o = t[5],
                    s = t[9],
                    c = t[2],
                    l = t[6],
                    h = t[10],
                    u = n + o + h;
                    if (u > 0) {
                        const e = .5 / Math.sqrt(u + 1);
                        this._w = .25 / e,
                        this._x = (l - s) * e,
                        this._y = (a - c) * e,
                        this._z = (r - i) * e
                    } else if (n > o && n > h) {
                        const e = 2 * Math.sqrt(1 + n - o - h);
                        this._w = (l - s) / e,
                        this._x = .25 * e,
                        this._y = (i + r) / e,
                        this._z = (a + c) / e
                    } else if (o > h) {
                        const e = 2 * Math.sqrt(1 + o - n - h);
                        this._w = (a - c) / e,
                        this._x = (i + r) / e,
                        this._y = .25 * e,
                        this._z = (s + l) / e
                    } else {
                        const e = 2 * Math.sqrt(1 + h - n - o);
                        this._w = (r - i) / e,
                        this._x = (a + c) / e,
                        this._y = (s + l) / e,
                        this._z = .25 * e
                    }
                    return this._onChangeCallback(),
                    this
                }
                setFromUnitVectors(e, t) {
                    let n = e.dot(t) + 1;
                    return n < 1e-6 ? (n = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = n)) : (this._x = e.y * t.z - e.z * t.y, this._y = e.z * t.x - e.x * t.z, this._z = e.x * t.y - e.y * t.x, this._w = n),
                    this.normalize()
                }
                angleTo(e) {
                    return 2 * Math.acos(Math.abs(Dn.clamp(this.dot(e), -1, 1)))
                }
                rotateTowards(e, t) {
                    const n = this.angleTo(e);
                    if (0 === n)
                        return this;
                    const i = Math.min(1, t / n);
                    return this.slerp(e, i),
                    this
                }
                identity() {
                    return this.set(0, 0, 0, 1)
                }
                inverse() {
                    return this.conjugate()
                }
                conjugate() {
                    return this._x *= -1,
                    this._y *= -1,
                    this._z *= -1,
                    this._onChangeCallback(),
                    this
                }
                dot(e) {
                    return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
                }
                lengthSq() {
                    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
                }
                length() {
                    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
                }
                normalize() {
                    let e = this.length();
                    return 0 === e ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e),
                    this._onChangeCallback(),
                    this
                }
                multiply(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e)
                }
                premultiply(e) {
                    return this.multiplyQuaternions(e, this)
                }
                multiplyQuaternions(e, t) {
                    const n = e._x,
                    i = e._y,
                    a = e._z,
                    r = e._w,
                    o = t._x,
                    s = t._y,
                    c = t._z,
                    l = t._w;
                    return this._x = n * l + r * o + i * c - a * s,
                    this._y = i * l + r * s + a * o - n * c,
                    this._z = a * l + r * c + n * s - i * o,
                    this._w = r * l - n * o - i * s - a * c,
                    this._onChangeCallback(),
                    this
                }
                slerp(e, t) {
                    if (0 === t)
                        return this;
                    if (1 === t)
                        return this.copy(e);
                    const n = this._x,
                    i = this._y,
                    a = this._z,
                    r = this._w;
                    let o = r * e._w + n * e._x + i * e._y + a * e._z;
                    if (o < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, o = -o) : this.copy(e), o >= 1)
                        return this._w = r, this._x = n, this._y = i, this._z = a, this;
                    const s = 1 - o * o;
                    if (s <= Number.EPSILON) {
                        const e = 1 - t;
                        return this._w = e * r + t * this._w,
                        this._x = e * n + t * this._x,
                        this._y = e * i + t * this._y,
                        this._z = e * a + t * this._z,
                        this.normalize(),
                        this._onChangeCallback(),
                        this
                    }
                    const c = Math.sqrt(s),
                    l = Math.atan2(c, o),
                    h = Math.sin((1 - t) * l) / c,
                    u = Math.sin(t * l) / c;
                    return this._w = r * h + this._w * u,
                    this._x = n * h + this._x * u,
                    this._y = i * h + this._y * u,
                    this._z = a * h + this._z * u,
                    this._onChangeCallback(),
                    this
                }
                equals(e) {
                    return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w
                }
                fromArray(e, t) {
                    return void 0 === t && (t = 0),
                    this._x = e[t],
                    this._y = e[t + 1],
                    this._z = e[t + 2],
                    this._w = e[t + 3],
                    this._onChangeCallback(),
                    this
                }
                toArray(e, t) {
                    return void 0 === e && (e = []),
                    void 0 === t && (t = 0),
                    e[t] = this._x,
                    e[t + 1] = this._y,
                    e[t + 2] = this._z,
                    e[t + 3] = this._w,
                    e
                }
                fromBufferAttribute(e, t) {
                    return this._x = e.getX(t),
                    this._y = e.getY(t),
                    this._z = e.getZ(t),
                    this._w = e.getW(t),
                    this
                }
                _onChange(e) {
                    return this._onChangeCallback = e,
                    this
                }
                _onChangeCallback() {}
            }
            class Qn {
                constructor(e = 0, t = 0, n = 0) {
                    Object.defineProperty(this, "isVector3", {
                        value: !0
                    }),
                    this.x = e,
                    this.y = t,
                    this.z = n
                }
                set(e, t, n) {
                    return void 0 === n && (n = this.z),
                    this.x = e,
                    this.y = t,
                    this.z = n,
                    this
                }
                setScalar(e) {
                    return this.x = e,
                    this.y = e,
                    this.z = e,
                    this
                }
                setX(e) {
                    return this.x = e,
                    this
                }
                setY(e) {
                    return this.y = e,
                    this
                }
                setZ(e) {
                    return this.z = e,
                    this
                }
                setComponent(e, t) {
                    switch (e) {
                    case 0:
                        this.x = t;
                        break;
                    case 1:
                        this.y = t;
                        break;
                    case 2:
                        this.z = t;
                        break;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                    return this
                }
                getComponent(e) {
                    switch (e) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    case 2:
                        return this.z;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                }
                clone() {
                    return new this.constructor(this.x, this.y, this.z)
                }
                copy(e) {
                    return this.x = e.x,
                    this.y = e.y,
                    this.z = e.z,
                    this
                }
                add(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this)
                }
                addScalar(e) {
                    return this.x += e,
                    this.y += e,
                    this.z += e,
                    this
                }
                addVectors(e, t) {
                    return this.x = e.x + t.x,
                    this.y = e.y + t.y,
                    this.z = e.z + t.z,
                    this
                }
                addScaledVector(e, t) {
                    return this.x += e.x * t,
                    this.y += e.y * t,
                    this.z += e.z * t,
                    this
                }
                sub(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this)
                }
                subScalar(e) {
                    return this.x -= e,
                    this.y -= e,
                    this.z -= e,
                    this
                }
                subVectors(e, t) {
                    return this.x = e.x - t.x,
                    this.y = e.y - t.y,
                    this.z = e.z - t.z,
                    this
                }
                multiply(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this)
                }
                multiplyScalar(e) {
                    return this.x *= e,
                    this.y *= e,
                    this.z *= e,
                    this
                }
                multiplyVectors(e, t) {
                    return this.x = e.x * t.x,
                    this.y = e.y * t.y,
                    this.z = e.z * t.z,
                    this
                }
                applyEuler(e) {
                    return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),
                    this.applyQuaternion(Kn.setFromEuler(e))
                }
                applyAxisAngle(e, t) {
                    return this.applyQuaternion(Kn.setFromAxisAngle(e, t))
                }
                applyMatrix3(e) {
                    const t = this.x,
                    n = this.y,
                    i = this.z,
                    a = e.elements;
                    return this.x = a[0] * t + a[3] * n + a[6] * i,
                    this.y = a[1] * t + a[4] * n + a[7] * i,
                    this.z = a[2] * t + a[5] * n + a[8] * i,
                    this
                }
                applyNormalMatrix(e) {
                    return this.applyMatrix3(e).normalize()
                }
                applyMatrix4(e) {
                    const t = this.x,
                    n = this.y,
                    i = this.z,
                    a = e.elements,
                    r = 1 / (a[3] * t + a[7] * n + a[11] * i + a[15]);
                    return this.x = (a[0] * t + a[4] * n + a[8] * i + a[12]) * r,
                    this.y = (a[1] * t + a[5] * n + a[9] * i + a[13]) * r,
                    this.z = (a[2] * t + a[6] * n + a[10] * i + a[14]) * r,
                    this
                }
                applyQuaternion(e) {
                    const t = this.x,
                    n = this.y,
                    i = this.z,
                    a = e.x,
                    r = e.y,
                    o = e.z,
                    s = e.w,
                    c = s * t + r * i - o * n,
                    l = s * n + o * t - a * i,
                    h = s * i + a * n - r * t,
                    u = -a * t - r * n - o * i;
                    return this.x = c * s + u * -a + l * -o - h * -r,
                    this.y = l * s + u * -r + h * -a - c * -o,
                    this.z = h * s + u * -o + c * -r - l * -a,
                    this
                }
                project(e) {
                    return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)
                }
                unproject(e) {
                    return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)
                }
                transformDirection(e) {
                    const t = this.x,
                    n = this.y,
                    i = this.z,
                    a = e.elements;
                    return this.x = a[0] * t + a[4] * n + a[8] * i,
                    this.y = a[1] * t + a[5] * n + a[9] * i,
                    this.z = a[2] * t + a[6] * n + a[10] * i,
                    this.normalize()
                }
                divide(e) {
                    return this.x /= e.x,
                    this.y /= e.y,
                    this.z /= e.z,
                    this
                }
                divideScalar(e) {
                    return this.multiplyScalar(1 / e)
                }
                min(e) {
                    return this.x = Math.min(this.x, e.x),
                    this.y = Math.min(this.y, e.y),
                    this.z = Math.min(this.z, e.z),
                    this
                }
                max(e) {
                    return this.x = Math.max(this.x, e.x),
                    this.y = Math.max(this.y, e.y),
                    this.z = Math.max(this.z, e.z),
                    this
                }
                clamp(e, t) {
                    return this.x = Math.max(e.x, Math.min(t.x, this.x)),
                    this.y = Math.max(e.y, Math.min(t.y, this.y)),
                    this.z = Math.max(e.z, Math.min(t.z, this.z)),
                    this
                }
                clampScalar(e, t) {
                    return this.x = Math.max(e, Math.min(t, this.x)),
                    this.y = Math.max(e, Math.min(t, this.y)),
                    this.z = Math.max(e, Math.min(t, this.z)),
                    this
                }
                clampLength(e, t) {
                    const n = this.length();
                    return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
                }
                floor() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this.z = Math.floor(this.z),
                    this
                }
                ceil() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this.z = Math.ceil(this.z),
                    this
                }
                round() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this.z = Math.round(this.z),
                    this
                }
                roundToZero() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                    this
                }
                negate() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this.z = -this.z,
                    this
                }
                dot(e) {
                    return this.x * e.x + this.y * e.y + this.z * e.z
                }
                lengthSq() {
                    return this.x * this.x + this.y * this.y + this.z * this.z
                }
                length() {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
                }
                manhattanLength() {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
                }
                normalize() {
                    return this.divideScalar(this.length() || 1)
                }
                setLength(e) {
                    return this.normalize().multiplyScalar(e)
                }
                lerp(e, t) {
                    return this.x += (e.x - this.x) * t,
                    this.y += (e.y - this.y) * t,
                    this.z += (e.z - this.z) * t,
                    this
                }
                lerpVectors(e, t, n) {
                    return this.x = e.x + (t.x - e.x) * n,
                    this.y = e.y + (t.y - e.y) * n,
                    this.z = e.z + (t.z - e.z) * n,
                    this
                }
                cross(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(e, t)) : this.crossVectors(this, e)
                }
                crossVectors(e, t) {
                    const n = e.x,
                    i = e.y,
                    a = e.z,
                    r = t.x,
                    o = t.y,
                    s = t.z;
                    return this.x = i * s - a * o,
                    this.y = a * r - n * s,
                    this.z = n * o - i * r,
                    this
                }
                projectOnVector(e) {
                    const t = e.lengthSq();
                    if (0 === t)
                        return this.set(0, 0, 0);
                    const n = e.dot(this) / t;
                    return this.copy(e).multiplyScalar(n)
                }
                projectOnPlane(e) {
                    return Jn.copy(this).projectOnVector(e),
                    this.sub(Jn)
                }
                reflect(e) {
                    return this.sub(Jn.copy(e).multiplyScalar(2 * this.dot(e)))
                }
                angleTo(e) {
                    const t = Math.sqrt(this.lengthSq() * e.lengthSq());
                    if (0 === t)
                        return Math.PI / 2;
                    const n = this.dot(e) / t;
                    return Math.acos(Dn.clamp(n, -1, 1))
                }
                distanceTo(e) {
                    return Math.sqrt(this.distanceToSquared(e))
                }
                distanceToSquared(e) {
                    const t = this.x - e.x,
                    n = this.y - e.y,
                    i = this.z - e.z;
                    return t * t + n * n + i * i
                }
                manhattanDistanceTo(e) {
                    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z)
                }
                setFromSpherical(e) {
                    return this.setFromSphericalCoords(e.radius, e.phi, e.theta)
                }
                setFromSphericalCoords(e, t, n) {
                    const i = Math.sin(t) * e;
                    return this.x = i * Math.sin(n),
                    this.y = Math.cos(t) * e,
                    this.z = i * Math.cos(n),
                    this
                }
                setFromCylindrical(e) {
                    return this.setFromCylindricalCoords(e.radius, e.theta, e.y)
                }
                setFromCylindricalCoords(e, t, n) {
                    return this.x = e * Math.sin(t),
                    this.y = n,
                    this.z = e * Math.cos(t),
                    this
                }
                setFromMatrixPosition(e) {
                    const t = e.elements;
                    return this.x = t[12],
                    this.y = t[13],
                    this.z = t[14],
                    this
                }
                setFromMatrixScale(e) {
                    const t = this.setFromMatrixColumn(e, 0).length(),
                    n = this.setFromMatrixColumn(e, 1).length(),
                    i = this.setFromMatrixColumn(e, 2).length();
                    return this.x = t,
                    this.y = n,
                    this.z = i,
                    this
                }
                setFromMatrixColumn(e, t) {
                    return this.fromArray(e.elements, 4 * t)
                }
                setFromMatrix3Column(e, t) {
                    return this.fromArray(e.elements, 3 * t)
                }
                equals(e) {
                    return e.x === this.x && e.y === this.y && e.z === this.z
                }
                fromArray(e, t) {
                    return void 0 === t && (t = 0),
                    this.x = e[t],
                    this.y = e[t + 1],
                    this.z = e[t + 2],
                    this
                }
                toArray(e, t) {
                    return void 0 === e && (e = []),
                    void 0 === t && (t = 0),
                    e[t] = this.x,
                    e[t + 1] = this.y,
                    e[t + 2] = this.z,
                    e
                }
                fromBufferAttribute(e, t, n) {
                    return void 0 !== n && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),
                    this.x = e.getX(t),
                    this.y = e.getY(t),
                    this.z = e.getZ(t),
                    this
                }
                random() {
                    return this.x = Math.random(),
                    this.y = Math.random(),
                    this.z = Math.random(),
                    this
                }
            }
            const Jn = new Qn,
            Kn = new Zn;
            class $n {
                constructor(e, t) {
                    Object.defineProperty(this, "isBox3", {
                        value: !0
                    }),
                    this.min = void 0 !== e ? e : new Qn(1 / 0, 1 / 0, 1 / 0),
                    this.max = void 0 !== t ? t : new Qn(-1 / 0, -1 / 0, -1 / 0)
                }
                set(e, t) {
                    return this.min.copy(e),
                    this.max.copy(t),
                    this
                }
                setFromArray(e) {
                    let t = 1 / 0,
                    n = 1 / 0,
                    i = 1 / 0,
                    a = -1 / 0,
                    r = -1 / 0,
                    o = -1 / 0;
                    for (let s = 0, c = e.length; s < c; s += 3) {
                        const c = e[s],
                        l = e[s + 1],
                        h = e[s + 2];
                        c < t && (t = c),
                        l < n && (n = l),
                        h < i && (i = h),
                        c > a && (a = c),
                        l > r && (r = l),
                        h > o && (o = h)
                    }
                    return this.min.set(t, n, i),
                    this.max.set(a, r, o),
                    this
                }
                setFromBufferAttribute(e) {
                    let t = 1 / 0,
                    n = 1 / 0,
                    i = 1 / 0,
                    a = -1 / 0,
                    r = -1 / 0,
                    o = -1 / 0;
                    for (let s = 0, c = e.count; s < c; s++) {
                        const c = e.getX(s),
                        l = e.getY(s),
                        h = e.getZ(s);
                        c < t && (t = c),
                        l < n && (n = l),
                        h < i && (i = h),
                        c > a && (a = c),
                        l > r && (r = l),
                        h > o && (o = h)
                    }
                    return this.min.set(t, n, i),
                    this.max.set(a, r, o),
                    this
                }
                setFromPoints(e) {
                    this.makeEmpty();
                    for (let t = 0, n = e.length; t < n; t++)
                        this.expandByPoint(e[t]);
                    return this
                }
                setFromCenterAndSize(e, t) {
                    const n = ni.copy(t).multiplyScalar(.5);
                    return this.min.copy(e).sub(n),
                    this.max.copy(e).add(n),
                    this
                }
                setFromObject(e) {
                    return this.makeEmpty(),
                    this.expandByObject(e)
                }
                clone() {
                    return (new this.constructor).copy(this)
                }
                copy(e) {
                    return this.min.copy(e.min),
                    this.max.copy(e.max),
                    this
                }
                makeEmpty() {
                    return this.min.x = this.min.y = this.min.z = 1 / 0,
                    this.max.x = this.max.y = this.max.z = -1 / 0,
                    this
                }
                isEmpty() {
                    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
                }
                getCenter(e) {
                    return void 0 === e && (console.warn("THREE.Box3: .getCenter() target is now required"), e = new Qn),
                    this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
                }
                getSize(e) {
                    return void 0 === e && (console.warn("THREE.Box3: .getSize() target is now required"), e = new Qn),
                    this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min)
                }
                expandByPoint(e) {
                    return this.min.min(e),
                    this.max.max(e),
                    this
                }
                expandByVector(e) {
                    return this.min.sub(e),
                    this.max.add(e),
                    this
                }
                expandByScalar(e) {
                    return this.min.addScalar(-e),
                    this.max.addScalar(e),
                    this
                }
                expandByObject(e) {
                    e.updateWorldMatrix(!1, !1);
                    const t = e.geometry;
                    void 0 !== t && (null === t.boundingBox && t.computeBoundingBox(), ii.copy(t.boundingBox), ii.applyMatrix4(e.matrixWorld), this.union(ii));
                    const n = e.children;
                    for (let e = 0, t = n.length; e < t; e++)
                        this.expandByObject(n[e]);
                    return this
                }
                containsPoint(e) {
                    return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z)
                }
                containsBox(e) {
                    return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z
                }
                getParameter(e, t) {
                    return void 0 === t && (console.warn("THREE.Box3: .getParameter() target is now required"), t = new Qn),
                    t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z))
                }
                intersectsBox(e) {
                    return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z)
                }
                intersectsSphere(e) {
                    return this.clampPoint(e.center, ni),
                    ni.distanceToSquared(e.center) <= e.radius * e.radius
                }
                intersectsPlane(e) {
                    let t,
                    n;
                    return e.normal.x > 0 ? (t = e.normal.x * this.min.x, n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, n = e.normal.x * this.min.x),
                    e.normal.y > 0 ? (t += e.normal.y * this.min.y, n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, n += e.normal.y * this.min.y),
                    e.normal.z > 0 ? (t += e.normal.z * this.min.z, n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, n += e.normal.z * this.min.z),
                    t <= -e.constant && n >= -e.constant
                }
                intersectsTriangle(e) {
                    if (this.isEmpty())
                        return !1;
                    this.getCenter(hi),
                    ui.subVectors(this.max, hi),
                    ai.subVectors(e.a, hi),
                    ri.subVectors(e.b, hi),
                    oi.subVectors(e.c, hi),
                    si.subVectors(ri, ai),
                    ci.subVectors(oi, ri),
                    li.subVectors(ai, oi);
                    let t = [0, -si.z, si.y, 0, -ci.z, ci.y, 0, -li.z, li.y, si.z, 0, -si.x, ci.z, 0, -ci.x, li.z, 0, -li.x, -si.y, si.x, 0, -ci.y, ci.x, 0, -li.y, li.x, 0];
                    return !!ei(t, ai, ri, oi, ui) && (t = [1, 0, 0, 0, 1, 0, 0, 0, 1], !!ei(t, ai, ri, oi, ui) && (fi.crossVectors(si, ci), t = [fi.x, fi.y, fi.z], ei(t, ai, ri, oi, ui)))
                }
                clampPoint(e, t) {
                    return void 0 === t && (console.warn("THREE.Box3: .clampPoint() target is now required"), t = new Qn),
                    t.copy(e).clamp(this.min, this.max)
                }
                distanceToPoint(e) {
                    return ni.copy(e).clamp(this.min, this.max).sub(e).length()
                }
                getBoundingSphere(e) {
                    return void 0 === e && console.error("THREE.Box3: .getBoundingSphere() target is now required"),
                    this.getCenter(e.center),
                    e.radius = .5 * this.getSize(ni).length(),
                    e
                }
                intersect(e) {
                    return this.min.max(e.min),
                    this.max.min(e.max),
                    this.isEmpty() && this.makeEmpty(),
                    this
                }
                union(e) {
                    return this.min.min(e.min),
                    this.max.max(e.max),
                    this
                }
                applyMatrix4(e) {
                    return this.isEmpty() || (ti[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), ti[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), ti[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), ti[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), ti[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), ti[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), ti[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), ti[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints(ti)),
                    this
                }
                translate(e) {
                    return this.min.add(e),
                    this.max.add(e),
                    this
                }
                equals(e) {
                    return e.min.equals(this.min) && e.max.equals(this.max)
                }
            }
            function ei(e, t, n, i, a) {
                for (let r = 0, o = e.length - 3; r <= o; r += 3) {
                    di.fromArray(e, r);
                    const o = a.x * Math.abs(di.x) + a.y * Math.abs(di.y) + a.z * Math.abs(di.z),
                    s = t.dot(di),
                    c = n.dot(di),
                    l = i.dot(di);
                    if (Math.max(-Math.max(s, c, l), Math.min(s, c, l)) > o)
                        return !1
                }
                return !0
            }
            const ti = [new Qn, new Qn, new Qn, new Qn, new Qn, new Qn, new Qn, new Qn],
            ni = new Qn,
            ii = new $n,
            ai = new Qn,
            ri = new Qn,
            oi = new Qn,
            si = new Qn,
            ci = new Qn,
            li = new Qn,
            hi = new Qn,
            ui = new Qn,
            fi = new Qn,
            di = new Qn,
            pi = new $n;
            class mi {
                constructor(e, t) {
                    this.center = void 0 !== e ? e : new Qn,
                    this.radius = void 0 !== t ? t : -1
                }
                set(e, t) {
                    return this.center.copy(e),
                    this.radius = t,
                    this
                }
                setFromPoints(e, t) {
                    const n = this.center;
                    void 0 !== t ? n.copy(t) : pi.setFromPoints(e).getCenter(n);
                    let i = 0;
                    for (let t = 0, a = e.length; t < a; t++)
                        i = Math.max(i, n.distanceToSquared(e[t]));
                    return this.radius = Math.sqrt(i),
                    this
                }
                clone() {
                    return (new this.constructor).copy(this)
                }
                copy(e) {
                    return this.center.copy(e.center),
                    this.radius = e.radius,
                    this
                }
                isEmpty() {
                    return this.radius < 0
                }
                makeEmpty() {
                    return this.center.set(0, 0, 0),
                    this.radius = -1,
                    this
                }
                containsPoint(e) {
                    return e.distanceToSquared(this.center) <= this.radius * this.radius
                }
                distanceToPoint(e) {
                    return e.distanceTo(this.center) - this.radius
                }
                intersectsSphere(e) {
                    const t = this.radius + e.radius;
                    return e.center.distanceToSquared(this.center) <= t * t
                }
                intersectsBox(e) {
                    return e.intersectsSphere(this)
                }
                intersectsPlane(e) {
                    return Math.abs(e.distanceToPoint(this.center)) <= this.radius
                }
                clampPoint(e, t) {
                    const n = this.center.distanceToSquared(e);
                    return void 0 === t && (console.warn("THREE.Sphere: .clampPoint() target is now required"), t = new Qn),
                    t.copy(e),
                    n > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)),
                    t
                }
                getBoundingBox(e) {
                    return void 0 === e && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"), e = new $n),
                    this.isEmpty() ? (e.makeEmpty(), e) : (e.set(this.center, this.center), e.expandByScalar(this.radius), e)
                }
                applyMatrix4(e) {
                    return this.center.applyMatrix4(e),
                    this.radius = this.radius * e.getMaxScaleOnAxis(),
                    this
                }
                translate(e) {
                    return this.center.add(e),
                    this
                }
                equals(e) {
                    return e.center.equals(this.center) && e.radius === this.radius
                }
            }
            const vi = new Qn,
            gi = new Qn,
            xi = new Qn,
            yi = new Qn,
            bi = new Qn,
            Mi = new Qn,
            zi = new Qn;
            class wi {
                constructor(e, t) {
                    this.origin = void 0 !== e ? e : new Qn,
                    this.direction = void 0 !== t ? t : new Qn(0, 0, -1)
                }
                set(e, t) {
                    return this.origin.copy(e),
                    this.direction.copy(t),
                    this
                }
                clone() {
                    return (new this.constructor).copy(this)
                }
                copy(e) {
                    return this.origin.copy(e.origin),
                    this.direction.copy(e.direction),
                    this
                }
                at(e, t) {
                    return void 0 === t && (console.warn("THREE.Ray: .at() target is now required"), t = new Qn),
                    t.copy(this.direction).multiplyScalar(e).add(this.origin)
                }
                lookAt(e) {
                    return this.direction.copy(e).sub(this.origin).normalize(),
                    this
                }
                recast(e) {
                    return this.origin.copy(this.at(e, vi)),
                    this
                }
                closestPointToPoint(e, t) {
                    void 0 === t && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"), t = new Qn),
                    t.subVectors(e, this.origin);
                    const n = t.dot(this.direction);
                    return n < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(n).add(this.origin)
                }
                distanceToPoint(e) {
                    return Math.sqrt(this.distanceSqToPoint(e))
                }
                distanceSqToPoint(e) {
                    const t = vi.subVectors(e, this.origin).dot(this.direction);
                    return t < 0 ? this.origin.distanceToSquared(e) : (vi.copy(this.direction).multiplyScalar(t).add(this.origin), vi.distanceToSquared(e))
                }
                distanceSqToSegment(e, t, n, i) {
                    gi.copy(e).add(t).multiplyScalar(.5),
                    xi.copy(t).sub(e).normalize(),
                    yi.copy(this.origin).sub(gi);
                    const a = .5 * e.distanceTo(t),
                    r = -this.direction.dot(xi),
                    o = yi.dot(this.direction),
                    s = -yi.dot(xi),
                    c = yi.lengthSq(),
                    l = Math.abs(1 - r * r);
                    let h,
                    u,
                    f,
                    d;
                    if (l > 0)
                        if (h = r * s - o, u = r * o - s, d = a * l, h >= 0)
                            if (u >= -d)
                                if (u <= d) {
                                    const e = 1 / l;
                                    h *= e,
                                    u *= e,
                                    f = h * (h + r * u + 2 * o) + u * (r * h + u + 2 * s) + c
                                } else
                                    u = a, h = Math.max(0,  - (r * u + o)), f = -h * h + u * (u + 2 * s) + c;
                            else
                                u = -a, h = Math.max(0,  - (r * u + o)), f = -h * h + u * (u + 2 * s) + c;
                        else
                            u <= -d ? (h = Math.max(0,  - (-r * a + o)), u = h > 0 ? -a : Math.min(Math.max(-a, -s), a), f = -h * h + u * (u + 2 * s) + c) : u <= d ? (h = 0, u = Math.min(Math.max(-a, -s), a), f = u * (u + 2 * s) + c) : (h = Math.max(0,  - (r * a + o)), u = h > 0 ? a : Math.min(Math.max(-a, -s), a), f = -h * h + u * (u + 2 * s) + c);
                    else
                        u = r > 0 ? -a : a, h = Math.max(0,  - (r * u + o)), f = -h * h + u * (u + 2 * s) + c;
                    return n && n.copy(this.direction).multiplyScalar(h).add(this.origin),
                    i && i.copy(xi).multiplyScalar(u).add(gi),
                    f
                }
                intersectSphere(e, t) {
                    vi.subVectors(e.center, this.origin);
                    const n = vi.dot(this.direction),
                    i = vi.dot(vi) - n * n,
                    a = e.radius * e.radius;
                    if (i > a)
                        return null;
                    const r = Math.sqrt(a - i),
                    o = n - r,
                    s = n + r;
                    return o < 0 && s < 0 ? null : o < 0 ? this.at(s, t) : this.at(o, t)
                }
                intersectsSphere(e) {
                    return this.distanceSqToPoint(e.center) <= e.radius * e.radius
                }
                distanceToPlane(e) {
                    const t = e.normal.dot(this.direction);
                    if (0 === t)
                        return 0 === e.distanceToPoint(this.origin) ? 0 : null;
                    const n =  - (this.origin.dot(e.normal) + e.constant) / t;
                    return n >= 0 ? n : null
                }
                intersectPlane(e, t) {
                    const n = this.distanceToPlane(e);
                    return null === n ? null : this.at(n, t)
                }
                intersectsPlane(e) {
                    const t = e.distanceToPoint(this.origin);
                    return 0 === t || e.normal.dot(this.direction) * t < 0
                }
                intersectBox(e, t) {
                    let n,
                    i,
                    a,
                    r,
                    o,
                    s;
                    const c = 1 / this.direction.x,
                    l = 1 / this.direction.y,
                    h = 1 / this.direction.z,
                    u = this.origin;
                    return c >= 0 ? (n = (e.min.x - u.x) * c, i = (e.max.x - u.x) * c) : (n = (e.max.x - u.x) * c, i = (e.min.x - u.x) * c),
                    l >= 0 ? (a = (e.min.y - u.y) * l, r = (e.max.y - u.y) * l) : (a = (e.max.y - u.y) * l, r = (e.min.y - u.y) * l),
                    n > r || a > i ? null : ((a > n || n != n) && (n = a), (r < i || i != i) && (i = r), h >= 0 ? (o = (e.min.z - u.z) * h, s = (e.max.z - u.z) * h) : (o = (e.max.z - u.z) * h, s = (e.min.z - u.z) * h), n > s || o > i ? null : ((o > n || n != n) && (n = o), (s < i || i != i) && (i = s), i < 0 ? null : this.at(n >= 0 ? n : i, t)))
                }
                intersectsBox(e) {
                    return null !== this.intersectBox(e, vi)
                }
                intersectTriangle(e, t, n, i, a) {
                    bi.subVectors(t, e),
                    Mi.subVectors(n, e),
                    zi.crossVectors(bi, Mi);
                    let r,
                    o = this.direction.dot(zi);
                    if (o > 0) {
                        if (i)
                            return null;
                        r = 1
                    } else {
                        if (!(o < 0))
                            return null;
                        r = -1,
                        o = -o
                    }
                    yi.subVectors(this.origin, e);
                    const s = r * this.direction.dot(Mi.crossVectors(yi, Mi));
                    if (s < 0)
                        return null;
                    const c = r * this.direction.dot(bi.cross(yi));
                    if (c < 0)
                        return null;
                    if (s + c > o)
                        return null;
                    const l = -r * yi.dot(zi);
                    return l < 0 ? null : this.at(l / o, a)
                }
                applyMatrix4(e) {
                    return this.origin.applyMatrix4(e),
                    this.direction.transformDirection(e),
                    this
                }
                equals(e) {
                    return e.origin.equals(this.origin) && e.direction.equals(this.direction)
                }
            }
            class _i {
                constructor() {
                    Object.defineProperty(this, "isMatrix4", {
                        value: !0
                    }),
                    this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
                    arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
                }
                set(e, t, n, i, a, r, o, s, c, l, h, u, f, d, p, m) {
                    const v = this.elements;
                    return v[0] = e,
                    v[4] = t,
                    v[8] = n,
                    v[12] = i,
                    v[1] = a,
                    v[5] = r,
                    v[9] = o,
                    v[13] = s,
                    v[2] = c,
                    v[6] = l,
                    v[10] = h,
                    v[14] = u,
                    v[3] = f,
                    v[7] = d,
                    v[11] = p,
                    v[15] = m,
                    this
                }
                identity() {
                    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                }
                clone() {
                    return (new _i).fromArray(this.elements)
                }
                copy(e) {
                    const t = this.elements,
                    n = e.elements;
                    return t[0] = n[0],
                    t[1] = n[1],
                    t[2] = n[2],
                    t[3] = n[3],
                    t[4] = n[4],
                    t[5] = n[5],
                    t[6] = n[6],
                    t[7] = n[7],
                    t[8] = n[8],
                    t[9] = n[9],
                    t[10] = n[10],
                    t[11] = n[11],
                    t[12] = n[12],
                    t[13] = n[13],
                    t[14] = n[14],
                    t[15] = n[15],
                    this
                }
                copyPosition(e) {
                    const t = this.elements,
                    n = e.elements;
                    return t[12] = n[12],
                    t[13] = n[13],
                    t[14] = n[14],
                    this
                }
                extractBasis(e, t, n) {
                    return e.setFromMatrixColumn(this, 0),
                    t.setFromMatrixColumn(this, 1),
                    n.setFromMatrixColumn(this, 2),
                    this
                }
                makeBasis(e, t, n) {
                    return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1),
                    this
                }
                extractRotation(e) {
                    const t = this.elements,
                    n = e.elements,
                    i = 1 / Si.setFromMatrixColumn(e, 0).length(),
                    a = 1 / Si.setFromMatrixColumn(e, 1).length(),
                    r = 1 / Si.setFromMatrixColumn(e, 2).length();
                    return t[0] = n[0] * i,
                    t[1] = n[1] * i,
                    t[2] = n[2] * i,
                    t[3] = 0,
                    t[4] = n[4] * a,
                    t[5] = n[5] * a,
                    t[6] = n[6] * a,
                    t[7] = 0,
                    t[8] = n[8] * r,
                    t[9] = n[9] * r,
                    t[10] = n[10] * r,
                    t[11] = 0,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 0,
                    t[15] = 1,
                    this
                }
                makeRotationFromEuler(e) {
                    e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
                    const t = this.elements,
                    n = e.x,
                    i = e.y,
                    a = e.z,
                    r = Math.cos(n),
                    o = Math.sin(n),
                    s = Math.cos(i),
                    c = Math.sin(i),
                    l = Math.cos(a),
                    h = Math.sin(a);
                    if ("XYZ" === e.order) {
                        const e = r * l,
                        n = r * h,
                        i = o * l,
                        a = o * h;
                        t[0] = s * l,
                        t[4] = -s * h,
                        t[8] = c,
                        t[1] = n + i * c,
                        t[5] = e - a * c,
                        t[9] = -o * s,
                        t[2] = a - e * c,
                        t[6] = i + n * c,
                        t[10] = r * s
                    } else if ("YXZ" === e.order) {
                        const e = s * l,
                        n = s * h,
                        i = c * l,
                        a = c * h;
                        t[0] = e + a * o,
                        t[4] = i * o - n,
                        t[8] = r * c,
                        t[1] = r * h,
                        t[5] = r * l,
                        t[9] = -o,
                        t[2] = n * o - i,
                        t[6] = a + e * o,
                        t[10] = r * s
                    } else if ("ZXY" === e.order) {
                        const e = s * l,
                        n = s * h,
                        i = c * l,
                        a = c * h;
                        t[0] = e - a * o,
                        t[4] = -r * h,
                        t[8] = i + n * o,
                        t[1] = n + i * o,
                        t[5] = r * l,
                        t[9] = a - e * o,
                        t[2] = -r * c,
                        t[6] = o,
                        t[10] = r * s
                    } else if ("ZYX" === e.order) {
                        const e = r * l,
                        n = r * h,
                        i = o * l,
                        a = o * h;
                        t[0] = s * l,
                        t[4] = i * c - n,
                        t[8] = e * c + a,
                        t[1] = s * h,
                        t[5] = a * c + e,
                        t[9] = n * c - i,
                        t[2] = -c,
                        t[6] = o * s,
                        t[10] = r * s
                    } else if ("YZX" === e.order) {
                        const e = r * s,
                        n = r * c,
                        i = o * s,
                        a = o * c;
                        t[0] = s * l,
                        t[4] = a - e * h,
                        t[8] = i * h + n,
                        t[1] = h,
                        t[5] = r * l,
                        t[9] = -o * l,
                        t[2] = -c * l,
                        t[6] = n * h + i,
                        t[10] = e - a * h
                    } else if ("XZY" === e.order) {
                        const e = r * s,
                        n = r * c,
                        i = o * s,
                        a = o * c;
                        t[0] = s * l,
                        t[4] = -h,
                        t[8] = c * l,
                        t[1] = e * h + a,
                        t[5] = r * l,
                        t[9] = n * h - i,
                        t[2] = i * h - n,
                        t[6] = o * l,
                        t[10] = a * h + e
                    }
                    return t[3] = 0,
                    t[7] = 0,
                    t[11] = 0,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 0,
                    t[15] = 1,
                    this
                }
                makeRotationFromQuaternion(e) {
                    return this.compose(Ai, e, Ti)
                }
                lookAt(e, t, n) {
                    const i = this.elements;
                    return Hi.subVectors(e, t),
                    0 === Hi.lengthSq() && (Hi.z = 1),
                    Hi.normalize(),
                    Ci.crossVectors(n, Hi),
                    0 === Ci.lengthSq() && (1 === Math.abs(n.z) ? Hi.x += 1e-4 : Hi.z += 1e-4, Hi.normalize(), Ci.crossVectors(n, Hi)),
                    Ci.normalize(),
                    Ei.crossVectors(Hi, Ci),
                    i[0] = Ci.x,
                    i[4] = Ei.x,
                    i[8] = Hi.x,
                    i[1] = Ci.y,
                    i[5] = Ei.y,
                    i[9] = Hi.y,
                    i[2] = Ci.z,
                    i[6] = Ei.z,
                    i[10] = Hi.z,
                    this
                }
                multiply(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e)
                }
                premultiply(e) {
                    return this.multiplyMatrices(e, this)
                }
                multiplyMatrices(e, t) {
                    const n = e.elements,
                    i = t.elements,
                    a = this.elements,
                    r = n[0],
                    o = n[4],
                    s = n[8],
                    c = n[12],
                    l = n[1],
                    h = n[5],
                    u = n[9],
                    f = n[13],
                    d = n[2],
                    p = n[6],
                    m = n[10],
                    v = n[14],
                    g = n[3],
                    x = n[7],
                    y = n[11],
                    b = n[15],
                    M = i[0],
                    z = i[4],
                    w = i[8],
                    _ = i[12],
                    S = i[1],
                    L = i[5],
                    A = i[9],
                    T = i[13],
                    C = i[2],
                    E = i[6],
                    H = i[10],
                    N = i[14],
                    P = i[3],
                    V = i[7],
                    R = i[11],
                    F = i[15];
                    return a[0] = r * M + o * S + s * C + c * P,
                    a[4] = r * z + o * L + s * E + c * V,
                    a[8] = r * w + o * A + s * H + c * R,
                    a[12] = r * _ + o * T + s * N + c * F,
                    a[1] = l * M + h * S + u * C + f * P,
                    a[5] = l * z + h * L + u * E + f * V,
                    a[9] = l * w + h * A + u * H + f * R,
                    a[13] = l * _ + h * T + u * N + f * F,
                    a[2] = d * M + p * S + m * C + v * P,
                    a[6] = d * z + p * L + m * E + v * V,
                    a[10] = d * w + p * A + m * H + v * R,
                    a[14] = d * _ + p * T + m * N + v * F,
                    a[3] = g * M + x * S + y * C + b * P,
                    a[7] = g * z + x * L + y * E + b * V,
                    a[11] = g * w + x * A + y * H + b * R,
                    a[15] = g * _ + x * T + y * N + b * F,
                    this
                }
                multiplyScalar(e) {
                    const t = this.elements;
                    return t[0] *= e,
                    t[4] *= e,
                    t[8] *= e,
                    t[12] *= e,
                    t[1] *= e,
                    t[5] *= e,
                    t[9] *= e,
                    t[13] *= e,
                    t[2] *= e,
                    t[6] *= e,
                    t[10] *= e,
                    t[14] *= e,
                    t[3] *= e,
                    t[7] *= e,
                    t[11] *= e,
                    t[15] *= e,
                    this
                }
                determinant() {
                    const e = this.elements,
                    t = e[0],
                    n = e[4],
                    i = e[8],
                    a = e[12],
                    r = e[1],
                    o = e[5],
                    s = e[9],
                    c = e[13],
                    l = e[2],
                    h = e[6],
                    u = e[10],
                    f = e[14];
                    return e[3] * (+a * s * h - i * c * h - a * o * u + n * c * u + i * o * f - n * s * f) + e[7] * (+t * s * f - t * c * u + a * r * u - i * r * f + i * c * l - a * s * l) + e[11] * (+t * c * h - t * o * f - a * r * h + n * r * f + a * o * l - n * c * l) + e[15] * (-i * o * l - t * s * h + t * o * u + i * r * h - n * r * u + n * s * l)
                }
                transpose() {
                    const e = this.elements;
                    let t;
                    return t = e[1],
                    e[1] = e[4],
                    e[4] = t,
                    t = e[2],
                    e[2] = e[8],
                    e[8] = t,
                    t = e[6],
                    e[6] = e[9],
                    e[9] = t,
                    t = e[3],
                    e[3] = e[12],
                    e[12] = t,
                    t = e[7],
                    e[7] = e[13],
                    e[13] = t,
                    t = e[11],
                    e[11] = e[14],
                    e[14] = t,
                    this
                }
                setPosition(e, t, n) {
                    const i = this.elements;
                    return e.isVector3 ? (i[12] = e.x, i[13] = e.y, i[14] = e.z) : (i[12] = e, i[13] = t, i[14] = n),
                    this
                }
                getInverse(e, t) {
                    void 0 !== t && console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");
                    const n = this.elements,
                    i = e.elements,
                    a = i[0],
                    r = i[1],
                    o = i[2],
                    s = i[3],
                    c = i[4],
                    l = i[5],
                    h = i[6],
                    u = i[7],
                    f = i[8],
                    d = i[9],
                    p = i[10],
                    m = i[11],
                    v = i[12],
                    g = i[13],
                    x = i[14],
                    y = i[15],
                    b = d * x * u - g * p * u + g * h * m - l * x * m - d * h * y + l * p * y,
                    M = v * p * u - f * x * u - v * h * m + c * x * m + f * h * y - c * p * y,
                    z = f * g * u - v * d * u + v * l * m - c * g * m - f * l * y + c * d * y,
                    w = v * d * h - f * g * h - v * l * p + c * g * p + f * l * x - c * d * x,
                    _ = a * b + r * M + o * z + s * w;
                    if (0 === _)
                        return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                    const S = 1 / _;
                    return n[0] = b * S,
                    n[1] = (g * p * s - d * x * s - g * o * m + r * x * m + d * o * y - r * p * y) * S,
                    n[2] = (l * x * s - g * h * s + g * o * u - r * x * u - l * o * y + r * h * y) * S,
                    n[3] = (d * h * s - l * p * s - d * o * u + r * p * u + l * o * m - r * h * m) * S,
                    n[4] = M * S,
                    n[5] = (f * x * s - v * p * s + v * o * m - a * x * m - f * o * y + a * p * y) * S,
                    n[6] = (v * h * s - c * x * s - v * o * u + a * x * u + c * o * y - a * h * y) * S,
                    n[7] = (c * p * s - f * h * s + f * o * u - a * p * u - c * o * m + a * h * m) * S,
                    n[8] = z * S,
                    n[9] = (v * d * s - f * g * s - v * r * m + a * g * m + f * r * y - a * d * y) * S,
                    n[10] = (c * g * s - v * l * s + v * r * u - a * g * u - c * r * y + a * l * y) * S,
                    n[11] = (f * l * s - c * d * s - f * r * u + a * d * u + c * r * m - a * l * m) * S,
                    n[12] = w * S,
                    n[13] = (f * g * o - v * d * o + v * r * p - a * g * p - f * r * x + a * d * x) * S,
                    n[14] = (v * l * o - c * g * o - v * r * h + a * g * h + c * r * x - a * l * x) * S,
                    n[15] = (c * d * o - f * l * o + f * r * h - a * d * h - c * r * p + a * l * p) * S,
                    this
                }
                scale(e) {
                    const t = this.elements,
                    n = e.x,
                    i = e.y,
                    a = e.z;
                    return t[0] *= n,
                    t[4] *= i,
                    t[8] *= a,
                    t[1] *= n,
                    t[5] *= i,
                    t[9] *= a,
                    t[2] *= n,
                    t[6] *= i,
                    t[10] *= a,
                    t[3] *= n,
                    t[7] *= i,
                    t[11] *= a,
                    this
                }
                getMaxScaleOnAxis() {
                    const e = this.elements,
                    t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
                    n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
                    i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
                    return Math.sqrt(Math.max(t, n, i))
                }
                makeTranslation(e, t, n) {
                    return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1),
                    this
                }
                makeRotationX(e) {
                    const t = Math.cos(e),
                    n = Math.sin(e);
                    return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1),
                    this
                }
                makeRotationY(e) {
                    const t = Math.cos(e),
                    n = Math.sin(e);
                    return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1),
                    this
                }
                makeRotationZ(e) {
                    const t = Math.cos(e),
                    n = Math.sin(e);
                    return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                }
                makeRotationAxis(e, t) {
                    const n = Math.cos(t),
                    i = Math.sin(t),
                    a = 1 - n,
                    r = e.x,
                    o = e.y,
                    s = e.z,
                    c = a * r,
                    l = a * o;
                    return this.set(c * r + n, c * o - i * s, c * s + i * o, 0, c * o + i * s, l * o + n, l * s - i * r, 0, c * s - i * o, l * s + i * r, a * s * s + n, 0, 0, 0, 0, 1),
                    this
                }
                makeScale(e, t, n) {
                    return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
                    this
                }
                makeShear(e, t, n) {
                    return this.set(1, t, n, 0, e, 1, n, 0, e, t, 1, 0, 0, 0, 0, 1),
                    this
                }
                compose(e, t, n) {
                    const i = this.elements,
                    a = t._x,
                    r = t._y,
                    o = t._z,
                    s = t._w,
                    c = a + a,
                    l = r + r,
                    h = o + o,
                    u = a * c,
                    f = a * l,
                    d = a * h,
                    p = r * l,
                    m = r * h,
                    v = o * h,
                    g = s * c,
                    x = s * l,
                    y = s * h,
                    b = n.x,
                    M = n.y,
                    z = n.z;
                    return i[0] = (1 - (p + v)) * b,
                    i[1] = (f + y) * b,
                    i[2] = (d - x) * b,
                    i[3] = 0,
                    i[4] = (f - y) * M,
                    i[5] = (1 - (u + v)) * M,
                    i[6] = (m + g) * M,
                    i[7] = 0,
                    i[8] = (d + x) * z,
                    i[9] = (m - g) * z,
                    i[10] = (1 - (u + p)) * z,
                    i[11] = 0,
                    i[12] = e.x,
                    i[13] = e.y,
                    i[14] = e.z,
                    i[15] = 1,
                    this
                }
                decompose(e, t, n) {
                    const i = this.elements;
                    let a = Si.set(i[0], i[1], i[2]).length();
                    const r = Si.set(i[4], i[5], i[6]).length(),
                    o = Si.set(i[8], i[9], i[10]).length();
                    this.determinant() < 0 && (a = -a),
                    e.x = i[12],
                    e.y = i[13],
                    e.z = i[14],
                    Li.copy(this);
                    const s = 1 / a,
                    c = 1 / r,
                    l = 1 / o;
                    return Li.elements[0] *= s,
                    Li.elements[1] *= s,
                    Li.elements[2] *= s,
                    Li.elements[4] *= c,
                    Li.elements[5] *= c,
                    Li.elements[6] *= c,
                    Li.elements[8] *= l,
                    Li.elements[9] *= l,
                    Li.elements[10] *= l,
                    t.setFromRotationMatrix(Li),
                    n.x = a,
                    n.y = r,
                    n.z = o,
                    this
                }
                makePerspective(e, t, n, i, a, r) {
                    void 0 === r && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
                    const o = this.elements,
                    s = 2 * a / (t - e),
                    c = 2 * a / (n - i),
                    l = (t + e) / (t - e),
                    h = (n + i) / (n - i),
                    u =  - (r + a) / (r - a),
                    f = -2 * r * a / (r - a);
                    return o[0] = s,
                    o[4] = 0,
                    o[8] = l,
                    o[12] = 0,
                    o[1] = 0,
                    o[5] = c,
                    o[9] = h,
                    o[13] = 0,
                    o[2] = 0,
                    o[6] = 0,
                    o[10] = u,
                    o[14] = f,
                    o[3] = 0,
                    o[7] = 0,
                    o[11] = -1,
                    o[15] = 0,
                    this
                }
                makeOrthographic(e, t, n, i, a, r) {
                    const o = this.elements,
                    s = 1 / (t - e),
                    c = 1 / (n - i),
                    l = 1 / (r - a),
                    h = (t + e) * s,
                    u = (n + i) * c,
                    f = (r + a) * l;
                    return o[0] = 2 * s,
                    o[4] = 0,
                    o[8] = 0,
                    o[12] = -h,
                    o[1] = 0,
                    o[5] = 2 * c,
                    o[9] = 0,
                    o[13] = -u,
                    o[2] = 0,
                    o[6] = 0,
                    o[10] = -2 * l,
                    o[14] = -f,
                    o[3] = 0,
                    o[7] = 0,
                    o[11] = 0,
                    o[15] = 1,
                    this
                }
                equals(e) {
                    const t = this.elements,
                    n = e.elements;
                    for (let e = 0; e < 16; e++)
                        if (t[e] !== n[e])
                            return !1;
                    return !0
                }
                fromArray(e, t) {
                    void 0 === t && (t = 0);
                    for (let n = 0; n < 16; n++)
                        this.elements[n] = e[n + t];
                    return this
                }
                toArray(e, t) {
                    void 0 === e && (e = []),
                    void 0 === t && (t = 0);
                    const n = this.elements;
                    return e[t] = n[0],
                    e[t + 1] = n[1],
                    e[t + 2] = n[2],
                    e[t + 3] = n[3],
                    e[t + 4] = n[4],
                    e[t + 5] = n[5],
                    e[t + 6] = n[6],
                    e[t + 7] = n[7],
                    e[t + 8] = n[8],
                    e[t + 9] = n[9],
                    e[t + 10] = n[10],
                    e[t + 11] = n[11],
                    e[t + 12] = n[12],
                    e[t + 13] = n[13],
                    e[t + 14] = n[14],
                    e[t + 15] = n[15],
                    e
                }
            }
            const Si = new Qn,
            Li = new _i,
            Ai = new Qn(0, 0, 0),
            Ti = new Qn(1, 1, 1),
            Ci = new Qn,
            Ei = new Qn,
            Hi = new Qn;
            class Ni {
                constructor(e = 0, t = 0, n = 0, i = Ni.DefaultOrder) {
                    Object.defineProperty(this, "isEuler", {
                        value: !0
                    }),
                    this._x = e,
                    this._y = t,
                    this._z = n,
                    this._order = i
                }
                get x() {
                    return this._x
                }
                set x(e) {
                    this._x = e,
                    this._onChangeCallback()
                }
                get y() {
                    return this._y
                }
                set y(e) {
                    this._y = e,
                    this._onChangeCallback()
                }
                get z() {
                    return this._z
                }
                set z(e) {
                    this._z = e,
                    this._onChangeCallback()
                }
                get order() {
                    return this._order
                }
                set order(e) {
                    this._order = e,
                    this._onChangeCallback()
                }
                set(e, t, n, i) {
                    return this._x = e,
                    this._y = t,
                    this._z = n,
                    this._order = i || this._order,
                    this._onChangeCallback(),
                    this
                }
                clone() {
                    return new this.constructor(this._x, this._y, this._z, this._order)
                }
                copy(e) {
                    return this._x = e._x,
                    this._y = e._y,
                    this._z = e._z,
                    this._order = e._order,
                    this._onChangeCallback(),
                    this
                }
                setFromRotationMatrix(e, t, n) {
                    const i = Dn.clamp,
                    a = e.elements,
                    r = a[0],
                    o = a[4],
                    s = a[8],
                    c = a[1],
                    l = a[5],
                    h = a[9],
                    u = a[2],
                    f = a[6],
                    d = a[10];
                    switch (t = t || this._order) {
                    case "XYZ":
                        this._y = Math.asin(i(s, -1, 1)),
                        Math.abs(s) < .9999999 ? (this._x = Math.atan2(-h, d), this._z = Math.atan2(-o, r)) : (this._x = Math.atan2(f, l), this._z = 0);
                        break;
                    case "YXZ":
                        this._x = Math.asin(-i(h, -1, 1)),
                        Math.abs(h) < .9999999 ? (this._y = Math.atan2(s, d), this._z = Math.atan2(c, l)) : (this._y = Math.atan2(-u, r), this._z = 0);
                        break;
                    case "ZXY":
                        this._x = Math.asin(i(f, -1, 1)),
                        Math.abs(f) < .9999999 ? (this._y = Math.atan2(-u, d), this._z = Math.atan2(-o, l)) : (this._y = 0, this._z = Math.atan2(c, r));
                        break;
                    case "ZYX":
                        this._y = Math.asin(-i(u, -1, 1)),
                        Math.abs(u) < .9999999 ? (this._x = Math.atan2(f, d), this._z = Math.atan2(c, r)) : (this._x = 0, this._z = Math.atan2(-o, l));
                        break;
                    case "YZX":
                        this._z = Math.asin(i(c, -1, 1)),
                        Math.abs(c) < .9999999 ? (this._x = Math.atan2(-h, l), this._y = Math.atan2(-u, r)) : (this._x = 0, this._y = Math.atan2(s, d));
                        break;
                    case "XZY":
                        this._z = Math.asin(-i(o, -1, 1)),
                        Math.abs(o) < .9999999 ? (this._x = Math.atan2(f, l), this._y = Math.atan2(s, r)) : (this._x = Math.atan2(-h, d), this._y = 0);
                        break;
                    default:
                        console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + t)
                    }
                    return this._order = t,
                    !1 !== n && this._onChangeCallback(),
                    this
                }
                setFromQuaternion(e, t, n) {
                    return Pi.makeRotationFromQuaternion(e),
                    this.setFromRotationMatrix(Pi, t, n)
                }
                setFromVector3(e, t) {
                    return this.set(e.x, e.y, e.z, t || this._order)
                }
                reorder(e) {
                    return Vi.setFromEuler(this),
                    this.setFromQuaternion(Vi, e)
                }
                equals(e) {
                    return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order
                }
                fromArray(e) {
                    return this._x = e[0],
                    this._y = e[1],
                    this._z = e[2],
                    void 0 !== e[3] && (this._order = e[3]),
                    this._onChangeCallback(),
                    this
                }
                toArray(e, t) {
                    return void 0 === e && (e = []),
                    void 0 === t && (t = 0),
                    e[t] = this._x,
                    e[t + 1] = this._y,
                    e[t + 2] = this._z,
                    e[t + 3] = this._order,
                    e
                }
                toVector3(e) {
                    return e ? e.set(this._x, this._y, this._z) : new Qn(this._x, this._y, this._z)
                }
                _onChange(e) {
                    return this._onChangeCallback = e,
                    this
                }
                _onChangeCallback() {}
            }
            Ni.DefaultOrder = "XYZ",
            Ni.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"];
            const Pi = new _i,
            Vi = new Zn;
            class Ri {
                constructor() {
                    this.mask = 1
                }
                set(e) {
                    this.mask = 1 << e | 0
                }
                enable(e) {
                    this.mask |= 1 << e | 0
                }
                enableAll() {
                    this.mask = -1
                }
                toggle(e) {
                    this.mask ^= 1 << e | 0
                }
                disable(e) {
                    this.mask &= ~(1 << e | 0)
                }
                disableAll() {
                    this.mask = 0
                }
                test(e) {
                    return 0 != (this.mask & e.mask)
                }
            }
            let Fi = 0;
            const Ii = new Qn,
            Oi = new Zn,
            Di = new _i,
            Ui = new Qn,
            Bi = new Qn,
            ki = new Qn,
            Gi = new Zn,
            ji = new Qn(1, 0, 0),
            Wi = new Qn(0, 1, 0),
            Xi = new Qn(0, 0, 1),
            qi = {
                type: "added"
            },
            Yi = {
                type: "removed"
            };
            function Zi() {
                Object.defineProperty(this, "id", {
                    value: Fi++
                }),
                this.uuid = Dn.generateUUID(),
                this.name = "",
                this.type = "Object3D",
                this.parent = null,
                this.children = [],
                this.up = Zi.DefaultUp.clone();
                const e = new Qn,
                t = new Ni,
                n = new Zn,
                i = new Qn(1, 1, 1);
                t._onChange((function () {
                        n.setFromEuler(t, !1)
                    })),
                n._onChange((function () {
                        t.setFromQuaternion(n, void 0, !1)
                    })),
                Object.defineProperties(this, {
                    position: {
                        configurable: !0,
                        enumerable: !0,
                        value: e
                    },
                    rotation: {
                        configurable: !0,
                        enumerable: !0,
                        value: t
                    },
                    quaternion: {
                        configurable: !0,
                        enumerable: !0,
                        value: n
                    },
                    scale: {
                        configurable: !0,
                        enumerable: !0,
                        value: i
                    },
                    modelViewMatrix: {
                        value: new _i
                    },
                    normalMatrix: {
                        value: new Bn
                    }
                }),
                this.matrix = new _i,
                this.matrixWorld = new _i,
                this.matrixAutoUpdate = Zi.DefaultMatrixAutoUpdate,
                this.matrixWorldNeedsUpdate = !1,
                this.layers = new Ri,
                this.visible = !0,
                this.castShadow = !1,
                this.receiveShadow = !1,
                this.frustumCulled = !0,
                this.renderOrder = 0,
                this.userData = {}
            }
            Zi.DefaultUp = new Qn(0, 1, 0),
            Zi.DefaultMatrixAutoUpdate = !0,
            Zi.prototype = Object.assign(Object.create(Fn.prototype), {
                constructor: Zi,
                isObject3D: !0,
                onBeforeRender: function () {},
                onAfterRender: function () {},
                applyMatrix4: function (e) {
                    this.matrixAutoUpdate && this.updateMatrix(),
                    this.matrix.premultiply(e),
                    this.matrix.decompose(this.position, this.quaternion, this.scale)
                },
                applyQuaternion: function (e) {
                    return this.quaternion.premultiply(e),
                    this
                },
                setRotationFromAxisAngle: function (e, t) {
                    this.quaternion.setFromAxisAngle(e, t)
                },
                setRotationFromEuler: function (e) {
                    this.quaternion.setFromEuler(e, !0)
                },
                setRotationFromMatrix: function (e) {
                    this.quaternion.setFromRotationMatrix(e)
                },
                setRotationFromQuaternion: function (e) {
                    this.quaternion.copy(e)
                },
                rotateOnAxis: function (e, t) {
                    return Oi.setFromAxisAngle(e, t),
                    this.quaternion.multiply(Oi),
                    this
                },
                rotateOnWorldAxis: function (e, t) {
                    return Oi.setFromAxisAngle(e, t),
                    this.quaternion.premultiply(Oi),
                    this
                },
                rotateX: function (e) {
                    return this.rotateOnAxis(ji, e)
                },
                rotateY: function (e) {
                    return this.rotateOnAxis(Wi, e)
                },
                rotateZ: function (e) {
                    return this.rotateOnAxis(Xi, e)
                },
                translateOnAxis: function (e, t) {
                    return Ii.copy(e).applyQuaternion(this.quaternion),
                    this.position.add(Ii.multiplyScalar(t)),
                    this
                },
                translateX: function (e) {
                    return this.translateOnAxis(ji, e)
                },
                translateY: function (e) {
                    return this.translateOnAxis(Wi, e)
                },
                translateZ: function (e) {
                    return this.translateOnAxis(Xi, e)
                },
                localToWorld: function (e) {
                    return e.applyMatrix4(this.matrixWorld)
                },
                worldToLocal: function (e) {
                    return e.applyMatrix4(Di.getInverse(this.matrixWorld))
                },
                lookAt: function (e, t, n) {
                    e.isVector3 ? Ui.copy(e) : Ui.set(e, t, n);
                    const i = this.parent;
                    this.updateWorldMatrix(!0, !1),
                    Bi.setFromMatrixPosition(this.matrixWorld),
                    this.isCamera || this.isLight ? Di.lookAt(Bi, Ui, this.up) : Di.lookAt(Ui, Bi, this.up),
                    this.quaternion.setFromRotationMatrix(Di),
                    i && (Di.extractRotation(i.matrixWorld), Oi.setFromRotationMatrix(Di), this.quaternion.premultiply(Oi.inverse()))
                },
                add: function (e) {
                    if (arguments.length > 1) {
                        for (let e = 0; e < arguments.length; e++)
                            this.add(arguments[e]);
                        return this
                    }
                    return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (null !== e.parent && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(qi)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this)
                },
                remove: function (e) {
                    if (arguments.length > 1) {
                        for (let e = 0; e < arguments.length; e++)
                            this.remove(arguments[e]);
                        return this
                    }
                    const t = this.children.indexOf(e);
                    return -1 !== t && (e.parent = null, this.children.splice(t, 1), e.dispatchEvent(Yi)),
                    this
                },
                attach: function (e) {
                    return this.updateWorldMatrix(!0, !1),
                    Di.getInverse(this.matrixWorld),
                    null !== e.parent && (e.parent.updateWorldMatrix(!0, !1), Di.multiply(e.parent.matrixWorld)),
                    e.applyMatrix4(Di),
                    e.updateWorldMatrix(!1, !1),
                    this.add(e),
                    this
                },
                getObjectById: function (e) {
                    return this.getObjectByProperty("id", e)
                },
                getObjectByName: function (e) {
                    return this.getObjectByProperty("name", e)
                },
                getObjectByProperty: function (e, t) {
                    if (this[e] === t)
                        return this;
                    for (let n = 0, i = this.children.length; n < i; n++) {
                        const i = this.children[n].getObjectByProperty(e, t);
                        if (void 0 !== i)
                            return i
                    }
                },
                getWorldPosition: function (e) {
                    return void 0 === e && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"), e = new Qn),
                    this.updateWorldMatrix(!0, !1),
                    e.setFromMatrixPosition(this.matrixWorld)
                },
                getWorldQuaternion: function (e) {
                    return void 0 === e && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"), e = new Zn),
                    this.updateWorldMatrix(!0, !1),
                    this.matrixWorld.decompose(Bi, e, ki),
                    e
                },
                getWorldScale: function (e) {
                    return void 0 === e && (console.warn("THREE.Object3D: .getWorldScale() target is now required"), e = new Qn),
                    this.updateWorldMatrix(!0, !1),
                    this.matrixWorld.decompose(Bi, Gi, e),
                    e
                },
                getWorldDirection: function (e) {
                    void 0 === e && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"), e = new Qn),
                    this.updateWorldMatrix(!0, !1);
                    const t = this.matrixWorld.elements;
                    return e.set(t[8], t[9], t[10]).normalize()
                },
                raycast: function () {},
                traverse: function (e) {
                    e(this);
                    const t = this.children;
                    for (let n = 0, i = t.length; n < i; n++)
                        t[n].traverse(e)
                },
                traverseVisible: function (e) {
                    if (!1 === this.visible)
                        return;
                    e(this);
                    const t = this.children;
                    for (let n = 0, i = t.length; n < i; n++)
                        t[n].traverseVisible(e)
                },
                traverseAncestors: function (e) {
                    const t = this.parent;
                    null !== t && (e(t), t.traverseAncestors(e))
                },
                updateMatrix: function () {
                    this.matrix.compose(this.position, this.quaternion, this.scale),
                    this.matrixWorldNeedsUpdate = !0
                },
                updateMatrixWorld: function (e) {
                    this.matrixAutoUpdate && this.updateMatrix(),
                    (this.matrixWorldNeedsUpdate || e) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
                    const t = this.children;
                    for (let n = 0, i = t.length; n < i; n++)
                        t[n].updateMatrixWorld(e)
                },
                updateWorldMatrix: function (e, t) {
                    const n = this.parent;
                    if (!0 === e && null !== n && n.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), !0 === t) {
                        const e = this.children;
                        for (let t = 0, n = e.length; t < n; t++)
                            e[t].updateWorldMatrix(!1, !0)
                    }
                },
                toJSON: function (e) {
                    const t = void 0 === e || "string" == typeof e,
                    n = {};
                    t && (e = {
                            geometries: {},
                            materials: {},
                            textures: {},
                            images: {},
                            shapes: {}
                        }, n.metadata = {
                            version: 4.5,
                            type: "Object",
                            generator: "Object3D.toJSON"
                        });
                    const i = {};
                    function a(t, n) {
                        return void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)),
                        n.uuid
                    }
                    if (i.uuid = this.uuid, i.type = this.type, "" !== this.name && (i.name = this.name), !0 === this.castShadow && (i.castShadow = !0), !0 === this.receiveShadow && (i.receiveShadow = !0), !1 === this.visible && (i.visible = !1), !1 === this.frustumCulled && (i.frustumCulled = !1), 0 !== this.renderOrder && (i.renderOrder = this.renderOrder), "{}" !== JSON.stringify(this.userData) && (i.userData = this.userData), i.layers = this.layers.mask, i.matrix = this.matrix.toArray(), !1 === this.matrixAutoUpdate && (i.matrixAutoUpdate = !1), this.isInstancedMesh && (i.type = "InstancedMesh", i.count = this.count, i.instanceMatrix = this.instanceMatrix.toJSON()), this.isMesh || this.isLine || this.isPoints) {
                        i.geometry = a(e.geometries, this.geometry);
                        const t = this.geometry.parameters;
                        if (void 0 !== t && void 0 !== t.shapes) {
                            const n = t.shapes;
                            if (Array.isArray(n))
                                for (let t = 0, i = n.length; t < i; t++) {
                                    const i = n[t];
                                    a(e.shapes, i)
                                }
                            else
                                a(e.shapes, n)
                        }
                    }
                    if (void 0 !== this.material)
                        if (Array.isArray(this.material)) {
                            const t = [];
                            for (let n = 0, i = this.material.length; n < i; n++)
                                t.push(a(e.materials, this.material[n]));
                            i.material = t
                        } else
                            i.material = a(e.materials, this.material);
                    if (this.children.length > 0) {
                        i.children = [];
                        for (let t = 0; t < this.children.length; t++)
                            i.children.push(this.children[t].toJSON(e).object)
                    }
                    if (t) {
                        const t = r(e.geometries),
                        i = r(e.materials),
                        a = r(e.textures),
                        o = r(e.images),
                        s = r(e.shapes);
                        t.length > 0 && (n.geometries = t),
                        i.length > 0 && (n.materials = i),
                        a.length > 0 && (n.textures = a),
                        o.length > 0 && (n.images = o),
                        s.length > 0 && (n.shapes = s)
                    }
                    return n.object = i,
                    n;
                    function r(e) {
                        const t = [];
                        for (const n in e) {
                            const i = e[n];
                            delete i.metadata,
                            t.push(i)
                        }
                        return t
                    }
                },
                clone: function (e) {
                    return (new this.constructor).copy(this, e)
                },
                copy: function (e, t) {
                    if (void 0 === t && (t = !0), this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.rotation.order = e.rotation.order, this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), !0 === t)
                        for (let t = 0; t < e.children.length; t++) {
                            const n = e.children[t];
                            this.add(n.clone())
                        }
                    return this
                }
            });
            const Qi = new Qn,
            Ji = new Qn,
            Ki = new Bn;
            class $i {
                constructor(e, t) {
                    Object.defineProperty(this, "isPlane", {
                        value: !0
                    }),
                    this.normal = void 0 !== e ? e : new Qn(1, 0, 0),
                    this.constant = void 0 !== t ? t : 0
                }
                set(e, t) {
                    return this.normal.copy(e),
                    this.constant = t,
                    this
                }
                setComponents(e, t, n, i) {
                    return this.normal.set(e, t, n),
                    this.constant = i,
                    this
                }
                setFromNormalAndCoplanarPoint(e, t) {
                    return this.normal.copy(e),
                    this.constant = -t.dot(this.normal),
                    this
                }
                setFromCoplanarPoints(e, t, n) {
                    const i = Qi.subVectors(n, t).cross(Ji.subVectors(e, t)).normalize();
                    return this.setFromNormalAndCoplanarPoint(i, e),
                    this
                }
                clone() {
                    return (new this.constructor).copy(this)
                }
                copy(e) {
                    return this.normal.copy(e.normal),
                    this.constant = e.constant,
                    this
                }
                normalize() {
                    const e = 1 / this.normal.length();
                    return this.normal.multiplyScalar(e),
                    this.constant *= e,
                    this
                }
                negate() {
                    return this.constant *= -1,
                    this.normal.negate(),
                    this
                }
                distanceToPoint(e) {
                    return this.normal.dot(e) + this.constant
                }
                distanceToSphere(e) {
                    return this.distanceToPoint(e.center) - e.radius
                }
                projectPoint(e, t) {
                    return void 0 === t && (console.warn("THREE.Plane: .projectPoint() target is now required"), t = new Qn),
                    t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)
                }
                intersectLine(e, t) {
                    void 0 === t && (console.warn("THREE.Plane: .intersectLine() target is now required"), t = new Qn);
                    const n = e.delta(Qi),
                    i = this.normal.dot(n);
                    if (0 === i)
                        return 0 === this.distanceToPoint(e.start) ? t.copy(e.start) : void 0;
                    const a =  - (e.start.dot(this.normal) + this.constant) / i;
                    return a < 0 || a > 1 ? void 0 : t.copy(n).multiplyScalar(a).add(e.start)
                }
                intersectsLine(e) {
                    const t = this.distanceToPoint(e.start),
                    n = this.distanceToPoint(e.end);
                    return t < 0 && n > 0 || n < 0 && t > 0
                }
                intersectsBox(e) {
                    return e.intersectsPlane(this)
                }
                intersectsSphere(e) {
                    return e.intersectsPlane(this)
                }
                coplanarPoint(e) {
                    return void 0 === e && (console.warn("THREE.Plane: .coplanarPoint() target is now required"), e = new Qn),
                    e.copy(this.normal).multiplyScalar(-this.constant)
                }
                applyMatrix4(e, t) {
                    const n = t || Ki.getNormalMatrix(e),
                    i = this.coplanarPoint(Qi).applyMatrix4(e),
                    a = this.normal.applyMatrix3(n).normalize();
                    return this.constant = -i.dot(a),
                    this
                }
                translate(e) {
                    return this.constant -= e.dot(this.normal),
                    this
                }
                equals(e) {
                    return e.normal.equals(this.normal) && e.constant === this.constant
                }
            }
            const ea = new Qn,
            ta = new Qn,
            na = new Qn,
            ia = new Qn,
            aa = new Qn,
            ra = new Qn,
            oa = new Qn,
            sa = new Qn,
            ca = new Qn,
            la = new Qn;
            class ha {
                constructor(e, t, n) {
                    this.a = void 0 !== e ? e : new Qn,
                    this.b = void 0 !== t ? t : new Qn,
                    this.c = void 0 !== n ? n : new Qn
                }
                static getNormal(e, t, n, i) {
                    void 0 === i && (console.warn("THREE.Triangle: .getNormal() target is now required"), i = new Qn),
                    i.subVectors(n, t),
                    ea.subVectors(e, t),
                    i.cross(ea);
                    const a = i.lengthSq();
                    return a > 0 ? i.multiplyScalar(1 / Math.sqrt(a)) : i.set(0, 0, 0)
                }
                static getBarycoord(e, t, n, i, a) {
                    ea.subVectors(i, t),
                    ta.subVectors(n, t),
                    na.subVectors(e, t);
                    const r = ea.dot(ea),
                    o = ea.dot(ta),
                    s = ea.dot(na),
                    c = ta.dot(ta),
                    l = ta.dot(na),
                    h = r * c - o * o;
                    if (void 0 === a && (console.warn("THREE.Triangle: .getBarycoord() target is now required"), a = new Qn), 0 === h)
                        return a.set(-2, -1, -1);
                    const u = 1 / h,
                    f = (c * s - o * l) * u,
                    d = (r * l - o * s) * u;
                    return a.set(1 - f - d, d, f)
                }
                static containsPoint(e, t, n, i) {
                    return this.getBarycoord(e, t, n, i, ia),
                    ia.x >= 0 && ia.y >= 0 && ia.x + ia.y <= 1
                }
                static getUV(e, t, n, i, a, r, o, s) {
                    return this.getBarycoord(e, t, n, i, ia),
                    s.set(0, 0),
                    s.addScaledVector(a, ia.x),
                    s.addScaledVector(r, ia.y),
                    s.addScaledVector(o, ia.z),
                    s
                }
                static isFrontFacing(e, t, n, i) {
                    return ea.subVectors(n, t),
                    ta.subVectors(e, t),
                    ea.cross(ta).dot(i) < 0
                }
                set(e, t, n) {
                    return this.a.copy(e),
                    this.b.copy(t),
                    this.c.copy(n),
                    this
                }
                setFromPointsAndIndices(e, t, n, i) {
                    return this.a.copy(e[t]),
                    this.b.copy(e[n]),
                    this.c.copy(e[i]),
                    this
                }
                clone() {
                    return (new this.constructor).copy(this)
                }
                copy(e) {
                    return this.a.copy(e.a),
                    this.b.copy(e.b),
                    this.c.copy(e.c),
                    this
                }
                getArea() {
                    return ea.subVectors(this.c, this.b),
                    ta.subVectors(this.a, this.b),
                    .5 * ea.cross(ta).length()
                }
                getMidpoint(e) {
                    return void 0 === e && (console.warn("THREE.Triangle: .getMidpoint() target is now required"), e = new Qn),
                    e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
                }
                getNormal(e) {
                    return ha.getNormal(this.a, this.b, this.c, e)
                }
                getPlane(e) {
                    return void 0 === e && (console.warn("THREE.Triangle: .getPlane() target is now required"), e = new $i),
                    e.setFromCoplanarPoints(this.a, this.b, this.c)
                }
                getBarycoord(e, t) {
                    return ha.getBarycoord(e, this.a, this.b, this.c, t)
                }
                getUV(e, t, n, i, a) {
                    return ha.getUV(e, this.a, this.b, this.c, t, n, i, a)
                }
                containsPoint(e) {
                    return ha.containsPoint(e, this.a, this.b, this.c)
                }
                isFrontFacing(e) {
                    return ha.isFrontFacing(this.a, this.b, this.c, e)
                }
                intersectsBox(e) {
                    return e.intersectsTriangle(this)
                }
                closestPointToPoint(e, t) {
                    void 0 === t && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"), t = new Qn);
                    const n = this.a,
                    i = this.b,
                    a = this.c;
                    let r,
                    o;
                    aa.subVectors(i, n),
                    ra.subVectors(a, n),
                    sa.subVectors(e, n);
                    const s = aa.dot(sa),
                    c = ra.dot(sa);
                    if (s <= 0 && c <= 0)
                        return t.copy(n);
                    ca.subVectors(e, i);
                    const l = aa.dot(ca),
                    h = ra.dot(ca);
                    if (l >= 0 && h <= l)
                        return t.copy(i);
                    const u = s * h - l * c;
                    if (u <= 0 && s >= 0 && l <= 0)
                        return r = s / (s - l), t.copy(n).addScaledVector(aa, r);
                    la.subVectors(e, a);
                    const f = aa.dot(la),
                    d = ra.dot(la);
                    if (d >= 0 && f <= d)
                        return t.copy(a);
                    const p = f * c - s * d;
                    if (p <= 0 && c >= 0 && d <= 0)
                        return o = c / (c - d), t.copy(n).addScaledVector(ra, o);
                    const m = l * d - f * h;
                    if (m <= 0 && h - l >= 0 && f - d >= 0)
                        return oa.subVectors(a, i), o = (h - l) / (h - l + (f - d)), t.copy(i).addScaledVector(oa, o);
                    const v = 1 / (m + p + u);
                    return r = p * v,
                    o = u * v,
                    t.copy(n).addScaledVector(aa, r).addScaledVector(ra, o)
                }
                equals(e) {
                    return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
                }
            }
            const ua = {
                aliceblue: 15792383,
                antiquewhite: 16444375,
                aqua: 65535,
                aquamarine: 8388564,
                azure: 15794175,
                beige: 16119260,
                bisque: 16770244,
                black: 0,
                blanchedalmond: 16772045,
                blue: 255,
                blueviolet: 9055202,
                brown: 10824234,
                burlywood: 14596231,
                cadetblue: 6266528,
                chartreuse: 8388352,
                chocolate: 13789470,
                coral: 16744272,
                cornflowerblue: 6591981,
                cornsilk: 16775388,
                crimson: 14423100,
                cyan: 65535,
                darkblue: 139,
                darkcyan: 35723,
                darkgoldenrod: 12092939,
                darkgray: 11119017,
                darkgreen: 25600,
                darkgrey: 11119017,
                darkkhaki: 12433259,
                darkmagenta: 9109643,
                darkolivegreen: 5597999,
                darkorange: 16747520,
                darkorchid: 10040012,
                darkred: 9109504,
                darksalmon: 15308410,
                darkseagreen: 9419919,
                darkslateblue: 4734347,
                darkslategray: 3100495,
                darkslategrey: 3100495,
                darkturquoise: 52945,
                darkviolet: 9699539,
                deeppink: 16716947,
                deepskyblue: 49151,
                dimgray: 6908265,
                dimgrey: 6908265,
                dodgerblue: 2003199,
                firebrick: 11674146,
                floralwhite: 16775920,
                forestgreen: 2263842,
                fuchsia: 16711935,
                gainsboro: 14474460,
                ghostwhite: 16316671,
                gold: 16766720,
                goldenrod: 14329120,
                gray: 8421504,
                green: 32768,
                greenyellow: 11403055,
                grey: 8421504,
                honeydew: 15794160,
                hotpink: 16738740,
                indianred: 13458524,
                indigo: 4915330,
                ivory: 16777200,
                khaki: 15787660,
                lavender: 15132410,
                lavenderblush: 16773365,
                lawngreen: 8190976,
                lemonchiffon: 16775885,
                lightblue: 11393254,
                lightcoral: 15761536,
                lightcyan: 14745599,
                lightgoldenrodyellow: 16448210,
                lightgray: 13882323,
                lightgreen: 9498256,
                lightgrey: 13882323,
                lightpink: 16758465,
                lightsalmon: 16752762,
                lightseagreen: 2142890,
                lightskyblue: 8900346,
                lightslategray: 7833753,
                lightslategrey: 7833753,
                lightsteelblue: 11584734,
                lightyellow: 16777184,
                lime: 65280,
                limegreen: 3329330,
                linen: 16445670,
                magenta: 16711935,
                maroon: 8388608,
                mediumaquamarine: 6737322,
                mediumblue: 205,
                mediumorchid: 12211667,
                mediumpurple: 9662683,
                mediumseagreen: 3978097,
                mediumslateblue: 8087790,
                mediumspringgreen: 64154,
                mediumturquoise: 4772300,
                mediumvioletred: 13047173,
                midnightblue: 1644912,
                mintcream: 16121850,
                mistyrose: 16770273,
                moccasin: 16770229,
                navajowhite: 16768685,
                navy: 128,
                oldlace: 16643558,
                olive: 8421376,
                olivedrab: 7048739,
                orange: 16753920,
                orangered: 16729344,
                orchid: 14315734,
                palegoldenrod: 15657130,
                palegreen: 10025880,
                paleturquoise: 11529966,
                palevioletred: 14381203,
                papayawhip: 16773077,
                peachpuff: 16767673,
                peru: 13468991,
                pink: 16761035,
                plum: 14524637,
                powderblue: 11591910,
                purple: 8388736,
                rebeccapurple: 6697881,
                red: 16711680,
                rosybrown: 12357519,
                royalblue: 4286945,
                saddlebrown: 9127187,
                salmon: 16416882,
                sandybrown: 16032864,
                seagreen: 3050327,
                seashell: 16774638,
                sienna: 10506797,
                silver: 12632256,
                skyblue: 8900331,
                slateblue: 6970061,
                slategray: 7372944,
                slategrey: 7372944,
                snow: 16775930,
                springgreen: 65407,
                steelblue: 4620980,
                tan: 13808780,
                teal: 32896,
                thistle: 14204888,
                tomato: 16737095,
                turquoise: 4251856,
                violet: 15631086,
                wheat: 16113331,
                white: 16777215,
                whitesmoke: 16119285,
                yellow: 16776960,
                yellowgreen: 10145074
            },
            fa = {
                h: 0,
                s: 0,
                l: 0
            },
            da = {
                h: 0,
                s: 0,
                l: 0
            };
            function pa(e, t, n) {
                return n < 0 && (n += 1),
                n > 1 && (n -= 1),
                n < 1 / 6 ? e + 6 * (t - e) * n : n < .5 ? t : n < 2 / 3 ? e + 6 * (t - e) * (2 / 3 - n) : e
            }
            function ma(e) {
                return e < .04045 ? .0773993808 * e : Math.pow(.9478672986 * e + .0521327014, 2.4)
            }
            function va(e) {
                return e < .0031308 ? 12.92 * e : 1.055 * Math.pow(e, .41666) - .055
            }
            class ga {
                constructor(e, t, n) {
                    return Object.defineProperty(this, "isColor", {
                        value: !0
                    }),
                    void 0 === t && void 0 === n ? this.set(e) : this.setRGB(e, t, n)
                }
                set(e) {
                    return e && e.isColor ? this.copy(e) : "number" == typeof e ? this.setHex(e) : "string" == typeof e && this.setStyle(e),
                    this
                }
                setScalar(e) {
                    return this.r = e,
                    this.g = e,
                    this.b = e,
                    this
                }
                setHex(e) {
                    return e = Math.floor(e),
                    this.r = (e >> 16 & 255) / 255,
                    this.g = (e >> 8 & 255) / 255,
                    this.b = (255 & e) / 255,
                    this
                }
                setRGB(e, t, n) {
                    return this.r = e,
                    this.g = t,
                    this.b = n,
                    this
                }
                setHSL(e, t, n) {
                    if (e = Dn.euclideanModulo(e, 1), t = Dn.clamp(t, 0, 1), n = Dn.clamp(n, 0, 1), 0 === t)
                        this.r = this.g = this.b = n;
                    else {
                        const i = n <= .5 ? n * (1 + t) : n + t - n * t,
                        a = 2 * n - i;
                        this.r = pa(a, i, e + 1 / 3),
                        this.g = pa(a, i, e),
                        this.b = pa(a, i, e - 1 / 3)
                    }
                    return this
                }
                setStyle(e) {
                    function t(t) {
                        void 0 !== t && parseFloat(t) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.")
                    }
                    let n;
                    if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)) {
                        let e;
                        const i = n[1],
                        a = n[2];
                        switch (i) {
                        case "rgb":
                        case "rgba":
                            if (e = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
                                return this.r = Math.min(255, parseInt(e[1], 10)) / 255, this.g = Math.min(255, parseInt(e[2], 10)) / 255, this.b = Math.min(255, parseInt(e[3], 10)) / 255, t(e[5]), this;
                            if (e = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
                                return this.r = Math.min(100, parseInt(e[1], 10)) / 100, this.g = Math.min(100, parseInt(e[2], 10)) / 100, this.b = Math.min(100, parseInt(e[3], 10)) / 100, t(e[5]), this;
                            break;
                        case "hsl":
                        case "hsla":
                            if (e = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)) {
                                const n = parseFloat(e[1]) / 360,
                                i = parseInt(e[2], 10) / 100,
                                a = parseInt(e[3], 10) / 100;
                                return t(e[5]),
                                this.setHSL(n, i, a)
                            }
                        }
                    } else if (n = /^\#([A-Fa-f0-9]+)$/.exec(e)) {
                        const e = n[1],
                        t = e.length;
                        if (3 === t)
                            return this.r = parseInt(e.charAt(0) + e.charAt(0), 16) / 255, this.g = parseInt(e.charAt(1) + e.charAt(1), 16) / 255, this.b = parseInt(e.charAt(2) + e.charAt(2), 16) / 255, this;
                        if (6 === t)
                            return this.r = parseInt(e.charAt(0) + e.charAt(1), 16) / 255, this.g = parseInt(e.charAt(2) + e.charAt(3), 16) / 255, this.b = parseInt(e.charAt(4) + e.charAt(5), 16) / 255, this
                    }
                    return e && e.length > 0 ? this.setColorName(e) : this
                }
                setColorName(e) {
                    const t = ua[e];
                    return void 0 !== t ? this.setHex(t) : console.warn("THREE.Color: Unknown color " + e),
                    this
                }
                clone() {
                    return new this.constructor(this.r, this.g, this.b)
                }
                copy(e) {
                    return this.r = e.r,
                    this.g = e.g,
                    this.b = e.b,
                    this
                }
                copyGammaToLinear(e, t) {
                    return void 0 === t && (t = 2),
                    this.r = Math.pow(e.r, t),
                    this.g = Math.pow(e.g, t),
                    this.b = Math.pow(e.b, t),
                    this
                }
                copyLinearToGamma(e, t) {
                    void 0 === t && (t = 2);
                    const n = t > 0 ? 1 / t : 1;
                    return this.r = Math.pow(e.r, n),
                    this.g = Math.pow(e.g, n),
                    this.b = Math.pow(e.b, n),
                    this
                }
                convertGammaToLinear(e) {
                    return this.copyGammaToLinear(this, e),
                    this
                }
                convertLinearToGamma(e) {
                    return this.copyLinearToGamma(this, e),
                    this
                }
                copySRGBToLinear(e) {
                    return this.r = ma(e.r),
                    this.g = ma(e.g),
                    this.b = ma(e.b),
                    this
                }
                copyLinearToSRGB(e) {
                    return this.r = va(e.r),
                    this.g = va(e.g),
                    this.b = va(e.b),
                    this
                }
                convertSRGBToLinear() {
                    return this.copySRGBToLinear(this),
                    this
                }
                convertLinearToSRGB() {
                    return this.copyLinearToSRGB(this),
                    this
                }
                getHex() {
                    return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
                }
                getHexString() {
                    return ("000000" + this.getHex().toString(16)).slice(-6)
                }
                getHSL(e) {
                    void 0 === e && (console.warn("THREE.Color: .getHSL() target is now required"), e = {
                            h: 0,
                            s: 0,
                            l: 0
                        });
                    const t = this.r,
                    n = this.g,
                    i = this.b,
                    a = Math.max(t, n, i),
                    r = Math.min(t, n, i);
                    let o,
                    s;
                    const c = (r + a) / 2;
                    if (r === a)
                        o = 0, s = 0;
                    else {
                        const e = a - r;
                        switch (s = c <= .5 ? e / (a + r) : e / (2 - a - r), a) {
                        case t:
                            o = (n - i) / e + (n < i ? 6 : 0);
                            break;
                        case n:
                            o = (i - t) / e + 2;
                            break;
                        case i:
                            o = (t - n) / e + 4
                        }
                        o /= 6
                    }
                    return e.h = o,
                    e.s = s,
                    e.l = c,
                    e
                }
                getStyle() {
                    return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
                }
                offsetHSL(e, t, n) {
                    return this.getHSL(fa),
                    fa.h += e,
                    fa.s += t,
                    fa.l += n,
                    this.setHSL(fa.h, fa.s, fa.l),
                    this
                }
                add(e) {
                    return this.r += e.r,
                    this.g += e.g,
                    this.b += e.b,
                    this
                }
                addColors(e, t) {
                    return this.r = e.r + t.r,
                    this.g = e.g + t.g,
                    this.b = e.b + t.b,
                    this
                }
                addScalar(e) {
                    return this.r += e,
                    this.g += e,
                    this.b += e,
                    this
                }
                sub(e) {
                    return this.r = Math.max(0, this.r - e.r),
                    this.g = Math.max(0, this.g - e.g),
                    this.b = Math.max(0, this.b - e.b),
                    this
                }
                multiply(e) {
                    return this.r *= e.r,
                    this.g *= e.g,
                    this.b *= e.b,
                    this
                }
                multiplyScalar(e) {
                    return this.r *= e,
                    this.g *= e,
                    this.b *= e,
                    this
                }
                lerp(e, t) {
                    return this.r += (e.r - this.r) * t,
                    this.g += (e.g - this.g) * t,
                    this.b += (e.b - this.b) * t,
                    this
                }
                lerpHSL(e, t) {
                    this.getHSL(fa),
                    e.getHSL(da);
                    const n = Dn.lerp(fa.h, da.h, t),
                    i = Dn.lerp(fa.s, da.s, t),
                    a = Dn.lerp(fa.l, da.l, t);
                    return this.setHSL(n, i, a),
                    this
                }
                equals(e) {
                    return e.r === this.r && e.g === this.g && e.b === this.b
                }
                fromArray(e, t) {
                    return void 0 === t && (t = 0),
                    this.r = e[t],
                    this.g = e[t + 1],
                    this.b = e[t + 2],
                    this
                }
                toArray(e, t) {
                    return void 0 === e && (e = []),
                    void 0 === t && (t = 0),
                    e[t] = this.r,
                    e[t + 1] = this.g,
                    e[t + 2] = this.b,
                    e
                }
                fromBufferAttribute(e, t) {
                    return this.r = e.getX(t),
                    this.g = e.getY(t),
                    this.b = e.getZ(t),
                    !0 === e.normalized && (this.r /= 255, this.g /= 255, this.b /= 255),
                    this
                }
                toJSON() {
                    return this.getHex()
                }
            }
            ga.NAMES = ua,
            ga.prototype.r = 1,
            ga.prototype.g = 1,
            ga.prototype.b = 1;
            class xa {
                constructor(e, t, n, i, a, r) {
                    this.a = e,
                    this.b = t,
                    this.c = n,
                    this.normal = i && i.isVector3 ? i : new Qn,
                    this.vertexNormals = Array.isArray(i) ? i : [],
                    this.color = a && a.isColor ? a : new ga,
                    this.vertexColors = Array.isArray(a) ? a : [],
                    this.materialIndex = void 0 !== r ? r : 0
                }
                clone() {
                    return (new this.constructor).copy(this)
                }
                copy(e) {
                    this.a = e.a,
                    this.b = e.b,
                    this.c = e.c,
                    this.normal.copy(e.normal),
                    this.color.copy(e.color),
                    this.materialIndex = e.materialIndex;
                    for (let t = 0, n = e.vertexNormals.length; t < n; t++)
                        this.vertexNormals[t] = e.vertexNormals[t].clone();
                    for (let t = 0, n = e.vertexColors.length; t < n; t++)
                        this.vertexColors[t] = e.vertexColors[t].clone();
                    return this
                }
            }
            let ya = 0;
            function ba() {
                Object.defineProperty(this, "id", {
                    value: ya++
                }),
                this.uuid = Dn.generateUUID(),
                this.name = "",
                this.type = "Material",
                this.fog = !0,
                this.blending = b,
                this.side = p,
                this.flatShading = !1,
                this.vertexColors = !1,
                this.opacity = 1,
                this.transparent = !1,
                this.blendSrc = V,
                this.blendDst = R,
                this.blendEquation = S,
                this.blendSrcAlpha = null,
                this.blendDstAlpha = null,
                this.blendEquationAlpha = null,
                this.depthFunc = j,
                this.depthTest = !0,
                this.depthWrite = !0,
                this.stencilWriteMask = 255,
                this.stencilFunc = _n,
                this.stencilRef = 0,
                this.stencilFuncMask = 255,
                this.stencilFail = hn,
                this.stencilZFail = hn,
                this.stencilZPass = hn,
                this.stencilWrite = !1,
                this.clippingPlanes = null,
                this.clipIntersection = !1,
                this.clipShadows = !1,
                this.shadowSide = null,
                this.colorWrite = !0,
                this.precision = null,
                this.polygonOffset = !1,
                this.polygonOffsetFactor = 0,
                this.polygonOffsetUnits = 0,
                this.dithering = !1,
                this.alphaTest = 0,
                this.premultipliedAlpha = !1,
                this.visible = !0,
                this.toneMapped = !0,
                this.userData = {},
                this.version = 0
            }
            function Ma(e) {
                ba.call(this),
                this.type = "MeshBasicMaterial",
                this.color = new ga(16777215),
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.specularMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.combine = Z,
                this.reflectivity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.setValues(e)
            }
            ba.prototype = Object.assign(Object.create(Fn.prototype), {
                constructor: ba,
                isMaterial: !0,
                onBeforeCompile: function () {},
                customProgramCacheKey: function () {
                    return this.onBeforeCompile.toString()
                },
                setValues: function (e) {
                    if (void 0 !== e)
                        for (const t in e) {
                            const n = e[t];
                            if (void 0 === n) {
                                console.warn("THREE.Material: '" + t + "' parameter is undefined.");
                                continue
                            }
                            if ("shading" === t) {
                                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                                this.flatShading = n === g;
                                continue
                            }
                            const i = this[t];
                            void 0 !== i ? i && i.isColor ? i.set(n) : i && i.isVector3 && n && n.isVector3 ? i.copy(n) : this[t] = n : console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.")
                        }
                },
                toJSON: function (e) {
                    const t = void 0 === e || "string" == typeof e;
                    t && (e = {
                            textures: {},
                            images: {}
                        });
                    const n = {
                        metadata: {
                            version: 4.5,
                            type: "Material",
                            generator: "Material.toJSON"
                        }
                    };
                    function i(e) {
                        const t = [];
                        for (const n in e) {
                            const i = e[n];
                            delete i.metadata,
                            t.push(i)
                        }
                        return t
                    }
                    if (n.uuid = this.uuid, n.type = this.type, "" !== this.name && (n.name = this.name), this.color && this.color.isColor && (n.color = this.color.getHex()), void 0 !== this.roughness && (n.roughness = this.roughness), void 0 !== this.metalness && (n.metalness = this.metalness), this.sheen && this.sheen.isColor && (n.sheen = this.sheen.getHex()), this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()), this.emissiveIntensity && 1 !== this.emissiveIntensity && (n.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n.specular = this.specular.getHex()), void 0 !== this.shininess && (n.shininess = this.shininess), void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat), void 0 !== this.clearcoatRoughness && (n.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid), this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid, n.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid, n.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid, n.normalMapType = this.normalMapType, n.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid, n.reflectivity = this.reflectivity, n.refractionRatio = this.refractionRatio, void 0 !== this.combine && (n.combine = this.combine), void 0 !== this.envMapIntensity && (n.envMapIntensity = this.envMapIntensity)), this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid), void 0 !== this.size && (n.size = this.size), void 0 !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation), this.blending !== b && (n.blending = this.blending), !0 === this.flatShading && (n.flatShading = this.flatShading), this.side !== p && (n.side = this.side), this.vertexColors && (n.vertexColors = !0), this.opacity < 1 && (n.opacity = this.opacity), !0 === this.transparent && (n.transparent = this.transparent), n.depthFunc = this.depthFunc, n.depthTest = this.depthTest, n.depthWrite = this.depthWrite, n.stencilWrite = this.stencilWrite, n.stencilWriteMask = this.stencilWriteMask, n.stencilFunc = this.stencilFunc, n.stencilRef = this.stencilRef, n.stencilFuncMask = this.stencilFuncMask, n.stencilFail = this.stencilFail, n.stencilZFail = this.stencilZFail, n.stencilZPass = this.stencilZPass, this.rotation && 0 !== this.rotation && (n.rotation = this.rotation), !0 === this.polygonOffset && (n.polygonOffset = !0), 0 !== this.polygonOffsetFactor && (n.polygonOffsetFactor = this.polygonOffsetFactor), 0 !== this.polygonOffsetUnits && (n.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth && 1 !== this.linewidth && (n.linewidth = this.linewidth), void 0 !== this.dashSize && (n.dashSize = this.dashSize), void 0 !== this.gapSize && (n.gapSize = this.gapSize), void 0 !== this.scale && (n.scale = this.scale), !0 === this.dithering && (n.dithering = !0), this.alphaTest > 0 && (n.alphaTest = this.alphaTest), !0 === this.premultipliedAlpha && (n.premultipliedAlpha = this.premultipliedAlpha), !0 === this.wireframe && (n.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth), "round" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap), "round" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin), !0 === this.morphTargets && (n.morphTargets = !0), !0 === this.morphNormals && (n.morphNormals = !0), !0 === this.skinning && (n.skinning = !0), !1 === this.visible && (n.visible = !1), !1 === this.toneMapped && (n.toneMapped = !1), "{}" !== JSON.stringify(this.userData) && (n.userData = this.userData), t) {
                        const t = i(e.textures),
                        a = i(e.images);
                        t.length > 0 && (n.textures = t),
                        a.length > 0 && (n.images = a)
                    }
                    return n
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    this.name = e.name,
                    this.fog = e.fog,
                    this.blending = e.blending,
                    this.side = e.side,
                    this.flatShading = e.flatShading,
                    this.vertexColors = e.vertexColors,
                    this.opacity = e.opacity,
                    this.transparent = e.transparent,
                    this.blendSrc = e.blendSrc,
                    this.blendDst = e.blendDst,
                    this.blendEquation = e.blendEquation,
                    this.blendSrcAlpha = e.blendSrcAlpha,
                    this.blendDstAlpha = e.blendDstAlpha,
                    this.blendEquationAlpha = e.blendEquationAlpha,
                    this.depthFunc = e.depthFunc,
                    this.depthTest = e.depthTest,
                    this.depthWrite = e.depthWrite,
                    this.stencilWriteMask = e.stencilWriteMask,
                    this.stencilFunc = e.stencilFunc,
                    this.stencilRef = e.stencilRef,
                    this.stencilFuncMask = e.stencilFuncMask,
                    this.stencilFail = e.stencilFail,
                    this.stencilZFail = e.stencilZFail,
                    this.stencilZPass = e.stencilZPass,
                    this.stencilWrite = e.stencilWrite;
                    const t = e.clippingPlanes;
                    let n = null;
                    if (null !== t) {
                        const e = t.length;
                        n = new Array(e);
                        for (let i = 0; i !== e; ++i)
                            n[i] = t[i].clone()
                    }
                    return this.clippingPlanes = n,
                    this.clipIntersection = e.clipIntersection,
                    this.clipShadows = e.clipShadows,
                    this.shadowSide = e.shadowSide,
                    this.colorWrite = e.colorWrite,
                    this.precision = e.precision,
                    this.polygonOffset = e.polygonOffset,
                    this.polygonOffsetFactor = e.polygonOffsetFactor,
                    this.polygonOffsetUnits = e.polygonOffsetUnits,
                    this.dithering = e.dithering,
                    this.alphaTest = e.alphaTest,
                    this.premultipliedAlpha = e.premultipliedAlpha,
                    this.visible = e.visible,
                    this.toneMapped = e.toneMapped,
                    this.userData = JSON.parse(JSON.stringify(e.userData)),
                    this
                },
                dispose: function () {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }),
            Object.defineProperty(ba.prototype, "needsUpdate", {
                set: function (e) {
                    !0 === e && this.version++
                }
            }),
            Ma.prototype = Object.create(ba.prototype),
            Ma.prototype.constructor = Ma,
            Ma.prototype.isMeshBasicMaterial = !0,
            Ma.prototype.copy = function (e) {
                return ba.prototype.copy.call(this, e),
                this.color.copy(e.color),
                this.map = e.map,
                this.lightMap = e.lightMap,
                this.lightMapIntensity = e.lightMapIntensity,
                this.aoMap = e.aoMap,
                this.aoMapIntensity = e.aoMapIntensity,
                this.specularMap = e.specularMap,
                this.alphaMap = e.alphaMap,
                this.envMap = e.envMap,
                this.combine = e.combine,
                this.reflectivity = e.reflectivity,
                this.refractionRatio = e.refractionRatio,
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this.wireframeLinecap = e.wireframeLinecap,
                this.wireframeLinejoin = e.wireframeLinejoin,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this
            };
            const za = new Qn,
            wa = new Un;
            function _a(e, t, n) {
                if (Array.isArray(e))
                    throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                this.name = "",
                this.array = e,
                this.itemSize = t,
                this.count = void 0 !== e ? e.length / t : 0,
                this.normalized = !0 === n,
                this.usage = Sn,
                this.updateRange = {
                    offset: 0,
                    count: -1
                },
                this.version = 0
            }
            function Sa(e, t, n) {
                _a.call(this, new Int8Array(e), t, n)
            }
            function La(e, t, n) {
                _a.call(this, new Uint8Array(e), t, n)
            }
            function Aa(e, t, n) {
                _a.call(this, new Uint8ClampedArray(e), t, n)
            }
            function Ta(e, t, n) {
                _a.call(this, new Int16Array(e), t, n)
            }
            function Ca(e, t, n) {
                _a.call(this, new Uint16Array(e), t, n)
            }
            function Ea(e, t, n) {
                _a.call(this, new Int32Array(e), t, n)
            }
            function Ha(e, t, n) {
                _a.call(this, new Uint32Array(e), t, n)
            }
            function Na(e, t, n) {
                _a.call(this, new Float32Array(e), t, n)
            }
            function Pa(e, t, n) {
                _a.call(this, new Float64Array(e), t, n)
            }
            Object.defineProperty(_a.prototype, "needsUpdate", {
                set: function (e) {
                    !0 === e && this.version++
                }
            }),
            Object.assign(_a.prototype, {
                isBufferAttribute: !0,
                onUploadCallback: function () {},
                setUsage: function (e) {
                    return this.usage = e,
                    this
                },
                copy: function (e) {
                    return this.name = e.name,
                    this.array = new e.array.constructor(e.array),
                    this.itemSize = e.itemSize,
                    this.count = e.count,
                    this.normalized = e.normalized,
                    this.usage = e.usage,
                    this
                },
                copyAt: function (e, t, n) {
                    e *= this.itemSize,
                    n *= t.itemSize;
                    for (let i = 0, a = this.itemSize; i < a; i++)
                        this.array[e + i] = t.array[n + i];
                    return this
                },
                copyArray: function (e) {
                    return this.array.set(e),
                    this
                },
                copyColorsArray: function (e) {
                    const t = this.array;
                    let n = 0;
                    for (let i = 0, a = e.length; i < a; i++) {
                        let a = e[i];
                        void 0 === a && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", i), a = new ga),
                        t[n++] = a.r,
                        t[n++] = a.g,
                        t[n++] = a.b
                    }
                    return this
                },
                copyVector2sArray: function (e) {
                    const t = this.array;
                    let n = 0;
                    for (let i = 0, a = e.length; i < a; i++) {
                        let a = e[i];
                        void 0 === a && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", i), a = new Un),
                        t[n++] = a.x,
                        t[n++] = a.y
                    }
                    return this
                },
                copyVector3sArray: function (e) {
                    const t = this.array;
                    let n = 0;
                    for (let i = 0, a = e.length; i < a; i++) {
                        let a = e[i];
                        void 0 === a && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", i), a = new Qn),
                        t[n++] = a.x,
                        t[n++] = a.y,
                        t[n++] = a.z
                    }
                    return this
                },
                copyVector4sArray: function (e) {
                    const t = this.array;
                    let n = 0;
                    for (let i = 0, a = e.length; i < a; i++) {
                        let a = e[i];
                        void 0 === a && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", i), a = new Xn),
                        t[n++] = a.x,
                        t[n++] = a.y,
                        t[n++] = a.z,
                        t[n++] = a.w
                    }
                    return this
                },
                applyMatrix3: function (e) {
                    if (2 === this.itemSize)
                        for (let t = 0, n = this.count; t < n; t++)
                            wa.fromBufferAttribute(this, t), wa.applyMatrix3(e), this.setXY(t, wa.x, wa.y);
                    else if (3 === this.itemSize)
                        for (let t = 0, n = this.count; t < n; t++)
                            za.fromBufferAttribute(this, t), za.applyMatrix3(e), this.setXYZ(t, za.x, za.y, za.z);
                    return this
                },
                applyMatrix4: function (e) {
                    for (let t = 0, n = this.count; t < n; t++)
                        za.x = this.getX(t), za.y = this.getY(t), za.z = this.getZ(t), za.applyMatrix4(e), this.setXYZ(t, za.x, za.y, za.z);
                    return this
                },
                applyNormalMatrix: function (e) {
                    for (let t = 0, n = this.count; t < n; t++)
                        za.x = this.getX(t), za.y = this.getY(t), za.z = this.getZ(t), za.applyNormalMatrix(e), this.setXYZ(t, za.x, za.y, za.z);
                    return this
                },
                transformDirection: function (e) {
                    for (let t = 0, n = this.count; t < n; t++)
                        za.x = this.getX(t), za.y = this.getY(t), za.z = this.getZ(t), za.transformDirection(e), this.setXYZ(t, za.x, za.y, za.z);
                    return this
                },
                set: function (e, t) {
                    return void 0 === t && (t = 0),
                    this.array.set(e, t),
                    this
                },
                getX: function (e) {
                    return this.array[e * this.itemSize]
                },
                setX: function (e, t) {
                    return this.array[e * this.itemSize] = t,
                    this
                },
                getY: function (e) {
                    return this.array[e * this.itemSize + 1]
                },
                setY: function (e, t) {
                    return this.array[e * this.itemSize + 1] = t,
                    this
                },
                getZ: function (e) {
                    return this.array[e * this.itemSize + 2]
                },
                setZ: function (e, t) {
                    return this.array[e * this.itemSize + 2] = t,
                    this
                },
                getW: function (e) {
                    return this.array[e * this.itemSize + 3]
                },
                setW: function (e, t) {
                    return this.array[e * this.itemSize + 3] = t,
                    this
                },
                setXY: function (e, t, n) {
                    return e *= this.itemSize,
                    this.array[e + 0] = t,
                    this.array[e + 1] = n,
                    this
                },
                setXYZ: function (e, t, n, i) {
                    return e *= this.itemSize,
                    this.array[e + 0] = t,
                    this.array[e + 1] = n,
                    this.array[e + 2] = i,
                    this
                },
                setXYZW: function (e, t, n, i, a) {
                    return e *= this.itemSize,
                    this.array[e + 0] = t,
                    this.array[e + 1] = n,
                    this.array[e + 2] = i,
                    this.array[e + 3] = a,
                    this
                },
                onUpload: function (e) {
                    return this.onUploadCallback = e,
                    this
                },
                clone: function () {
                    return new this.constructor(this.array, this.itemSize).copy(this)
                },
                toJSON: function () {
                    return {
                        itemSize: this.itemSize,
                        type: this.array.constructor.name,
                        array: Array.prototype.slice.call(this.array),
                        normalized: this.normalized
                    }
                }
            }),
            Sa.prototype = Object.create(_a.prototype),
            Sa.prototype.constructor = Sa,
            La.prototype = Object.create(_a.prototype),
            La.prototype.constructor = La,
            Aa.prototype = Object.create(_a.prototype),
            Aa.prototype.constructor = Aa,
            Ta.prototype = Object.create(_a.prototype),
            Ta.prototype.constructor = Ta,
            Ca.prototype = Object.create(_a.prototype),
            Ca.prototype.constructor = Ca,
            Ea.prototype = Object.create(_a.prototype),
            Ea.prototype.constructor = Ea,
            Ha.prototype = Object.create(_a.prototype),
            Ha.prototype.constructor = Ha,
            Na.prototype = Object.create(_a.prototype),
            Na.prototype.constructor = Na,
            Pa.prototype = Object.create(_a.prototype),
            Pa.prototype.constructor = Pa;
            class Va {
                constructor() {
                    this.vertices = [],
                    this.normals = [],
                    this.colors = [],
                    this.uvs = [],
                    this.uvs2 = [],
                    this.groups = [],
                    this.morphTargets = {},
                    this.skinWeights = [],
                    this.skinIndices = [],
                    this.boundingBox = null,
                    this.boundingSphere = null,
                    this.verticesNeedUpdate = !1,
                    this.normalsNeedUpdate = !1,
                    this.colorsNeedUpdate = !1,
                    this.uvsNeedUpdate = !1,
                    this.groupsNeedUpdate = !1
                }
                computeGroups(e) {
                    const t = [];
                    let n,
                    i,
                    a = void 0;
                    const r = e.faces;
                    for (i = 0; i < r.length; i++) {
                        const e = r[i];
                        e.materialIndex !== a && (a = e.materialIndex, void 0 !== n && (n.count = 3 * i - n.start, t.push(n)), n = {
                                start: 3 * i,
                                materialIndex: a
                            })
                    }
                    void 0 !== n && (n.count = 3 * i - n.start, t.push(n)),
                    this.groups = t
                }
                fromGeometry(e) {
                    const t = e.faces,
                    n = e.vertices,
                    i = e.faceVertexUvs,
                    a = i[0] && i[0].length > 0,
                    r = i[1] && i[1].length > 0,
                    o = e.morphTargets,
                    s = o.length;
                    let c;
                    if (s > 0) {
                        c = [];
                        for (let e = 0; e < s; e++)
                            c[e] = {
                                name: o[e].name,
                                data: []
                            };
                        this.morphTargets.position = c
                    }
                    const l = e.morphNormals,
                    h = l.length;
                    let u;
                    if (h > 0) {
                        u = [];
                        for (let e = 0; e < h; e++)
                            u[e] = {
                                name: l[e].name,
                                data: []
                            };
                        this.morphTargets.normal = u
                    }
                    const f = e.skinIndices,
                    d = e.skinWeights,
                    p = f.length === n.length,
                    m = d.length === n.length;
                    n.length > 0 && 0 === t.length && console.error("THREE.DirectGeometry: Faceless geometries are not supported.");
                    for (let e = 0; e < t.length; e++) {
                        const v = t[e];
                        this.vertices.push(n[v.a], n[v.b], n[v.c]);
                        const g = v.vertexNormals;
                        if (3 === g.length)
                            this.normals.push(g[0], g[1], g[2]);
                        else {
                            const e = v.normal;
                            this.normals.push(e, e, e)
                        }
                        const x = v.vertexColors;
                        if (3 === x.length)
                            this.colors.push(x[0], x[1], x[2]);
                        else {
                            const e = v.color;
                            this.colors.push(e, e, e)
                        }
                        if (!0 === a) {
                            const t = i[0][e];
                            void 0 !== t ? this.uvs.push(t[0], t[1], t[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", e), this.uvs.push(new Un, new Un, new Un))
                        }
                        if (!0 === r) {
                            const t = i[1][e];
                            void 0 !== t ? this.uvs2.push(t[0], t[1], t[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", e), this.uvs2.push(new Un, new Un, new Un))
                        }
                        for (let e = 0; e < s; e++) {
                            const t = o[e].vertices;
                            c[e].data.push(t[v.a], t[v.b], t[v.c])
                        }
                        for (let t = 0; t < h; t++) {
                            const n = l[t].vertexNormals[e];
                            u[t].data.push(n.a, n.b, n.c)
                        }
                        p && this.skinIndices.push(f[v.a], f[v.b], f[v.c]),
                        m && this.skinWeights.push(d[v.a], d[v.b], d[v.c])
                    }
                    return this.computeGroups(e),
                    this.verticesNeedUpdate = e.verticesNeedUpdate,
                    this.normalsNeedUpdate = e.normalsNeedUpdate,
                    this.colorsNeedUpdate = e.colorsNeedUpdate,
                    this.uvsNeedUpdate = e.uvsNeedUpdate,
                    this.groupsNeedUpdate = e.groupsNeedUpdate,
                    null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
                    null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
                    this
                }
            }
            function Ra(e) {
                if (0 === e.length)
                    return -1 / 0;
                let t = e[0];
                for (let n = 1, i = e.length; n < i; ++n)
                    e[n] > t && (t = e[n]);
                return t
            }
            let Fa = 1;
            const Ia = new _i,
            Oa = new Zi,
            Da = new Qn,
            Ua = new $n,
            Ba = new $n,
            ka = new Qn;
            function Ga() {
                Object.defineProperty(this, "id", {
                    value: Fa += 2
                }),
                this.uuid = Dn.generateUUID(),
                this.name = "",
                this.type = "BufferGeometry",
                this.index = null,
                this.attributes = {},
                this.morphAttributes = {},
                this.morphTargetsRelative = !1,
                this.groups = [],
                this.boundingBox = null,
                this.boundingSphere = null,
                this.drawRange = {
                    start: 0,
                    count: 1 / 0
                },
                this.userData = {}
            }
            Ga.prototype = Object.assign(Object.create(Fn.prototype), {
                constructor: Ga,
                isBufferGeometry: !0,
                getIndex: function () {
                    return this.index
                },
                setIndex: function (e) {
                    return Array.isArray(e) ? this.index = new(Ra(e) > 65535 ? Ha : Ca)(e, 1) : this.index = e,
                    this
                },
                getAttribute: function (e) {
                    return this.attributes[e]
                },
                setAttribute: function (e, t) {
                    return this.attributes[e] = t,
                    this
                },
                deleteAttribute: function (e) {
                    return delete this.attributes[e],
                    this
                },
                addGroup: function (e, t, n) {
                    this.groups.push({
                        start: e,
                        count: t,
                        materialIndex: void 0 !== n ? n : 0
                    })
                },
                clearGroups: function () {
                    this.groups = []
                },
                setDrawRange: function (e, t) {
                    this.drawRange.start = e,
                    this.drawRange.count = t
                },
                applyMatrix4: function (e) {
                    const t = this.attributes.position;
                    void 0 !== t && (t.applyMatrix4(e), t.needsUpdate = !0);
                    const n = this.attributes.normal;
                    if (void 0 !== n) {
                        const t = (new Bn).getNormalMatrix(e);
                        n.applyNormalMatrix(t),
                        n.needsUpdate = !0
                    }
                    const i = this.attributes.tangent;
                    return void 0 !== i && (i.transformDirection(e), i.needsUpdate = !0),
                    null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere && this.computeBoundingSphere(),
                    this
                },
                rotateX: function (e) {
                    return Ia.makeRotationX(e),
                    this.applyMatrix4(Ia),
                    this
                },
                rotateY: function (e) {
                    return Ia.makeRotationY(e),
                    this.applyMatrix4(Ia),
                    this
                },
                rotateZ: function (e) {
                    return Ia.makeRotationZ(e),
                    this.applyMatrix4(Ia),
                    this
                },
                translate: function (e, t, n) {
                    return Ia.makeTranslation(e, t, n),
                    this.applyMatrix4(Ia),
                    this
                },
                scale: function (e, t, n) {
                    return Ia.makeScale(e, t, n),
                    this.applyMatrix4(Ia),
                    this
                },
                lookAt: function (e) {
                    return Oa.lookAt(e),
                    Oa.updateMatrix(),
                    this.applyMatrix4(Oa.matrix),
                    this
                },
                center: function () {
                    return this.computeBoundingBox(),
                    this.boundingBox.getCenter(Da).negate(),
                    this.translate(Da.x, Da.y, Da.z),
                    this
                },
                setFromObject: function (e) {
                    const t = e.geometry;
                    if (e.isPoints || e.isLine) {
                        const e = new Na(3 * t.vertices.length, 3),
                        n = new Na(3 * t.colors.length, 3);
                        if (this.setAttribute("position", e.copyVector3sArray(t.vertices)), this.setAttribute("color", n.copyColorsArray(t.colors)), t.lineDistances && t.lineDistances.length === t.vertices.length) {
                            const e = new Na(t.lineDistances.length, 1);
                            this.setAttribute("lineDistance", e.copyArray(t.lineDistances))
                        }
                        null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                        null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone())
                    } else
                        e.isMesh && t && t.isGeometry && this.fromGeometry(t);
                    return this
                },
                setFromPoints: function (e) {
                    const t = [];
                    for (let n = 0, i = e.length; n < i; n++) {
                        const i = e[n];
                        t.push(i.x, i.y, i.z || 0)
                    }
                    return this.setAttribute("position", new Na(t, 3)),
                    this
                },
                updateFromObject: function (e) {
                    let t = e.geometry;
                    if (e.isMesh) {
                        let e = t.__directGeometry;
                        if (!0 === t.elementsNeedUpdate && (e = void 0, t.elementsNeedUpdate = !1), void 0 === e)
                            return this.fromGeometry(t);
                        e.verticesNeedUpdate = t.verticesNeedUpdate,
                        e.normalsNeedUpdate = t.normalsNeedUpdate,
                        e.colorsNeedUpdate = t.colorsNeedUpdate,
                        e.uvsNeedUpdate = t.uvsNeedUpdate,
                        e.groupsNeedUpdate = t.groupsNeedUpdate,
                        t.verticesNeedUpdate = !1,
                        t.normalsNeedUpdate = !1,
                        t.colorsNeedUpdate = !1,
                        t.uvsNeedUpdate = !1,
                        t.groupsNeedUpdate = !1,
                        t = e
                    }
                    if (!0 === t.verticesNeedUpdate) {
                        const e = this.attributes.position;
                        void 0 !== e && (e.copyVector3sArray(t.vertices), e.needsUpdate = !0),
                        t.verticesNeedUpdate = !1
                    }
                    if (!0 === t.normalsNeedUpdate) {
                        const e = this.attributes.normal;
                        void 0 !== e && (e.copyVector3sArray(t.normals), e.needsUpdate = !0),
                        t.normalsNeedUpdate = !1
                    }
                    if (!0 === t.colorsNeedUpdate) {
                        const e = this.attributes.color;
                        void 0 !== e && (e.copyColorsArray(t.colors), e.needsUpdate = !0),
                        t.colorsNeedUpdate = !1
                    }
                    if (t.uvsNeedUpdate) {
                        const e = this.attributes.uv;
                        void 0 !== e && (e.copyVector2sArray(t.uvs), e.needsUpdate = !0),
                        t.uvsNeedUpdate = !1
                    }
                    if (t.lineDistancesNeedUpdate) {
                        const e = this.attributes.lineDistance;
                        void 0 !== e && (e.copyArray(t.lineDistances), e.needsUpdate = !0),
                        t.lineDistancesNeedUpdate = !1
                    }
                    return t.groupsNeedUpdate && (t.computeGroups(e.geometry), this.groups = t.groups, t.groupsNeedUpdate = !1),
                    this
                },
                fromGeometry: function (e) {
                    return e.__directGeometry = (new Va).fromGeometry(e),
                    this.fromDirectGeometry(e.__directGeometry)
                },
                fromDirectGeometry: function (e) {
                    const t = new Float32Array(3 * e.vertices.length);
                    if (this.setAttribute("position", new _a(t, 3).copyVector3sArray(e.vertices)), e.normals.length > 0) {
                        const t = new Float32Array(3 * e.normals.length);
                        this.setAttribute("normal", new _a(t, 3).copyVector3sArray(e.normals))
                    }
                    if (e.colors.length > 0) {
                        const t = new Float32Array(3 * e.colors.length);
                        this.setAttribute("color", new _a(t, 3).copyColorsArray(e.colors))
                    }
                    if (e.uvs.length > 0) {
                        const t = new Float32Array(2 * e.uvs.length);
                        this.setAttribute("uv", new _a(t, 2).copyVector2sArray(e.uvs))
                    }
                    if (e.uvs2.length > 0) {
                        const t = new Float32Array(2 * e.uvs2.length);
                        this.setAttribute("uv2", new _a(t, 2).copyVector2sArray(e.uvs2))
                    }
                    this.groups = e.groups;
                    for (const t in e.morphTargets) {
                        const n = [],
                        i = e.morphTargets[t];
                        for (let e = 0, t = i.length; e < t; e++) {
                            const t = i[e],
                            a = new Na(3 * t.data.length, 3);
                            a.name = t.name,
                            n.push(a.copyVector3sArray(t.data))
                        }
                        this.morphAttributes[t] = n
                    }
                    if (e.skinIndices.length > 0) {
                        const t = new Na(4 * e.skinIndices.length, 4);
                        this.setAttribute("skinIndex", t.copyVector4sArray(e.skinIndices))
                    }
                    if (e.skinWeights.length > 0) {
                        const t = new Na(4 * e.skinWeights.length, 4);
                        this.setAttribute("skinWeight", t.copyVector4sArray(e.skinWeights))
                    }
                    return null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
                    null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
                    this
                },
                computeBoundingBox: function () {
                    null === this.boundingBox && (this.boundingBox = new $n);
                    const e = this.attributes.position,
                    t = this.morphAttributes.position;
                    if (e && e.isGLBufferAttribute)
                        return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this), void this.boundingBox.set(new Qn(-1 / 0, -1 / 0, -1 / 0), new Qn(1 / 0, 1 / 0, 1 / 0));
                    if (void 0 !== e) {
                        if (this.boundingBox.setFromBufferAttribute(e), t)
                            for (let e = 0, n = t.length; e < n; e++) {
                                const n = t[e];
                                Ua.setFromBufferAttribute(n),
                                this.morphTargetsRelative ? (ka.addVectors(this.boundingBox.min, Ua.min), this.boundingBox.expandByPoint(ka), ka.addVectors(this.boundingBox.max, Ua.max), this.boundingBox.expandByPoint(ka)) : (this.boundingBox.expandByPoint(Ua.min), this.boundingBox.expandByPoint(Ua.max))
                            }
                    } else
                        this.boundingBox.makeEmpty();
                    (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
                },
                computeBoundingSphere: function () {
                    null === this.boundingSphere && (this.boundingSphere = new mi);
                    const e = this.attributes.position,
                    t = this.morphAttributes.position;
                    if (e && e.isGLBufferAttribute)
                        return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this), void this.boundingSphere.set(new Qn, 1 / 0);
                    if (e) {
                        const n = this.boundingSphere.center;
                        if (Ua.setFromBufferAttribute(e), t)
                            for (let e = 0, n = t.length; e < n; e++) {
                                const n = t[e];
                                Ba.setFromBufferAttribute(n),
                                this.morphTargetsRelative ? (ka.addVectors(Ua.min, Ba.min), Ua.expandByPoint(ka), ka.addVectors(Ua.max, Ba.max), Ua.expandByPoint(ka)) : (Ua.expandByPoint(Ba.min), Ua.expandByPoint(Ba.max))
                            }
                        Ua.getCenter(n);
                        let i = 0;
                        for (let t = 0, a = e.count; t < a; t++)
                            ka.fromBufferAttribute(e, t), i = Math.max(i, n.distanceToSquared(ka));
                        if (t)
                            for (let a = 0, r = t.length; a < r; a++) {
                                const r = t[a],
                                o = this.morphTargetsRelative;
                                for (let t = 0, a = r.count; t < a; t++)
                                    ka.fromBufferAttribute(r, t), o && (Da.fromBufferAttribute(e, t), ka.add(Da)), i = Math.max(i, n.distanceToSquared(ka))
                            }
                        this.boundingSphere.radius = Math.sqrt(i),
                        isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
                    }
                },
                computeFaceNormals: function () {},
                computeVertexNormals: function () {
                    const e = this.index,
                    t = this.getAttribute("position");
                    if (void 0 !== t) {
                        let n = this.getAttribute("normal");
                        if (void 0 === n)
                            n = new _a(new Float32Array(3 * t.count), 3), this.setAttribute("normal", n);
                        else
                            for (let e = 0, t = n.count; e < t; e++)
                                n.setXYZ(e, 0, 0, 0);
                        const i = new Qn,
                        a = new Qn,
                        r = new Qn,
                        o = new Qn,
                        s = new Qn,
                        c = new Qn,
                        l = new Qn,
                        h = new Qn;
                        if (e)
                            for (let u = 0, f = e.count; u < f; u += 3) {
                                const f = e.getX(u + 0),
                                d = e.getX(u + 1),
                                p = e.getX(u + 2);
                                i.fromBufferAttribute(t, f),
                                a.fromBufferAttribute(t, d),
                                r.fromBufferAttribute(t, p),
                                l.subVectors(r, a),
                                h.subVectors(i, a),
                                l.cross(h),
                                o.fromBufferAttribute(n, f),
                                s.fromBufferAttribute(n, d),
                                c.fromBufferAttribute(n, p),
                                o.add(l),
                                s.add(l),
                                c.add(l),
                                n.setXYZ(f, o.x, o.y, o.z),
                                n.setXYZ(d, s.x, s.y, s.z),
                                n.setXYZ(p, c.x, c.y, c.z)
                            }
                        else
                            for (let e = 0, o = t.count; e < o; e += 3)
                                i.fromBufferAttribute(t, e + 0), a.fromBufferAttribute(t, e + 1), r.fromBufferAttribute(t, e + 2), l.subVectors(r, a), h.subVectors(i, a), l.cross(h), n.setXYZ(e + 0, l.x, l.y, l.z), n.setXYZ(e + 1, l.x, l.y, l.z), n.setXYZ(e + 2, l.x, l.y, l.z);
                        this.normalizeNormals(),
                        n.needsUpdate = !0
                    }
                },
                merge: function (e, t) {
                    if (!e || !e.isBufferGeometry)
                        return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e);
                    void 0 === t && (t = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
                    const n = this.attributes;
                    for (const i in n) {
                        if (void 0 === e.attributes[i])
                            continue;
                        const a = n[i].array,
                        r = e.attributes[i],
                        o = r.array,
                        s = r.itemSize * t,
                        c = Math.min(o.length, a.length - s);
                        for (let e = 0, t = s; e < c; e++, t++)
                            a[t] = o[e]
                    }
                    return this
                },
                normalizeNormals: function () {
                    const e = this.attributes.normal;
                    for (let t = 0, n = e.count; t < n; t++)
                        ka.fromBufferAttribute(e, t), ka.normalize(), e.setXYZ(t, ka.x, ka.y, ka.z)
                },
                toNonIndexed: function () {
                    function e(e, t) {
                        const n = e.array,
                        i = e.itemSize,
                        a = e.normalized,
                        r = new n.constructor(t.length * i);
                        let o = 0,
                        s = 0;
                        for (let e = 0, a = t.length; e < a; e++) {
                            o = t[e] * i;
                            for (let e = 0; e < i; e++)
                                r[s++] = n[o++]
                        }
                        return new _a(r, i, a)
                    }
                    if (null === this.index)
                        return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."), this;
                    const t = new Ga,
                    n = this.index.array,
                    i = this.attributes;
                    for (const a in i) {
                        const r = e(i[a], n);
                        t.setAttribute(a, r)
                    }
                    const a = this.morphAttributes;
                    for (const i in a) {
                        const r = [],
                        o = a[i];
                        for (let t = 0, i = o.length; t < i; t++) {
                            const i = e(o[t], n);
                            r.push(i)
                        }
                        t.morphAttributes[i] = r
                    }
                    t.morphTargetsRelative = this.morphTargetsRelative;
                    const r = this.groups;
                    for (let e = 0, n = r.length; e < n; e++) {
                        const n = r[e];
                        t.addGroup(n.start, n.count, n.materialIndex)
                    }
                    return t
                },
                toJSON: function () {
                    const e = {
                        metadata: {
                            version: 4.5,
                            type: "BufferGeometry",
                            generator: "BufferGeometry.toJSON"
                        }
                    };
                    if (e.uuid = this.uuid, e.type = this.type, "" !== this.name && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), void 0 !== this.parameters) {
                        const t = this.parameters;
                        for (const n in t)
                            void 0 !== t[n] && (e[n] = t[n]);
                        return e
                    }
                    e.data = {
                        attributes: {}
                    };
                    const t = this.index;
                    null !== t && (e.data.index = {
                            type: t.array.constructor.name,
                            array: Array.prototype.slice.call(t.array)
                        });
                    const n = this.attributes;
                    for (const t in n) {
                        const i = n[t],
                        a = i.toJSON(e.data);
                        "" !== i.name && (a.name = i.name),
                        e.data.attributes[t] = a
                    }
                    const i = {};
                    let a = !1;
                    for (const t in this.morphAttributes) {
                        const n = this.morphAttributes[t],
                        r = [];
                        for (let t = 0, i = n.length; t < i; t++) {
                            const i = n[t],
                            a = i.toJSON(e.data);
                            "" !== i.name && (a.name = i.name),
                            r.push(a)
                        }
                        r.length > 0 && (i[t] = r, a = !0)
                    }
                    a && (e.data.morphAttributes = i, e.data.morphTargetsRelative = this.morphTargetsRelative);
                    const r = this.groups;
                    r.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(r)));
                    const o = this.boundingSphere;
                    return null !== o && (e.data.boundingSphere = {
                            center: o.center.toArray(),
                            radius: o.radius
                        }),
                    e
                },
                clone: function () {
                    return (new Ga).copy(this)
                },
                copy: function (e) {
                    this.index = null,
                    this.attributes = {},
                    this.morphAttributes = {},
                    this.groups = [],
                    this.boundingBox = null,
                    this.boundingSphere = null;
                    const t = {};
                    this.name = e.name;
                    const n = e.index;
                    null !== n && this.setIndex(n.clone(t));
                    const i = e.attributes;
                    for (const e in i) {
                        const n = i[e];
                        this.setAttribute(e, n.clone(t))
                    }
                    const a = e.morphAttributes;
                    for (const e in a) {
                        const n = [],
                        i = a[e];
                        for (let e = 0, a = i.length; e < a; e++)
                            n.push(i[e].clone(t));
                        this.morphAttributes[e] = n
                    }
                    this.morphTargetsRelative = e.morphTargetsRelative;
                    const r = e.groups;
                    for (let e = 0, t = r.length; e < t; e++) {
                        const t = r[e];
                        this.addGroup(t.start, t.count, t.materialIndex)
                    }
                    const o = e.boundingBox;
                    null !== o && (this.boundingBox = o.clone());
                    const s = e.boundingSphere;
                    return null !== s && (this.boundingSphere = s.clone()),
                    this.drawRange.start = e.drawRange.start,
                    this.drawRange.count = e.drawRange.count,
                    this.userData = e.userData,
                    this
                },
                dispose: function () {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            });
            const ja = new _i,
            Wa = new wi,
            Xa = new mi,
            qa = new Qn,
            Ya = new Qn,
            Za = new Qn,
            Qa = new Qn,
            Ja = new Qn,
            Ka = new Qn,
            $a = new Qn,
            er = new Qn,
            tr = new Qn,
            nr = new Un,
            ir = new Un,
            ar = new Un,
            rr = new Qn,
            or = new Qn;
            function sr(e, t) {
                Zi.call(this),
                this.type = "Mesh",
                this.geometry = void 0 !== e ? e : new Ga,
                this.material = void 0 !== t ? t : new Ma,
                this.updateMorphTargets()
            }
            function cr(e, t, n, i, a, r, o, s) {
                let c;
                if (c = t.side === m ? i.intersectTriangle(o, r, a, !0, s) : i.intersectTriangle(a, r, o, t.side !== v, s), null === c)
                    return null;
                or.copy(s),
                or.applyMatrix4(e.matrixWorld);
                const l = n.ray.origin.distanceTo(or);
                return l < n.near || l > n.far ? null : {
                    distance: l,
                    point: or.clone(),
                    object: e
                }
            }
            function lr(e, t, n, i, a, r, o, s, c, l, h, u) {
                qa.fromBufferAttribute(a, l),
                Ya.fromBufferAttribute(a, h),
                Za.fromBufferAttribute(a, u);
                const f = e.morphTargetInfluences;
                if (t.morphTargets && r && f) {
                    $a.set(0, 0, 0),
                    er.set(0, 0, 0),
                    tr.set(0, 0, 0);
                    for (let e = 0, t = r.length; e < t; e++) {
                        const t = f[e],
                        n = r[e];
                        0 !== t && (Qa.fromBufferAttribute(n, l), Ja.fromBufferAttribute(n, h), Ka.fromBufferAttribute(n, u), o ? ($a.addScaledVector(Qa, t), er.addScaledVector(Ja, t), tr.addScaledVector(Ka, t)) : ($a.addScaledVector(Qa.sub(qa), t), er.addScaledVector(Ja.sub(Ya), t), tr.addScaledVector(Ka.sub(Za), t)))
                    }
                    qa.add($a),
                    Ya.add(er),
                    Za.add(tr)
                }
                e.isSkinnedMesh && (e.boneTransform(l, qa), e.boneTransform(h, Ya), e.boneTransform(u, Za));
                const d = cr(e, t, n, i, qa, Ya, Za, rr);
                if (d) {
                    s && (nr.fromBufferAttribute(s, l), ir.fromBufferAttribute(s, h), ar.fromBufferAttribute(s, u), d.uv = ha.getUV(rr, qa, Ya, Za, nr, ir, ar, new Un)),
                    c && (nr.fromBufferAttribute(c, l), ir.fromBufferAttribute(c, h), ar.fromBufferAttribute(c, u), d.uv2 = ha.getUV(rr, qa, Ya, Za, nr, ir, ar, new Un));
                    const e = new xa(l, h, u);
                    ha.getNormal(qa, Ya, Za, e.normal),
                    d.face = e
                }
                return d
            }
            sr.prototype = Object.assign(Object.create(Zi.prototype), {
                constructor: sr,
                isMesh: !0,
                copy: function (e) {
                    return Zi.prototype.copy.call(this, e),
                    void 0 !== e.morphTargetInfluences && (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
                    void 0 !== e.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)),
                    this.material = e.material,
                    this.geometry = e.geometry,
                    this
                },
                updateMorphTargets: function () {
                    const e = this.geometry;
                    if (e.isBufferGeometry) {
                        const t = e.morphAttributes,
                        n = Object.keys(t);
                        if (n.length > 0) {
                            const e = t[n[0]];
                            if (void 0 !== e) {
                                this.morphTargetInfluences = [],
                                this.morphTargetDictionary = {};
                                for (let t = 0, n = e.length; t < n; t++) {
                                    const n = e[t].name || String(t);
                                    this.morphTargetInfluences.push(0),
                                    this.morphTargetDictionary[n] = t
                                }
                            }
                        }
                    } else {
                        const t = e.morphTargets;
                        void 0 !== t && t.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")
                    }
                },
                raycast: function (e, t) {
                    const n = this.geometry,
                    i = this.material,
                    a = this.matrixWorld;
                    if (void 0 === i)
                        return;
                    if (null === n.boundingSphere && n.computeBoundingSphere(), Xa.copy(n.boundingSphere), Xa.applyMatrix4(a), !1 === e.ray.intersectsSphere(Xa))
                        return;
                    if (ja.getInverse(a), Wa.copy(e.ray).applyMatrix4(ja), null !== n.boundingBox && !1 === Wa.intersectsBox(n.boundingBox))
                        return;
                    let r;
                    if (n.isBufferGeometry) {
                        const a = n.index,
                        o = n.attributes.position,
                        s = n.morphAttributes.position,
                        c = n.morphTargetsRelative,
                        l = n.attributes.uv,
                        h = n.attributes.uv2,
                        u = n.groups,
                        f = n.drawRange;
                        if (null !== a)
                            if (Array.isArray(i))
                                for (let n = 0, d = u.length; n < d; n++) {
                                    const d = u[n],
                                    p = i[d.materialIndex];
                                    for (let n = Math.max(d.start, f.start), i = Math.min(d.start + d.count, f.start + f.count); n < i; n += 3) {
                                        const i = a.getX(n),
                                        u = a.getX(n + 1),
                                        f = a.getX(n + 2);
                                        r = lr(this, p, e, Wa, o, s, c, l, h, i, u, f),
                                        r && (r.faceIndex = Math.floor(n / 3), r.face.materialIndex = d.materialIndex, t.push(r))
                                    }
                                }
                            else
                                for (let n = Math.max(0, f.start), u = Math.min(a.count, f.start + f.count); n < u; n += 3) {
                                    const u = a.getX(n),
                                    f = a.getX(n + 1),
                                    d = a.getX(n + 2);
                                    r = lr(this, i, e, Wa, o, s, c, l, h, u, f, d),
                                    r && (r.faceIndex = Math.floor(n / 3), t.push(r))
                                }
                        else if (void 0 !== o)
                            if (Array.isArray(i))
                                for (let n = 0, a = u.length; n < a; n++) {
                                    const a = u[n],
                                    d = i[a.materialIndex];
                                    for (let n = Math.max(a.start, f.start), i = Math.min(a.start + a.count, f.start + f.count); n < i; n += 3)
                                        r = lr(this, d, e, Wa, o, s, c, l, h, n, n + 1, n + 2), r && (r.faceIndex = Math.floor(n / 3), r.face.materialIndex = a.materialIndex, t.push(r))
                                }
                            else
                                for (let n = Math.max(0, f.start), a = Math.min(o.count, f.start + f.count); n < a; n += 3)
                                    r = lr(this, i, e, Wa, o, s, c, l, h, n, n + 1, n + 2), r && (r.faceIndex = Math.floor(n / 3), t.push(r))
                    } else if (n.isGeometry) {
                        const a = Array.isArray(i),
                        o = n.vertices,
                        s = n.faces;
                        let c;
                        const l = n.faceVertexUvs[0];
                        l.length > 0 && (c = l);
                        for (let n = 0, l = s.length; n < l; n++) {
                            const l = s[n],
                            h = a ? i[l.materialIndex] : i;
                            if (void 0 === h)
                                continue;
                            const u = o[l.a],
                            f = o[l.b],
                            d = o[l.c];
                            if (r = cr(this, h, e, Wa, u, f, d, rr), r) {
                                if (c && c[n]) {
                                    const e = c[n];
                                    nr.copy(e[0]),
                                    ir.copy(e[1]),
                                    ar.copy(e[2]),
                                    r.uv = ha.getUV(rr, u, f, d, nr, ir, ar, new Un)
                                }
                                r.face = l,
                                r.faceIndex = n,
                                t.push(r)
                            }
                        }
                    }
                }
            });
            class hr extends Ga {
                constructor(e = 1, t = 1, n = 1, i = 1, a = 1, r = 1) {
                    super(),
                    this.type = "BoxBufferGeometry",
                    this.parameters = {
                        width: e,
                        height: t,
                        depth: n,
                        widthSegments: i,
                        heightSegments: a,
                        depthSegments: r
                    };
                    const o = this;
                    i = Math.floor(i),
                    a = Math.floor(a),
                    r = Math.floor(r);
                    const s = [],
                    c = [],
                    l = [],
                    h = [];
                    let u = 0,
                    f = 0;
                    function d(e, t, n, i, a, r, d, p, m, v, g) {
                        const x = r / m,
                        y = d / v,
                        b = r / 2,
                        M = d / 2,
                        z = p / 2,
                        w = m + 1,
                        _ = v + 1;
                        let S = 0,
                        L = 0;
                        const A = new Qn;
                        for (let r = 0; r < _; r++) {
                            const o = r * y - M;
                            for (let s = 0; s < w; s++) {
                                const u = s * x - b;
                                A[e] = u * i,
                                A[t] = o * a,
                                A[n] = z,
                                c.push(A.x, A.y, A.z),
                                A[e] = 0,
                                A[t] = 0,
                                A[n] = p > 0 ? 1 : -1,
                                l.push(A.x, A.y, A.z),
                                h.push(s / m),
                                h.push(1 - r / v),
                                S += 1
                            }
                        }
                        for (let e = 0; e < v; e++)
                            for (let t = 0; t < m; t++) {
                                const n = u + t + w * e,
                                i = u + t + w * (e + 1),
                                a = u + (t + 1) + w * (e + 1),
                                r = u + (t + 1) + w * e;
                                s.push(n, i, r),
                                s.push(i, a, r),
                                L += 6
                            }
                        o.addGroup(f, L, g),
                        f += L,
                        u += S
                    }
                    d("z", "y", "x", -1, -1, n, t, e, r, a, 0),
                    d("z", "y", "x", 1, -1, n, t, -e, r, a, 1),
                    d("x", "z", "y", 1, 1, e, n, t, i, r, 2),
                    d("x", "z", "y", 1, -1, e, n, -t, i, r, 3),
                    d("x", "y", "z", 1, -1, e, t, n, i, a, 4),
                    d("x", "y", "z", -1, -1, e, t, -n, i, a, 5),
                    this.setIndex(s),
                    this.setAttribute("position", new Na(c, 3)),
                    this.setAttribute("normal", new Na(l, 3)),
                    this.setAttribute("uv", new Na(h, 2))
                }
            }
            function ur(e) {
                const t = {};
                for (const n in e) {
                    t[n] = {};
                    for (const i in e[n]) {
                        const a = e[n][i];
                        a && (a.isColor || a.isMatrix3 || a.isMatrix4 || a.isVector2 || a.isVector3 || a.isVector4 || a.isTexture) ? t[n][i] = a.clone() : Array.isArray(a) ? t[n][i] = a.slice() : t[n][i] = a
                    }
                }
                return t
            }
            function fr(e) {
                const t = {};
                for (let n = 0; n < e.length; n++) {
                    const i = ur(e[n]);
                    for (const e in i)
                        t[e] = i[e]
                }
                return t
            }
            const dr = {
                clone: ur,
                merge: fr
            };
            function pr(e) {
                ba.call(this),
                this.type = "ShaderMaterial",
                this.defines = {},
                this.uniforms = {},
                this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
                this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
                this.linewidth = 1,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.fog = !1,
                this.lights = !1,
                this.clipping = !1,
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.extensions = {
                    derivatives: !1,
                    fragDepth: !1,
                    drawBuffers: !1,
                    shaderTextureLOD: !1
                },
                this.defaultAttributeValues = {
                    color: [1, 1, 1],
                    uv: [0, 0],
                    uv2: [0, 0]
                },
                this.index0AttributeName = void 0,
                this.uniformsNeedUpdate = !1,
                this.glslVersion = null,
                void 0 !== e && (void 0 !== e.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(e))
            }
            function mr() {
                Zi.call(this),
                this.type = "Camera",
                this.matrixWorldInverse = new _i,
                this.projectionMatrix = new _i,
                this.projectionMatrixInverse = new _i
            }
            function vr(e, t, n, i) {
                mr.call(this),
                this.type = "PerspectiveCamera",
                this.fov = void 0 !== e ? e : 50,
                this.zoom = 1,
                this.near = void 0 !== n ? n : .1,
                this.far = void 0 !== i ? i : 2e3,
                this.focus = 10,
                this.aspect = void 0 !== t ? t : 1,
                this.view = null,
                this.filmGauge = 35,
                this.filmOffset = 0,
                this.updateProjectionMatrix()
            }
            pr.prototype = Object.create(ba.prototype),
            pr.prototype.constructor = pr,
            pr.prototype.isShaderMaterial = !0,
            pr.prototype.copy = function (e) {
                return ba.prototype.copy.call(this, e),
                this.fragmentShader = e.fragmentShader,
                this.vertexShader = e.vertexShader,
                this.uniforms = ur(e.uniforms),
                this.defines = Object.assign({}, e.defines),
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this.lights = e.lights,
                this.clipping = e.clipping,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.morphNormals = e.morphNormals,
                this.extensions = Object.assign({}, e.extensions),
                this.glslVersion = e.glslVersion,
                this
            },
            pr.prototype.toJSON = function (e) {
                const t = ba.prototype.toJSON.call(this, e);
                t.glslVersion = this.glslVersion,
                t.uniforms = {};
                for (const n in this.uniforms) {
                    const i = this.uniforms[n].value;
                    i && i.isTexture ? t.uniforms[n] = {
                        type: "t",
                        value: i.toJSON(e).uuid
                    }
                     : i && i.isColor ? t.uniforms[n] = {
                        type: "c",
                        value: i.getHex()
                    }
                     : i && i.isVector2 ? t.uniforms[n] = {
                        type: "v2",
                        value: i.toArray()
                    }
                     : i && i.isVector3 ? t.uniforms[n] = {
                        type: "v3",
                        value: i.toArray()
                    }
                     : i && i.isVector4 ? t.uniforms[n] = {
                        type: "v4",
                        value: i.toArray()
                    }
                     : i && i.isMatrix3 ? t.uniforms[n] = {
                        type: "m3",
                        value: i.toArray()
                    }
                     : i && i.isMatrix4 ? t.uniforms[n] = {
                        type: "m4",
                        value: i.toArray()
                    }
                     : t.uniforms[n] = {
                        value: i
                    }
                }
                Object.keys(this.defines).length > 0 && (t.defines = this.defines),
                t.vertexShader = this.vertexShader,
                t.fragmentShader = this.fragmentShader;
                const n = {};
                for (const e in this.extensions)
                    !0 === this.extensions[e] && (n[e] = !0);
                return Object.keys(n).length > 0 && (t.extensions = n),
                t
            },
            mr.prototype = Object.assign(Object.create(Zi.prototype), {
                constructor: mr,
                isCamera: !0,
                copy: function (e, t) {
                    return Zi.prototype.copy.call(this, e, t),
                    this.matrixWorldInverse.copy(e.matrixWorldInverse),
                    this.projectionMatrix.copy(e.projectionMatrix),
                    this.projectionMatrixInverse.copy(e.projectionMatrixInverse),
                    this
                },
                getWorldDirection: function (e) {
                    void 0 === e && (console.warn("THREE.Camera: .getWorldDirection() target is now required"), e = new Qn),
                    this.updateMatrixWorld(!0);
                    const t = this.matrixWorld.elements;
                    return e.set(-t[8], -t[9], -t[10]).normalize()
                },
                updateMatrixWorld: function (e) {
                    Zi.prototype.updateMatrixWorld.call(this, e),
                    this.matrixWorldInverse.getInverse(this.matrixWorld)
                },
                updateWorldMatrix: function (e, t) {
                    Zi.prototype.updateWorldMatrix.call(this, e, t),
                    this.matrixWorldInverse.getInverse(this.matrixWorld)
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                }
            }),
            vr.prototype = Object.assign(Object.create(mr.prototype), {
                constructor: vr,
                isPerspectiveCamera: !0,
                copy: function (e, t) {
                    return mr.prototype.copy.call(this, e, t),
                    this.fov = e.fov,
                    this.zoom = e.zoom,
                    this.near = e.near,
                    this.far = e.far,
                    this.focus = e.focus,
                    this.aspect = e.aspect,
                    this.view = null === e.view ? null : Object.assign({}, e.view),
                    this.filmGauge = e.filmGauge,
                    this.filmOffset = e.filmOffset,
                    this
                },
                setFocalLength: function (e) {
                    const t = .5 * this.getFilmHeight() / e;
                    this.fov = 2 * Dn.RAD2DEG * Math.atan(t),
                    this.updateProjectionMatrix()
                },
                getFocalLength: function () {
                    const e = Math.tan(.5 * Dn.DEG2RAD * this.fov);
                    return .5 * this.getFilmHeight() / e
                },
                getEffectiveFOV: function () {
                    return 2 * Dn.RAD2DEG * Math.atan(Math.tan(.5 * Dn.DEG2RAD * this.fov) / this.zoom)
                },
                getFilmWidth: function () {
                    return this.filmGauge * Math.min(this.aspect, 1)
                },
                getFilmHeight: function () {
                    return this.filmGauge / Math.max(this.aspect, 1)
                },
                setViewOffset: function (e, t, n, i, a, r) {
                    this.aspect = e / t,
                    null === this.view && (this.view = {
                            enabled: !0,
                            fullWidth: 1,
                            fullHeight: 1,
                            offsetX: 0,
                            offsetY: 0,
                            width: 1,
                            height: 1
                        }),
                    this.view.enabled = !0,
                    this.view.fullWidth = e,
                    this.view.fullHeight = t,
                    this.view.offsetX = n,
                    this.view.offsetY = i,
                    this.view.width = a,
                    this.view.height = r,
                    this.updateProjectionMatrix()
                },
                clearViewOffset: function () {
                    null !== this.view && (this.view.enabled = !1),
                    this.updateProjectionMatrix()
                },
                updateProjectionMatrix: function () {
                    const e = this.near;
                    let t = e * Math.tan(.5 * Dn.DEG2RAD * this.fov) / this.zoom,
                    n = 2 * t,
                    i = this.aspect * n,
                    a =  - .5 * i;
                    const r = this.view;
                    if (null !== this.view && this.view.enabled) {
                        const e = r.fullWidth,
                        o = r.fullHeight;
                        a += r.offsetX * i / e,
                        t -= r.offsetY * n / o,
                        i *= r.width / e,
                        n *= r.height / o
                    }
                    const o = this.filmOffset;
                    0 !== o && (a += e * o / this.getFilmWidth()),
                    this.projectionMatrix.makePerspective(a, a + i, t, t - n, e, this.far),
                    this.projectionMatrixInverse.getInverse(this.projectionMatrix)
                },
                toJSON: function (e) {
                    const t = Zi.prototype.toJSON.call(this, e);
                    return t.object.fov = this.fov,
                    t.object.zoom = this.zoom,
                    t.object.near = this.near,
                    t.object.far = this.far,
                    t.object.focus = this.focus,
                    t.object.aspect = this.aspect,
                    null !== this.view && (t.object.view = Object.assign({}, this.view)),
                    t.object.filmGauge = this.filmGauge,
                    t.object.filmOffset = this.filmOffset,
                    t
                }
            });
            const gr = 90;
            function xr(e, t, n) {
                if (Zi.call(this), this.type = "CubeCamera", !0 !== n.isWebGLCubeRenderTarget)
                    return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");
                this.renderTarget = n;
                const i = new vr(gr, 1, e, t);
                i.layers = this.layers,
                i.up.set(0, -1, 0),
                i.lookAt(new Qn(1, 0, 0)),
                this.add(i);
                const a = new vr(gr, 1, e, t);
                a.layers = this.layers,
                a.up.set(0, -1, 0),
                a.lookAt(new Qn(-1, 0, 0)),
                this.add(a);
                const r = new vr(gr, 1, e, t);
                r.layers = this.layers,
                r.up.set(0, 0, 1),
                r.lookAt(new Qn(0, 1, 0)),
                this.add(r);
                const o = new vr(gr, 1, e, t);
                o.layers = this.layers,
                o.up.set(0, 0, -1),
                o.lookAt(new Qn(0, -1, 0)),
                this.add(o);
                const s = new vr(gr, 1, e, t);
                s.layers = this.layers,
                s.up.set(0, -1, 0),
                s.lookAt(new Qn(0, 0, 1)),
                this.add(s);
                const c = new vr(gr, 1, e, t);
                c.layers = this.layers,
                c.up.set(0, -1, 0),
                c.lookAt(new Qn(0, 0, -1)),
                this.add(c),
                this.update = function (e, t) {
                    null === this.parent && this.updateMatrixWorld();
                    const l = e.xr.enabled,
                    h = e.getRenderTarget();
                    e.xr.enabled = !1;
                    const u = n.texture.generateMipmaps;
                    n.texture.generateMipmaps = !1,
                    e.setRenderTarget(n, 0),
                    e.render(t, i),
                    e.setRenderTarget(n, 1),
                    e.render(t, a),
                    e.setRenderTarget(n, 2),
                    e.render(t, r),
                    e.setRenderTarget(n, 3),
                    e.render(t, o),
                    e.setRenderTarget(n, 4),
                    e.render(t, s),
                    n.texture.generateMipmaps = u,
                    e.setRenderTarget(n, 5),
                    e.render(t, c),
                    e.setRenderTarget(h),
                    e.xr.enabled = l
                },
                this.clear = function (e, t, i, a) {
                    const r = e.getRenderTarget();
                    for (let r = 0; r < 6; r++)
                        e.setRenderTarget(n, r), e.clear(t, i, a);
                    e.setRenderTarget(r)
                }
            }
            function yr(e, t, n, i, a, r, o, s, c, l) {
                e = void 0 !== e ? e : [],
                t = void 0 !== t ? t : re,
                o = void 0 !== o ? o : Ie,
                Wn.call(this, e, t, n, i, a, r, o, s, c, l),
                this.flipY = !1,
                this._needsFlipEnvMap = !0
            }
            function br(e, t, n) {
                Number.isInteger(t) && (console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"), t = n),
                qn.call(this, e, e, t),
                t = t || {},
                this.texture = new yr(void 0, t.mapping, t.wrapS, t.wrapT, t.magFilter, t.minFilter, t.format, t.type, t.anisotropy, t.encoding),
                this.texture._needsFlipEnvMap = !1
            }
            function Mr(e, t, n, i, a, r, o, s, c, l, h, u) {
                Wn.call(this, null, r, o, s, c, l, i, a, h, u),
                this.image = {
                    data: e || null,
                    width: t || 1,
                    height: n || 1
                },
                this.magFilter = void 0 !== c ? c : pe,
                this.minFilter = void 0 !== l ? l : pe,
                this.generateMipmaps = !1,
                this.flipY = !1,
                this.unpackAlignment = 1,
                this.needsUpdate = !0
            }
            xr.prototype = Object.create(Zi.prototype),
            xr.prototype.constructor = xr,
            yr.prototype = Object.create(Wn.prototype),
            yr.prototype.constructor = yr,
            yr.prototype.isCubeTexture = !0,
            Object.defineProperty(yr.prototype, "images", {
                get: function () {
                    return this.image
                },
                set: function (e) {
                    this.image = e
                }
            }),
            br.prototype = Object.create(qn.prototype),
            br.prototype.constructor = br,
            br.prototype.isWebGLCubeRenderTarget = !0,
            br.prototype.fromEquirectangularTexture = function (e, t) {
                this.texture.type = t.type,
                this.texture.format = Oe,
                this.texture.encoding = t.encoding,
                this.texture.generateMipmaps = t.generateMipmaps,
                this.texture.minFilter = t.minFilter,
                this.texture.magFilter = t.magFilter;
                const n = {
                    tEquirect: {
                        value: null
                    }
                },
                i = "\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t",
                a = "\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t",
                r = new hr(5, 5, 5),
                o = new pr({
                    name: "CubemapFromEquirect",
                    uniforms: ur(n),
                    vertexShader: i,
                    fragmentShader: a,
                    side: m,
                    blending: y
                });
                o.uniforms.tEquirect.value = t;
                const s = new sr(r, o),
                c = t.minFilter;
                return t.minFilter === ze && (t.minFilter = ye),
                new xr(1, 10, this).update(e, s),
                t.minFilter = c,
                s.geometry.dispose(),
                s.material.dispose(),
                this
            },
            Mr.prototype = Object.create(Wn.prototype),
            Mr.prototype.constructor = Mr,
            Mr.prototype.isDataTexture = !0;
            const zr = new mi,
            wr = new Qn;
            class _r {
                constructor(e, t, n, i, a, r) {
                    this.planes = [void 0 !== e ? e : new $i, void 0 !== t ? t : new $i, void 0 !== n ? n : new $i, void 0 !== i ? i : new $i, void 0 !== a ? a : new $i, void 0 !== r ? r : new $i]
                }
                set(e, t, n, i, a, r) {
                    const o = this.planes;
                    return o[0].copy(e),
                    o[1].copy(t),
                    o[2].copy(n),
                    o[3].copy(i),
                    o[4].copy(a),
                    o[5].copy(r),
                    this
                }
                clone() {
                    return (new this.constructor).copy(this)
                }
                copy(e) {
                    const t = this.planes;
                    for (let n = 0; n < 6; n++)
                        t[n].copy(e.planes[n]);
                    return this
                }
                setFromProjectionMatrix(e) {
                    const t = this.planes,
                    n = e.elements,
                    i = n[0],
                    a = n[1],
                    r = n[2],
                    o = n[3],
                    s = n[4],
                    c = n[5],
                    l = n[6],
                    h = n[7],
                    u = n[8],
                    f = n[9],
                    d = n[10],
                    p = n[11],
                    m = n[12],
                    v = n[13],
                    g = n[14],
                    x = n[15];
                    return t[0].setComponents(o - i, h - s, p - u, x - m).normalize(),
                    t[1].setComponents(o + i, h + s, p + u, x + m).normalize(),
                    t[2].setComponents(o + a, h + c, p + f, x + v).normalize(),
                    t[3].setComponents(o - a, h - c, p - f, x - v).normalize(),
                    t[4].setComponents(o - r, h - l, p - d, x - g).normalize(),
                    t[5].setComponents(o + r, h + l, p + d, x + g).normalize(),
                    this
                }
                intersectsObject(e) {
                    const t = e.geometry;
                    return null === t.boundingSphere && t.computeBoundingSphere(),
                    zr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),
                    this.intersectsSphere(zr)
                }
                intersectsSprite(e) {
                    return zr.center.set(0, 0, 0),
                    zr.radius = .7071067811865476,
                    zr.applyMatrix4(e.matrixWorld),
                    this.intersectsSphere(zr)
                }
                intersectsSphere(e) {
                    const t = this.planes,
                    n = e.center,
                    i = -e.radius;
                    for (let e = 0; e < 6; e++)
                        if (t[e].distanceToPoint(n) < i)
                            return !1;
                    return !0
                }
                intersectsBox(e) {
                    const t = this.planes;
                    for (let n = 0; n < 6; n++) {
                        const i = t[n];
                        if (wr.x = i.normal.x > 0 ? e.max.x : e.min.x, wr.y = i.normal.y > 0 ? e.max.y : e.min.y, wr.z = i.normal.z > 0 ? e.max.z : e.min.z, i.distanceToPoint(wr) < 0)
                            return !1
                    }
                    return !0
                }
                containsPoint(e) {
                    const t = this.planes;
                    for (let n = 0; n < 6; n++)
                        if (t[n].distanceToPoint(e) < 0)
                            return !1;
                    return !0
                }
            }
            function Sr() {
                let e = null,
                t = !1,
                n = null,
                i = null;
                function a(t, r) {
                    n(t, r),
                    i = e.requestAnimationFrame(a)
                }
                return {
                    start: function () {
                        !0 !== t && null !== n && (i = e.requestAnimationFrame(a), t = !0)
                    },
                    stop: function () {
                        e.cancelAnimationFrame(i),
                        t = !1
                    },
                    setAnimationLoop: function (e) {
                        n = e
                    },
                    setContext: function (t) {
                        e = t
                    }
                }
            }
            function Lr(e, t) {
                const n = t.isWebGL2,
                i = new WeakMap;
                return {
                    get: function (e) {
                        return e.isInterleavedBufferAttribute && (e = e.data),
                        i.get(e)
                    },
                    remove: function (t) {
                        t.isInterleavedBufferAttribute && (t = t.data);
                        const n = i.get(t);
                        n && (e.deleteBuffer(n.buffer), i.delete(t))
                    },
                    update: function (t, a) {
                        if (t.isGLBufferAttribute) {
                            var r = i.get(t);
                            return void((!r || r.version < t.version) && i.set(t, {
                                    buffer: t.buffer,
                                    type: t.type,
                                    bytesPerElement: t.elementSize,
                                    version: t.version
                                }))
                        }
                        t.isInterleavedBufferAttribute && (t = t.data);
                        const o = i.get(t);
                        void 0 === o ? i.set(t, function (t, n) {
                            const i = t.array,
                            a = t.usage,
                            r = e.createBuffer();
                            e.bindBuffer(n, r),
                            e.bufferData(n, i, a),
                            t.onUploadCallback();
                            let o = 5126;
                            return i instanceof Float32Array ? o = 5126 : i instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : i instanceof Uint16Array ? o = 5123 : i instanceof Int16Array ? o = 5122 : i instanceof Uint32Array ? o = 5125 : i instanceof Int32Array ? o = 5124 : i instanceof Int8Array ? o = 5120 : i instanceof Uint8Array && (o = 5121), {
                                buffer: r,
                                type: o,
                                bytesPerElement: i.BYTES_PER_ELEMENT,
                                version: t.version
                            }
                        }
                            (t, a)) : o.version < t.version && (function (t, i, a) {
                            const r = i.array,
                            o = i.updateRange;
                            e.bindBuffer(a, t),
                            -1 === o.count ? e.bufferSubData(a, 0, r) : (n ? e.bufferSubData(a, o.offset * r.BYTES_PER_ELEMENT, r, o.offset, o.count) : e.bufferSubData(a, o.offset * r.BYTES_PER_ELEMENT, r.subarray(o.offset, o.offset + o.count)), o.count = -1)
                        }
                            (o.buffer, t, a), o.version = t.version)
                    }
                }
            }
            class Ar extends Ga {
                constructor(e, t, n, i) {
                    super(),
                    this.type = "PlaneBufferGeometry",
                    this.parameters = {
                        width: e,
                        height: t,
                        widthSegments: n,
                        heightSegments: i
                    };
                    const a = (e = e || 1) / 2,
                    r = (t = t || 1) / 2,
                    o = Math.floor(n) || 1,
                    s = Math.floor(i) || 1,
                    c = o + 1,
                    l = s + 1,
                    h = e / o,
                    u = t / s,
                    f = [],
                    d = [],
                    p = [],
                    m = [];
                    for (let e = 0; e < l; e++) {
                        const t = e * u - r;
                        for (let n = 0; n < c; n++) {
                            const i = n * h - a;
                            d.push(i, -t, 0),
                            p.push(0, 0, 1),
                            m.push(n / o),
                            m.push(1 - e / s)
                        }
                    }
                    for (let e = 0; e < s; e++)
                        for (let t = 0; t < o; t++) {
                            const n = t + c * e,
                            i = t + c * (e + 1),
                            a = t + 1 + c * (e + 1),
                            r = t + 1 + c * e;
                            f.push(n, i, r),
                            f.push(i, a, r)
                        }
                    this.setIndex(f),
                    this.setAttribute("position", new Na(d, 3)),
                    this.setAttribute("normal", new Na(p, 3)),
                    this.setAttribute("uv", new Na(m, 2))
                }
            }
            const Tr = {
                alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",
                alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
                alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",
                aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",
                aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
                begin_vertex: "vec3 transformed = vec3( position );",
                beginnormal_vertex: "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",
                bsdfs: "vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",
                bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
                clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
                clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
                clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",
                clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",
                color_fragment: "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
                color_pars_fragment: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
                color_pars_vertex: "#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",
                color_vertex: "#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",
                common: "#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",
                cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",
                defaultnormal_vertex: "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
                displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",
                displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",
                emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
                emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",
                encodings_fragment: "gl_FragColor = linearToOutputTexel( gl_FragColor );",
                encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",
                envmap_fragment: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
                envmap_common_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",
                envmap_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
                envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",
                envmap_physical_pars_fragment: "#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",
                envmap_vertex: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
                fog_vertex: "#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",
                fog_pars_vertex: "#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",
                fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
                fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
                gradientmap_pars_fragment: "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",
                lightmap_fragment: "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",
                lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
                lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",
                lights_pars_begin: "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",
                lights_toon_fragment: "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",
                lights_toon_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",
                lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
                lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",
                lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",
                lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
                lights_fragment_begin: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
                lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",
                lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",
                logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
                logdepthbuf_pars_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",
                logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",
                logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",
                map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",
                map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
                map_particle_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
                map_particle_pars_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
                metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
                metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
                morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",
                morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
                morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",
                normal_fragment_begin: "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",
                normal_fragment_maps: "#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",
                normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",
                clearcoat_normal_fragment_begin: "#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",
                clearcoat_normal_fragment_maps: "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",
                clearcoat_pars_fragment: "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",
                packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",
                premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",
                project_vertex: "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",
                dithering_fragment: "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
                dithering_pars_fragment: "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
                roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
                roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
                shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
                shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
                shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",
                shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
                skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
                skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",
                skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
                skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
                specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
                specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
                tonemapping_fragment: "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
                tonemapping_pars_fragment: "#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",
                transmissionmap_fragment: "#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",
                transmissionmap_pars_fragment: "#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",
                uv_pars_fragment: "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",
                uv_pars_vertex: "#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",
                uv_vertex: "#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
                uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
                uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",
                uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",
                worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",
                background_frag: "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                background_vert: "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
                cube_frag: "#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                cube_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
                depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",
                depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",
                distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
                distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
                equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                equirect_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
                linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
                linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
                meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
                meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                meshmatcap_frag: "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                meshmatcap_vert: "#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
                meshtoon_frag: "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                meshtoon_vert: "#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                meshphysical_frag: "#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                meshphysical_vert: "#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",
                normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
                points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
                points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
                shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
                shadow_vert: "#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                sprite_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
                sprite_vert: "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"
            },
            Cr = {
                common: {
                    diffuse: {
                        value: new ga(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    map: {
                        value: null
                    },
                    uvTransform: {
                        value: new Bn
                    },
                    uv2Transform: {
                        value: new Bn
                    },
                    alphaMap: {
                        value: null
                    }
                },
                specularmap: {
                    specularMap: {
                        value: null
                    }
                },
                envmap: {
                    envMap: {
                        value: null
                    },
                    flipEnvMap: {
                        value: -1
                    },
                    reflectivity: {
                        value: 1
                    },
                    refractionRatio: {
                        value: .98
                    },
                    maxMipLevel: {
                        value: 0
                    }
                },
                aomap: {
                    aoMap: {
                        value: null
                    },
                    aoMapIntensity: {
                        value: 1
                    }
                },
                lightmap: {
                    lightMap: {
                        value: null
                    },
                    lightMapIntensity: {
                        value: 1
                    }
                },
                emissivemap: {
                    emissiveMap: {
                        value: null
                    }
                },
                bumpmap: {
                    bumpMap: {
                        value: null
                    },
                    bumpScale: {
                        value: 1
                    }
                },
                normalmap: {
                    normalMap: {
                        value: null
                    },
                    normalScale: {
                        value: new Un(1, 1)
                    }
                },
                displacementmap: {
                    displacementMap: {
                        value: null
                    },
                    displacementScale: {
                        value: 1
                    },
                    displacementBias: {
                        value: 0
                    }
                },
                roughnessmap: {
                    roughnessMap: {
                        value: null
                    }
                },
                metalnessmap: {
                    metalnessMap: {
                        value: null
                    }
                },
                gradientmap: {
                    gradientMap: {
                        value: null
                    }
                },
                fog: {
                    fogDensity: {
                        value: 25e-5
                    },
                    fogNear: {
                        value: 1
                    },
                    fogFar: {
                        value: 2e3
                    },
                    fogColor: {
                        value: new ga(16777215)
                    }
                },
                lights: {
                    ambientLightColor: {
                        value: []
                    },
                    lightProbe: {
                        value: []
                    },
                    directionalLights: {
                        value: [],
                        properties: {
                            direction: {},
                            color: {}
                        }
                    },
                    directionalLightShadows: {
                        value: [],
                        properties: {
                            shadowBias: {},
                            shadowNormalBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    directionalShadowMap: {
                        value: []
                    },
                    directionalShadowMatrix: {
                        value: []
                    },
                    spotLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            direction: {},
                            distance: {},
                            coneCos: {},
                            penumbraCos: {},
                            decay: {}
                        }
                    },
                    spotLightShadows: {
                        value: [],
                        properties: {
                            shadowBias: {},
                            shadowNormalBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    spotShadowMap: {
                        value: []
                    },
                    spotShadowMatrix: {
                        value: []
                    },
                    pointLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            decay: {},
                            distance: {}
                        }
                    },
                    pointLightShadows: {
                        value: [],
                        properties: {
                            shadowBias: {},
                            shadowNormalBias: {},
                            shadowRadius: {},
                            shadowMapSize: {},
                            shadowCameraNear: {},
                            shadowCameraFar: {}
                        }
                    },
                    pointShadowMap: {
                        value: []
                    },
                    pointShadowMatrix: {
                        value: []
                    },
                    hemisphereLights: {
                        value: [],
                        properties: {
                            direction: {},
                            skyColor: {},
                            groundColor: {}
                        }
                    },
                    rectAreaLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            width: {},
                            height: {}
                        }
                    },
                    ltc_1: {
                        value: null
                    },
                    ltc_2: {
                        value: null
                    }
                },
                points: {
                    diffuse: {
                        value: new ga(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    size: {
                        value: 1
                    },
                    scale: {
                        value: 1
                    },
                    map: {
                        value: null
                    },
                    alphaMap: {
                        value: null
                    },
                    uvTransform: {
                        value: new Bn
                    }
                },
                sprite: {
                    diffuse: {
                        value: new ga(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    center: {
                        value: new Un(.5, .5)
                    },
                    rotation: {
                        value: 0
                    },
                    map: {
                        value: null
                    },
                    alphaMap: {
                        value: null
                    },
                    uvTransform: {
                        value: new Bn
                    }
                }
            },
            Er = {
                basic: {
                    uniforms: fr([Cr.common, Cr.specularmap, Cr.envmap, Cr.aomap, Cr.lightmap, Cr.fog]),
                    vertexShader: Tr.meshbasic_vert,
                    fragmentShader: Tr.meshbasic_frag
                },
                lambert: {
                    uniforms: fr([Cr.common, Cr.specularmap, Cr.envmap, Cr.aomap, Cr.lightmap, Cr.emissivemap, Cr.fog, Cr.lights, {
                                emissive: {
                                    value: new ga(0)
                                }
                            }
                        ]),
                    vertexShader: Tr.meshlambert_vert,
                    fragmentShader: Tr.meshlambert_frag
                },
                phong: {
                    uniforms: fr([Cr.common, Cr.specularmap, Cr.envmap, Cr.aomap, Cr.lightmap, Cr.emissivemap, Cr.bumpmap, Cr.normalmap, Cr.displacementmap, Cr.fog, Cr.lights, {
                                emissive: {
                                    value: new ga(0)
                                },
                                specular: {
                                    value: new ga(1118481)
                                },
                                shininess: {
                                    value: 30
                                }
                            }
                        ]),
                    vertexShader: Tr.meshphong_vert,
                    fragmentShader: Tr.meshphong_frag
                },
                standard: {
                    uniforms: fr([Cr.common, Cr.envmap, Cr.aomap, Cr.lightmap, Cr.emissivemap, Cr.bumpmap, Cr.normalmap, Cr.displacementmap, Cr.roughnessmap, Cr.metalnessmap, Cr.fog, Cr.lights, {
                                emissive: {
                                    value: new ga(0)
                                },
                                roughness: {
                                    value: 1
                                },
                                metalness: {
                                    value: 0
                                },
                                envMapIntensity: {
                                    value: 1
                                }
                            }
                        ]),
                    vertexShader: Tr.meshphysical_vert,
                    fragmentShader: Tr.meshphysical_frag
                },
                toon: {
                    uniforms: fr([Cr.common, Cr.aomap, Cr.lightmap, Cr.emissivemap, Cr.bumpmap, Cr.normalmap, Cr.displacementmap, Cr.gradientmap, Cr.fog, Cr.lights, {
                                emissive: {
                                    value: new ga(0)
                                }
                            }
                        ]),
                    vertexShader: Tr.meshtoon_vert,
                    fragmentShader: Tr.meshtoon_frag
                },
                matcap: {
                    uniforms: fr([Cr.common, Cr.bumpmap, Cr.normalmap, Cr.displacementmap, Cr.fog, {
                                matcap: {
                                    value: null
                                }
                            }
                        ]),
                    vertexShader: Tr.meshmatcap_vert,
                    fragmentShader: Tr.meshmatcap_frag
                },
                points: {
                    uniforms: fr([Cr.points, Cr.fog]),
                    vertexShader: Tr.points_vert,
                    fragmentShader: Tr.points_frag
                },
                dashed: {
                    uniforms: fr([Cr.common, Cr.fog, {
                                scale: {
                                    value: 1
                                },
                                dashSize: {
                                    value: 1
                                },
                                totalSize: {
                                    value: 2
                                }
                            }
                        ]),
                    vertexShader: Tr.linedashed_vert,
                    fragmentShader: Tr.linedashed_frag
                },
                depth: {
                    uniforms: fr([Cr.common, Cr.displacementmap]),
                    vertexShader: Tr.depth_vert,
                    fragmentShader: Tr.depth_frag
                },
                normal: {
                    uniforms: fr([Cr.common, Cr.bumpmap, Cr.normalmap, Cr.displacementmap, {
                                opacity: {
                                    value: 1
                                }
                            }
                        ]),
                    vertexShader: Tr.normal_vert,
                    fragmentShader: Tr.normal_frag
                },
                sprite: {
                    uniforms: fr([Cr.sprite, Cr.fog]),
                    vertexShader: Tr.sprite_vert,
                    fragmentShader: Tr.sprite_frag
                },
                background: {
                    uniforms: {
                        uvTransform: {
                            value: new Bn
                        },
                        t2D: {
                            value: null
                        }
                    },
                    vertexShader: Tr.background_vert,
                    fragmentShader: Tr.background_frag
                },
                cube: {
                    uniforms: fr([Cr.envmap, {
                                opacity: {
                                    value: 1
                                }
                            }
                        ]),
                    vertexShader: Tr.cube_vert,
                    fragmentShader: Tr.cube_frag
                },
                equirect: {
                    uniforms: {
                        tEquirect: {
                            value: null
                        }
                    },
                    vertexShader: Tr.equirect_vert,
                    fragmentShader: Tr.equirect_frag
                },
                distanceRGBA: {
                    uniforms: fr([Cr.common, Cr.displacementmap, {
                                referencePosition: {
                                    value: new Qn
                                },
                                nearDistance: {
                                    value: 1
                                },
                                farDistance: {
                                    value: 1e3
                                }
                            }
                        ]),
                    vertexShader: Tr.distanceRGBA_vert,
                    fragmentShader: Tr.distanceRGBA_frag
                },
                shadow: {
                    uniforms: fr([Cr.lights, Cr.fog, {
                                color: {
                                    value: new ga(0)
                                },
                                opacity: {
                                    value: 1
                                }
                            }
                        ]),
                    vertexShader: Tr.shadow_vert,
                    fragmentShader: Tr.shadow_frag
                }
            };
            function Hr(e, t, n, i, a) {
                const r = new ga(0);
                let o,
                s,
                c = 0,
                l = null,
                h = 0,
                u = null;
                function f(e, t) {
                    n.buffers.color.setClear(e.r, e.g, e.b, t, a)
                }
                return {
                    getClearColor: function () {
                        return r
                    },
                    setClearColor: function (e, t) {
                        r.set(e),
                        c = void 0 !== t ? t : 1,
                        f(r, c)
                    },
                    getClearAlpha: function () {
                        return c
                    },
                    setClearAlpha: function (e) {
                        c = e,
                        f(r, c)
                    },
                    render: function (n, a, d, v) {
                        let g = !0 === a.isScene ? a.background : null;
                        g && g.isTexture && (g = t.get(g));
                        const x = e.xr,
                        y = x.getSession && x.getSession();
                        y && "additive" === y.environmentBlendMode && (g = null),
                        null === g ? f(r, c) : g && g.isColor && (f(g, 1), v = !0),
                        (e.autoClear || v) && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
                        g && (g.isCubeTexture || g.isWebGLCubeRenderTarget || g.mapping === le) ? (void 0 === s && (s = new sr(new hr(1, 1, 1), new pr({
                                            name: "BackgroundCubeMaterial",
                                            uniforms: ur(Er.cube.uniforms),
                                            vertexShader: Er.cube.vertexShader,
                                            fragmentShader: Er.cube.fragmentShader,
                                            side: m,
                                            depthTest: !1,
                                            depthWrite: !1,
                                            fog: !1
                                        })), s.geometry.deleteAttribute("normal"), s.geometry.deleteAttribute("uv"), s.onBeforeRender = function (e, t, n) {
                                this.matrixWorld.copyPosition(n.matrixWorld)
                            }, Object.defineProperty(s.material, "envMap", {
                                    get: function () {
                                        return this.uniforms.envMap.value
                                    }
                                }), i.update(s)), g.isWebGLCubeRenderTarget && (g = g.texture), s.material.uniforms.envMap.value = g, s.material.uniforms.flipEnvMap.value = g.isCubeTexture && g._needsFlipEnvMap ? -1 : 1, l === g && h === g.version && u === e.toneMapping || (s.material.needsUpdate = !0, l = g, h = g.version, u = e.toneMapping), n.unshift(s, s.geometry, s.material, 0, 0, null)) : g && g.isTexture && (void 0 === o && (o = new sr(new Ar(2, 2), new pr({
                                            name: "BackgroundMaterial",
                                            uniforms: ur(Er.background.uniforms),
                                            vertexShader: Er.background.vertexShader,
                                            fragmentShader: Er.background.fragmentShader,
                                            side: p,
                                            depthTest: !1,
                                            depthWrite: !1,
                                            fog: !1
                                        })), o.geometry.deleteAttribute("normal"), Object.defineProperty(o.material, "map", {
                                    get: function () {
                                        return this.uniforms.t2D.value
                                    }
                                }), i.update(o)), o.material.uniforms.t2D.value = g, !0 === g.matrixAutoUpdate && g.updateMatrix(), o.material.uniforms.uvTransform.value.copy(g.matrix), l === g && h === g.version && u === e.toneMapping || (o.material.needsUpdate = !0, l = g, h = g.version, u = e.toneMapping), n.unshift(o, o.geometry, o.material, 0, 0, null))
                    }
                }
            }
            function Nr(e, t, n, i) {
                const a = e.getParameter(34921),
                r = i.isWebGL2 ? null : t.get("OES_vertex_array_object"),
                o = i.isWebGL2 || null !== r,
                s = {},
                c = f(null);
                let l = c;
                function h(t) {
                    return i.isWebGL2 ? e.bindVertexArray(t) : r.bindVertexArrayOES(t)
                }
                function u(t) {
                    return i.isWebGL2 ? e.deleteVertexArray(t) : r.deleteVertexArrayOES(t)
                }
                function f(e) {
                    const t = [],
                    n = [],
                    i = [];
                    for (let e = 0; e < a; e++)
                        t[e] = 0, n[e] = 0, i[e] = 0;
                    return {
                        geometry: null,
                        program: null,
                        wireframe: !1,
                        newAttributes: t,
                        enabledAttributes: n,
                        attributeDivisors: i,
                        object: e,
                        attributes: {},
                        index: null
                    }
                }
                function d() {
                    const e = l.newAttributes;
                    for (let t = 0, n = e.length; t < n; t++)
                        e[t] = 0
                }
                function p(e) {
                    m(e, 0)
                }
                function m(n, a) {
                    const r = l.newAttributes,
                    o = l.enabledAttributes,
                    s = l.attributeDivisors;
                    r[n] = 1,
                    0 === o[n] && (e.enableVertexAttribArray(n), o[n] = 1),
                    s[n] !== a && ((i.isWebGL2 ? e : t.get("ANGLE_instanced_arrays"))[i.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](n, a), s[n] = a)
                }
                function v() {
                    const t = l.newAttributes,
                    n = l.enabledAttributes;
                    for (let i = 0, a = n.length; i < a; i++)
                        n[i] !== t[i] && (e.disableVertexAttribArray(i), n[i] = 0)
                }
                function g(t, n, a, r, o, s) {
                    !0 !== i.isWebGL2 || 5124 !== a && 5125 !== a ? e.vertexAttribPointer(t, n, a, r, o, s) : e.vertexAttribIPointer(t, n, a, o, s)
                }
                function x() {
                    y(),
                    l !== c && (l = c, h(l.object))
                }
                function y() {
                    c.geometry = null,
                    c.program = null,
                    c.wireframe = !1
                }
                return {
                    setup: function (a, c, u, x, y) {
                        let b = !1;
                        if (o) {
                            const t = function (t, n, a) {
                                const o = !0 === a.wireframe;
                                let c = s[t.id];
                                void 0 === c && (c = {}, s[t.id] = c);
                                let l = c[n.id];
                                void 0 === l && (l = {}, c[n.id] = l);
                                let h = l[o];
                                return void 0 === h && (h = f(i.isWebGL2 ? e.createVertexArray() : r.createVertexArrayOES()), l[o] = h),
                                h
                            }
                            (x, u, c);
                            l !== t && (l = t, h(l.object)),
                            b = function (e, t) {
                                const n = l.attributes,
                                i = e.attributes;
                                if (Object.keys(n).length !== Object.keys(i).length)
                                    return !0;
                                for (const e in i) {
                                    const t = n[e],
                                    a = i[e];
                                    if (void 0 === t)
                                        return !0;
                                    if (t.attribute !== a)
                                        return !0;
                                    if (t.data !== a.data)
                                        return !0
                                }
                                return l.index !== t
                            }
                            (x, y),
                            b && function (e, t) {
                                const n = {},
                                i = e.attributes;
                                for (const e in i) {
                                    const t = i[e],
                                    a = {};
                                    a.attribute = t,
                                    t.data && (a.data = t.data),
                                    n[e] = a
                                }
                                l.attributes = n,
                                l.index = t
                            }
                            (x, y)
                        } else {
                            const e = !0 === c.wireframe;
                            l.geometry === x.id && l.program === u.id && l.wireframe === e || (l.geometry = x.id, l.program = u.id, l.wireframe = e, b = !0)
                        }
                        !0 === a.isInstancedMesh && (b = !0),
                        null !== y && n.update(y, 34963),
                        b && (function (a, r, o, s) {
                            if (!1 === i.isWebGL2 && (a.isInstancedMesh || s.isInstancedBufferGeometry) && null === t.get("ANGLE_instanced_arrays"))
                                return;
                            d();
                            const c = s.attributes,
                            l = o.getAttributes(),
                            h = r.defaultAttributeValues;
                            for (const t in l) {
                                const i = l[t];
                                if (i >= 0) {
                                    const r = c[t];
                                    if (void 0 !== r) {
                                        const t = r.normalized,
                                        a = r.itemSize,
                                        o = n.get(r);
                                        if (void 0 === o)
                                            continue;
                                        const c = o.buffer,
                                        l = o.type,
                                        h = o.bytesPerElement;
                                        if (r.isInterleavedBufferAttribute) {
                                            const n = r.data,
                                            o = n.stride,
                                            u = r.offset;
                                            n && n.isInstancedInterleavedBuffer ? (m(i, n.meshPerAttribute), void 0 === s._maxInstanceCount && (s._maxInstanceCount = n.meshPerAttribute * n.count)) : p(i),
                                            e.bindBuffer(34962, c),
                                            g(i, a, l, t, o * h, u * h)
                                        } else
                                            r.isInstancedBufferAttribute ? (m(i, r.meshPerAttribute), void 0 === s._maxInstanceCount && (s._maxInstanceCount = r.meshPerAttribute * r.count)) : p(i), e.bindBuffer(34962, c), g(i, a, l, t, 0, 0)
                                    } else if ("instanceMatrix" === t) {
                                        const t = n.get(a.instanceMatrix);
                                        if (void 0 === t)
                                            continue;
                                        const r = t.buffer,
                                        o = t.type;
                                        m(i + 0, 1),
                                        m(i + 1, 1),
                                        m(i + 2, 1),
                                        m(i + 3, 1),
                                        e.bindBuffer(34962, r),
                                        e.vertexAttribPointer(i + 0, 4, o, !1, 64, 0),
                                        e.vertexAttribPointer(i + 1, 4, o, !1, 64, 16),
                                        e.vertexAttribPointer(i + 2, 4, o, !1, 64, 32),
                                        e.vertexAttribPointer(i + 3, 4, o, !1, 64, 48)
                                    } else if ("instanceColor" === t) {
                                        const t = n.get(a.instanceColor);
                                        if (void 0 === t)
                                            continue;
                                        const r = t.buffer,
                                        o = t.type;
                                        m(i, 1),
                                        e.bindBuffer(34962, r),
                                        e.vertexAttribPointer(i, 3, o, !1, 12, 0)
                                    } else if (void 0 !== h) {
                                        const n = h[t];
                                        if (void 0 !== n)
                                            switch (n.length) {
                                            case 2:
                                                e.vertexAttrib2fv(i, n);
                                                break;
                                            case 3:
                                                e.vertexAttrib3fv(i, n);
                                                break;
                                            case 4:
                                                e.vertexAttrib4fv(i, n);
                                                break;
                                            default:
                                                e.vertexAttrib1fv(i, n)
                                            }
                                    }
                                }
                            }
                            v()
                        }
                            (a, c, u, x), null !== y && e.bindBuffer(34963, n.get(y).buffer))
                    },
                    reset: x,
                    resetDefaultState: y,
                    dispose: function () {
                        x();
                        for (const e in s) {
                            const t = s[e];
                            for (const e in t) {
                                const n = t[e];
                                for (const e in n)
                                    u(n[e].object), delete n[e];
                                delete t[e]
                            }
                            delete s[e]
                        }
                    },
                    releaseStatesOfGeometry: function (e) {
                        if (void 0 === s[e.id])
                            return;
                        const t = s[e.id];
                        for (const e in t) {
                            const n = t[e];
                            for (const e in n)
                                u(n[e].object), delete n[e];
                            delete t[e]
                        }
                        delete s[e.id]
                    },
                    releaseStatesOfProgram: function (e) {
                        for (const t in s) {
                            const n = s[t];
                            if (void 0 === n[e.id])
                                continue;
                            const i = n[e.id];
                            for (const e in i)
                                u(i[e].object), delete i[e];
                            delete n[e.id]
                        }
                    },
                    initAttributes: d,
                    enableAttribute: p,
                    disableUnusedAttributes: v
                }
            }
            function Pr(e, t, n, i) {
                const a = i.isWebGL2;
                let r;
                this.setMode = function (e) {
                    r = e
                },
                this.render = function (t, i) {
                    e.drawArrays(r, t, i),
                    n.update(i, r, 1)
                },
                this.renderInstances = function (i, o, s) {
                    if (0 === s)
                        return;
                    let c,
                    l;
                    if (a)
                        c = e, l = "drawArraysInstanced";
                    else if (c = t.get("ANGLE_instanced_arrays"), l = "drawArraysInstancedANGLE", null === c)
                        return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                    c[l](r, i, o, s),
                    n.update(o, r, s)
                }
            }
            function Vr(e, t, n) {
                let i;
                function a(t) {
                    if ("highp" === t) {
                        if (e.getShaderPrecisionFormat(35633, 36338).precision > 0 && e.getShaderPrecisionFormat(35632, 36338).precision > 0)
                            return "highp";
                        t = "mediump"
                    }
                    return "mediump" === t && e.getShaderPrecisionFormat(35633, 36337).precision > 0 && e.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp"
                }
                const r = "undefined" != typeof WebGL2RenderingContext && e instanceof WebGL2RenderingContext || "undefined" != typeof WebGL2ComputeRenderingContext && e instanceof WebGL2ComputeRenderingContext;
                let o = void 0 !== n.precision ? n.precision : "highp";
                const s = a(o);
                s !== o && (console.warn("THREE.WebGLRenderer:", o, "not supported, using", s, "instead."), o = s);
                const c = !0 === n.logarithmicDepthBuffer,
                l = e.getParameter(34930),
                h = e.getParameter(35660),
                u = e.getParameter(3379),
                f = e.getParameter(34076),
                d = e.getParameter(34921),
                p = e.getParameter(36347),
                m = e.getParameter(36348),
                v = e.getParameter(36349),
                g = h > 0,
                x = r || !!t.get("OES_texture_float");
                return {
                    isWebGL2: r,
                    getMaxAnisotropy: function () {
                        if (void 0 !== i)
                            return i;
                        const n = t.get("EXT_texture_filter_anisotropic");
                        return i = null !== n ? e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0,
                        i
                    },
                    getMaxPrecision: a,
                    precision: o,
                    logarithmicDepthBuffer: c,
                    maxTextures: l,
                    maxVertexTextures: h,
                    maxTextureSize: u,
                    maxCubemapSize: f,
                    maxAttributes: d,
                    maxVertexUniforms: p,
                    maxVaryings: m,
                    maxFragmentUniforms: v,
                    vertexTextures: g,
                    floatFragmentTextures: x,
                    floatVertexTextures: g && x,
                    maxSamples: r ? e.getParameter(36183) : 0
                }
            }
            function Rr(e) {
                const t = this;
                let n = null,
                i = 0,
                a = !1,
                r = !1;
                const o = new $i,
                s = new Bn,
                c = {
                    value: null,
                    needsUpdate: !1
                };
                function l() {
                    c.value !== n && (c.value = n, c.needsUpdate = i > 0),
                    t.numPlanes = i,
                    t.numIntersection = 0
                }
                function h(e, n, i, a) {
                    const r = null !== e ? e.length : 0;
                    let l = null;
                    if (0 !== r) {
                        if (l = c.value, !0 !== a || null === l) {
                            const t = i + 4 * r,
                            a = n.matrixWorldInverse;
                            s.getNormalMatrix(a),
                            (null === l || l.length < t) && (l = new Float32Array(t));
                            for (let t = 0, n = i; t !== r; ++t, n += 4)
                                o.copy(e[t]).applyMatrix4(a, s), o.normal.toArray(l, n), l[n + 3] = o.constant
                        }
                        c.value = l,
                        c.needsUpdate = !0
                    }
                    return t.numPlanes = r,
                    t.numIntersection = 0,
                    l
                }
                this.uniform = c,
                this.numPlanes = 0,
                this.numIntersection = 0,
                this.init = function (e, t, r) {
                    const o = 0 !== e.length || t || 0 !== i || a;
                    return a = t,
                    n = h(e, r, 0),
                    i = e.length,
                    o
                },
                this.beginShadows = function () {
                    r = !0,
                    h(null)
                },
                this.endShadows = function () {
                    r = !1,
                    l()
                },
                this.setState = function (t, o, s) {
                    const u = t.clippingPlanes,
                    f = t.clipIntersection,
                    d = t.clipShadows,
                    p = e.get(t);
                    if (!a || null === u || 0 === u.length || r && !d)
                        r ? h(null) : l();
                    else {
                        const e = r ? 0 : i,
                        t = 4 * e;
                        let a = p.clippingState || null;
                        c.value = a,
                        a = h(u, o, t, s);
                        for (let e = 0; e !== t; ++e)
                            a[e] = n[e];
                        p.clippingState = a,
                        this.numIntersection = f ? this.numPlanes : 0,
                        this.numPlanes += e
                    }
                }
            }
            function Fr(e) {
                let t = new WeakMap;
                function n(e, t) {
                    return t === se ? e.mapping = re : t === ce && (e.mapping = oe),
                    e
                }
                return {
                    get: function (i) {
                        if (i && i.isTexture) {
                            const a = i.mapping;
                            if (a === se || a === ce) {
                                if (t.has(i))
                                    return n(t.get(i).texture, i.mapping); {
                                    const a = i.image;
                                    if (a && a.height > 0) {
                                        const r = e.getRenderList(),
                                        o = e.getRenderTarget(),
                                        s = e.getRenderState(),
                                        c = new br(a.height / 2);
                                        return c.fromEquirectangularTexture(e, i),
                                        t.set(i, c),
                                        e.setRenderTarget(o),
                                        e.setRenderList(r),
                                        e.setRenderState(s),
                                        n(c.texture, i.mapping)
                                    }
                                    return null
                                }
                            }
                        }
                        return i
                    },
                    dispose: function () {
                        t = new WeakMap
                    }
                }
            }
            function Ir(e) {
                const t = {};
                return {
                    has: function (n) {
                        if (void 0 !== t[n])
                            return null !== t[n];
                        let i;
                        switch (n) {
                        case "WEBGL_depth_texture":
                            i = e.getExtension("WEBGL_depth_texture") || e.getExtension("MOZ_WEBGL_depth_texture") || e.getExtension("WEBKIT_WEBGL_depth_texture");
                            break;
                        case "EXT_texture_filter_anisotropic":
                            i = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                            break;
                        case "WEBGL_compressed_texture_s3tc":
                            i = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                            break;
                        case "WEBGL_compressed_texture_pvrtc":
                            i = e.getExtension("WEBGL_compressed_texture_pvrtc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                            break;
                        default:
                            i = e.getExtension(n)
                        }
                        return t[n] = i,
                        null !== i
                    },
                    get: function (e) {
                        return this.has(e) || console.warn("THREE.WebGLRenderer: " + e + " extension not supported."),
                        t[e]
                    }
                }
            }
            function Or(e, t, n, i) {
                const a = new WeakMap,
                r = new WeakMap;
                function o(e) {
                    const s = e.target,
                    c = a.get(s);
                    null !== c.index && t.remove(c.index);
                    for (const e in c.attributes)
                        t.remove(c.attributes[e]);
                    s.removeEventListener("dispose", o),
                    a.delete(s);
                    const l = r.get(c);
                    l && (t.remove(l), r.delete(c)),
                    i.releaseStatesOfGeometry(s),
                    !0 === s.isInstancedBufferGeometry && delete s._maxInstanceCount,
                    n.memory.geometries--
                }
                function s(e) {
                    const n = [],
                    i = e.index,
                    a = e.attributes.position;
                    let o = 0;
                    if (null !== i) {
                        const e = i.array;
                        o = i.version;
                        for (let t = 0, i = e.length; t < i; t += 3) {
                            const i = e[t + 0],
                            a = e[t + 1],
                            r = e[t + 2];
                            n.push(i, a, a, r, r, i)
                        }
                    } else {
                        const e = a.array;
                        o = a.version;
                        for (let t = 0, i = e.length / 3 - 1; t < i; t += 3) {
                            const e = t + 0,
                            i = t + 1,
                            a = t + 2;
                            n.push(e, i, i, a, a, e)
                        }
                    }
                    const s = new(Ra(n) > 65535 ? Ha : Ca)(n, 1);
                    s.version = o;
                    const c = r.get(e);
                    c && t.remove(c),
                    r.set(e, s)
                }
                return {
                    get: function (e, t) {
                        let i = a.get(t);
                        return i || (t.addEventListener("dispose", o), t.isBufferGeometry ? i = t : t.isGeometry && (void 0 === t._bufferGeometry && (t._bufferGeometry = (new Ga).setFromObject(e)), i = t._bufferGeometry), a.set(t, i), n.memory.geometries++, i)
                    },
                    update: function (e) {
                        const n = e.attributes;
                        for (const e in n)
                            t.update(n[e], 34962);
                        const i = e.morphAttributes;
                        for (const e in i) {
                            const n = i[e];
                            for (let e = 0, i = n.length; e < i; e++)
                                t.update(n[e], 34962)
                        }
                    },
                    getWireframeAttribute: function (e) {
                        const t = r.get(e);
                        if (t) {
                            const n = e.index;
                            null !== n && t.version < n.version && s(e)
                        } else
                            s(e);
                        return r.get(e)
                    }
                }
            }
            function Dr(e, t, n, i) {
                const a = i.isWebGL2;
                let r,
                o,
                s;
                this.setMode = function (e) {
                    r = e
                },
                this.setIndex = function (e) {
                    o = e.type,
                    s = e.bytesPerElement
                },
                this.render = function (t, i) {
                    e.drawElements(r, i, o, t * s),
                    n.update(i, r, 1)
                },
                this.renderInstances = function (i, c, l) {
                    if (0 === l)
                        return;
                    let h,
                    u;
                    if (a)
                        h = e, u = "drawElementsInstanced";
                    else if (h = t.get("ANGLE_instanced_arrays"), u = "drawElementsInstancedANGLE", null === h)
                        return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                    h[u](r, c, o, i * s, l),
                    n.update(c, r, l)
                }
            }
            function Ur(e) {
                const t = {
                    frame: 0,
                    calls: 0,
                    triangles: 0,
                    points: 0,
                    lines: 0
                };
                return {
                    memory: {
                        geometries: 0,
                        textures: 0
                    },
                    render: t,
                    programs: null,
                    autoReset: !0,
                    reset: function () {
                        t.frame++,
                        t.calls = 0,
                        t.triangles = 0,
                        t.points = 0,
                        t.lines = 0
                    },
                    update: function (e, n, i) {
                        switch (t.calls++, n) {
                        case 4:
                            t.triangles += i * (e / 3);
                            break;
                        case 1:
                            t.lines += i * (e / 2);
                            break;
                        case 3:
                            t.lines += i * (e - 1);
                            break;
                        case 2:
                            t.lines += i * e;
                            break;
                        case 0:
                            t.points += i * e;
                            break;
                        default:
                            console.error("THREE.WebGLInfo: Unknown draw mode:", n)
                        }
                    }
                }
            }
            function Br(e, t) {
                return e[0] - t[0]
            }
            function kr(e, t) {
                return Math.abs(t[1]) - Math.abs(e[1])
            }
            function Gr(e) {
                const t = {},
                n = new Float32Array(8),
                i = [];
                for (let e = 0; e < 8; e++)
                    i[e] = [e, 0];
                return {
                    update: function (a, r, o, s) {
                        const c = a.morphTargetInfluences,
                        l = void 0 === c ? 0 : c.length;
                        let h = t[r.id];
                        if (void 0 === h) {
                            h = [];
                            for (let e = 0; e < l; e++)
                                h[e] = [e, 0];
                            t[r.id] = h
                        }
                        for (let e = 0; e < l; e++) {
                            const t = h[e];
                            t[0] = e,
                            t[1] = c[e]
                        }
                        h.sort(kr);
                        for (let e = 0; e < 8; e++)
                            e < l && h[e][1] ? (i[e][0] = h[e][0], i[e][1] = h[e][1]) : (i[e][0] = Number.MAX_SAFE_INTEGER, i[e][1] = 0);
                        i.sort(Br);
                        const u = o.morphTargets && r.morphAttributes.position,
                        f = o.morphNormals && r.morphAttributes.normal;
                        let d = 0;
                        for (let e = 0; e < 8; e++) {
                            const t = i[e],
                            a = t[0],
                            o = t[1];
                            a !== Number.MAX_SAFE_INTEGER && o ? (u && r.getAttribute("morphTarget" + e) !== u[a] && r.setAttribute("morphTarget" + e, u[a]), f && r.getAttribute("morphNormal" + e) !== f[a] && r.setAttribute("morphNormal" + e, f[a]), n[e] = o, d += o) : (u && void 0 !== r.getAttribute("morphTarget" + e) && r.deleteAttribute("morphTarget" + e), f && void 0 !== r.getAttribute("morphNormal" + e) && r.deleteAttribute("morphNormal" + e), n[e] = 0)
                        }
                        const p = r.morphTargetsRelative ? 1 : 1 - d;
                        s.getUniforms().setValue(e, "morphTargetBaseInfluence", p),
                        s.getUniforms().setValue(e, "morphTargetInfluences", n)
                    }
                }
            }
            function jr(e, t, n, i) {
                let a = new WeakMap;
                return {
                    update: function (e) {
                        const r = i.render.frame,
                        o = e.geometry,
                        s = t.get(e, o);
                        return a.get(s) !== r && (o.isGeometry && s.updateFromObject(e), t.update(s), a.set(s, r)),
                        e.isInstancedMesh && (n.update(e.instanceMatrix, 34962), null !== e.instanceColor && n.update(e.instanceColor, 34962)),
                        s
                    },
                    dispose: function () {
                        a = new WeakMap
                    }
                }
            }
            function Wr(e, t, n, i) {
                Wn.call(this, null),
                this.image = {
                    data: e || null,
                    width: t || 1,
                    height: n || 1,
                    depth: i || 1
                },
                this.magFilter = pe,
                this.minFilter = pe,
                this.wrapR = fe,
                this.generateMipmaps = !1,
                this.flipY = !1,
                this.needsUpdate = !0
            }
            function Xr(e, t, n, i) {
                Wn.call(this, null),
                this.image = {
                    data: e || null,
                    width: t || 1,
                    height: n || 1,
                    depth: i || 1
                },
                this.magFilter = pe,
                this.minFilter = pe,
                this.wrapR = fe,
                this.generateMipmaps = !1,
                this.flipY = !1,
                this.needsUpdate = !0
            }
            Er.physical = {
                uniforms: fr([Er.standard.uniforms, {
                            clearcoat: {
                                value: 0
                            },
                            clearcoatMap: {
                                value: null
                            },
                            clearcoatRoughness: {
                                value: 0
                            },
                            clearcoatRoughnessMap: {
                                value: null
                            },
                            clearcoatNormalScale: {
                                value: new Un(1, 1)
                            },
                            clearcoatNormalMap: {
                                value: null
                            },
                            sheen: {
                                value: new ga(0)
                            },
                            transmission: {
                                value: 0
                            },
                            transmissionMap: {
                                value: null
                            }
                        }
                    ]),
                vertexShader: Tr.meshphysical_vert,
                fragmentShader: Tr.meshphysical_frag
            },
            Wr.prototype = Object.create(Wn.prototype),
            Wr.prototype.constructor = Wr,
            Wr.prototype.isDataTexture2DArray = !0,
            Xr.prototype = Object.create(Wn.prototype),
            Xr.prototype.constructor = Xr,
            Xr.prototype.isDataTexture3D = !0;
            const qr = new Wn,
            Yr = new Wr,
            Zr = new Xr,
            Qr = new yr,
            Jr = [],
            Kr = [],
            $r = new Float32Array(16),
            eo = new Float32Array(9),
            to = new Float32Array(4);
            function no(e, t, n) {
                const i = e[0];
                if (i <= 0 || i > 0)
                    return e;
                const a = t * n;
                let r = Jr[a];
                if (void 0 === r && (r = new Float32Array(a), Jr[a] = r), 0 !== t) {
                    i.toArray(r, 0);
                    for (let i = 1, a = 0; i !== t; ++i)
                        a += n, e[i].toArray(r, a)
                }
                return r
            }
            function io(e, t) {
                if (e.length !== t.length)
                    return !1;
                for (let n = 0, i = e.length; n < i; n++)
                    if (e[n] !== t[n])
                        return !1;
                return !0
            }
            function ao(e, t) {
                for (let n = 0, i = t.length; n < i; n++)
                    e[n] = t[n]
            }
            function ro(e, t) {
                let n = Kr[t];
                void 0 === n && (n = new Int32Array(t), Kr[t] = n);
                for (let i = 0; i !== t; ++i)
                    n[i] = e.allocateTextureUnit();
                return n
            }
            function oo(e, t) {
                const n = this.cache;
                n[0] !== t && (e.uniform1f(this.addr, t), n[0] = t)
            }
            function so(e, t) {
                const n = this.cache;
                if (void 0 !== t.x)
                    n[0] === t.x && n[1] === t.y || (e.uniform2f(this.addr, t.x, t.y), n[0] = t.x, n[1] = t.y);
                else {
                    if (io(n, t))
                        return;
                    e.uniform2fv(this.addr, t),
                    ao(n, t)
                }
            }
            function co(e, t) {
                const n = this.cache;
                if (void 0 !== t.x)
                    n[0] === t.x && n[1] === t.y && n[2] === t.z || (e.uniform3f(this.addr, t.x, t.y, t.z), n[0] = t.x, n[1] = t.y, n[2] = t.z);
                else if (void 0 !== t.r)
                    n[0] === t.r && n[1] === t.g && n[2] === t.b || (e.uniform3f(this.addr, t.r, t.g, t.b), n[0] = t.r, n[1] = t.g, n[2] = t.b);
                else {
                    if (io(n, t))
                        return;
                    e.uniform3fv(this.addr, t),
                    ao(n, t)
                }
            }
            function lo(e, t) {
                const n = this.cache;
                if (void 0 !== t.x)
                    n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w || (e.uniform4f(this.addr, t.x, t.y, t.z, t.w), n[0] = t.x, n[1] = t.y, n[2] = t.z, n[3] = t.w);
                else {
                    if (io(n, t))
                        return;
                    e.uniform4fv(this.addr, t),
                    ao(n, t)
                }
            }
            function ho(e, t) {
                const n = this.cache,
                i = t.elements;
                if (void 0 === i) {
                    if (io(n, t))
                        return;
                    e.uniformMatrix2fv(this.addr, !1, t),
                    ao(n, t)
                } else {
                    if (io(n, i))
                        return;
                    to.set(i),
                    e.uniformMatrix2fv(this.addr, !1, to),
                    ao(n, i)
                }
            }
            function uo(e, t) {
                const n = this.cache,
                i = t.elements;
                if (void 0 === i) {
                    if (io(n, t))
                        return;
                    e.uniformMatrix3fv(this.addr, !1, t),
                    ao(n, t)
                } else {
                    if (io(n, i))
                        return;
                    eo.set(i),
                    e.uniformMatrix3fv(this.addr, !1, eo),
                    ao(n, i)
                }
            }
            function fo(e, t) {
                const n = this.cache,
                i = t.elements;
                if (void 0 === i) {
                    if (io(n, t))
                        return;
                    e.uniformMatrix4fv(this.addr, !1, t),
                    ao(n, t)
                } else {
                    if (io(n, i))
                        return;
                    $r.set(i),
                    e.uniformMatrix4fv(this.addr, !1, $r),
                    ao(n, i)
                }
            }
            function po(e, t, n) {
                const i = this.cache,
                a = n.allocateTextureUnit();
                i[0] !== a && (e.uniform1i(this.addr, a), i[0] = a),
                n.safeSetTexture2D(t || qr, a)
            }
            function mo(e, t, n) {
                const i = this.cache,
                a = n.allocateTextureUnit();
                i[0] !== a && (e.uniform1i(this.addr, a), i[0] = a),
                n.setTexture2DArray(t || Yr, a)
            }
            function vo(e, t, n) {
                const i = this.cache,
                a = n.allocateTextureUnit();
                i[0] !== a && (e.uniform1i(this.addr, a), i[0] = a),
                n.setTexture3D(t || Zr, a)
            }
            function go(e, t, n) {
                const i = this.cache,
                a = n.allocateTextureUnit();
                i[0] !== a && (e.uniform1i(this.addr, a), i[0] = a),
                n.safeSetTextureCube(t || Qr, a)
            }
            function xo(e, t) {
                const n = this.cache;
                n[0] !== t && (e.uniform1i(this.addr, t), n[0] = t)
            }
            function yo(e, t) {
                const n = this.cache;
                io(n, t) || (e.uniform2iv(this.addr, t), ao(n, t))
            }
            function bo(e, t) {
                const n = this.cache;
                io(n, t) || (e.uniform3iv(this.addr, t), ao(n, t))
            }
            function Mo(e, t) {
                const n = this.cache;
                io(n, t) || (e.uniform4iv(this.addr, t), ao(n, t))
            }
            function zo(e, t) {
                const n = this.cache;
                n[0] !== t && (e.uniform1ui(this.addr, t), n[0] = t)
            }
            function wo(e, t) {
                e.uniform1fv(this.addr, t)
            }
            function _o(e, t) {
                e.uniform1iv(this.addr, t)
            }
            function So(e, t) {
                e.uniform2iv(this.addr, t)
            }
            function Lo(e, t) {
                e.uniform3iv(this.addr, t)
            }
            function Ao(e, t) {
                e.uniform4iv(this.addr, t)
            }
            function To(e, t) {
                const n = no(t, this.size, 2);
                e.uniform2fv(this.addr, n)
            }
            function Co(e, t) {
                const n = no(t, this.size, 3);
                e.uniform3fv(this.addr, n)
            }
            function Eo(e, t) {
                const n = no(t, this.size, 4);
                e.uniform4fv(this.addr, n)
            }
            function Ho(e, t) {
                const n = no(t, this.size, 4);
                e.uniformMatrix2fv(this.addr, !1, n)
            }
            function No(e, t) {
                const n = no(t, this.size, 9);
                e.uniformMatrix3fv(this.addr, !1, n)
            }
            function Po(e, t) {
                const n = no(t, this.size, 16);
                e.uniformMatrix4fv(this.addr, !1, n)
            }
            function Vo(e, t, n) {
                const i = t.length,
                a = ro(n, i);
                e.uniform1iv(this.addr, a);
                for (let e = 0; e !== i; ++e)
                    n.safeSetTexture2D(t[e] || qr, a[e])
            }
            function Ro(e, t, n) {
                const i = t.length,
                a = ro(n, i);
                e.uniform1iv(this.addr, a);
                for (let e = 0; e !== i; ++e)
                    n.safeSetTextureCube(t[e] || Qr, a[e])
            }
            function Fo(e, t, n) {
                this.id = e,
                this.addr = n,
                this.cache = [],
                this.setValue = function (e) {
                    switch (e) {
                    case 5126:
                        return oo;
                    case 35664:
                        return so;
                    case 35665:
                        return co;
                    case 35666:
                        return lo;
                    case 35674:
                        return ho;
                    case 35675:
                        return uo;
                    case 35676:
                        return fo;
                    case 5124:
                    case 35670:
                        return xo;
                    case 35667:
                    case 35671:
                        return yo;
                    case 35668:
                    case 35672:
                        return bo;
                    case 35669:
                    case 35673:
                        return Mo;
                    case 5125:
                        return zo;
                    case 35678:
                    case 36198:
                    case 36298:
                    case 36306:
                    case 35682:
                        return po;
                    case 35679:
                    case 36299:
                    case 36307:
                        return vo;
                    case 35680:
                    case 36300:
                    case 36308:
                    case 36293:
                        return go;
                    case 36289:
                    case 36303:
                    case 36311:
                    case 36292:
                        return mo
                    }
                }
                (t.type)
            }
            function Io(e, t, n) {
                this.id = e,
                this.addr = n,
                this.cache = [],
                this.size = t.size,
                this.setValue = function (e) {
                    switch (e) {
                    case 5126:
                        return wo;
                    case 35664:
                        return To;
                    case 35665:
                        return Co;
                    case 35666:
                        return Eo;
                    case 35674:
                        return Ho;
                    case 35675:
                        return No;
                    case 35676:
                        return Po;
                    case 5124:
                    case 35670:
                        return _o;
                    case 35667:
                    case 35671:
                        return So;
                    case 35668:
                    case 35672:
                        return Lo;
                    case 35669:
                    case 35673:
                        return Ao;
                    case 35678:
                    case 36198:
                    case 36298:
                    case 36306:
                    case 35682:
                        return Vo;
                    case 35680:
                    case 36300:
                    case 36308:
                    case 36293:
                        return Ro
                    }
                }
                (t.type)
            }
            function Oo(e) {
                this.id = e,
                this.seq = [],
                this.map = {}
            }
            Io.prototype.updateCache = function (e) {
                const t = this.cache;
                e instanceof Float32Array && t.length !== e.length && (this.cache = new Float32Array(e.length)),
                ao(t, e)
            },
            Oo.prototype.setValue = function (e, t, n) {
                const i = this.seq;
                for (let a = 0, r = i.length; a !== r; ++a) {
                    const r = i[a];
                    r.setValue(e, t[r.id], n)
                }
            };
            const Do = /([\w\d_]+)(\])?(\[|\.)?/g;
            function Uo(e, t) {
                e.seq.push(t),
                e.map[t.id] = t
            }
            function Bo(e, t, n) {
                const i = e.name,
                a = i.length;
                for (Do.lastIndex = 0; ; ) {
                    const r = Do.exec(i),
                    o = Do.lastIndex;
                    let s = r[1];
                    const c = "]" === r[2],
                    l = r[3];
                    if (c && (s |= 0), void 0 === l || "[" === l && o + 2 === a) {
                        Uo(n, void 0 === l ? new Fo(s, e, t) : new Io(s, e, t));
                        break
                    } {
                        let e = n.map[s];
                        void 0 === e && (e = new Oo(s), Uo(n, e)),
                        n = e
                    }
                }
            }
            function ko(e, t) {
                this.seq = [],
                this.map = {};
                const n = e.getProgramParameter(t, 35718);
                for (let i = 0; i < n; ++i) {
                    const n = e.getActiveUniform(t, i);
                    Bo(n, e.getUniformLocation(t, n.name), this)
                }
            }
            function Go(e, t, n) {
                const i = e.createShader(t);
                return e.shaderSource(i, n),
                e.compileShader(i),
                i
            }
            ko.prototype.setValue = function (e, t, n, i) {
                const a = this.map[t];
                void 0 !== a && a.setValue(e, n, i)
            },
            ko.prototype.setOptional = function (e, t, n) {
                const i = t[n];
                void 0 !== i && this.setValue(e, n, i)
            },
            ko.upload = function (e, t, n, i) {
                for (let a = 0, r = t.length; a !== r; ++a) {
                    const r = t[a],
                    o = n[r.id];
                    !1 !== o.needsUpdate && r.setValue(e, o.value, i)
                }
            },
            ko.seqWithValue = function (e, t) {
                const n = [];
                for (let i = 0, a = e.length; i !== a; ++i) {
                    const a = e[i];
                    a.id in t && n.push(a)
                }
                return n
            };
            let jo = 0;
            function Wo(e) {
                switch (e) {
                case Qt:
                    return ["Linear", "( value )"];
                case Jt:
                    return ["sRGB", "( value )"];
                case $t:
                    return ["RGBE", "( value )"];
                case tn:
                    return ["RGBM", "( value, 7.0 )"];
                case nn:
                    return ["RGBM", "( value, 16.0 )"];
                case an:
                    return ["RGBD", "( value, 256.0 )"];
                case Kt:
                    return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
                case en:
                    return ["LogLuv", "( value )"];
                default:
                    return console.warn("THREE.WebGLProgram: Unsupported encoding:", e),
                    ["Linear", "( value )"]
                }
            }
            function Xo(e, t, n) {
                const i = e.getShaderParameter(t, 35713),
                a = e.getShaderInfoLog(t).trim();
                return i && "" === a ? "" : "THREE.WebGLShader: gl.getShaderInfoLog() " + n + "\n" + a + function (e) {
                    const t = e.split("\n");
                    for (let e = 0; e < t.length; e++)
                        t[e] = e + 1 + ": " + t[e];
                    return t.join("\n")
                }
                (e.getShaderSource(t))
            }
            function qo(e, t) {
                const n = Wo(t);
                return "vec4 " + e + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }"
            }
            function Yo(e, t) {
                const n = Wo(t);
                return "vec4 " + e + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }"
            }
            function Zo(e, t) {
                let n;
                switch (t) {
                case $:
                    n = "Linear";
                    break;
                case ee:
                    n = "Reinhard";
                    break;
                case te:
                    n = "OptimizedCineon";
                    break;
                case ne:
                    n = "ACESFilmic";
                    break;
                case ie:
                    n = "Custom";
                    break;
                default:
                    console.warn("THREE.WebGLProgram: Unsupported toneMapping:", t),
                    n = "Linear"
                }
                return "vec3 " + e + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
            }
            function Qo(e) {
                return "" !== e
            }
            function Jo(e, t) {
                return e.replace(/NUM_DIR_LIGHTS/g, t.numDirLights).replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, t.numPointLights).replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows)
            }
            function Ko(e, t) {
                return e.replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, t.numClippingPlanes - t.numClipIntersection)
            }
            const $o = /^[ \t]*#include +<([\w\d./]+)>/gm;
            function es(e) {
                return e.replace($o, ts)
            }
            function ts(e, t) {
                const n = Tr[t];
                if (void 0 === n)
                    throw new Error("Can not resolve #include <" + t + ">");
                return es(n)
            }
            const ns = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,
            is = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
            function as(e) {
                return e.replace(is, os).replace(ns, rs)
            }
            function rs(e, t, n, i) {
                return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),
                os(0, t, n, i)
            }
            function os(e, t, n, i) {
                let a = "";
                for (let e = parseInt(t); e < parseInt(n); e++)
                    a += i.replace(/\[\s*i\s*\]/g, "[ " + e + " ]").replace(/UNROLLED_LOOP_INDEX/g, e);
                return a
            }
            function ss(e) {
                let t = "precision " + e.precision + " float;\nprecision " + e.precision + " int;";
                return "highp" === e.precision ? t += "\n#define HIGH_PRECISION" : "mediump" === e.precision ? t += "\n#define MEDIUM_PRECISION" : "lowp" === e.precision && (t += "\n#define LOW_PRECISION"),
                t
            }
            function cs(e, t, n, i) {
                const a = e.getContext(),
                r = n.defines;
                let o = n.vertexShader,
                s = n.fragmentShader;
                const c = function (e) {
                    let t = "SHADOWMAP_TYPE_BASIC";
                    return e.shadowMapType === u ? t = "SHADOWMAP_TYPE_PCF" : e.shadowMapType === f ? t = "SHADOWMAP_TYPE_PCF_SOFT" : e.shadowMapType === d && (t = "SHADOWMAP_TYPE_VSM"),
                    t
                }
                (n),
                l = function (e) {
                    let t = "ENVMAP_TYPE_CUBE";
                    if (e.envMap)
                        switch (e.envMapMode) {
                        case re:
                        case oe:
                            t = "ENVMAP_TYPE_CUBE";
                            break;
                        case le:
                        case he:
                            t = "ENVMAP_TYPE_CUBE_UV"
                        }
                    return t
                }
                (n),
                h = function (e) {
                    let t = "ENVMAP_MODE_REFLECTION";
                    if (e.envMap)
                        switch (e.envMapMode) {
                        case oe:
                        case he:
                            t = "ENVMAP_MODE_REFRACTION"
                        }
                    return t
                }
                (n),
                p = function (e) {
                    let t = "ENVMAP_BLENDING_NONE";
                    if (e.envMap)
                        switch (e.combine) {
                        case Z:
                            t = "ENVMAP_BLENDING_MULTIPLY";
                            break;
                        case Q:
                            t = "ENVMAP_BLENDING_MIX";
                            break;
                        case J:
                            t = "ENVMAP_BLENDING_ADD"
                        }
                    return t
                }
                (n),
                m = e.gammaFactor > 0 ? e.gammaFactor : 1,
                v = n.isWebGL2 ? "" : function (e) {
                    return [e.extensionDerivatives || e.envMapCubeUV || e.bumpMap || e.tangentSpaceNormalMap || e.clearcoatNormalMap || e.flatShading || "physical" === e.shaderID ? "#extension GL_OES_standard_derivatives : enable" : "", (e.extensionFragDepth || e.logarithmicDepthBuffer) && e.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "", e.extensionDrawBuffers && e.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "", (e.extensionShaderTextureLOD || e.envMap) && e.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(Qo).join("\n")
                }
                (n),
                g = function (e) {
                    const t = [];
                    for (const n in e) {
                        const i = e[n];
                        !1 !== i && t.push("#define " + n + " " + i)
                    }
                    return t.join("\n")
                }
                (r),
                x = a.createProgram();
                let y,
                b,
                M = n.glslVersion ? "#version " + n.glslVersion + "\n" : "";
                n.isRawShaderMaterial ? (y = [g].filter(Qo).join("\n"), y.length > 0 && (y += "\n"), b = [v, g].filter(Qo).join("\n"), b.length > 0 && (b += "\n")) : (y = [ss(n), "#define SHADER_NAME " + n.shaderName, g, n.instancing ? "#define USE_INSTANCING" : "", n.instancingColor ? "#define USE_INSTANCING_COLOR" : "", n.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + m, "#define MAX_BONES " + n.maxBones, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + h : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.displacementMap && n.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors ? "#define USE_COLOR" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.skinning ? "#define USE_SKINNING" : "", n.useVertexTexture ? "#define BONE_TEXTURE" : "", n.morphTargets ? "#define USE_MORPHTARGETS" : "", n.morphNormals && !1 === n.flatShading ? "#define USE_MORPHNORMALS" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + c : "", n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", "#ifdef USE_INSTANCING", "\tattribute mat4 instanceMatrix;", "#endif", "#ifdef USE_INSTANCING_COLOR", "\tattribute vec3 instanceColor;", "#endif", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_TANGENT", "\tattribute vec4 tangent;", "#endif", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(Qo).join("\n"), b = [v, ss(n), "#define SHADER_NAME " + n.shaderName, g, n.alphaTest ? "#define ALPHATEST " + n.alphaTest + (n.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + m, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.matcap ? "#define USE_MATCAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + l : "", n.envMap ? "#define " + h : "", n.envMap ? "#define " + p : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.sheen ? "#define USE_SHEEN" : "", n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors || n.instancingColor ? "#define USE_COLOR" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.gradientMap ? "#define USE_GRADIENTMAP" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + c : "", n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", n.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", (n.extensionShaderTextureLOD || n.envMap) && n.rendererExtensionShaderTextureLod ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", n.toneMapping !== K ? "#define TONE_MAPPING" : "", n.toneMapping !== K ? Tr.tonemapping_pars_fragment : "", n.toneMapping !== K ? Zo("toneMapping", n.toneMapping) : "", n.dithering ? "#define DITHERING" : "", Tr.encodings_pars_fragment, n.map ? qo("mapTexelToLinear", n.mapEncoding) : "", n.matcap ? qo("matcapTexelToLinear", n.matcapEncoding) : "", n.envMap ? qo("envMapTexelToLinear", n.envMapEncoding) : "", n.emissiveMap ? qo("emissiveMapTexelToLinear", n.emissiveMapEncoding) : "", n.lightMap ? qo("lightMapTexelToLinear", n.lightMapEncoding) : "", Yo("linearToOutputTexel", n.outputEncoding), n.depthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "", "\n"].filter(Qo).join("\n")),
                o = es(o),
                o = Jo(o, n),
                o = Ko(o, n),
                s = es(s),
                s = Jo(s, n),
                s = Ko(s, n),
                o = as(o),
                s = as(s),
                n.isWebGL2 && !0 !== n.isRawShaderMaterial && (M = "#version 300 es\n", y = ["#define attribute in", "#define varying out", "#define texture2D texture"].join("\n") + "\n" + y, b = ["#define varying in", n.glslVersion === Rn ? "" : "out highp vec4 pc_fragColor;", n.glslVersion === Rn ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join("\n") + "\n" + b);
                const z = M + b + s,
                w = Go(a, 35633, M + y + o),
                _ = Go(a, 35632, z);
                if (a.attachShader(x, w), a.attachShader(x, _), void 0 !== n.index0AttributeName ? a.bindAttribLocation(x, 0, n.index0AttributeName) : !0 === n.morphTargets && a.bindAttribLocation(x, 0, "position"), a.linkProgram(x), e.debug.checkShaderErrors) {
                    const e = a.getProgramInfoLog(x).trim(),
                    t = a.getShaderInfoLog(w).trim(),
                    n = a.getShaderInfoLog(_).trim();
                    let i = !0,
                    r = !0;
                    if (!1 === a.getProgramParameter(x, 35714)) {
                        i = !1;
                        const t = Xo(a, w, "vertex"),
                        n = Xo(a, _, "fragment");
                        console.error("THREE.WebGLProgram: shader error: ", a.getError(), "35715", a.getProgramParameter(x, 35715), "gl.getProgramInfoLog", e, t, n)
                    } else
                        "" !== e ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", e) : "" !== t && "" !== n || (r = !1);
                    r && (this.diagnostics = {
                            runnable: i,
                            programLog: e,
                            vertexShader: {
                                log: t,
                                prefix: y
                            },
                            fragmentShader: {
                                log: n,
                                prefix: b
                            }
                        })
                }
                let S,
                L;
                return a.deleteShader(w),
                a.deleteShader(_),
                this.getUniforms = function () {
                    return void 0 === S && (S = new ko(a, x)),
                    S
                },
                this.getAttributes = function () {
                    return void 0 === L && (L = function (e, t) {
                        const n = {},
                        i = e.getProgramParameter(t, 35721);
                        for (let a = 0; a < i; a++) {
                            const i = e.getActiveAttrib(t, a).name;
                            n[i] = e.getAttribLocation(t, i)
                        }
                        return n
                    }
                        (a, x)),
                    L
                },
                this.destroy = function () {
                    i.releaseStatesOfProgram(this),
                    a.deleteProgram(x),
                    this.program = void 0
                },
                this.name = n.shaderName,
                this.id = jo++,
                this.cacheKey = t,
                this.usedTimes = 1,
                this.program = x,
                this.vertexShader = w,
                this.fragmentShader = _,
                this
            }
            function ls(e, t, n, i, a, r) {
                const o = [],
                s = i.isWebGL2,
                c = i.logarithmicDepthBuffer,
                l = i.floatVertexTextures,
                h = i.maxVertexUniforms,
                u = i.vertexTextures;
                let f = i.precision;
                const d = {
                    MeshDepthMaterial: "depth",
                    MeshDistanceMaterial: "distanceRGBA",
                    MeshNormalMaterial: "normal",
                    MeshBasicMaterial: "basic",
                    MeshLambertMaterial: "lambert",
                    MeshPhongMaterial: "phong",
                    MeshToonMaterial: "toon",
                    MeshStandardMaterial: "physical",
                    MeshPhysicalMaterial: "physical",
                    MeshMatcapMaterial: "matcap",
                    LineBasicMaterial: "basic",
                    LineDashedMaterial: "dashed",
                    PointsMaterial: "points",
                    ShadowMaterial: "shadow",
                    SpriteMaterial: "sprite"
                },
                p = ["precision", "isWebGL2", "supportsVertexTextures", "outputEncoding", "instancing", "instancingColor", "map", "mapEncoding", "matcap", "matcapEncoding", "envMap", "envMapMode", "envMapEncoding", "envMapCubeUV", "lightMap", "lightMapEncoding", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "tangentSpaceNormalMap", "clearcoatMap", "clearcoatRoughnessMap", "clearcoatNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "vertexTangents", "vertexUvs", "uvsVertexOnly", "fog", "useFog", "fogExp2", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "numDirLightShadows", "numPointLightShadows", "numSpotLightShadows", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering", "sheen", "transmissionMap"];
                function g(e) {
                    let t;
                    return e ? e.isTexture ? t = e.encoding : e.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), t = e.texture.encoding) : t = Qt,
                    t
                }
                return {
                    getParameters: function (a, o, p, x, y) {
                        const b = x.fog,
                        M = a.isMeshStandardMaterial ? x.environment : null,
                        z = t.get(a.envMap || M),
                        w = d[a.type],
                        _ = y.isSkinnedMesh ? function (e) {
                            const t = e.skeleton.bones;
                            if (l)
                                return 1024; {
                                const e = h,
                                n = Math.floor((e - 20) / 4),
                                i = Math.min(n, t.length);
                                return i < t.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + t.length + " bones. This GPU supports " + i + "."), 0) : i
                            }
                        }
                        (y) : 0;
                        let S,
                        L;
                        if (null !== a.precision && (f = i.getMaxPrecision(a.precision), f !== a.precision && console.warn("THREE.WebGLProgram.getParameters:", a.precision, "not supported, using", f, "instead.")), w) {
                            const e = Er[w];
                            S = e.vertexShader,
                            L = e.fragmentShader
                        } else
                            S = a.vertexShader, L = a.fragmentShader;
                        const A = e.getRenderTarget();
                        return {
                            isWebGL2: s,
                            shaderID: w,
                            shaderName: a.type,
                            vertexShader: S,
                            fragmentShader: L,
                            defines: a.defines,
                            isRawShaderMaterial: !0 === a.isRawShaderMaterial,
                            glslVersion: a.glslVersion,
                            precision: f,
                            instancing: !0 === y.isInstancedMesh,
                            instancingColor: !0 === y.isInstancedMesh && null !== y.instanceColor,
                            supportsVertexTextures: u,
                            outputEncoding: null !== A ? g(A.texture) : e.outputEncoding,
                            map: !!a.map,
                            mapEncoding: g(a.map),
                            matcap: !!a.matcap,
                            matcapEncoding: g(a.matcap),
                            envMap: !!z,
                            envMapMode: z && z.mapping,
                            envMapEncoding: g(z),
                            envMapCubeUV: !!z && (z.mapping === le || z.mapping === he),
                            lightMap: !!a.lightMap,
                            lightMapEncoding: g(a.lightMap),
                            aoMap: !!a.aoMap,
                            emissiveMap: !!a.emissiveMap,
                            emissiveMapEncoding: g(a.emissiveMap),
                            bumpMap: !!a.bumpMap,
                            normalMap: !!a.normalMap,
                            objectSpaceNormalMap: a.normalMapType === cn,
                            tangentSpaceNormalMap: a.normalMapType === sn,
                            clearcoatMap: !!a.clearcoatMap,
                            clearcoatRoughnessMap: !!a.clearcoatRoughnessMap,
                            clearcoatNormalMap: !!a.clearcoatNormalMap,
                            displacementMap: !!a.displacementMap,
                            roughnessMap: !!a.roughnessMap,
                            metalnessMap: !!a.metalnessMap,
                            specularMap: !!a.specularMap,
                            alphaMap: !!a.alphaMap,
                            gradientMap: !!a.gradientMap,
                            sheen: !!a.sheen,
                            transmissionMap: !!a.transmissionMap,
                            combine: a.combine,
                            vertexTangents: a.normalMap && a.vertexTangents,
                            vertexColors: a.vertexColors,
                            vertexUvs: !!(a.map || a.bumpMap || a.normalMap || a.specularMap || a.alphaMap || a.emissiveMap || a.roughnessMap || a.metalnessMap || a.clearcoatMap || a.clearcoatRoughnessMap || a.clearcoatNormalMap || a.displacementMap || a.transmissionMap),
                            uvsVertexOnly: !(a.map || a.bumpMap || a.normalMap || a.specularMap || a.alphaMap || a.emissiveMap || a.roughnessMap || a.metalnessMap || a.clearcoatNormalMap || a.transmissionMap || !a.displacementMap),
                            fog: !!b,
                            useFog: a.fog,
                            fogExp2: b && b.isFogExp2,
                            flatShading: a.flatShading,
                            sizeAttenuation: a.sizeAttenuation,
                            logarithmicDepthBuffer: c,
                            skinning: a.skinning && _ > 0,
                            maxBones: _,
                            useVertexTexture: l,
                            morphTargets: a.morphTargets,
                            morphNormals: a.morphNormals,
                            maxMorphTargets: e.maxMorphTargets,
                            maxMorphNormals: e.maxMorphNormals,
                            numDirLights: o.directional.length,
                            numPointLights: o.point.length,
                            numSpotLights: o.spot.length,
                            numRectAreaLights: o.rectArea.length,
                            numHemiLights: o.hemi.length,
                            numDirLightShadows: o.directionalShadowMap.length,
                            numPointLightShadows: o.pointShadowMap.length,
                            numSpotLightShadows: o.spotShadowMap.length,
                            numClippingPlanes: r.numPlanes,
                            numClipIntersection: r.numIntersection,
                            dithering: a.dithering,
                            shadowMapEnabled: e.shadowMap.enabled && p.length > 0,
                            shadowMapType: e.shadowMap.type,
                            toneMapping: a.toneMapped ? e.toneMapping : K,
                            physicallyCorrectLights: e.physicallyCorrectLights,
                            premultipliedAlpha: a.premultipliedAlpha,
                            alphaTest: a.alphaTest,
                            doubleSided: a.side === v,
                            flipSided: a.side === m,
                            depthPacking: void 0 !== a.depthPacking && a.depthPacking,
                            index0AttributeName: a.index0AttributeName,
                            extensionDerivatives: a.extensions && a.extensions.derivatives,
                            extensionFragDepth: a.extensions && a.extensions.fragDepth,
                            extensionDrawBuffers: a.extensions && a.extensions.drawBuffers,
                            extensionShaderTextureLOD: a.extensions && a.extensions.shaderTextureLOD,
                            rendererExtensionFragDepth: s || n.has("EXT_frag_depth"),
                            rendererExtensionDrawBuffers: s || n.has("WEBGL_draw_buffers"),
                            rendererExtensionShaderTextureLod: s || n.has("EXT_shader_texture_lod"),
                            customProgramCacheKey: a.customProgramCacheKey()
                        }
                    },
                    getProgramCacheKey: function (t) {
                        const n = [];
                        if (t.shaderID ? n.push(t.shaderID) : (n.push(t.fragmentShader), n.push(t.vertexShader)), void 0 !== t.defines)
                            for (const e in t.defines)
                                n.push(e), n.push(t.defines[e]);
                        if (!1 === t.isRawShaderMaterial) {
                            for (let e = 0; e < p.length; e++)
                                n.push(t[p[e]]);
                            n.push(e.outputEncoding),
                            n.push(e.gammaFactor)
                        }
                        return n.push(t.customProgramCacheKey),
                        n.join()
                    },
                    getUniforms: function (e) {
                        const t = d[e.type];
                        let n;
                        if (t) {
                            const e = Er[t];
                            n = dr.clone(e.uniforms)
                        } else
                            n = e.uniforms;
                        return n
                    },
                    acquireProgram: function (t, n) {
                        let i;
                        for (let e = 0, t = o.length; e < t; e++) {
                            const t = o[e];
                            if (t.cacheKey === n) {
                                i = t,
                                ++i.usedTimes;
                                break
                            }
                        }
                        return void 0 === i && (i = new cs(e, n, t, a), o.push(i)),
                        i
                    },
                    releaseProgram: function (e) {
                        if (0 == --e.usedTimes) {
                            const t = o.indexOf(e);
                            o[t] = o[o.length - 1],
                            o.pop(),
                            e.destroy()
                        }
                    },
                    programs: o
                }
            }
            function hs() {
                let e = new WeakMap;
                return {
                    get: function (t) {
                        let n = e.get(t);
                        return void 0 === n && (n = {}, e.set(t, n)),
                        n
                    },
                    remove: function (t) {
                        e.delete(t)
                    },
                    update: function (t, n, i) {
                        e.get(t)[n] = i
                    },
                    dispose: function () {
                        e = new WeakMap
                    }
                }
            }
            function us(e, t) {
                return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.program !== t.program ? e.program.id - t.program.id : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id
            }
            function fs(e, t) {
                return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id
            }
            function ds(e) {
                const t = [];
                let n = 0;
                const i = [],
                a = [],
                r = {
                    id: -1
                };
                function o(i, a, o, s, c, l) {
                    let h = t[n];
                    const u = e.get(o);
                    return void 0 === h ? (h = {
                            id: i.id,
                            object: i,
                            geometry: a,
                            material: o,
                            program: u.program || r,
                            groupOrder: s,
                            renderOrder: i.renderOrder,
                            z: c,
                            group: l
                        }, t[n] = h) : (h.id = i.id, h.object = i, h.geometry = a, h.material = o, h.program = u.program || r, h.groupOrder = s, h.renderOrder = i.renderOrder, h.z = c, h.group = l),
                    n++,
                    h
                }
                return {
                    opaque: i,
                    transparent: a,
                    init: function () {
                        n = 0,
                        i.length = 0,
                        a.length = 0
                    },
                    push: function (e, t, n, r, s, c) {
                        const l = o(e, t, n, r, s, c);
                        (!0 === n.transparent ? a : i).push(l)
                    },
                    unshift: function (e, t, n, r, s, c) {
                        const l = o(e, t, n, r, s, c);
                        (!0 === n.transparent ? a : i).unshift(l)
                    },
                    finish: function () {
                        for (let e = n, i = t.length; e < i; e++) {
                            const n = t[e];
                            if (null === n.id)
                                break;
                            n.id = null,
                            n.object = null,
                            n.geometry = null,
                            n.material = null,
                            n.program = null,
                            n.group = null
                        }
                    },
                    sort: function (e, t) {
                        i.length > 1 && i.sort(e || us),
                        a.length > 1 && a.sort(t || fs)
                    }
                }
            }
            function ps(e) {
                let t = new WeakMap;
                return {
                    get: function (n, i) {
                        const a = t.get(n);
                        let r;
                        return void 0 === a ? (r = new ds(e), t.set(n, new WeakMap), t.get(n).set(i, r)) : (r = a.get(i), void 0 === r && (r = new ds(e), a.set(i, r))),
                        r
                    },
                    dispose: function () {
                        t = new WeakMap
                    }
                }
            }
            function ms() {
                const e = {};
                return {
                    get: function (t) {
                        if (void 0 !== e[t.id])
                            return e[t.id];
                        let n;
                        switch (t.type) {
                        case "DirectionalLight":
                            n = {
                                direction: new Qn,
                                color: new ga
                            };
                            break;
                        case "SpotLight":
                            n = {
                                position: new Qn,
                                direction: new Qn,
                                color: new ga,
                                distance: 0,
                                coneCos: 0,
                                penumbraCos: 0,
                                decay: 0
                            };
                            break;
                        case "PointLight":
                            n = {
                                position: new Qn,
                                color: new ga,
                                distance: 0,
                                decay: 0
                            };
                            break;
                        case "HemisphereLight":
                            n = {
                                direction: new Qn,
                                skyColor: new ga,
                                groundColor: new ga
                            };
                            break;
                        case "RectAreaLight":
                            n = {
                                color: new ga,
                                position: new Qn,
                                halfWidth: new Qn,
                                halfHeight: new Qn
                            }
                        }
                        return e[t.id] = n,
                        n
                    }
                }
            }
            let vs = 0;
            function gs(e, t) {
                return (t.castShadow ? 1 : 0) - (e.castShadow ? 1 : 0)
            }
            function xs() {
                const e = new ms,
                t = function () {
                    const e = {};
                    return {
                        get: function (t) {
                            if (void 0 !== e[t.id])
                                return e[t.id];
                            let n;
                            switch (t.type) {
                            case "DirectionalLight":
                            case "SpotLight":
                                n = {
                                    shadowBias: 0,
                                    shadowNormalBias: 0,
                                    shadowRadius: 1,
                                    shadowMapSize: new Un
                                };
                                break;
                            case "PointLight":
                                n = {
                                    shadowBias: 0,
                                    shadowNormalBias: 0,
                                    shadowRadius: 1,
                                    shadowMapSize: new Un,
                                    shadowCameraNear: 1,
                                    shadowCameraFar: 1e3
                                }
                            }
                            return e[t.id] = n,
                            n
                        }
                    }
                }
                (),
                n = {
                    version: 0,
                    hash: {
                        directionalLength: -1,
                        pointLength: -1,
                        spotLength: -1,
                        rectAreaLength: -1,
                        hemiLength: -1,
                        numDirectionalShadows: -1,
                        numPointShadows: -1,
                        numSpotShadows: -1
                    },
                    ambient: [0, 0, 0],
                    probe: [],
                    directional: [],
                    directionalShadow: [],
                    directionalShadowMap: [],
                    directionalShadowMatrix: [],
                    spot: [],
                    spotShadow: [],
                    spotShadowMap: [],
                    spotShadowMatrix: [],
                    rectArea: [],
                    rectAreaLTC1: null,
                    rectAreaLTC2: null,
                    point: [],
                    pointShadow: [],
                    pointShadowMap: [],
                    pointShadowMatrix: [],
                    hemi: []
                };
                for (let e = 0; e < 9; e++)
                    n.probe.push(new Qn);
                const i = new Qn,
                a = new _i,
                r = new _i;
                return {
                    setup: function (o, s, c) {
                        let l = 0,
                        h = 0,
                        u = 0;
                        for (let e = 0; e < 9; e++)
                            n.probe[e].set(0, 0, 0);
                        let f = 0,
                        d = 0,
                        p = 0,
                        m = 0,
                        v = 0,
                        g = 0,
                        x = 0,
                        y = 0;
                        const b = c.matrixWorldInverse;
                        o.sort(gs);
                        for (let s = 0, c = o.length; s < c; s++) {
                            const c = o[s],
                            M = c.color,
                            z = c.intensity,
                            w = c.distance,
                            _ = c.shadow && c.shadow.map ? c.shadow.map.texture : null;
                            if (c.isAmbientLight)
                                l += M.r * z, h += M.g * z, u += M.b * z;
                            else if (c.isLightProbe)
                                for (let e = 0; e < 9; e++)
                                    n.probe[e].addScaledVector(c.sh.coefficients[e], z);
                            else if (c.isDirectionalLight) {
                                const a = e.get(c);
                                if (a.color.copy(c.color).multiplyScalar(c.intensity), a.direction.setFromMatrixPosition(c.matrixWorld), i.setFromMatrixPosition(c.target.matrixWorld), a.direction.sub(i), a.direction.transformDirection(b), c.castShadow) {
                                    const e = c.shadow,
                                    i = t.get(c);
                                    i.shadowBias = e.bias,
                                    i.shadowNormalBias = e.normalBias,
                                    i.shadowRadius = e.radius,
                                    i.shadowMapSize = e.mapSize,
                                    n.directionalShadow[f] = i,
                                    n.directionalShadowMap[f] = _,
                                    n.directionalShadowMatrix[f] = c.shadow.matrix,
                                    g++
                                }
                                n.directional[f] = a,
                                f++
                            } else if (c.isSpotLight) {
                                const a = e.get(c);
                                if (a.position.setFromMatrixPosition(c.matrixWorld), a.position.applyMatrix4(b), a.color.copy(M).multiplyScalar(z), a.distance = w, a.direction.setFromMatrixPosition(c.matrixWorld), i.setFromMatrixPosition(c.target.matrixWorld), a.direction.sub(i), a.direction.transformDirection(b), a.coneCos = Math.cos(c.angle), a.penumbraCos = Math.cos(c.angle * (1 - c.penumbra)), a.decay = c.decay, c.castShadow) {
                                    const e = c.shadow,
                                    i = t.get(c);
                                    i.shadowBias = e.bias,
                                    i.shadowNormalBias = e.normalBias,
                                    i.shadowRadius = e.radius,
                                    i.shadowMapSize = e.mapSize,
                                    n.spotShadow[p] = i,
                                    n.spotShadowMap[p] = _,
                                    n.spotShadowMatrix[p] = c.shadow.matrix,
                                    y++
                                }
                                n.spot[p] = a,
                                p++
                            } else if (c.isRectAreaLight) {
                                const t = e.get(c);
                                t.color.copy(M).multiplyScalar(z),
                                t.position.setFromMatrixPosition(c.matrixWorld),
                                t.position.applyMatrix4(b),
                                r.identity(),
                                a.copy(c.matrixWorld),
                                a.premultiply(b),
                                r.extractRotation(a),
                                t.halfWidth.set(.5 * c.width, 0, 0),
                                t.halfHeight.set(0, .5 * c.height, 0),
                                t.halfWidth.applyMatrix4(r),
                                t.halfHeight.applyMatrix4(r),
                                n.rectArea[m] = t,
                                m++
                            } else if (c.isPointLight) {
                                const i = e.get(c);
                                if (i.position.setFromMatrixPosition(c.matrixWorld), i.position.applyMatrix4(b), i.color.copy(c.color).multiplyScalar(c.intensity), i.distance = c.distance, i.decay = c.decay, c.castShadow) {
                                    const e = c.shadow,
                                    i = t.get(c);
                                    i.shadowBias = e.bias,
                                    i.shadowNormalBias = e.normalBias,
                                    i.shadowRadius = e.radius,
                                    i.shadowMapSize = e.mapSize,
                                    i.shadowCameraNear = e.camera.near,
                                    i.shadowCameraFar = e.camera.far,
                                    n.pointShadow[d] = i,
                                    n.pointShadowMap[d] = _,
                                    n.pointShadowMatrix[d] = c.shadow.matrix,
                                    x++
                                }
                                n.point[d] = i,
                                d++
                            } else if (c.isHemisphereLight) {
                                const t = e.get(c);
                                t.direction.setFromMatrixPosition(c.matrixWorld),
                                t.direction.transformDirection(b),
                                t.direction.normalize(),
                                t.skyColor.copy(c.color).multiplyScalar(z),
                                t.groundColor.copy(c.groundColor).multiplyScalar(z),
                                n.hemi[v] = t,
                                v++
                            }
                        }
                        m > 0 && (n.rectAreaLTC1 = Cr.LTC_1, n.rectAreaLTC2 = Cr.LTC_2),
                        n.ambient[0] = l,
                        n.ambient[1] = h,
                        n.ambient[2] = u;
                        const M = n.hash;
                        M.directionalLength === f && M.pointLength === d && M.spotLength === p && M.rectAreaLength === m && M.hemiLength === v && M.numDirectionalShadows === g && M.numPointShadows === x && M.numSpotShadows === y || (n.directional.length = f, n.spot.length = p, n.rectArea.length = m, n.point.length = d, n.hemi.length = v, n.directionalShadow.length = g, n.directionalShadowMap.length = g, n.pointShadow.length = x, n.pointShadowMap.length = x, n.spotShadow.length = y, n.spotShadowMap.length = y, n.directionalShadowMatrix.length = g, n.pointShadowMatrix.length = x, n.spotShadowMatrix.length = y, M.directionalLength = f, M.pointLength = d, M.spotLength = p, M.rectAreaLength = m, M.hemiLength = v, M.numDirectionalShadows = g, M.numPointShadows = x, M.numSpotShadows = y, n.version = vs++)
                    },
                    state: n
                }
            }
            function ys() {
                const e = new xs,
                t = [],
                n = [];
                return {
                    init: function () {
                        t.length = 0,
                        n.length = 0
                    },
                    state: {
                        lightsArray: t,
                        shadowsArray: n,
                        lights: e
                    },
                    setupLights: function (i) {
                        e.setup(t, n, i)
                    },
                    pushLight: function (e) {
                        t.push(e)
                    },
                    pushShadow: function (e) {
                        n.push(e)
                    }
                }
            }
            function bs() {
                let e = new WeakMap;
                return {
                    get: function (t, n) {
                        let i;
                        return !1 === e.has(t) ? (i = new ys, e.set(t, new WeakMap), e.get(t).set(n, i)) : !1 === e.get(t).has(n) ? (i = new ys, e.get(t).set(n, i)) : i = e.get(t).get(n),
                        i
                    },
                    dispose: function () {
                        e = new WeakMap
                    }
                }
            }
            function Ms(e) {
                ba.call(this),
                this.type = "MeshDepthMaterial",
                this.depthPacking = rn,
                this.skinning = !1,
                this.morphTargets = !1,
                this.map = null,
                this.alphaMap = null,
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.fog = !1,
                this.setValues(e)
            }
            function zs(e) {
                ba.call(this),
                this.type = "MeshDistanceMaterial",
                this.referencePosition = new Qn,
                this.nearDistance = 1,
                this.farDistance = 1e3,
                this.skinning = !1,
                this.morphTargets = !1,
                this.map = null,
                this.alphaMap = null,
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.fog = !1,
                this.setValues(e)
            }
            function ws(e, t, n) {
                let i = new _r;
                const a = new Un,
                r = new Un,
                o = new Xn,
                s = [],
                c = [],
                l = {},
                h = {
                    0: m,
                    1: p,
                    2: v
                },
                f = new pr({
                    defines: {
                        SAMPLE_RATE: 2 / 8,
                        HALF_SAMPLE_RATE: 1 / 8
                    },
                    uniforms: {
                        shadow_pass: {
                            value: null
                        },
                        resolution: {
                            value: new Un
                        },
                        radius: {
                            value: 4
                        }
                    },
                    vertexShader: "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",
                    fragmentShader: "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"
                }),
                g = f.clone();
                g.defines.HORIZONAL_PASS = 1;
                const x = new Ga;
                x.setAttribute("position", new _a(new Float32Array([-1, -1, .5, 3, -1, .5, -1, 3, .5]), 3));
                const b = new sr(x, f),
                M = this;
                function z(n, i) {
                    const a = t.update(b);
                    f.uniforms.shadow_pass.value = n.map.texture,
                    f.uniforms.resolution.value = n.mapSize,
                    f.uniforms.radius.value = n.radius,
                    e.setRenderTarget(n.mapPass),
                    e.clear(),
                    e.renderBufferDirect(i, null, a, f, b, null),
                    g.uniforms.shadow_pass.value = n.mapPass.texture,
                    g.uniforms.resolution.value = n.mapSize,
                    g.uniforms.radius.value = n.radius,
                    e.setRenderTarget(n.map),
                    e.clear(),
                    e.renderBufferDirect(i, null, a, g, b, null)
                }
                function w(e, t, n) {
                    const i = e << 0 | t << 1 | n << 2;
                    let a = s[i];
                    return void 0 === a && (a = new Ms({
                            depthPacking: on,
                            morphTargets: e,
                            skinning: t
                        }), s[i] = a),
                    a
                }
                function _(e, t, n) {
                    const i = e << 0 | t << 1 | n << 2;
                    let a = c[i];
                    return void 0 === a && (a = new zs({
                            morphTargets: e,
                            skinning: t
                        }), c[i] = a),
                    a
                }
                function S(t, n, i, a, r, o, s) {
                    let c = null,
                    u = w,
                    f = t.customDepthMaterial;
                    if (!0 === a.isPointLight && (u = _, f = t.customDistanceMaterial), void 0 === f) {
                        let e = !1;
                        !0 === i.morphTargets && (e = n.morphAttributes && n.morphAttributes.position && n.morphAttributes.position.length > 0);
                        let a = !1;
                        !0 === t.isSkinnedMesh && (!0 === i.skinning ? a = !0 : console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", t)),
                        c = u(e, a, !0 === t.isInstancedMesh)
                    } else
                        c = f;
                    if (e.localClippingEnabled && !0 === i.clipShadows && 0 !== i.clippingPlanes.length) {
                        const e = c.uuid,
                        t = i.uuid;
                        let n = l[e];
                        void 0 === n && (n = {}, l[e] = n);
                        let a = n[t];
                        void 0 === a && (a = c.clone(), n[t] = a),
                        c = a
                    }
                    return c.visible = i.visible,
                    c.wireframe = i.wireframe,
                    c.side = s === d ? null !== i.shadowSide ? i.shadowSide : i.side : null !== i.shadowSide ? i.shadowSide : h[i.side],
                    c.clipShadows = i.clipShadows,
                    c.clippingPlanes = i.clippingPlanes,
                    c.clipIntersection = i.clipIntersection,
                    c.wireframeLinewidth = i.wireframeLinewidth,
                    c.linewidth = i.linewidth,
                    !0 === a.isPointLight && !0 === c.isMeshDistanceMaterial && (c.referencePosition.setFromMatrixPosition(a.matrixWorld), c.nearDistance = r, c.farDistance = o),
                    c
                }
                function L(n, a, r, o, s) {
                    if (!1 === n.visible)
                        return;
                    if (n.layers.test(a.layers) && (n.isMesh || n.isLine || n.isPoints) && (n.castShadow || n.receiveShadow && s === d) && (!n.frustumCulled || i.intersectsObject(n))) {
                        n.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse, n.matrixWorld);
                        const i = t.update(n),
                        a = n.material;
                        if (Array.isArray(a)) {
                            const t = i.groups;
                            for (let c = 0, l = t.length; c < l; c++) {
                                const l = t[c],
                                h = a[l.materialIndex];
                                if (h && h.visible) {
                                    const t = S(n, i, h, o, r.near, r.far, s);
                                    e.renderBufferDirect(r, null, i, t, n, l)
                                }
                            }
                        } else if (a.visible) {
                            const t = S(n, i, a, o, r.near, r.far, s);
                            e.renderBufferDirect(r, null, i, t, n, null)
                        }
                    }
                    const c = n.children;
                    for (let e = 0, t = c.length; e < t; e++)
                        L(c[e], a, r, o, s)
                }
                this.enabled = !1,
                this.autoUpdate = !0,
                this.needsUpdate = !1,
                this.type = u,
                this.render = function (t, s, c) {
                    if (!1 === M.enabled)
                        return;
                    if (!1 === M.autoUpdate && !1 === M.needsUpdate)
                        return;
                    if (0 === t.length)
                        return;
                    const l = e.getRenderTarget(),
                    h = e.getActiveCubeFace(),
                    u = e.getActiveMipmapLevel(),
                    f = e.state;
                    f.setBlending(y),
                    f.buffers.color.setClear(1, 1, 1, 1),
                    f.buffers.depth.setTest(!0),
                    f.setScissorTest(!1);
                    for (let l = 0, h = t.length; l < h; l++) {
                        const h = t[l],
                        u = h.shadow;
                        if (void 0 === u) {
                            console.warn("THREE.WebGLShadowMap:", h, "has no shadow.");
                            continue
                        }
                        if (!1 === u.autoUpdate && !1 === u.needsUpdate)
                            continue;
                        a.copy(u.mapSize);
                        const p = u.getFrameExtents();
                        if (a.multiply(p), r.copy(u.mapSize), (a.x > n || a.y > n) && (a.x > n && (r.x = Math.floor(n / p.x), a.x = r.x * p.x, u.mapSize.x = r.x), a.y > n && (r.y = Math.floor(n / p.y), a.y = r.y * p.y, u.mapSize.y = r.y)), null === u.map && !u.isPointLightShadow && this.type === d) {
                            const e = {
                                minFilter: ye,
                                magFilter: ye,
                                format: Oe
                            };
                            u.map = new qn(a.x, a.y, e),
                            u.map.texture.name = h.name + ".shadowMap",
                            u.mapPass = new qn(a.x, a.y, e),
                            u.camera.updateProjectionMatrix()
                        }
                        if (null === u.map) {
                            const e = {
                                minFilter: pe,
                                magFilter: pe,
                                format: Oe
                            };
                            u.map = new qn(a.x, a.y, e),
                            u.map.texture.name = h.name + ".shadowMap",
                            u.camera.updateProjectionMatrix()
                        }
                        e.setRenderTarget(u.map),
                        e.clear();
                        const m = u.getViewportCount();
                        for (let e = 0; e < m; e++) {
                            const t = u.getViewport(e);
                            o.set(r.x * t.x, r.y * t.y, r.x * t.z, r.y * t.w),
                            f.viewport(o),
                            u.updateMatrices(h, e),
                            i = u.getFrustum(),
                            L(s, c, u.camera, h, this.type)
                        }
                        u.isPointLightShadow || this.type !== d || z(u, c),
                        u.needsUpdate = !1
                    }
                    M.needsUpdate = !1,
                    e.setRenderTarget(l, h, u)
                }
            }
            function _s(e, t, n) {
                const i = n.isWebGL2,
                a = new function () {
                    let t = !1;
                    const n = new Xn;
                    let i = null;
                    const a = new Xn(0, 0, 0, 0);
                    return {
                        setMask: function (n) {
                            i === n || t || (e.colorMask(n, n, n, n), i = n)
                        },
                        setLocked: function (e) {
                            t = e
                        },
                        setClear: function (t, i, r, o, s) {
                            !0 === s && (t *= o, i *= o, r *= o),
                            n.set(t, i, r, o),
                            !1 === a.equals(n) && (e.clearColor(t, i, r, o), a.copy(n))
                        },
                        reset: function () {
                            t = !1,
                            i = null,
                            a.set(-1, 0, 0, 0)
                        }
                    }
                },
                r = new function () {
                    let t = !1,
                    n = null,
                    i = null,
                    a = null;
                    return {
                        setTest: function (e) {
                            e ? pe(2929) : me(2929)
                        },
                        setMask: function (i) {
                            n === i || t || (e.depthMask(i), n = i)
                        },
                        setFunc: function (t) {
                            if (i !== t) {
                                if (t)
                                    switch (t) {
                                    case B:
                                        e.depthFunc(512);
                                        break;
                                    case k:
                                        e.depthFunc(519);
                                        break;
                                    case G:
                                        e.depthFunc(513);
                                        break;
                                    case j:
                                        e.depthFunc(515);
                                        break;
                                    case W:
                                        e.depthFunc(514);
                                        break;
                                    case X:
                                        e.depthFunc(518);
                                        break;
                                    case q:
                                        e.depthFunc(516);
                                        break;
                                    case Y:
                                        e.depthFunc(517);
                                        break;
                                    default:
                                        e.depthFunc(515)
                                    }
                                else
                                    e.depthFunc(515);
                                i = t
                            }
                        },
                        setLocked: function (e) {
                            t = e
                        },
                        setClear: function (t) {
                            a !== t && (e.clearDepth(t), a = t)
                        },
                        reset: function () {
                            t = !1,
                            n = null,
                            i = null,
                            a = null
                        }
                    }
                },
                l = new function () {
                    let t = !1,
                    n = null,
                    i = null,
                    a = null,
                    r = null,
                    o = null,
                    s = null,
                    c = null,
                    l = null;
                    return {
                        setTest: function (e) {
                            t || (e ? pe(2960) : me(2960))
                        },
                        setMask: function (i) {
                            n === i || t || (e.stencilMask(i), n = i)
                        },
                        setFunc: function (t, n, o) {
                            i === t && a === n && r === o || (e.stencilFunc(t, n, o), i = t, a = n, r = o)
                        },
                        setOp: function (t, n, i) {
                            o === t && s === n && c === i || (e.stencilOp(t, n, i), o = t, s = n, c = i)
                        },
                        setLocked: function (e) {
                            t = e
                        },
                        setClear: function (t) {
                            l !== t && (e.clearStencil(t), l = t)
                        },
                        reset: function () {
                            t = !1,
                            n = null,
                            i = null,
                            a = null,
                            r = null,
                            o = null,
                            s = null,
                            c = null,
                            l = null
                        }
                    }
                };
                let h = {},
                u = null,
                f = null,
                d = null,
                p = null,
                g = null,
                x = null,
                Z = null,
                Q = null,
                J = null,
                K = !1,
                $ = null,
                ee = null,
                te = null,
                ne = null,
                ie = null;
                const ae = e.getParameter(35661);
                let re = !1,
                oe = 0;
                const se = e.getParameter(7938);
                -1 !== se.indexOf("WebGL") ? (oe = parseFloat(/^WebGL\ ([0-9])/.exec(se)[1]), re = oe >= 1) : -1 !== se.indexOf("OpenGL ES") && (oe = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(se)[1]), re = oe >= 2);
                let ce = null,
                le = {};
                const he = new Xn,
                ue = new Xn;
                function fe(t, n, i) {
                    const a = new Uint8Array(4),
                    r = e.createTexture();
                    e.bindTexture(t, r),
                    e.texParameteri(t, 10241, 9728),
                    e.texParameteri(t, 10240, 9728);
                    for (let t = 0; t < i; t++)
                        e.texImage2D(n + t, 0, 6408, 1, 1, 0, 6408, 5121, a);
                    return r
                }
                const de = {};
                function pe(t) {
                    !0 !== h[t] && (e.enable(t), h[t] = !0)
                }
                function me(t) {
                    !1 !== h[t] && (e.disable(t), h[t] = !1)
                }
                de[3553] = fe(3553, 3553, 1),
                de[34067] = fe(34067, 34069, 6),
                a.setClear(0, 0, 0, 1),
                r.setClear(1),
                l.setClear(0),
                pe(2929),
                r.setFunc(j),
                ye(!1),
                be(s),
                pe(2884),
                xe(y);
                const ve = {
                    [S]: 32774,
                    [L]: 32778,
                    [A]: 32779
                };
                if (i)
                    ve[T] = 32775, ve[C] = 32776;
                else {
                    const e = t.get("EXT_blend_minmax");
                    null !== e && (ve[T] = e.MIN_EXT, ve[C] = e.MAX_EXT)
                }
                const ge = {
                    [E]: 0,
                    [H]: 1,
                    [N]: 768,
                    [V]: 770,
                    [U]: 776,
                    [O]: 774,
                    [F]: 772,
                    [P]: 769,
                    [R]: 771,
                    [D]: 775,
                    [I]: 773
                };
                function xe(t, n, i, a, r, o, s, c) {
                    if (t !== y) {
                        if (f || (pe(3042), f = !0), t === _)
                            r = r || n, o = o || i, s = s || a, n === p && r === Z || (e.blendEquationSeparate(ve[n], ve[r]), p = n, Z = r), i === g && a === x && o === Q && s === J || (e.blendFuncSeparate(ge[i], ge[a], ge[o], ge[s]), g = i, x = a, Q = o, J = s), d = t, K = null;
                        else if (t !== d || c !== K) {
                            if (p === S && Z === S || (e.blendEquation(32774), p = S, Z = S), c)
                                switch (t) {
                                case b:
                                    e.blendFuncSeparate(1, 771, 1, 771);
                                    break;
                                case M:
                                    e.blendFunc(1, 1);
                                    break;
                                case z:
                                    e.blendFuncSeparate(0, 0, 769, 771);
                                    break;
                                case w:
                                    e.blendFuncSeparate(0, 768, 0, 770);
                                    break;
                                default:
                                    console.error("THREE.WebGLState: Invalid blending: ", t)
                                }
                            else
                                switch (t) {
                                case b:
                                    e.blendFuncSeparate(770, 771, 1, 771);
                                    break;
                                case M:
                                    e.blendFunc(770, 1);
                                    break;
                                case z:
                                    e.blendFunc(0, 769);
                                    break;
                                case w:
                                    e.blendFunc(0, 768);
                                    break;
                                default:
                                    console.error("THREE.WebGLState: Invalid blending: ", t)
                                }
                            g = null,
                            x = null,
                            Q = null,
                            J = null,
                            d = t,
                            K = c
                        }
                    } else
                        f && (me(3042), f = !1)
                }
                function ye(t) {
                    $ !== t && (t ? e.frontFace(2304) : e.frontFace(2305), $ = t)
                }
                function be(t) {
                    t !== o ? (pe(2884), t !== ee && (t === s ? e.cullFace(1029) : t === c ? e.cullFace(1028) : e.cullFace(1032))) : me(2884),
                    ee = t
                }
                function Me(t, n, i) {
                    t ? (pe(32823), ne === n && ie === i || (e.polygonOffset(n, i), ne = n, ie = i)) : me(32823)
                }
                function ze(t) {
                    void 0 === t && (t = 33984 + ae - 1),
                    ce !== t && (e.activeTexture(t), ce = t)
                }
                return {
                    buffers: {
                        color: a,
                        depth: r,
                        stencil: l
                    },
                    enable: pe,
                    disable: me,
                    useProgram: function (t) {
                        return u !== t && (e.useProgram(t), u = t, !0)
                    },
                    setBlending: xe,
                    setMaterial: function (e, t) {
                        e.side === v ? me(2884) : pe(2884);
                        let n = e.side === m;
                        t && (n = !n),
                        ye(n),
                        e.blending === b && !1 === e.transparent ? xe(y) : xe(e.blending, e.blendEquation, e.blendSrc, e.blendDst, e.blendEquationAlpha, e.blendSrcAlpha, e.blendDstAlpha, e.premultipliedAlpha),
                        r.setFunc(e.depthFunc),
                        r.setTest(e.depthTest),
                        r.setMask(e.depthWrite),
                        a.setMask(e.colorWrite);
                        const i = e.stencilWrite;
                        l.setTest(i),
                        i && (l.setMask(e.stencilWriteMask), l.setFunc(e.stencilFunc, e.stencilRef, e.stencilFuncMask), l.setOp(e.stencilFail, e.stencilZFail, e.stencilZPass)),
                        Me(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits)
                    },
                    setFlipSided: ye,
                    setCullFace: be,
                    setLineWidth: function (t) {
                        t !== te && (re && e.lineWidth(t), te = t)
                    },
                    setPolygonOffset: Me,
                    setScissorTest: function (e) {
                        e ? pe(3089) : me(3089)
                    },
                    activeTexture: ze,
                    bindTexture: function (t, n) {
                        null === ce && ze();
                        let i = le[ce];
                        void 0 === i && (i = {
                                type: void 0,
                                texture: void 0
                            }, le[ce] = i),
                        i.type === t && i.texture === n || (e.bindTexture(t, n || de[t]), i.type = t, i.texture = n)
                    },
                    unbindTexture: function () {
                        const t = le[ce];
                        void 0 !== t && void 0 !== t.type && (e.bindTexture(t.type, null), t.type = void 0, t.texture = void 0)
                    },
                    compressedTexImage2D: function () {
                        try {
                            e.compressedTexImage2D.apply(e, arguments)
                        } catch (e) {
                            console.error("THREE.WebGLState:", e)
                        }
                    },
                    texImage2D: function () {
                        try {
                            e.texImage2D.apply(e, arguments)
                        } catch (e) {
                            console.error("THREE.WebGLState:", e)
                        }
                    },
                    texImage3D: function () {
                        try {
                            e.texImage3D.apply(e, arguments)
                        } catch (e) {
                            console.error("THREE.WebGLState:", e)
                        }
                    },
                    scissor: function (t) {
                        !1 === he.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), he.copy(t))
                    },
                    viewport: function (t) {
                        !1 === ue.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), ue.copy(t))
                    },
                    reset: function () {
                        h = {},
                        ce = null,
                        le = {},
                        u = null,
                        d = null,
                        $ = null,
                        ee = null,
                        a.reset(),
                        r.reset(),
                        l.reset()
                    }
                }
            }
            function Ss(e, t, n, i, a, r, o) {
                const s = a.isWebGL2,
                c = a.maxTextures,
                l = a.maxCubemapSize,
                h = a.maxTextureSize,
                u = a.maxSamples,
                f = new WeakMap;
                let d,
                p = !1;
                try {
                    p = "undefined" != typeof OffscreenCanvas && null !== new OffscreenCanvas(1, 1).getContext("2d")
                } catch (e) {}
                function m(e, t) {
                    return p ? new OffscreenCanvas(e, t) : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
                }
                function v(e, t, n, i) {
                    let a = 1;
                    if ((e.width > i || e.height > i) && (a = i / Math.max(e.width, e.height)), a < 1 || !0 === t) {
                        if ("undefined" != typeof HTMLImageElement && e instanceof HTMLImageElement || "undefined" != typeof HTMLCanvasElement && e instanceof HTMLCanvasElement || "undefined" != typeof ImageBitmap && e instanceof ImageBitmap) {
                            const i = t ? Dn.floorPowerOfTwo : Math.floor,
                            r = i(a * e.width),
                            o = i(a * e.height);
                            void 0 === d && (d = m(r, o));
                            const s = n ? m(r, o) : d;
                            return s.width = r,
                            s.height = o,
                            s.getContext("2d").drawImage(e, 0, 0, r, o),
                            console.warn("THREE.WebGLRenderer: Texture has been resized from (" + e.width + "x" + e.height + ") to (" + r + "x" + o + ")."),
                            s
                        }
                        return "data" in e && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + e.width + "x" + e.height + ")."),
                        e
                    }
                    return e
                }
                function g(e) {
                    return Dn.isPowerOfTwo(e.width) && Dn.isPowerOfTwo(e.height)
                }
                function x(e, t) {
                    return e.generateMipmaps && t && e.minFilter !== pe && e.minFilter !== ye
                }
                function y(t, n, a, r) {
                    e.generateMipmap(t),
                    i.get(n).__maxMipLevel = Math.log(Math.max(a, r)) * Math.LOG2E
                }
                function b(n, i, a) {
                    if (!1 === s)
                        return i;
                    if (null !== n) {
                        if (void 0 !== e[n])
                            return e[n];
                        console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + n + "'")
                    }
                    let r = i;
                    return 6403 === i && (5126 === a && (r = 33326), 5131 === a && (r = 33325), 5121 === a && (r = 33321)),
                    6407 === i && (5126 === a && (r = 34837), 5131 === a && (r = 34843), 5121 === a && (r = 32849)),
                    6408 === i && (5126 === a && (r = 34836), 5131 === a && (r = 34842), 5121 === a && (r = 32856)),
                    33325 !== r && 33326 !== r && 34842 !== r && 34836 !== r || t.get("EXT_color_buffer_float"),
                    r
                }
                function M(e) {
                    return e === pe || e === me || e === ge ? 9728 : 9729
                }
                function z(t) {
                    const n = t.target;
                    n.removeEventListener("dispose", z),
                    function (t) {
                        const n = i.get(t);
                        void 0 !== n.__webglInit && (e.deleteTexture(n.__webglTexture), i.remove(t))
                    }
                    (n),
                    n.isVideoTexture && f.delete(n),
                    o.memory.textures--
                }
                function w(t) {
                    const n = t.target;
                    n.removeEventListener("dispose", w),
                    function (t) {
                        const n = i.get(t),
                        a = i.get(t.texture);
                        if (t) {
                            if (void 0 !== a.__webglTexture && e.deleteTexture(a.__webglTexture), t.depthTexture && t.depthTexture.dispose(), t.isWebGLCubeRenderTarget)
                                for (let t = 0; t < 6; t++)
                                    e.deleteFramebuffer(n.__webglFramebuffer[t]), n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer[t]);
                            else
                                e.deleteFramebuffer(n.__webglFramebuffer), n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer), n.__webglMultisampledFramebuffer && e.deleteFramebuffer(n.__webglMultisampledFramebuffer), n.__webglColorRenderbuffer && e.deleteRenderbuffer(n.__webglColorRenderbuffer), n.__webglDepthRenderbuffer && e.deleteRenderbuffer(n.__webglDepthRenderbuffer);
                            i.remove(t.texture),
                            i.remove(t)
                        }
                    }
                    (n),
                    o.memory.textures--
                }
                let _ = 0;
                function S(e, t) {
                    const a = i.get(e);
                    if (e.isVideoTexture && function (e) {
                        const t = o.render.frame;
                        f.get(e) !== t && (f.set(e, t), e.update())
                    }
                        (e), e.version > 0 && a.__version !== e.version) {
                        const n = e.image;
                        if (void 0 === n)
                            console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
                        else {
                            if (!1 !== n.complete)
                                return void H(a, e, t);
                            console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")
                        }
                    }
                    n.activeTexture(33984 + t),
                    n.bindTexture(3553, a.__webglTexture)
                }
                function L(t, a) {
                    const o = i.get(t);
                    t.version > 0 && o.__version !== t.version ? function (t, i, a) {
                        if (6 !== i.image.length)
                            return;
                        E(t, i),
                        n.activeTexture(33984 + a),
                        n.bindTexture(34067, t.__webglTexture),
                        e.pixelStorei(37440, i.flipY);
                        const o = i && (i.isCompressedTexture || i.image[0].isCompressedTexture),
                        c = i.image[0] && i.image[0].isDataTexture,
                        h = [];
                        for (let e = 0; e < 6; e++)
                            h[e] = o || c ? c ? i.image[e].image : i.image[e] : v(i.image[e], !1, !0, l);
                        const u = h[0],
                        f = g(u) || s,
                        d = r.convert(i.format),
                        p = r.convert(i.type),
                        m = b(i.internalFormat, d, p);
                        let M;
                        if (C(34067, i, f), o) {
                            for (let e = 0; e < 6; e++) {
                                M = h[e].mipmaps;
                                for (let t = 0; t < M.length; t++) {
                                    const a = M[t];
                                    i.format !== Oe && i.format !== Ie ? null !== d ? n.compressedTexImage2D(34069 + e, t, m, a.width, a.height, 0, a.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n.texImage2D(34069 + e, t, m, a.width, a.height, 0, d, p, a.data)
                                }
                            }
                            t.__maxMipLevel = M.length - 1
                        } else {
                            M = i.mipmaps;
                            for (let e = 0; e < 6; e++)
                                if (c) {
                                    n.texImage2D(34069 + e, 0, m, h[e].width, h[e].height, 0, d, p, h[e].data);
                                    for (let t = 0; t < M.length; t++) {
                                        const i = M[t].image[e].image;
                                        n.texImage2D(34069 + e, t + 1, m, i.width, i.height, 0, d, p, i.data)
                                    }
                                } else {
                                    n.texImage2D(34069 + e, 0, m, d, p, h[e]);
                                    for (let t = 0; t < M.length; t++) {
                                        const i = M[t];
                                        n.texImage2D(34069 + e, t + 1, m, d, p, i.image[e])
                                    }
                                }
                            t.__maxMipLevel = M.length
                        }
                        x(i, f) && y(34067, i, u.width, u.height),
                        t.__version = i.version,
                        i.onUpdate && i.onUpdate(i)
                    }
                    (o, t, a) : (n.activeTexture(33984 + a), n.bindTexture(34067, o.__webglTexture))
                }
                const A = {
                    [ue]: 10497,
                    [fe]: 33071,
                    [de]: 33648
                },
                T = {
                    [pe]: 9728,
                    [me]: 9984,
                    [ge]: 9986,
                    [ye]: 9729,
                    [be]: 9985,
                    [ze]: 9987
                };
                function C(n, r, o) {
                    o ? (e.texParameteri(n, 10242, A[r.wrapS]), e.texParameteri(n, 10243, A[r.wrapT]), 32879 !== n && 35866 !== n || e.texParameteri(n, 32882, A[r.wrapR]), e.texParameteri(n, 10240, T[r.magFilter]), e.texParameteri(n, 10241, T[r.minFilter])) : (e.texParameteri(n, 10242, 33071), e.texParameteri(n, 10243, 33071), 32879 !== n && 35866 !== n || e.texParameteri(n, 32882, 33071), r.wrapS === fe && r.wrapT === fe || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), e.texParameteri(n, 10240, M(r.magFilter)), e.texParameteri(n, 10241, M(r.minFilter)), r.minFilter !== pe && r.minFilter !== ye && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));
                    const c = t.get("EXT_texture_filter_anisotropic");
                    if (c) {
                        if (r.type === Ee && null === t.get("OES_texture_float_linear"))
                            return;
                        if (r.type === He && null === (s || t.get("OES_texture_half_float_linear")))
                            return;
                        (r.anisotropy > 1 || i.get(r).__currentAnisotropy) && (e.texParameterf(n, c.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(r.anisotropy, a.getMaxAnisotropy())), i.get(r).__currentAnisotropy = r.anisotropy)
                    }
                }
                function E(t, n) {
                    void 0 === t.__webglInit && (t.__webglInit = !0, n.addEventListener("dispose", z), t.__webglTexture = e.createTexture(), o.memory.textures++)
                }
                function H(t, i, a) {
                    let o = 3553;
                    i.isDataTexture2DArray && (o = 35866),
                    i.isDataTexture3D && (o = 32879),
                    E(t, i),
                    n.activeTexture(33984 + a),
                    n.bindTexture(o, t.__webglTexture),
                    e.pixelStorei(37440, i.flipY),
                    e.pixelStorei(37441, i.premultiplyAlpha),
                    e.pixelStorei(3317, i.unpackAlignment);
                    const c = function (e) {
                        return !s && (e.wrapS !== fe || e.wrapT !== fe || e.minFilter !== pe && e.minFilter !== ye)
                    }
                    (i) && !1 === g(i.image),
                    l = v(i.image, c, !1, h),
                    u = g(l) || s,
                    f = r.convert(i.format);
                    let d,
                    p = r.convert(i.type),
                    m = b(i.internalFormat, f, p);
                    C(o, i, u);
                    const M = i.mipmaps;
                    if (i.isDepthTexture)
                        m = 6402, s ? m = i.type === Ee ? 36012 : i.type === Ce ? 33190 : i.type === Re ? 35056 : 33189 : i.type === Ee && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."), i.format === ke && 6402 === m && i.type !== Ae && i.type !== Ce && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), i.type = Ae, p = r.convert(i.type)), i.format === Ge && 6402 === m && (m = 34041, i.type !== Re && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), i.type = Re, p = r.convert(i.type))), n.texImage2D(3553, 0, m, l.width, l.height, 0, f, p, null);
                    else if (i.isDataTexture)
                        if (M.length > 0 && u) {
                            for (let e = 0, t = M.length; e < t; e++)
                                d = M[e], n.texImage2D(3553, e, m, d.width, d.height, 0, f, p, d.data);
                            i.generateMipmaps = !1,
                            t.__maxMipLevel = M.length - 1
                        } else
                            n.texImage2D(3553, 0, m, l.width, l.height, 0, f, p, l.data), t.__maxMipLevel = 0;
                    else if (i.isCompressedTexture) {
                        for (let e = 0, t = M.length; e < t; e++)
                            d = M[e], i.format !== Oe && i.format !== Ie ? null !== f ? n.compressedTexImage2D(3553, e, m, d.width, d.height, 0, d.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n.texImage2D(3553, e, m, d.width, d.height, 0, f, p, d.data);
                        t.__maxMipLevel = M.length - 1
                    } else if (i.isDataTexture2DArray)
                        n.texImage3D(35866, 0, m, l.width, l.height, l.depth, 0, f, p, l.data), t.__maxMipLevel = 0;
                    else if (i.isDataTexture3D)
                        n.texImage3D(32879, 0, m, l.width, l.height, l.depth, 0, f, p, l.data), t.__maxMipLevel = 0;
                    else if (M.length > 0 && u) {
                        for (let e = 0, t = M.length; e < t; e++)
                            d = M[e], n.texImage2D(3553, e, m, f, p, d);
                        i.generateMipmaps = !1,
                        t.__maxMipLevel = M.length - 1
                    } else
                        n.texImage2D(3553, 0, m, f, p, l), t.__maxMipLevel = 0;
                    x(i, u) && y(o, i, l.width, l.height),
                    t.__version = i.version,
                    i.onUpdate && i.onUpdate(i)
                }
                function N(t, a, o, s) {
                    const c = r.convert(a.texture.format),
                    l = r.convert(a.texture.type),
                    h = b(a.texture.internalFormat, c, l);
                    n.texImage2D(s, 0, h, a.width, a.height, 0, c, l, null),
                    e.bindFramebuffer(36160, t),
                    e.framebufferTexture2D(36160, o, s, i.get(a.texture).__webglTexture, 0),
                    e.bindFramebuffer(36160, null)
                }
                function P(t, n, i) {
                    if (e.bindRenderbuffer(36161, t), n.depthBuffer && !n.stencilBuffer) {
                        let a = 33189;
                        if (i) {
                            const t = n.depthTexture;
                            t && t.isDepthTexture && (t.type === Ee ? a = 36012 : t.type === Ce && (a = 33190));
                            const i = V(n);
                            e.renderbufferStorageMultisample(36161, i, a, n.width, n.height)
                        } else
                            e.renderbufferStorage(36161, a, n.width, n.height);
                        e.framebufferRenderbuffer(36160, 36096, 36161, t)
                    } else if (n.depthBuffer && n.stencilBuffer) {
                        if (i) {
                            const t = V(n);
                            e.renderbufferStorageMultisample(36161, t, 35056, n.width, n.height)
                        } else
                            e.renderbufferStorage(36161, 34041, n.width, n.height);
                        e.framebufferRenderbuffer(36160, 33306, 36161, t)
                    } else {
                        const t = r.convert(n.texture.format),
                        a = r.convert(n.texture.type),
                        o = b(n.texture.internalFormat, t, a);
                        if (i) {
                            const t = V(n);
                            e.renderbufferStorageMultisample(36161, t, o, n.width, n.height)
                        } else
                            e.renderbufferStorage(36161, o, n.width, n.height)
                    }
                    e.bindRenderbuffer(36161, null)
                }
                function V(e) {
                    return s && e.isWebGLMultisampleRenderTarget ? Math.min(u, e.samples) : 0
                }
                let R = !1,
                F = !1;
                this.allocateTextureUnit = function () {
                    const e = _;
                    return e >= c && console.warn("THREE.WebGLTextures: Trying to use " + e + " texture units while this GPU supports only " + c),
                    _ += 1,
                    e
                },
                this.resetTextureUnits = function () {
                    _ = 0
                },
                this.setTexture2D = S,
                this.setTexture2DArray = function (e, t) {
                    const a = i.get(e);
                    e.version > 0 && a.__version !== e.version ? H(a, e, t) : (n.activeTexture(33984 + t), n.bindTexture(35866, a.__webglTexture))
                },
                this.setTexture3D = function (e, t) {
                    const a = i.get(e);
                    e.version > 0 && a.__version !== e.version ? H(a, e, t) : (n.activeTexture(33984 + t), n.bindTexture(32879, a.__webglTexture))
                },
                this.setTextureCube = L,
                this.setupRenderTarget = function (t) {
                    const a = i.get(t),
                    c = i.get(t.texture);
                    t.addEventListener("dispose", w),
                    c.__webglTexture = e.createTexture(),
                    o.memory.textures++;
                    const l = !0 === t.isWebGLCubeRenderTarget,
                    h = !0 === t.isWebGLMultisampleRenderTarget,
                    u = g(t) || s;
                    if (!s || t.texture.format !== Ie || t.texture.type !== Ee && t.texture.type !== He || (t.texture.format = Oe, console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")), l) {
                        a.__webglFramebuffer = [];
                        for (let t = 0; t < 6; t++)
                            a.__webglFramebuffer[t] = e.createFramebuffer()
                    } else if (a.__webglFramebuffer = e.createFramebuffer(), h)
                        if (s) {
                            a.__webglMultisampledFramebuffer = e.createFramebuffer(),
                            a.__webglColorRenderbuffer = e.createRenderbuffer(),
                            e.bindRenderbuffer(36161, a.__webglColorRenderbuffer);
                            const n = r.convert(t.texture.format),
                            i = r.convert(t.texture.type),
                            o = b(t.texture.internalFormat, n, i),
                            s = V(t);
                            e.renderbufferStorageMultisample(36161, s, o, t.width, t.height),
                            e.bindFramebuffer(36160, a.__webglMultisampledFramebuffer),
                            e.framebufferRenderbuffer(36160, 36064, 36161, a.__webglColorRenderbuffer),
                            e.bindRenderbuffer(36161, null),
                            t.depthBuffer && (a.__webglDepthRenderbuffer = e.createRenderbuffer(), P(a.__webglDepthRenderbuffer, t, !0)),
                            e.bindFramebuffer(36160, null)
                        } else
                            console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
                    if (l) {
                        n.bindTexture(34067, c.__webglTexture),
                        C(34067, t.texture, u);
                        for (let e = 0; e < 6; e++)
                            N(a.__webglFramebuffer[e], t, 36064, 34069 + e);
                        x(t.texture, u) && y(34067, t.texture, t.width, t.height),
                        n.bindTexture(34067, null)
                    } else
                        n.bindTexture(3553, c.__webglTexture), C(3553, t.texture, u), N(a.__webglFramebuffer, t, 36064, 3553), x(t.texture, u) && y(3553, t.texture, t.width, t.height), n.bindTexture(3553, null);
                    t.depthBuffer && function (t) {
                        const n = i.get(t),
                        a = !0 === t.isWebGLCubeRenderTarget;
                        if (t.depthTexture) {
                            if (a)
                                throw new Error("target.depthTexture not supported in Cube render targets");
                            !function (t, n) {
                                if (n && n.isWebGLCubeRenderTarget)
                                    throw new Error("Depth Texture with cube render targets is not supported");
                                if (e.bindFramebuffer(36160, t), !n.depthTexture || !n.depthTexture.isDepthTexture)
                                    throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                                i.get(n.depthTexture).__webglTexture && n.depthTexture.image.width === n.width && n.depthTexture.image.height === n.height || (n.depthTexture.image.width = n.width, n.depthTexture.image.height = n.height, n.depthTexture.needsUpdate = !0),
                                S(n.depthTexture, 0);
                                const a = i.get(n.depthTexture).__webglTexture;
                                if (n.depthTexture.format === ke)
                                    e.framebufferTexture2D(36160, 36096, 3553, a, 0);
                                else {
                                    if (n.depthTexture.format !== Ge)
                                        throw new Error("Unknown depthTexture format");
                                    e.framebufferTexture2D(36160, 33306, 3553, a, 0)
                                }
                            }
                            (n.__webglFramebuffer, t)
                        } else if (a) {
                            n.__webglDepthbuffer = [];
                            for (let i = 0; i < 6; i++)
                                e.bindFramebuffer(36160, n.__webglFramebuffer[i]), n.__webglDepthbuffer[i] = e.createRenderbuffer(), P(n.__webglDepthbuffer[i], t, !1)
                        } else
                            e.bindFramebuffer(36160, n.__webglFramebuffer), n.__webglDepthbuffer = e.createRenderbuffer(), P(n.__webglDepthbuffer, t, !1);
                        e.bindFramebuffer(36160, null)
                    }
                    (t)
                },
                this.updateRenderTargetMipmap = function (e) {
                    const t = e.texture;
                    if (x(t, g(e) || s)) {
                        const a = e.isWebGLCubeRenderTarget ? 34067 : 3553,
                        r = i.get(t).__webglTexture;
                        n.bindTexture(a, r),
                        y(a, t, e.width, e.height),
                        n.bindTexture(a, null)
                    }
                },
                this.updateMultisampleRenderTarget = function (t) {
                    if (t.isWebGLMultisampleRenderTarget)
                        if (s) {
                            const n = i.get(t);
                            e.bindFramebuffer(36008, n.__webglMultisampledFramebuffer),
                            e.bindFramebuffer(36009, n.__webglFramebuffer);
                            const a = t.width,
                            r = t.height;
                            let o = 16384;
                            t.depthBuffer && (o |= 256),
                            t.stencilBuffer && (o |= 1024),
                            e.blitFramebuffer(0, 0, a, r, 0, 0, a, r, o, 9728),
                            e.bindFramebuffer(36160, n.__webglMultisampledFramebuffer)
                        } else
                            console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")
                },
                this.safeSetTexture2D = function (e, t) {
                    e && e.isWebGLRenderTarget && (!1 === R && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."), R = !0), e = e.texture),
                    S(e, t)
                },
                this.safeSetTextureCube = function (e, t) {
                    e && e.isWebGLCubeRenderTarget && (!1 === F && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."), F = !0), e = e.texture),
                    L(e, t)
                }
            }
            function Ls(e, t, n) {
                const i = n.isWebGL2;
                return {
                    convert: function (e) {
                        let n;
                        if (e === _e)
                            return 5121;
                        if (e === Ne)
                            return 32819;
                        if (e === Pe)
                            return 32820;
                        if (e === Ve)
                            return 33635;
                        if (e === Se)
                            return 5120;
                        if (e === Le)
                            return 5122;
                        if (e === Ae)
                            return 5123;
                        if (e === Te)
                            return 5124;
                        if (e === Ce)
                            return 5125;
                        if (e === Ee)
                            return 5126;
                        if (e === He)
                            return i ? 5131 : (n = t.get("OES_texture_half_float"), null !== n ? n.HALF_FLOAT_OES : null);
                        if (e === Fe)
                            return 6406;
                        if (e === Ie)
                            return 6407;
                        if (e === Oe)
                            return 6408;
                        if (e === De)
                            return 6409;
                        if (e === Ue)
                            return 6410;
                        if (e === ke)
                            return 6402;
                        if (e === Ge)
                            return 34041;
                        if (e === je)
                            return 6403;
                        if (e === We)
                            return 36244;
                        if (e === Xe)
                            return 33319;
                        if (e === qe)
                            return 33320;
                        if (e === Ye)
                            return 36248;
                        if (e === Ze)
                            return 36249;
                        if (e === Qe || e === Je || e === Ke || e === $e) {
                            if (n = t.get("WEBGL_compressed_texture_s3tc"), null === n)
                                return null;
                            if (e === Qe)
                                return n.COMPRESSED_RGB_S3TC_DXT1_EXT;
                            if (e === Je)
                                return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                            if (e === Ke)
                                return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                            if (e === $e)
                                return n.COMPRESSED_RGBA_S3TC_DXT5_EXT
                        }
                        if (e === et || e === tt || e === nt || e === it) {
                            if (n = t.get("WEBGL_compressed_texture_pvrtc"), null === n)
                                return null;
                            if (e === et)
                                return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                            if (e === tt)
                                return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                            if (e === nt)
                                return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                            if (e === it)
                                return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                        }
                        if (e === at)
                            return n = t.get("WEBGL_compressed_texture_etc1"), null !== n ? n.COMPRESSED_RGB_ETC1_WEBGL : null;
                        if ((e === rt || e === ot) && (n = t.get("WEBGL_compressed_texture_etc"), null !== n)) {
                            if (e === rt)
                                return n.COMPRESSED_RGB8_ETC2;
                            if (e === ot)
                                return n.COMPRESSED_RGBA8_ETC2_EAC
                        }
                        return e === st || e === ct || e === lt || e === ht || e === ut || e === ft || e === dt || e === pt || e === mt || e === vt || e === gt || e === xt || e === yt || e === bt || e === zt || e === wt || e === _t || e === St || e === Lt || e === At || e === Tt || e === Ct || e === Et || e === Ht || e === Nt || e === Pt || e === Vt || e === Rt ? (n = t.get("WEBGL_compressed_texture_astc"), null !== n ? e : null) : e === Mt ? (n = t.get("EXT_texture_compression_bptc"), null !== n ? e : null) : e === Re ? i ? 34042 : (n = t.get("WEBGL_depth_texture"), null !== n ? n.UNSIGNED_INT_24_8_WEBGL : null) : void 0
                    }
                }
            }
            function As(e) {
                vr.call(this),
                this.cameras = e || []
            }
            function Ts() {
                Zi.call(this),
                this.type = "Group"
            }
            function Cs() {
                this._targetRay = null,
                this._grip = null,
                this._hand = null
            }
            function Es(e, t) {
                const n = this;
                let i = null,
                a = 1,
                r = null,
                o = "local-floor",
                s = null;
                const c = [],
                l = new Map,
                h = new vr;
                h.layers.enable(1),
                h.viewport = new Xn;
                const u = new vr;
                u.layers.enable(2),
                u.viewport = new Xn;
                const f = [h, u],
                d = new As;
                d.layers.enable(1),
                d.layers.enable(2);
                let p = null,
                m = null;
                function v(e) {
                    const t = l.get(e.inputSource);
                    t && t.dispatchEvent({
                        type: e.type,
                        data: e.inputSource
                    })
                }
                function g() {
                    l.forEach((function (e, t) {
                            e.disconnect(t)
                        })),
                    l.clear(),
                    e.setFramebuffer(null),
                    e.setRenderTarget(e.getRenderTarget()),
                    _.stop(),
                    n.isPresenting = !1,
                    n.dispatchEvent({
                        type: "sessionend"
                    })
                }
                function x(e) {
                    r = e,
                    _.setContext(i),
                    _.start(),
                    n.isPresenting = !0,
                    n.dispatchEvent({
                        type: "sessionstart"
                    })
                }
                function y(e) {
                    const t = i.inputSources;
                    for (let e = 0; e < c.length; e++)
                        l.set(t[e], c[e]);
                    for (let t = 0; t < e.removed.length; t++) {
                        const n = e.removed[t],
                        i = l.get(n);
                        i && (i.dispatchEvent({
                                type: "disconnected",
                                data: n
                            }), l.delete(n))
                    }
                    for (let t = 0; t < e.added.length; t++) {
                        const n = e.added[t],
                        i = l.get(n);
                        i && i.dispatchEvent({
                            type: "connected",
                            data: n
                        })
                    }
                }
                this.enabled = !1,
                this.isPresenting = !1,
                this.getController = function (e) {
                    let t = c[e];
                    return void 0 === t && (t = new Cs, c[e] = t),
                    t.getTargetRaySpace()
                },
                this.getControllerGrip = function (e) {
                    let t = c[e];
                    return void 0 === t && (t = new Cs, c[e] = t),
                    t.getGripSpace()
                },
                this.getHand = function (e) {
                    let t = c[e];
                    return void 0 === t && (t = new Cs, c[e] = t),
                    t.getHandSpace()
                },
                this.setFramebufferScaleFactor = function (e) {
                    a = e,
                    !0 === n.isPresenting && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")
                },
                this.setReferenceSpaceType = function (e) {
                    o = e,
                    !0 === n.isPresenting && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")
                },
                this.getReferenceSpace = function () {
                    return r
                },
                this.getSession = function () {
                    return i
                },
                this.setSession = function (e) {
                    if (i = e, null !== i) {
                        i.addEventListener("select", v),
                        i.addEventListener("selectstart", v),
                        i.addEventListener("selectend", v),
                        i.addEventListener("squeeze", v),
                        i.addEventListener("squeezestart", v),
                        i.addEventListener("squeezeend", v),
                        i.addEventListener("end", g);
                        const e = t.getContextAttributes();
                        !0 !== e.xrCompatible && t.makeXRCompatible();
                        const n = {
                            antialias: e.antialias,
                            alpha: e.alpha,
                            depth: e.depth,
                            stencil: e.stencil,
                            framebufferScaleFactor: a
                        },
                        r = new XRWebGLLayer(i, t, n);
                        i.updateRenderState({
                            baseLayer: r
                        }),
                        i.requestReferenceSpace(o).then(x),
                        i.addEventListener("inputsourceschange", y)
                    }
                };
                const b = new Qn,
                M = new Qn;
                function z(e, t) {
                    null === t ? e.matrixWorld.copy(e.matrix) : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix),
                    e.matrixWorldInverse.getInverse(e.matrixWorld)
                }
                this.getCamera = function (e) {
                    d.near = u.near = h.near = e.near,
                    d.far = u.far = h.far = e.far,
                    p === d.near && m === d.far || (i.updateRenderState({
                            depthNear: d.near,
                            depthFar: d.far
                        }), p = d.near, m = d.far);
                    const t = e.parent,
                    n = d.cameras;
                    z(d, t);
                    for (let e = 0; e < n.length; e++)
                        z(n[e], t);
                    e.matrixWorld.copy(d.matrixWorld);
                    const a = e.children;
                    for (let e = 0, t = a.length; e < t; e++)
                        a[e].updateMatrixWorld(!0);
                    return 2 === n.length ? function (e, t, n) {
                        b.setFromMatrixPosition(t.matrixWorld),
                        M.setFromMatrixPosition(n.matrixWorld);
                        const i = b.distanceTo(M),
                        a = t.projectionMatrix.elements,
                        r = n.projectionMatrix.elements,
                        o = a[14] / (a[10] - 1),
                        s = a[14] / (a[10] + 1),
                        c = (a[9] + 1) / a[5],
                        l = (a[9] - 1) / a[5],
                        h = (a[8] - 1) / a[0],
                        u = (r[8] + 1) / r[0],
                        f = o * h,
                        d = o * u,
                        p = i / (-h + u),
                        m = p * -h;
                        t.matrixWorld.decompose(e.position, e.quaternion, e.scale),
                        e.translateX(m),
                        e.translateZ(p),
                        e.matrixWorld.compose(e.position, e.quaternion, e.scale),
                        e.matrixWorldInverse.getInverse(e.matrixWorld);
                        const v = o + p,
                        g = s + p,
                        x = f - m,
                        y = d + (i - m),
                        z = c * s / g * v,
                        w = l * s / g * v;
                        e.projectionMatrix.makePerspective(x, y, z, w, v, g)
                    }
                    (d, h, u) : d.projectionMatrix.copy(h.projectionMatrix),
                    d
                };
                let w = null;
                const _ = new Sr;
                _.setAnimationLoop((function (t, n) {
                        if (s = n.getViewerPose(r), null !== s) {
                            const t = s.views,
                            n = i.renderState.baseLayer;
                            e.setFramebuffer(n.framebuffer);
                            let a = !1;
                            t.length !== d.cameras.length && (d.cameras.length = 0, a = !0);
                            for (let e = 0; e < t.length; e++) {
                                const i = t[e],
                                r = n.getViewport(i),
                                o = f[e];
                                o.matrix.fromArray(i.transform.matrix),
                                o.projectionMatrix.fromArray(i.projectionMatrix),
                                o.viewport.set(r.x, r.y, r.width, r.height),
                                0 === e && d.matrix.copy(o.matrix),
                                !0 === a && d.cameras.push(o)
                            }
                        }
                        const a = i.inputSources;
                        for (let e = 0; e < c.length; e++) {
                            const t = c[e],
                            i = a[e];
                            t.update(i, n, r)
                        }
                        w && w(t, n)
                    })),
                this.setAnimationLoop = function (e) {
                    w = e
                },
                this.dispose = function () {}
            }
            function Hs(e) {
                function t(t, n) {
                    t.opacity.value = n.opacity,
                    n.color && t.diffuse.value.copy(n.color),
                    n.emissive && t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),
                    n.map && (t.map.value = n.map),
                    n.alphaMap && (t.alphaMap.value = n.alphaMap),
                    n.specularMap && (t.specularMap.value = n.specularMap);
                    const i = e.get(n).envMap;
                    if (i) {
                        t.envMap.value = i,
                        t.flipEnvMap.value = i.isCubeTexture && i._needsFlipEnvMap ? -1 : 1,
                        t.reflectivity.value = n.reflectivity,
                        t.refractionRatio.value = n.refractionRatio;
                        const a = e.get(i).__maxMipLevel;
                        void 0 !== a && (t.maxMipLevel.value = a)
                    }
                    let a,
                    r;
                    n.lightMap && (t.lightMap.value = n.lightMap, t.lightMapIntensity.value = n.lightMapIntensity),
                    n.aoMap && (t.aoMap.value = n.aoMap, t.aoMapIntensity.value = n.aoMapIntensity),
                    n.map ? a = n.map : n.specularMap ? a = n.specularMap : n.displacementMap ? a = n.displacementMap : n.normalMap ? a = n.normalMap : n.bumpMap ? a = n.bumpMap : n.roughnessMap ? a = n.roughnessMap : n.metalnessMap ? a = n.metalnessMap : n.alphaMap ? a = n.alphaMap : n.emissiveMap ? a = n.emissiveMap : n.clearcoatMap ? a = n.clearcoatMap : n.clearcoatNormalMap ? a = n.clearcoatNormalMap : n.clearcoatRoughnessMap && (a = n.clearcoatRoughnessMap),
                    void 0 !== a && (a.isWebGLRenderTarget && (a = a.texture), !0 === a.matrixAutoUpdate && a.updateMatrix(), t.uvTransform.value.copy(a.matrix)),
                    n.aoMap ? r = n.aoMap : n.lightMap && (r = n.lightMap),
                    void 0 !== r && (r.isWebGLRenderTarget && (r = r.texture), !0 === r.matrixAutoUpdate && r.updateMatrix(), t.uv2Transform.value.copy(r.matrix))
                }
                function n(t, n) {
                    t.roughness.value = n.roughness,
                    t.metalness.value = n.metalness,
                    n.roughnessMap && (t.roughnessMap.value = n.roughnessMap),
                    n.metalnessMap && (t.metalnessMap.value = n.metalnessMap),
                    n.emissiveMap && (t.emissiveMap.value = n.emissiveMap),
                    n.bumpMap && (t.bumpMap.value = n.bumpMap, t.bumpScale.value = n.bumpScale, n.side === m && (t.bumpScale.value *= -1)),
                    n.normalMap && (t.normalMap.value = n.normalMap, t.normalScale.value.copy(n.normalScale), n.side === m && t.normalScale.value.negate()),
                    n.displacementMap && (t.displacementMap.value = n.displacementMap, t.displacementScale.value = n.displacementScale, t.displacementBias.value = n.displacementBias),
                    e.get(n).envMap && (t.envMapIntensity.value = n.envMapIntensity)
                }
                return {
                    refreshFogUniforms: function (e, t) {
                        e.fogColor.value.copy(t.color),
                        t.isFog ? (e.fogNear.value = t.near, e.fogFar.value = t.far) : t.isFogExp2 && (e.fogDensity.value = t.density)
                    },
                    refreshMaterialUniforms: function (e, i, a, r) {
                        i.isMeshBasicMaterial ? t(e, i) : i.isMeshLambertMaterial ? (t(e, i), function (e, t) {
                            t.emissiveMap && (e.emissiveMap.value = t.emissiveMap)
                        }
                            (e, i)) : i.isMeshToonMaterial ? (t(e, i), function (e, t) {
                            t.gradientMap && (e.gradientMap.value = t.gradientMap),
                            t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
                            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === m && (e.bumpScale.value *= -1)),
                            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === m && e.normalScale.value.negate()),
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }
                            (e, i)) : i.isMeshPhongMaterial ? (t(e, i), function (e, t) {
                            e.specular.value.copy(t.specular),
                            e.shininess.value = Math.max(t.shininess, 1e-4),
                            t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
                            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === m && (e.bumpScale.value *= -1)),
                            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === m && e.normalScale.value.negate()),
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }
                            (e, i)) : i.isMeshStandardMaterial ? (t(e, i), i.isMeshPhysicalMaterial ? function (e, t) {
                            n(e, t),
                            e.reflectivity.value = t.reflectivity,
                            e.clearcoat.value = t.clearcoat,
                            e.clearcoatRoughness.value = t.clearcoatRoughness,
                            t.sheen && e.sheen.value.copy(t.sheen),
                            t.clearcoatMap && (e.clearcoatMap.value = t.clearcoatMap),
                            t.clearcoatRoughnessMap && (e.clearcoatRoughnessMap.value = t.clearcoatRoughnessMap),
                            t.clearcoatNormalMap && (e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale), e.clearcoatNormalMap.value = t.clearcoatNormalMap, t.side === m && e.clearcoatNormalScale.value.negate()),
                            e.transmission.value = t.transmission,
                            t.transmissionMap && (e.transmissionMap.value = t.transmissionMap)
                        }
                            (e, i) : n(e, i)) : i.isMeshMatcapMaterial ? (t(e, i), function (e, t) {
                            t.matcap && (e.matcap.value = t.matcap),
                            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === m && (e.bumpScale.value *= -1)),
                            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === m && e.normalScale.value.negate()),
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }
                            (e, i)) : i.isMeshDepthMaterial ? (t(e, i), function (e, t) {
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }
                            (e, i)) : i.isMeshDistanceMaterial ? (t(e, i), function (e, t) {
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias),
                            e.referencePosition.value.copy(t.referencePosition),
                            e.nearDistance.value = t.nearDistance,
                            e.farDistance.value = t.farDistance
                        }
                            (e, i)) : i.isMeshNormalMaterial ? (t(e, i), function (e, t) {
                            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === m && (e.bumpScale.value *= -1)),
                            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === m && e.normalScale.value.negate()),
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }
                            (e, i)) : i.isLineBasicMaterial ? (function (e, t) {
                            e.diffuse.value.copy(t.color),
                            e.opacity.value = t.opacity
                        }
                            (e, i), i.isLineDashedMaterial && function (e, t) {
                            e.dashSize.value = t.dashSize,
                            e.totalSize.value = t.dashSize + t.gapSize,
                            e.scale.value = t.scale
                        }
                            (e, i)) : i.isPointsMaterial ? function (e, t, n, i) {
                            let a;
                            e.diffuse.value.copy(t.color),
                            e.opacity.value = t.opacity,
                            e.size.value = t.size * n,
                            e.scale.value = .5 * i,
                            t.map && (e.map.value = t.map),
                            t.alphaMap && (e.alphaMap.value = t.alphaMap),
                            t.map ? a = t.map : t.alphaMap && (a = t.alphaMap),
                            void 0 !== a && (!0 === a.matrixAutoUpdate && a.updateMatrix(), e.uvTransform.value.copy(a.matrix))
                        }
                        (e, i, a, r) : i.isSpriteMaterial ? function (e, t) {
                            let n;
                            e.diffuse.value.copy(t.color),
                            e.opacity.value = t.opacity,
                            e.rotation.value = t.rotation,
                            t.map && (e.map.value = t.map),
                            t.alphaMap && (e.alphaMap.value = t.alphaMap),
                            t.map ? n = t.map : t.alphaMap && (n = t.alphaMap),
                            void 0 !== n && (!0 === n.matrixAutoUpdate && n.updateMatrix(), e.uvTransform.value.copy(n.matrix))
                        }
                        (e, i) : i.isShadowMaterial ? (e.color.value.copy(i.color), e.opacity.value = i.opacity) : i.isShaderMaterial && (i.uniformsNeedUpdate = !1)
                    }
                }
            }
            function Ns(e) {
                const t = void 0 !== (e = e || {}).canvas ? e.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
                n = void 0 !== e.context ? e.context : null,
                i = void 0 !== e.alpha && e.alpha,
                a = void 0 === e.depth || e.depth,
                r = void 0 === e.stencil || e.stencil,
                o = void 0 !== e.antialias && e.antialias,
                s = void 0 === e.premultipliedAlpha || e.premultipliedAlpha,
                c = void 0 !== e.preserveDrawingBuffer && e.preserveDrawingBuffer,
                l = void 0 !== e.powerPreference ? e.powerPreference : "default",
                h = void 0 !== e.failIfMajorPerformanceCaveat && e.failIfMajorPerformanceCaveat;
                let u = null,
                f = null;
                this.domElement = t,
                this.debug = {
                    checkShaderErrors: !0
                },
                this.autoClear = !0,
                this.autoClearColor = !0,
                this.autoClearDepth = !0,
                this.autoClearStencil = !0,
                this.sortObjects = !0,
                this.clippingPlanes = [],
                this.localClippingEnabled = !1,
                this.gammaFactor = 2,
                this.outputEncoding = Qt,
                this.physicallyCorrectLights = !1,
                this.toneMapping = K,
                this.toneMappingExposure = 1,
                this.maxMorphTargets = 8,
                this.maxMorphNormals = 4;
                const d = this;
                let p = !1,
                m = null,
                v = 0,
                g = 0,
                x = null,
                y = null,
                b = -1,
                M = null,
                z = null;
                const w = new Xn,
                _ = new Xn;
                let S = null,
                L = t.width,
                A = t.height,
                T = 1,
                C = null,
                E = null;
                const H = new Xn(0, 0, L, A),
                N = new Xn(0, 0, L, A);
                let P = !1;
                const V = new _r;
                let R = !1,
                F = !1;
                const I = new _i,
                O = new Qn,
                D = {
                    background: null,
                    fog: null,
                    environment: null,
                    overrideMaterial: null,
                    isScene: !0
                };
                function U() {
                    return null === x ? T : 1
                }
                let B,
                k,
                G,
                j,
                W,
                X,
                q,
                Y,
                Z,
                Q,
                J,
                $,
                ee,
                te,
                ne,
                ie,
                ae,
                re,
                oe,
                se,
                ce,
                le = n;
                function he(e, n) {
                    for (let i = 0; i < e.length; i++) {
                        const a = e[i],
                        r = t.getContext(a, n);
                        if (null !== r)
                            return r
                    }
                    return null
                }
                try {
                    const e = {
                        alpha: i,
                        depth: a,
                        stencil: r,
                        antialias: o,
                        premultipliedAlpha: s,
                        preserveDrawingBuffer: c,
                        powerPreference: l,
                        failIfMajorPerformanceCaveat: h
                    };
                    if (t.addEventListener("webglcontextlost", pe, !1), t.addEventListener("webglcontextrestored", me, !1), null === le) {
                        const t = ["webgl2", "webgl", "experimental-webgl"];
                        if (!0 === d.isWebGL1Renderer && t.shift(), le = he(t, e), null === le)
                            throw he(t) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.")
                    }
                    void 0 === le.getShaderPrecisionFormat && (le.getShaderPrecisionFormat = function () {
                        return {
                            rangeMin: 1,
                            rangeMax: 1,
                            precision: 1
                        }
                    })
                } catch (e) {
                    throw console.error("THREE.WebGLRenderer: " + e.message),
                    e
                }
                function ue() {
                    B = new Ir(le),
                    k = new Vr(le, B, e),
                    !1 === k.isWebGL2 && (B.get("WEBGL_depth_texture"), B.get("OES_texture_float"), B.get("OES_texture_half_float"), B.get("OES_texture_half_float_linear"), B.get("OES_standard_derivatives"), B.get("OES_element_index_uint"), B.get("OES_vertex_array_object"), B.get("ANGLE_instanced_arrays")),
                    B.get("OES_texture_float_linear"),
                    se = new Ls(le, B, k),
                    G = new _s(le, B, k),
                    G.scissor(_.copy(N).multiplyScalar(T).floor()),
                    G.viewport(w.copy(H).multiplyScalar(T).floor()),
                    j = new Ur(le),
                    W = new hs,
                    X = new Ss(le, B, G, W, k, se, j),
                    q = new Fr(d),
                    Y = new Lr(le, k),
                    ce = new Nr(le, B, Y, k),
                    Z = new Or(le, Y, j, ce),
                    Q = new jr(le, Z, Y, j),
                    ae = new Gr(le),
                    ne = new Rr(W),
                    J = new ls(d, q, B, k, ce, ne),
                    $ = new Hs(W),
                    ee = new ps(W),
                    te = new bs,
                    ie = new Hr(d, q, G, Q, s),
                    re = new Pr(le, B, j, k),
                    oe = new Dr(le, B, j, k),
                    j.programs = J.programs,
                    d.capabilities = k,
                    d.extensions = B,
                    d.properties = W,
                    d.renderLists = ee,
                    d.state = G,
                    d.info = j
                }
                ue();
                const fe = new Es(d, le);
                this.xr = fe;
                const de = new ws(d, Q, k.maxTextureSize);
                function pe(e) {
                    e.preventDefault(),
                    console.log("THREE.WebGLRenderer: Context Lost."),
                    p = !0
                }
                function me() {
                    console.log("THREE.WebGLRenderer: Context Restored."),
                    p = !1,
                    ue()
                }
                function ve(e) {
                    const t = e.target;
                    t.removeEventListener("dispose", ve),
                    function (e) {
                        ge(e),
                        W.remove(e)
                    }
                    (t)
                }
                function ge(e) {
                    const t = W.get(e).program;
                    void 0 !== t && J.releaseProgram(t)
                }
                this.shadowMap = de,
                this.getContext = function () {
                    return le
                },
                this.getContextAttributes = function () {
                    return le.getContextAttributes()
                },
                this.forceContextLoss = function () {
                    const e = B.get("WEBGL_lose_context");
                    e && e.loseContext()
                },
                this.forceContextRestore = function () {
                    const e = B.get("WEBGL_lose_context");
                    e && e.restoreContext()
                },
                this.getPixelRatio = function () {
                    return T
                },
                this.setPixelRatio = function (e) {
                    void 0 !== e && (T = e, this.setSize(L, A, !1))
                },
                this.getSize = function (e) {
                    return void 0 === e && (console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"), e = new Un),
                    e.set(L, A)
                },
                this.setSize = function (e, n, i) {
                    fe.isPresenting ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (L = e, A = n, t.width = Math.floor(e * T), t.height = Math.floor(n * T), !1 !== i && (t.style.width = e + "px", t.style.height = n + "px"), this.setViewport(0, 0, e, n))
                },
                this.getDrawingBufferSize = function (e) {
                    return void 0 === e && (console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"), e = new Un),
                    e.set(L * T, A * T).floor()
                },
                this.setDrawingBufferSize = function (e, n, i) {
                    L = e,
                    A = n,
                    T = i,
                    t.width = Math.floor(e * i),
                    t.height = Math.floor(n * i),
                    this.setViewport(0, 0, e, n)
                },
                this.getCurrentViewport = function (e) {
                    return void 0 === e && (console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"), e = new Xn),
                    e.copy(w)
                },
                this.getViewport = function (e) {
                    return e.copy(H)
                },
                this.setViewport = function (e, t, n, i) {
                    e.isVector4 ? H.set(e.x, e.y, e.z, e.w) : H.set(e, t, n, i),
                    G.viewport(w.copy(H).multiplyScalar(T).floor())
                },
                this.getScissor = function (e) {
                    return e.copy(N)
                },
                this.setScissor = function (e, t, n, i) {
                    e.isVector4 ? N.set(e.x, e.y, e.z, e.w) : N.set(e, t, n, i),
                    G.scissor(_.copy(N).multiplyScalar(T).floor())
                },
                this.getScissorTest = function () {
                    return P
                },
                this.setScissorTest = function (e) {
                    G.setScissorTest(P = e)
                },
                this.setOpaqueSort = function (e) {
                    C = e
                },
                this.setTransparentSort = function (e) {
                    E = e
                },
                this.getClearColor = function () {
                    return ie.getClearColor()
                },
                this.setClearColor = function () {
                    ie.setClearColor.apply(ie, arguments)
                },
                this.getClearAlpha = function () {
                    return ie.getClearAlpha()
                },
                this.setClearAlpha = function () {
                    ie.setClearAlpha.apply(ie, arguments)
                },
                this.clear = function (e, t, n) {
                    let i = 0;
                    (void 0 === e || e) && (i |= 16384),
                    (void 0 === t || t) && (i |= 256),
                    (void 0 === n || n) && (i |= 1024),
                    le.clear(i)
                },
                this.clearColor = function () {
                    this.clear(!0, !1, !1)
                },
                this.clearDepth = function () {
                    this.clear(!1, !0, !1)
                },
                this.clearStencil = function () {
                    this.clear(!1, !1, !0)
                },
                this.dispose = function () {
                    t.removeEventListener("webglcontextlost", pe, !1),
                    t.removeEventListener("webglcontextrestored", me, !1),
                    ee.dispose(),
                    te.dispose(),
                    W.dispose(),
                    q.dispose(),
                    Q.dispose(),
                    ce.dispose(),
                    fe.dispose(),
                    ye.stop()
                },
                this.renderBufferImmediate = function (e, t) {
                    ce.initAttributes();
                    const n = W.get(e);
                    e.hasPositions && !n.position && (n.position = le.createBuffer()),
                    e.hasNormals && !n.normal && (n.normal = le.createBuffer()),
                    e.hasUvs && !n.uv && (n.uv = le.createBuffer()),
                    e.hasColors && !n.color && (n.color = le.createBuffer());
                    const i = t.getAttributes();
                    e.hasPositions && (le.bindBuffer(34962, n.position), le.bufferData(34962, e.positionArray, 35048), ce.enableAttribute(i.position), le.vertexAttribPointer(i.position, 3, 5126, !1, 0, 0)),
                    e.hasNormals && (le.bindBuffer(34962, n.normal), le.bufferData(34962, e.normalArray, 35048), ce.enableAttribute(i.normal), le.vertexAttribPointer(i.normal, 3, 5126, !1, 0, 0)),
                    e.hasUvs && (le.bindBuffer(34962, n.uv), le.bufferData(34962, e.uvArray, 35048), ce.enableAttribute(i.uv), le.vertexAttribPointer(i.uv, 2, 5126, !1, 0, 0)),
                    e.hasColors && (le.bindBuffer(34962, n.color), le.bufferData(34962, e.colorArray, 35048), ce.enableAttribute(i.color), le.vertexAttribPointer(i.color, 3, 5126, !1, 0, 0)),
                    ce.disableUnusedAttributes(),
                    le.drawArrays(4, 0, e.count),
                    e.count = 0
                },
                this.renderBufferDirect = function (e, t, n, i, a, r) {
                    null === t && (t = D);
                    const o = a.isMesh && a.matrixWorld.determinant() < 0,
                    s = Se(e, t, i, a);
                    G.setMaterial(i, o);
                    let c = n.index;
                    const l = n.attributes.position;
                    if (null === c) {
                        if (void 0 === l || 0 === l.count)
                            return
                    } else if (0 === c.count)
                        return;
                    let h,
                    u = 1;
                    !0 === i.wireframe && (c = Z.getWireframeAttribute(n), u = 2),
                    (i.morphTargets || i.morphNormals) && ae.update(a, n, i, s),
                    ce.setup(a, i, s, n, c);
                    let f = re;
                    null !== c && (h = Y.get(c), f = oe, f.setIndex(h));
                    const d = null !== c ? c.count : l.count,
                    p = n.drawRange.start * u,
                    m = n.drawRange.count * u,
                    v = null !== r ? r.start * u : 0,
                    g = null !== r ? r.count * u : 1 / 0,
                    x = Math.max(p, v),
                    y = Math.min(d, p + m, v + g) - 1,
                    b = Math.max(0, y - x + 1);
                    if (0 !== b) {
                        if (a.isMesh)
                            !0 === i.wireframe ? (G.setLineWidth(i.wireframeLinewidth * U()), f.setMode(1)) : f.setMode(4);
                        else if (a.isLine) {
                            let e = i.linewidth;
                            void 0 === e && (e = 1),
                            G.setLineWidth(e * U()),
                            a.isLineSegments ? f.setMode(1) : a.isLineLoop ? f.setMode(2) : f.setMode(3)
                        } else
                            a.isPoints ? f.setMode(0) : a.isSprite && f.setMode(4);
                        if (a.isInstancedMesh)
                            f.renderInstances(x, b, a.count);
                        else if (n.isInstancedBufferGeometry) {
                            const e = Math.min(n.instanceCount, n._maxInstanceCount);
                            f.renderInstances(x, b, e)
                        } else
                            f.render(x, b)
                    }
                },
                this.compile = function (e, t) {
                    f = te.get(e, t),
                    f.init(),
                    e.traverse((function (e) {
                            e.isLight && (f.pushLight(e), e.castShadow && f.pushShadow(e))
                        })),
                    f.setupLights(t);
                    const n = new WeakMap;
                    e.traverse((function (t) {
                            const i = t.material;
                            if (i)
                                if (Array.isArray(i))
                                    for (let a = 0; a < i.length; a++) {
                                        const r = i[a];
                                        !1 === n.has(r) && (we(r, e, t), n.set(r))
                                    }
                                else !1 === n.has(i) && (we(i, e, t), n.set(i))
                        }))
                };
                let xe = null;
                const ye = new Sr;
                function be(e, t, n, i) {
                    if (!1 === e.visible)
                        return;
                    if (e.layers.test(t.layers))
                        if (e.isGroup)
                            n = e.renderOrder;
                        else if (e.isLOD)
                            !0 === e.autoUpdate && e.update(t);
                        else if (e.isLight)
                            f.pushLight(e), e.castShadow && f.pushShadow(e);
                        else if (e.isSprite) {
                            if (!e.frustumCulled || V.intersectsSprite(e)) {
                                i && O.setFromMatrixPosition(e.matrixWorld).applyMatrix4(I);
                                const t = Q.update(e),
                                a = e.material;
                                a.visible && u.push(e, t, a, n, O.z, null)
                            }
                        } else if (e.isImmediateRenderObject)
                            i && O.setFromMatrixPosition(e.matrixWorld).applyMatrix4(I), u.push(e, null, e.material, n, O.z, null);
                        else if ((e.isMesh || e.isLine || e.isPoints) && (e.isSkinnedMesh && e.skeleton.frame !== j.render.frame && (e.skeleton.update(), e.skeleton.frame = j.render.frame), !e.frustumCulled || V.intersectsObject(e))) {
                            i && O.setFromMatrixPosition(e.matrixWorld).applyMatrix4(I);
                            const t = Q.update(e),
                            a = e.material;
                            if (Array.isArray(a)) {
                                const i = t.groups;
                                for (let r = 0, o = i.length; r < o; r++) {
                                    const o = i[r],
                                    s = a[o.materialIndex];
                                    s && s.visible && u.push(e, t, s, n, O.z, o)
                                }
                            } else
                                a.visible && u.push(e, t, a, n, O.z, null)
                        }
                    const a = e.children;
                    for (let e = 0, r = a.length; e < r; e++)
                        be(a[e], t, n, i)
                }
                function Me(e, t, n) {
                    const i = !0 === t.isScene ? t.overrideMaterial : null;
                    for (let a = 0, r = e.length; a < r; a++) {
                        const r = e[a],
                        o = r.object,
                        s = r.geometry,
                        c = null === i ? r.material : i,
                        l = r.group;
                        if (n.isArrayCamera) {
                            z = n;
                            const e = n.cameras;
                            for (let n = 0, i = e.length; n < i; n++) {
                                const i = e[n];
                                o.layers.test(i.layers) && (G.viewport(w.copy(i.viewport)), f.setupLights(i), ze(o, t, i, s, c, l))
                            }
                        } else
                            z = null, ze(o, t, n, s, c, l)
                    }
                }
                function ze(e, t, n, i, a, r) {
                    if (e.onBeforeRender(d, t, n, i, a, r), f = te.get(t, z || n), e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, e.matrixWorld), e.normalMatrix.getNormalMatrix(e.modelViewMatrix), e.isImmediateRenderObject) {
                        const i = Se(n, t, a, e);
                        G.setMaterial(a),
                        ce.reset(),
                        function (e, t) {
                            e.render((function (e) {
                                    d.renderBufferImmediate(e, t)
                                }))
                        }
                        (e, i)
                    } else
                        d.renderBufferDirect(n, t, i, a, e, r);
                    e.onAfterRender(d, t, n, i, a, r),
                    f = te.get(t, z || n)
                }
                function we(e, t, n) {
                    !0 !== t.isScene && (t = D);
                    const i = W.get(e),
                    a = f.state.lights,
                    r = f.state.shadowsArray,
                    o = a.state.version,
                    s = J.getParameters(e, a.state, r, t, n),
                    c = J.getProgramCacheKey(s);
                    let l = i.program,
                    h = !0;
                    if (void 0 === l)
                        e.addEventListener("dispose", ve);
                    else if (l.cacheKey !== c)
                        ge(e);
                    else if (i.lightsStateVersion !== o)
                        h = !1;
                    else {
                        if (void 0 !== s.shaderID) {
                            const n = e.isMeshStandardMaterial ? t.environment : null;
                            return void(i.envMap = q.get(e.envMap || n))
                        }
                        h = !1
                    }
                    h && (s.uniforms = J.getUniforms(e), e.onBeforeCompile(s, d), l = J.acquireProgram(s, c), i.program = l, i.uniforms = s.uniforms, i.outputEncoding = s.outputEncoding);
                    const u = i.uniforms;
                    (e.isShaderMaterial || e.isRawShaderMaterial) && !0 !== e.clipping || (i.numClippingPlanes = ne.numPlanes, i.numIntersection = ne.numIntersection, u.clippingPlanes = ne.uniform),
                    i.environment = e.isMeshStandardMaterial ? t.environment : null,
                    i.fog = t.fog,
                    i.envMap = q.get(e.envMap || i.environment),
                    i.needsLights = function (e) {
                        return e.isMeshLambertMaterial || e.isMeshToonMaterial || e.isMeshPhongMaterial || e.isMeshStandardMaterial || e.isShadowMaterial || e.isShaderMaterial && !0 === e.lights
                    }
                    (e),
                    i.lightsStateVersion = o,
                    i.needsLights && (u.ambientLightColor.value = a.state.ambient, u.lightProbe.value = a.state.probe, u.directionalLights.value = a.state.directional, u.directionalLightShadows.value = a.state.directionalShadow, u.spotLights.value = a.state.spot, u.spotLightShadows.value = a.state.spotShadow, u.rectAreaLights.value = a.state.rectArea, u.ltc_1.value = a.state.rectAreaLTC1, u.ltc_2.value = a.state.rectAreaLTC2, u.pointLights.value = a.state.point, u.pointLightShadows.value = a.state.pointShadow, u.hemisphereLights.value = a.state.hemi, u.directionalShadowMap.value = a.state.directionalShadowMap, u.directionalShadowMatrix.value = a.state.directionalShadowMatrix, u.spotShadowMap.value = a.state.spotShadowMap, u.spotShadowMatrix.value = a.state.spotShadowMatrix, u.pointShadowMap.value = a.state.pointShadowMap, u.pointShadowMatrix.value = a.state.pointShadowMatrix);
                    const p = i.program.getUniforms(),
                    m = ko.seqWithValue(p.seq, u);
                    i.uniformsList = m
                }
                function Se(e, t, n, i) {
                    !0 !== t.isScene && (t = D),
                    X.resetTextureUnits();
                    const a = t.fog,
                    r = n.isMeshStandardMaterial ? t.environment : null,
                    o = null === x ? d.outputEncoding : x.texture.encoding,
                    s = q.get(n.envMap || r),
                    c = W.get(n),
                    l = f.state.lights;
                    if (!0 === R && (!0 === F || e !== M)) {
                        const t = e === M && n.id === b;
                        ne.setState(n, e, t)
                    }
                    n.version === c.__version ? n.fog && c.fog !== a || c.environment !== r || c.needsLights && c.lightsStateVersion !== l.state.version ? we(n, t, i) : void 0 === c.numClippingPlanes || c.numClippingPlanes === ne.numPlanes && c.numIntersection === ne.numIntersection ? (c.outputEncoding !== o || c.envMap !== s) && we(n, t, i) : we(n, t, i) : (we(n, t, i), c.__version = n.version);
                    let h = !1,
                    u = !1,
                    p = !1;
                    const m = c.program,
                    v = m.getUniforms(),
                    g = c.uniforms;
                    if (G.useProgram(m.program) && (h = !0, u = !0, p = !0), n.id !== b && (b = n.id, u = !0), h || M !== e) {
                        if (v.setValue(le, "projectionMatrix", e.projectionMatrix), k.logarithmicDepthBuffer && v.setValue(le, "logDepthBufFC", 2 / (Math.log(e.far + 1) / Math.LN2)), M !== e && (M = e, u = !0, p = !0), n.isShaderMaterial || n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshStandardMaterial || n.envMap) {
                            const t = v.map.cameraPosition;
                            void 0 !== t && t.setValue(le, O.setFromMatrixPosition(e.matrixWorld))
                        }
                        (n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial) && v.setValue(le, "isOrthographic", !0 === e.isOrthographicCamera),
                        (n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial || n.isShadowMaterial || n.skinning) && v.setValue(le, "viewMatrix", e.matrixWorldInverse)
                    }
                    if (n.skinning) {
                        v.setOptional(le, i, "bindMatrix"),
                        v.setOptional(le, i, "bindMatrixInverse");
                        const e = i.skeleton;
                        if (e) {
                            const t = e.bones;
                            if (k.floatVertexTextures) {
                                if (void 0 === e.boneTexture) {
                                    let n = Math.sqrt(4 * t.length);
                                    n = Dn.ceilPowerOfTwo(n),
                                    n = Math.max(n, 4);
                                    const i = new Float32Array(n * n * 4);
                                    i.set(e.boneMatrices);
                                    const a = new Mr(i, n, n, Oe, Ee);
                                    e.boneMatrices = i,
                                    e.boneTexture = a,
                                    e.boneTextureSize = n
                                }
                                v.setValue(le, "boneTexture", e.boneTexture, X),
                                v.setValue(le, "boneTextureSize", e.boneTextureSize)
                            } else
                                v.setOptional(le, e, "boneMatrices")
                        }
                    }
                    var y,
                    z;
                    return (u || c.receiveShadow !== i.receiveShadow) && (c.receiveShadow = i.receiveShadow, v.setValue(le, "receiveShadow", i.receiveShadow)),
                    u && (v.setValue(le, "toneMappingExposure", d.toneMappingExposure), c.needsLights && (z = p, (y = g).ambientLightColor.needsUpdate = z, y.lightProbe.needsUpdate = z, y.directionalLights.needsUpdate = z, y.directionalLightShadows.needsUpdate = z, y.pointLights.needsUpdate = z, y.pointLightShadows.needsUpdate = z, y.spotLights.needsUpdate = z, y.spotLightShadows.needsUpdate = z, y.rectAreaLights.needsUpdate = z, y.hemisphereLights.needsUpdate = z), a && n.fog && $.refreshFogUniforms(g, a), $.refreshMaterialUniforms(g, n, T, A), ko.upload(le, c.uniformsList, g, X)),
                    n.isShaderMaterial && !0 === n.uniformsNeedUpdate && (ko.upload(le, c.uniformsList, g, X), n.uniformsNeedUpdate = !1),
                    n.isSpriteMaterial && v.setValue(le, "center", i.center),
                    v.setValue(le, "modelViewMatrix", i.modelViewMatrix),
                    v.setValue(le, "normalMatrix", i.normalMatrix),
                    v.setValue(le, "modelMatrix", i.matrixWorld),
                    m
                }
                ye.setAnimationLoop((function (e) {
                        fe.isPresenting || xe && xe(e)
                    })),
                "undefined" != typeof window && ye.setContext(window),
                this.setAnimationLoop = function (e) {
                    xe = e,
                    fe.setAnimationLoop(e),
                    null === e ? ye.stop() : ye.start()
                },
                this.render = function (e, t) {
                    let n,
                    i;
                    if (void 0 !== arguments[2] && (console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."), n = arguments[2]), void 0 !== arguments[3] && (console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."), i = arguments[3]), void 0 !== t && !0 !== t.isCamera)
                        return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
                    if (!0 === p)
                        return;
                    ce.resetDefaultState(),
                    b = -1,
                    M = null,
                    !0 === e.autoUpdate && e.updateMatrixWorld(),
                    null === t.parent && t.updateMatrixWorld(),
                    !0 === fe.enabled && !0 === fe.isPresenting && (t = fe.getCamera(t)),
                    !0 === e.isScene && e.onBeforeRender(d, e, t, n || x),
                    f = te.get(e, t),
                    f.init(),
                    I.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
                    V.setFromProjectionMatrix(I),
                    F = this.localClippingEnabled,
                    R = ne.init(this.clippingPlanes, F, t),
                    u = ee.get(e, t),
                    u.init(),
                    be(e, t, 0, d.sortObjects),
                    u.finish(),
                    !0 === d.sortObjects && u.sort(C, E),
                    !0 === R && ne.beginShadows();
                    const a = f.state.shadowsArray;
                    de.render(a, e, t),
                    f.setupLights(t),
                    !0 === R && ne.endShadows(),
                    !0 === this.info.autoReset && this.info.reset(),
                    void 0 !== n && this.setRenderTarget(n),
                    ie.render(u, e, t, i);
                    const r = u.opaque,
                    o = u.transparent;
                    r.length > 0 && Me(r, e, t),
                    o.length > 0 && Me(o, e, t),
                    !0 === e.isScene && e.onAfterRender(d, e, t),
                    null !== x && (X.updateRenderTargetMipmap(x), X.updateMultisampleRenderTarget(x)),
                    G.buffers.depth.setTest(!0),
                    G.buffers.depth.setMask(!0),
                    G.buffers.color.setMask(!0),
                    G.setPolygonOffset(!1),
                    u = null,
                    f = null
                },
                this.setFramebuffer = function (e) {
                    m !== e && null === x && le.bindFramebuffer(36160, e),
                    m = e
                },
                this.getActiveCubeFace = function () {
                    return v
                },
                this.getActiveMipmapLevel = function () {
                    return g
                },
                this.getRenderList = function () {
                    return u
                },
                this.setRenderList = function (e) {
                    u = e
                },
                this.getRenderState = function () {
                    return f
                },
                this.setRenderState = function (e) {
                    f = e
                },
                this.getRenderTarget = function () {
                    return x
                },
                this.setRenderTarget = function (e, t = 0, n = 0) {
                    x = e,
                    v = t,
                    g = n,
                    e && void 0 === W.get(e).__webglFramebuffer && X.setupRenderTarget(e);
                    let i = m,
                    a = !1;
                    if (e) {
                        const n = W.get(e).__webglFramebuffer;
                        e.isWebGLCubeRenderTarget ? (i = n[t], a = !0) : i = e.isWebGLMultisampleRenderTarget ? W.get(e).__webglMultisampledFramebuffer : n,
                        w.copy(e.viewport),
                        _.copy(e.scissor),
                        S = e.scissorTest
                    } else
                        w.copy(H).multiplyScalar(T).floor(), _.copy(N).multiplyScalar(T).floor(), S = P;
                    if (y !== i && (le.bindFramebuffer(36160, i), y = i), G.viewport(w), G.scissor(_), G.setScissorTest(S), a) {
                        const i = W.get(e.texture);
                        le.framebufferTexture2D(36160, 36064, 34069 + t, i.__webglTexture, n)
                    }
                },
                this.readRenderTargetPixels = function (e, t, n, i, a, r, o) {
                    if (!e || !e.isWebGLRenderTarget)
                        return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
                    let s = W.get(e).__webglFramebuffer;
                    if (e.isWebGLCubeRenderTarget && void 0 !== o && (s = s[o]), s) {
                        let o = !1;
                        s !== y && (le.bindFramebuffer(36160, s), o = !0);
                        try {
                            const s = e.texture,
                            c = s.format,
                            l = s.type;
                            if (c !== Oe && se.convert(c) !== le.getParameter(35739))
                                return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                            if (!(l === _e || se.convert(l) === le.getParameter(35738) || l === Ee && (k.isWebGL2 || B.get("OES_texture_float") || B.get("WEBGL_color_buffer_float")) || l === He && (k.isWebGL2 ? B.get("EXT_color_buffer_float") : B.get("EXT_color_buffer_half_float"))))
                                return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                            36053 === le.checkFramebufferStatus(36160) ? t >= 0 && t <= e.width - i && n >= 0 && n <= e.height - a && le.readPixels(t, n, i, a, se.convert(c), se.convert(l), r) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                        }
                        finally {
                            o && le.bindFramebuffer(36160, y)
                        }
                    }
                },
                this.copyFramebufferToTexture = function (e, t, n) {
                    void 0 === n && (n = 0);
                    const i = Math.pow(2, -n),
                    a = Math.floor(t.image.width * i),
                    r = Math.floor(t.image.height * i),
                    o = se.convert(t.format);
                    X.setTexture2D(t, 0),
                    le.copyTexImage2D(3553, n, o, e.x, e.y, a, r, 0),
                    G.unbindTexture()
                },
                this.copyTextureToTexture = function (e, t, n, i) {
                    void 0 === i && (i = 0);
                    const a = t.image.width,
                    r = t.image.height,
                    o = se.convert(n.format),
                    s = se.convert(n.type);
                    X.setTexture2D(n, 0),
                    le.pixelStorei(37440, n.flipY),
                    le.pixelStorei(37441, n.premultiplyAlpha),
                    le.pixelStorei(3317, n.unpackAlignment),
                    t.isDataTexture ? le.texSubImage2D(3553, i, e.x, e.y, a, r, o, s, t.image.data) : t.isCompressedTexture ? le.compressedTexSubImage2D(3553, i, e.x, e.y, t.mipmaps[0].width, t.mipmaps[0].height, o, t.mipmaps[0].data) : le.texSubImage2D(3553, i, e.x, e.y, o, s, t.image),
                    0 === i && n.generateMipmaps && le.generateMipmap(3553),
                    G.unbindTexture()
                },
                this.initTexture = function (e) {
                    X.setTexture2D(e, 0),
                    G.unbindTexture()
                },
                "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
                        detail: this
                    }))
            }
            function Ps(e) {
                Ns.call(this, e)
            }
            Ms.prototype = Object.create(ba.prototype),
            Ms.prototype.constructor = Ms,
            Ms.prototype.isMeshDepthMaterial = !0,
            Ms.prototype.copy = function (e) {
                return ba.prototype.copy.call(this, e),
                this.depthPacking = e.depthPacking,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.map = e.map,
                this.alphaMap = e.alphaMap,
                this.displacementMap = e.displacementMap,
                this.displacementScale = e.displacementScale,
                this.displacementBias = e.displacementBias,
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this
            },
            zs.prototype = Object.create(ba.prototype),
            zs.prototype.constructor = zs,
            zs.prototype.isMeshDistanceMaterial = !0,
            zs.prototype.copy = function (e) {
                return ba.prototype.copy.call(this, e),
                this.referencePosition.copy(e.referencePosition),
                this.nearDistance = e.nearDistance,
                this.farDistance = e.farDistance,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.map = e.map,
                this.alphaMap = e.alphaMap,
                this.displacementMap = e.displacementMap,
                this.displacementScale = e.displacementScale,
                this.displacementBias = e.displacementBias,
                this
            },
            As.prototype = Object.assign(Object.create(vr.prototype), {
                constructor: As,
                isArrayCamera: !0
            }),
            Ts.prototype = Object.assign(Object.create(Zi.prototype), {
                constructor: Ts,
                isGroup: !0
            }),
            Object.assign(Cs.prototype, {
                constructor: Cs,
                getHandSpace: function () {
                    if (null === this._hand && (this._hand = new Ts, this._hand.matrixAutoUpdate = !1, this._hand.visible = !1, this._hand.joints = [], this._hand.inputState = {
                                pinching: !1
                            }, window.XRHand))
                        for (let e = 0; e <= window.XRHand.LITTLE_PHALANX_TIP; e++) {
                            const e = new Ts;
                            e.matrixAutoUpdate = !1,
                            e.visible = !1,
                            this._hand.joints.push(e),
                            this._hand.add(e)
                        }
                    return this._hand
                },
                getTargetRaySpace: function () {
                    return null === this._targetRay && (this._targetRay = new Ts, this._targetRay.matrixAutoUpdate = !1, this._targetRay.visible = !1),
                    this._targetRay
                },
                getGripSpace: function () {
                    return null === this._grip && (this._grip = new Ts, this._grip.matrixAutoUpdate = !1, this._grip.visible = !1),
                    this._grip
                },
                dispatchEvent: function (e) {
                    return null !== this._targetRay && this._targetRay.dispatchEvent(e),
                    null !== this._grip && this._grip.dispatchEvent(e),
                    null !== this._hand && this._hand.dispatchEvent(e),
                    this
                },
                disconnect: function (e) {
                    return this.dispatchEvent({
                        type: "disconnected",
                        data: e
                    }),
                    null !== this._targetRay && (this._targetRay.visible = !1),
                    null !== this._grip && (this._grip.visible = !1),
                    null !== this._hand && (this._hand.visible = !1),
                    this
                },
                update: function (e, t, n) {
                    let i = null,
                    a = null,
                    r = null;
                    const o = this._targetRay,
                    s = this._grip,
                    c = this._hand;
                    if (e)
                        if (c && e.hand) {
                            r = !0;
                            for (let i = 0; i <= window.XRHand.LITTLE_PHALANX_TIP; i++)
                                if (e.hand[i]) {
                                    const a = t.getJointPose(e.hand[i], n),
                                    r = c.joints[i];
                                    null !== a && (r.matrix.fromArray(a.transform.matrix), r.matrix.decompose(r.position, r.rotation, r.scale), r.jointRadius = a.radius),
                                    r.visible = null !== a;
                                    const o = c.joints[window.XRHand.INDEX_PHALANX_TIP],
                                    s = c.joints[window.XRHand.THUMB_PHALANX_TIP],
                                    l = o.position.distanceTo(s.position),
                                    h = .02,
                                    u = .005;
                                    c.inputState.pinching && l > h + u ? (c.inputState.pinching = !1, this.dispatchEvent({
                                            type: "pinchend",
                                            handedness: e.handedness,
                                            target: this
                                        })) : !c.inputState.pinching && l <= h - u && (c.inputState.pinching = !0, this.dispatchEvent({
                                            type: "pinchstart",
                                            handedness: e.handedness,
                                            target: this
                                        }))
                                }
                        } else
                            null !== o && (i = t.getPose(e.targetRaySpace, n), null !== i && (o.matrix.fromArray(i.transform.matrix), o.matrix.decompose(o.position, o.rotation, o.scale))), null !== s && e.gripSpace && (a = t.getPose(e.gripSpace, n), null !== a && (s.matrix.fromArray(a.transform.matrix), s.matrix.decompose(s.position, s.rotation, s.scale)));
                    return null !== o && (o.visible = null !== i),
                    null !== s && (s.visible = null !== a),
                    null !== c && (c.visible = null !== r),
                    this
                }
            }),
            Object.assign(Es.prototype, Fn.prototype),
            Ps.prototype = Object.assign(Object.create(Ns.prototype), {
                constructor: Ps,
                isWebGL1Renderer: !0
            });
            class Vs {
                constructor(e, t) {
                    Object.defineProperty(this, "isFogExp2", {
                        value: !0
                    }),
                    this.name = "",
                    this.color = new ga(e),
                    this.density = void 0 !== t ? t : 25e-5
                }
                clone() {
                    return new Vs(this.color, this.density)
                }
                toJSON() {
                    return {
                        type: "FogExp2",
                        color: this.color.getHex(),
                        density: this.density
                    }
                }
            }
            class Rs {
                constructor(e, t, n) {
                    Object.defineProperty(this, "isFog", {
                        value: !0
                    }),
                    this.name = "",
                    this.color = new ga(e),
                    this.near = void 0 !== t ? t : 1,
                    this.far = void 0 !== n ? n : 1e3
                }
                clone() {
                    return new Rs(this.color, this.near, this.far)
                }
                toJSON() {
                    return {
                        type: "Fog",
                        color: this.color.getHex(),
                        near: this.near,
                        far: this.far
                    }
                }
            }
            class Fs extends Zi {
                constructor() {
                    super(),
                    Object.defineProperty(this, "isScene", {
                        value: !0
                    }),
                    this.type = "Scene",
                    this.background = null,
                    this.environment = null,
                    this.fog = null,
                    this.overrideMaterial = null,
                    this.autoUpdate = !0,
                    "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
                            detail: this
                        }))
                }
                copy(e, t) {
                    return super.copy(e, t),
                    null !== e.background && (this.background = e.background.clone()),
                    null !== e.environment && (this.environment = e.environment.clone()),
                    null !== e.fog && (this.fog = e.fog.clone()),
                    null !== e.overrideMaterial && (this.overrideMaterial = e.overrideMaterial.clone()),
                    this.autoUpdate = e.autoUpdate,
                    this.matrixAutoUpdate = e.matrixAutoUpdate,
                    this
                }
                toJSON(e) {
                    const t = super.toJSON(e);
                    return null !== this.background && (t.object.background = this.background.toJSON(e)),
                    null !== this.environment && (t.object.environment = this.environment.toJSON(e)),
                    null !== this.fog && (t.object.fog = this.fog.toJSON()),
                    t
                }
            }
            function Is(e, t) {
                this.array = e,
                this.stride = t,
                this.count = void 0 !== e ? e.length / t : 0,
                this.usage = Sn,
                this.updateRange = {
                    offset: 0,
                    count: -1
                },
                this.version = 0,
                this.uuid = Dn.generateUUID()
            }
            Object.defineProperty(Is.prototype, "needsUpdate", {
                set: function (e) {
                    !0 === e && this.version++
                }
            }),
            Object.assign(Is.prototype, {
                isInterleavedBuffer: !0,
                onUploadCallback: function () {},
                setUsage: function (e) {
                    return this.usage = e,
                    this
                },
                copy: function (e) {
                    return this.array = new e.array.constructor(e.array),
                    this.count = e.count,
                    this.stride = e.stride,
                    this.usage = e.usage,
                    this
                },
                copyAt: function (e, t, n) {
                    e *= this.stride,
                    n *= t.stride;
                    for (let i = 0, a = this.stride; i < a; i++)
                        this.array[e + i] = t.array[n + i];
                    return this
                },
                set: function (e, t) {
                    return void 0 === t && (t = 0),
                    this.array.set(e, t),
                    this
                },
                clone: function (e) {
                    void 0 === e.arrayBuffers && (e.arrayBuffers = {}),
                    void 0 === this.array.buffer._uuid && (this.array.buffer._uuid = Dn.generateUUID()),
                    void 0 === e.arrayBuffers[this.array.buffer._uuid] && (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
                    const t = new Is(new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]), this.stride);
                    return t.setUsage(this.usage),
                    t
                },
                onUpload: function (e) {
                    return this.onUploadCallback = e,
                    this
                },
                toJSON: function (e) {
                    return void 0 === e.arrayBuffers && (e.arrayBuffers = {}),
                    void 0 === this.array.buffer._uuid && (this.array.buffer._uuid = Dn.generateUUID()),
                    void 0 === e.arrayBuffers[this.array.buffer._uuid] && (e.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer))), {
                        uuid: this.uuid,
                        buffer: this.array.buffer._uuid,
                        type: this.array.constructor.name,
                        stride: this.stride
                    }
                }
            });
            const Os = new Qn;
            function Ds(e, t, n, i) {
                this.name = "",
                this.data = e,
                this.itemSize = t,
                this.offset = n,
                this.normalized = !0 === i
            }
            function Us(e) {
                ba.call(this),
                this.type = "SpriteMaterial",
                this.color = new ga(16777215),
                this.map = null,
                this.alphaMap = null,
                this.rotation = 0,
                this.sizeAttenuation = !0,
                this.transparent = !0,
                this.setValues(e)
            }
            let Bs;
            Object.defineProperties(Ds.prototype, {
                count: {
                    get: function () {
                        return this.data.count
                    }
                },
                array: {
                    get: function () {
                        return this.data.array
                    }
                },
                needsUpdate: {
                    set: function (e) {
                        this.data.needsUpdate = e
                    }
                }
            }),
            Object.assign(Ds.prototype, {
                isInterleavedBufferAttribute: !0,
                applyMatrix4: function (e) {
                    for (let t = 0, n = this.data.count; t < n; t++)
                        Os.x = this.getX(t), Os.y = this.getY(t), Os.z = this.getZ(t), Os.applyMatrix4(e), this.setXYZ(t, Os.x, Os.y, Os.z);
                    return this
                },
                setX: function (e, t) {
                    return this.data.array[e * this.data.stride + this.offset] = t,
                    this
                },
                setY: function (e, t) {
                    return this.data.array[e * this.data.stride + this.offset + 1] = t,
                    this
                },
                setZ: function (e, t) {
                    return this.data.array[e * this.data.stride + this.offset + 2] = t,
                    this
                },
                setW: function (e, t) {
                    return this.data.array[e * this.data.stride + this.offset + 3] = t,
                    this
                },
                getX: function (e) {
                    return this.data.array[e * this.data.stride + this.offset]
                },
                getY: function (e) {
                    return this.data.array[e * this.data.stride + this.offset + 1]
                },
                getZ: function (e) {
                    return this.data.array[e * this.data.stride + this.offset + 2]
                },
                getW: function (e) {
                    return this.data.array[e * this.data.stride + this.offset + 3]
                },
                setXY: function (e, t, n) {
                    return e = e * this.data.stride + this.offset,
                    this.data.array[e + 0] = t,
                    this.data.array[e + 1] = n,
                    this
                },
                setXYZ: function (e, t, n, i) {
                    return e = e * this.data.stride + this.offset,
                    this.data.array[e + 0] = t,
                    this.data.array[e + 1] = n,
                    this.data.array[e + 2] = i,
                    this
                },
                setXYZW: function (e, t, n, i, a) {
                    return e = e * this.data.stride + this.offset,
                    this.data.array[e + 0] = t,
                    this.data.array[e + 1] = n,
                    this.data.array[e + 2] = i,
                    this.data.array[e + 3] = a,
                    this
                },
                clone: function (e) {
                    if (void 0 === e) {
                        console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");
                        const e = [];
                        for (let t = 0; t < this.count; t++) {
                            const n = t * this.data.stride + this.offset;
                            for (let t = 0; t < this.itemSize; t++)
                                e.push(this.data.array[n + t])
                        }
                        return new _a(new this.array.constructor(e), this.itemSize, this.normalized)
                    }
                    return void 0 === e.interleavedBuffers && (e.interleavedBuffers = {}),
                    void 0 === e.interleavedBuffers[this.data.uuid] && (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)),
                    new Ds(e.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized)
                },
                toJSON: function (e) {
                    if (void 0 === e) {
                        console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");
                        const e = [];
                        for (let t = 0; t < this.count; t++) {
                            const n = t * this.data.stride + this.offset;
                            for (let t = 0; t < this.itemSize; t++)
                                e.push(this.data.array[n + t])
                        }
                        return {
                            itemSize: this.itemSize,
                            type: this.array.constructor.name,
                            array: e,
                            normalized: this.normalized
                        }
                    }
                    return void 0 === e.interleavedBuffers && (e.interleavedBuffers = {}),
                    void 0 === e.interleavedBuffers[this.data.uuid] && (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)), {
                        isInterleavedBufferAttribute: !0,
                        itemSize: this.itemSize,
                        data: this.data.uuid,
                        offset: this.offset,
                        normalized: this.normalized
                    }
                }
            }),
            Us.prototype = Object.create(ba.prototype),
            Us.prototype.constructor = Us,
            Us.prototype.isSpriteMaterial = !0,
            Us.prototype.copy = function (e) {
                return ba.prototype.copy.call(this, e),
                this.color.copy(e.color),
                this.map = e.map,
                this.alphaMap = e.alphaMap,
                this.rotation = e.rotation,
                this.sizeAttenuation = e.sizeAttenuation,
                this
            };
            const ks = new Qn,
            Gs = new Qn,
            js = new Qn,
            Ws = new Un,
            Xs = new Un,
            qs = new _i,
            Ys = new Qn,
            Zs = new Qn,
            Qs = new Qn,
            Js = new Un,
            Ks = new Un,
            $s = new Un;
            function ec(e) {
                if (Zi.call(this), this.type = "Sprite", void 0 === Bs) {
                    Bs = new Ga;
                    const e = new Is(new Float32Array([ - .5,  - .5, 0, 0, 0, .5,  - .5, 0, 1, 0, .5, .5, 0, 1, 1,  - .5, .5, 0, 0, 1]), 5);
                    Bs.setIndex([0, 1, 2, 0, 2, 3]),
                    Bs.setAttribute("position", new Ds(e, 3, 0, !1)),
                    Bs.setAttribute("uv", new Ds(e, 2, 3, !1))
                }
                this.geometry = Bs,
                this.material = void 0 !== e ? e : new Us,
                this.center = new Un(.5, .5)
            }
            function tc(e, t, n, i, a, r) {
                Ws.subVectors(e, n).addScalar(.5).multiply(i),
                void 0 !== a ? (Xs.x = r * Ws.x - a * Ws.y, Xs.y = a * Ws.x + r * Ws.y) : Xs.copy(Ws),
                e.copy(t),
                e.x += Xs.x,
                e.y += Xs.y,
                e.applyMatrix4(qs)
            }
            ec.prototype = Object.assign(Object.create(Zi.prototype), {
                constructor: ec,
                isSprite: !0,
                raycast: function (e, t) {
                    null === e.camera && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),
                    Gs.setFromMatrixScale(this.matrixWorld),
                    qs.copy(e.camera.matrixWorld),
                    this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld),
                    js.setFromMatrixPosition(this.modelViewMatrix),
                    e.camera.isPerspectiveCamera && !1 === this.material.sizeAttenuation && Gs.multiplyScalar(-js.z);
                    const n = this.material.rotation;
                    let i,
                    a;
                    0 !== n && (a = Math.cos(n), i = Math.sin(n));
                    const r = this.center;
                    tc(Ys.set( - .5,  - .5, 0), js, r, Gs, i, a),
                    tc(Zs.set(.5,  - .5, 0), js, r, Gs, i, a),
                    tc(Qs.set(.5, .5, 0), js, r, Gs, i, a),
                    Js.set(0, 0),
                    Ks.set(1, 0),
                    $s.set(1, 1);
                    let o = e.ray.intersectTriangle(Ys, Zs, Qs, !1, ks);
                    if (null === o && (tc(Zs.set( - .5, .5, 0), js, r, Gs, i, a), Ks.set(0, 1), o = e.ray.intersectTriangle(Ys, Qs, Zs, !1, ks), null === o))
                        return;
                    const s = e.ray.origin.distanceTo(ks);
                    s < e.near || s > e.far || t.push({
                        distance: s,
                        point: ks.clone(),
                        uv: ha.getUV(ks, Ys, Zs, Qs, Js, Ks, $s, new Un),
                        face: null,
                        object: this
                    })
                },
                copy: function (e) {
                    return Zi.prototype.copy.call(this, e),
                    void 0 !== e.center && this.center.copy(e.center),
                    this.material = e.material,
                    this
                }
            });
            const nc = new Qn,
            ic = new Qn;
            function ac() {
                Zi.call(this),
                this._currentLevel = 0,
                this.type = "LOD",
                Object.defineProperties(this, {
                    levels: {
                        enumerable: !0,
                        value: []
                    }
                }),
                this.autoUpdate = !0
            }
            function rc(e, t) {
                e && e.isGeometry && console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),
                sr.call(this, e, t),
                this.type = "SkinnedMesh",
                this.bindMode = "attached",
                this.bindMatrix = new _i,
                this.bindMatrixInverse = new _i
            }
            ac.prototype = Object.assign(Object.create(Zi.prototype), {
                constructor: ac,
                isLOD: !0,
                copy: function (e) {
                    Zi.prototype.copy.call(this, e, !1);
                    const t = e.levels;
                    for (let e = 0, n = t.length; e < n; e++) {
                        const n = t[e];
                        this.addLevel(n.object.clone(), n.distance)
                    }
                    return this.autoUpdate = e.autoUpdate,
                    this
                },
                addLevel: function (e, t) {
                    void 0 === t && (t = 0),
                    t = Math.abs(t);
                    const n = this.levels;
                    let i;
                    for (i = 0; i < n.length && !(t < n[i].distance); i++);
                    return n.splice(i, 0, {
                        distance: t,
                        object: e
                    }),
                    this.add(e),
                    this
                },
                getCurrentLevel: function () {
                    return this._currentLevel
                },
                getObjectForDistance: function (e) {
                    const t = this.levels;
                    if (t.length > 0) {
                        let n,
                        i;
                        for (n = 1, i = t.length; n < i && !(e < t[n].distance); n++);
                        return t[n - 1].object
                    }
                    return null
                },
                raycast: function (e, t) {
                    if (this.levels.length > 0) {
                        nc.setFromMatrixPosition(this.matrixWorld);
                        const n = e.ray.origin.distanceTo(nc);
                        this.getObjectForDistance(n).raycast(e, t)
                    }
                },
                update: function (e) {
                    const t = this.levels;
                    if (t.length > 1) {
                        nc.setFromMatrixPosition(e.matrixWorld),
                        ic.setFromMatrixPosition(this.matrixWorld);
                        const n = nc.distanceTo(ic) / e.zoom;
                        let i,
                        a;
                        for (t[0].object.visible = !0, i = 1, a = t.length; i < a && n >= t[i].distance; i++)
                            t[i - 1].object.visible = !1, t[i].object.visible = !0;
                        for (this._currentLevel = i - 1; i < a; i++)
                            t[i].object.visible = !1
                    }
                },
                toJSON: function (e) {
                    const t = Zi.prototype.toJSON.call(this, e);
                    !1 === this.autoUpdate && (t.object.autoUpdate = !1),
                    t.object.levels = [];
                    const n = this.levels;
                    for (let e = 0, i = n.length; e < i; e++) {
                        const i = n[e];
                        t.object.levels.push({
                            object: i.object.uuid,
                            distance: i.distance
                        })
                    }
                    return t
                }
            }),
            rc.prototype = Object.assign(Object.create(sr.prototype), {
                constructor: rc,
                isSkinnedMesh: !0,
                copy: function (e) {
                    return sr.prototype.copy.call(this, e),
                    this.bindMode = e.bindMode,
                    this.bindMatrix.copy(e.bindMatrix),
                    this.bindMatrixInverse.copy(e.bindMatrixInverse),
                    this.skeleton = e.skeleton,
                    this
                },
                bind: function (e, t) {
                    this.skeleton = e,
                    void 0 === t && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), t = this.matrixWorld),
                    this.bindMatrix.copy(t),
                    this.bindMatrixInverse.getInverse(t)
                },
                pose: function () {
                    this.skeleton.pose()
                },
                normalizeSkinWeights: function () {
                    const e = new Xn,
                    t = this.geometry.attributes.skinWeight;
                    for (let n = 0, i = t.count; n < i; n++) {
                        e.x = t.getX(n),
                        e.y = t.getY(n),
                        e.z = t.getZ(n),
                        e.w = t.getW(n);
                        const i = 1 / e.manhattanLength();
                        i !== 1 / 0 ? e.multiplyScalar(i) : e.set(1, 0, 0, 0),
                        t.setXYZW(n, e.x, e.y, e.z, e.w)
                    }
                },
                updateMatrixWorld: function (e) {
                    sr.prototype.updateMatrixWorld.call(this, e),
                    "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode)
                },
                boneTransform: function () {
                    const e = new Qn,
                    t = new Xn,
                    n = new Xn,
                    i = new Qn,
                    a = new _i;
                    return function (r, o) {
                        const s = this.skeleton,
                        c = this.geometry;
                        t.fromBufferAttribute(c.attributes.skinIndex, r),
                        n.fromBufferAttribute(c.attributes.skinWeight, r),
                        e.fromBufferAttribute(c.attributes.position, r).applyMatrix4(this.bindMatrix),
                        o.set(0, 0, 0);
                        for (let r = 0; r < 4; r++) {
                            const c = n.getComponent(r);
                            if (0 !== c) {
                                const n = t.getComponent(r);
                                a.multiplyMatrices(s.bones[n].matrixWorld, s.boneInverses[n]),
                                o.addScaledVector(i.copy(e).applyMatrix4(a), c)
                            }
                        }
                        return o.applyMatrix4(this.bindMatrixInverse)
                    }
                }
                ()
            });
            const oc = new _i,
            sc = new _i;
            function cc(e, t) {
                if (e = e || [], this.bones = e.slice(0), this.boneMatrices = new Float32Array(16 * this.bones.length), this.frame = -1, void 0 === t)
                    this.calculateInverses();
                else if (this.bones.length === t.length)
                    this.boneInverses = t.slice(0);
                else {
                    console.warn("THREE.Skeleton boneInverses is the wrong length."),
                    this.boneInverses = [];
                    for (let e = 0, t = this.bones.length; e < t; e++)
                        this.boneInverses.push(new _i)
                }
            }
            function lc() {
                Zi.call(this),
                this.type = "Bone"
            }
            Object.assign(cc.prototype, {
                calculateInverses: function () {
                    this.boneInverses = [];
                    for (let e = 0, t = this.bones.length; e < t; e++) {
                        const t = new _i;
                        this.bones[e] && t.getInverse(this.bones[e].matrixWorld),
                        this.boneInverses.push(t)
                    }
                },
                pose: function () {
                    for (let e = 0, t = this.bones.length; e < t; e++) {
                        const t = this.bones[e];
                        t && t.matrixWorld.getInverse(this.boneInverses[e])
                    }
                    for (let e = 0, t = this.bones.length; e < t; e++) {
                        const t = this.bones[e];
                        t && (t.parent && t.parent.isBone ? (t.matrix.getInverse(t.parent.matrixWorld), t.matrix.multiply(t.matrixWorld)) : t.matrix.copy(t.matrixWorld), t.matrix.decompose(t.position, t.quaternion, t.scale))
                    }
                },
                update: function () {
                    const e = this.bones,
                    t = this.boneInverses,
                    n = this.boneMatrices,
                    i = this.boneTexture;
                    for (let i = 0, a = e.length; i < a; i++) {
                        const a = e[i] ? e[i].matrixWorld : sc;
                        oc.multiplyMatrices(a, t[i]),
                        oc.toArray(n, 16 * i)
                    }
                    void 0 !== i && (i.needsUpdate = !0)
                },
                clone: function () {
                    return new cc(this.bones, this.boneInverses)
                },
                getBoneByName: function (e) {
                    for (let t = 0, n = this.bones.length; t < n; t++) {
                        const n = this.bones[t];
                        if (n.name === e)
                            return n
                    }
                },
                dispose: function () {
                    this.boneTexture && (this.boneTexture.dispose(), this.boneTexture = void 0)
                }
            }),
            lc.prototype = Object.assign(Object.create(Zi.prototype), {
                constructor: lc,
                isBone: !0
            });
            const hc = new _i,
            uc = new _i,
            fc = [],
            dc = new sr;
            function pc(e, t, n) {
                sr.call(this, e, t),
                this.instanceMatrix = new _a(new Float32Array(16 * n), 16),
                this.instanceColor = null,
                this.count = n,
                this.frustumCulled = !1
            }
            function mc(e) {
                ba.call(this),
                this.type = "LineBasicMaterial",
                this.color = new ga(16777215),
                this.linewidth = 1,
                this.linecap = "round",
                this.linejoin = "round",
                this.morphTargets = !1,
                this.setValues(e)
            }
            pc.prototype = Object.assign(Object.create(sr.prototype), {
                constructor: pc,
                isInstancedMesh: !0,
                copy: function (e) {
                    return sr.prototype.copy.call(this, e),
                    this.instanceMatrix.copy(e.instanceMatrix),
                    this.count = e.count,
                    this
                },
                setColorAt: function (e, t) {
                    null === this.instanceColor && (this.instanceColor = new _a(new Float32Array(3 * this.count), 3)),
                    t.toArray(this.instanceColor.array, 3 * e)
                },
                getMatrixAt: function (e, t) {
                    t.fromArray(this.instanceMatrix.array, 16 * e)
                },
                raycast: function (e, t) {
                    const n = this.matrixWorld,
                    i = this.count;
                    if (dc.geometry = this.geometry, dc.material = this.material, void 0 !== dc.material)
                        for (let a = 0; a < i; a++) {
                            this.getMatrixAt(a, hc),
                            uc.multiplyMatrices(n, hc),
                            dc.matrixWorld = uc,
                            dc.raycast(e, fc);
                            for (let e = 0, n = fc.length; e < n; e++) {
                                const n = fc[e];
                                n.instanceId = a,
                                n.object = this,
                                t.push(n)
                            }
                            fc.length = 0
                        }
                },
                setMatrixAt: function (e, t) {
                    t.toArray(this.instanceMatrix.array, 16 * e)
                },
                updateMorphTargets: function () {}
            }),
            mc.prototype = Object.create(ba.prototype),
            mc.prototype.constructor = mc,
            mc.prototype.isLineBasicMaterial = !0,
            mc.prototype.copy = function (e) {
                return ba.prototype.copy.call(this, e),
                this.color.copy(e.color),
                this.linewidth = e.linewidth,
                this.linecap = e.linecap,
                this.linejoin = e.linejoin,
                this.morphTargets = e.morphTargets,
                this
            };
            const vc = new Qn,
            gc = new Qn,
            xc = new _i,
            yc = new wi,
            bc = new mi;
            function Mc(e, t, n) {
                1 === n && console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),
                Zi.call(this),
                this.type = "Line",
                this.geometry = void 0 !== e ? e : new Ga,
                this.material = void 0 !== t ? t : new mc,
                this.updateMorphTargets()
            }
            Mc.prototype = Object.assign(Object.create(Zi.prototype), {
                constructor: Mc,
                isLine: !0,
                copy: function (e) {
                    return Zi.prototype.copy.call(this, e),
                    this.material = e.material,
                    this.geometry = e.geometry,
                    this
                },
                computeLineDistances: function () {
                    const e = this.geometry;
                    if (e.isBufferGeometry)
                        if (null === e.index) {
                            const t = e.attributes.position,
                            n = [0];
                            for (let e = 1, i = t.count; e < i; e++)
                                vc.fromBufferAttribute(t, e - 1), gc.fromBufferAttribute(t, e), n[e] = n[e - 1], n[e] += vc.distanceTo(gc);
                            e.setAttribute("lineDistance", new Na(n, 1))
                        } else
                            console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                    else if (e.isGeometry) {
                        const t = e.vertices,
                        n = e.lineDistances;
                        n[0] = 0;
                        for (let e = 1, i = t.length; e < i; e++)
                            n[e] = n[e - 1], n[e] += t[e - 1].distanceTo(t[e])
                    }
                    return this
                },
                raycast: function (e, t) {
                    const n = this.geometry,
                    i = this.matrixWorld,
                    a = e.params.Line.threshold;
                    if (null === n.boundingSphere && n.computeBoundingSphere(), bc.copy(n.boundingSphere), bc.applyMatrix4(i), bc.radius += a, !1 === e.ray.intersectsSphere(bc))
                        return;
                    xc.getInverse(i),
                    yc.copy(e.ray).applyMatrix4(xc);
                    const r = a / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                    o = r * r,
                    s = new Qn,
                    c = new Qn,
                    l = new Qn,
                    h = new Qn,
                    u = this.isLineSegments ? 2 : 1;
                    if (n.isBufferGeometry) {
                        const i = n.index,
                        a = n.attributes.position;
                        if (null !== i) {
                            const n = i.array;
                            for (let i = 0, r = n.length - 1; i < r; i += u) {
                                const r = n[i],
                                u = n[i + 1];
                                if (s.fromBufferAttribute(a, r), c.fromBufferAttribute(a, u), yc.distanceSqToSegment(s, c, h, l) > o)
                                    continue;
                                h.applyMatrix4(this.matrixWorld);
                                const f = e.ray.origin.distanceTo(h);
                                f < e.near || f > e.far || t.push({
                                    distance: f,
                                    point: l.clone().applyMatrix4(this.matrixWorld),
                                    index: i,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                })
                            }
                        } else
                            for (let n = 0, i = a.count - 1; n < i; n += u) {
                                if (s.fromBufferAttribute(a, n), c.fromBufferAttribute(a, n + 1), yc.distanceSqToSegment(s, c, h, l) > o)
                                    continue;
                                h.applyMatrix4(this.matrixWorld);
                                const i = e.ray.origin.distanceTo(h);
                                i < e.near || i > e.far || t.push({
                                    distance: i,
                                    point: l.clone().applyMatrix4(this.matrixWorld),
                                    index: n,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                })
                            }
                    } else if (n.isGeometry) {
                        const i = n.vertices,
                        a = i.length;
                        for (let n = 0; n < a - 1; n += u) {
                            if (yc.distanceSqToSegment(i[n], i[n + 1], h, l) > o)
                                continue;
                            h.applyMatrix4(this.matrixWorld);
                            const a = e.ray.origin.distanceTo(h);
                            a < e.near || a > e.far || t.push({
                                distance: a,
                                point: l.clone().applyMatrix4(this.matrixWorld),
                                index: n,
                                face: null,
                                faceIndex: null,
                                object: this
                            })
                        }
                    }
                },
                updateMorphTargets: function () {
                    const e = this.geometry;
                    if (e.isBufferGeometry) {
                        const t = e.morphAttributes,
                        n = Object.keys(t);
                        if (n.length > 0) {
                            const e = t[n[0]];
                            if (void 0 !== e) {
                                this.morphTargetInfluences = [],
                                this.morphTargetDictionary = {};
                                for (let t = 0, n = e.length; t < n; t++) {
                                    const n = e[t].name || String(t);
                                    this.morphTargetInfluences.push(0),
                                    this.morphTargetDictionary[n] = t
                                }
                            }
                        }
                    } else {
                        const t = e.morphTargets;
                        void 0 !== t && t.length > 0 && console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")
                    }
                }
            });
            const zc = new Qn,
            wc = new Qn;
            function _c(e, t) {
                Mc.call(this, e, t),
                this.type = "LineSegments"
            }
            function Sc(e, t) {
                Mc.call(this, e, t),
                this.type = "LineLoop"
            }
            function Lc(e) {
                ba.call(this),
                this.type = "PointsMaterial",
                this.color = new ga(16777215),
                this.map = null,
                this.alphaMap = null,
                this.size = 1,
                this.sizeAttenuation = !0,
                this.morphTargets = !1,
                this.setValues(e)
            }
            _c.prototype = Object.assign(Object.create(Mc.prototype), {
                constructor: _c,
                isLineSegments: !0,
                computeLineDistances: function () {
                    const e = this.geometry;
                    if (e.isBufferGeometry)
                        if (null === e.index) {
                            const t = e.attributes.position,
                            n = [];
                            for (let e = 0, i = t.count; e < i; e += 2)
                                zc.fromBufferAttribute(t, e), wc.fromBufferAttribute(t, e + 1), n[e] = 0 === e ? 0 : n[e - 1], n[e + 1] = n[e] + zc.distanceTo(wc);
                            e.setAttribute("lineDistance", new Na(n, 1))
                        } else
                            console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                    else if (e.isGeometry) {
                        const t = e.vertices,
                        n = e.lineDistances;
                        for (let e = 0, i = t.length; e < i; e += 2)
                            zc.copy(t[e]), wc.copy(t[e + 1]), n[e] = 0 === e ? 0 : n[e - 1], n[e + 1] = n[e] + zc.distanceTo(wc)
                    }
                    return this
                }
            }),
            Sc.prototype = Object.assign(Object.create(Mc.prototype), {
                constructor: Sc,
                isLineLoop: !0
            }),
            Lc.prototype = Object.create(ba.prototype),
            Lc.prototype.constructor = Lc,
            Lc.prototype.isPointsMaterial = !0,
            Lc.prototype.copy = function (e) {
                return ba.prototype.copy.call(this, e),
                this.color.copy(e.color),
                this.map = e.map,
                this.alphaMap = e.alphaMap,
                this.size = e.size,
                this.sizeAttenuation = e.sizeAttenuation,
                this.morphTargets = e.morphTargets,
                this
            };
            const Ac = new _i,
            Tc = new wi,
            Cc = new mi,
            Ec = new Qn;
            function Hc(e, t) {
                Zi.call(this),
                this.type = "Points",
                this.geometry = void 0 !== e ? e : new Ga,
                this.material = void 0 !== t ? t : new Lc,
                this.updateMorphTargets()
            }
            function Nc(e, t, n, i, a, r, o) {
                const s = Tc.distanceSqToPoint(e);
                if (s < n) {
                    const n = new Qn;
                    Tc.closestPointToPoint(e, n),
                    n.applyMatrix4(i);
                    const c = a.ray.origin.distanceTo(n);
                    if (c < a.near || c > a.far)
                        return;
                    r.push({
                        distance: c,
                        distanceToRay: Math.sqrt(s),
                        point: n,
                        index: t,
                        face: null,
                        object: o
                    })
                }
            }
            function Pc(e, t, n, i, a, r, o, s, c) {
                Wn.call(this, e, t, n, i, a, r, o, s, c),
                this.format = void 0 !== o ? o : Ie,
                this.minFilter = void 0 !== r ? r : ye,
                this.magFilter = void 0 !== a ? a : ye,
                this.generateMipmaps = !1;
                const l = this;
                "requestVideoFrameCallback" in e && e.requestVideoFrameCallback((function t() {
                        l.needsUpdate = !0,
                        e.requestVideoFrameCallback(t)
                    }))
            }
            function Vc(e, t, n, i, a, r, o, s, c, l, h, u) {
                Wn.call(this, null, r, o, s, c, l, i, a, h, u),
                this.image = {
                    width: t,
                    height: n
                },
                this.mipmaps = e,
                this.flipY = !1,
                this.generateMipmaps = !1
            }
            function Rc(e, t, n, i, a, r, o, s, c) {
                Wn.call(this, e, t, n, i, a, r, o, s, c),
                this.needsUpdate = !0
            }
            function Fc(e, t, n, i, a, r, o, s, c, l) {
                if ((l = void 0 !== l ? l : ke) !== ke && l !== Ge)
                    throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
                void 0 === n && l === ke && (n = Ae),
                void 0 === n && l === Ge && (n = Re),
                Wn.call(this, null, i, a, r, o, s, l, n, c),
                this.image = {
                    width: e,
                    height: t
                },
                this.magFilter = void 0 !== o ? o : pe,
                this.minFilter = void 0 !== s ? s : pe,
                this.flipY = !1,
                this.generateMipmaps = !1
            }
            Hc.prototype = Object.assign(Object.create(Zi.prototype), {
                constructor: Hc,
                isPoints: !0,
                copy: function (e) {
                    return Zi.prototype.copy.call(this, e),
                    this.material = e.material,
                    this.geometry = e.geometry,
                    this
                },
                raycast: function (e, t) {
                    const n = this.geometry,
                    i = this.matrixWorld,
                    a = e.params.Points.threshold;
                    if (null === n.boundingSphere && n.computeBoundingSphere(), Cc.copy(n.boundingSphere), Cc.applyMatrix4(i), Cc.radius += a, !1 === e.ray.intersectsSphere(Cc))
                        return;
                    Ac.getInverse(i),
                    Tc.copy(e.ray).applyMatrix4(Ac);
                    const r = a / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                    o = r * r;
                    if (n.isBufferGeometry) {
                        const a = n.index,
                        r = n.attributes.position;
                        if (null !== a) {
                            const n = a.array;
                            for (let a = 0, s = n.length; a < s; a++) {
                                const s = n[a];
                                Ec.fromBufferAttribute(r, s),
                                Nc(Ec, s, o, i, e, t, this)
                            }
                        } else
                            for (let n = 0, a = r.count; n < a; n++)
                                Ec.fromBufferAttribute(r, n), Nc(Ec, n, o, i, e, t, this)
                    } else {
                        const a = n.vertices;
                        for (let n = 0, r = a.length; n < r; n++)
                            Nc(a[n], n, o, i, e, t, this)
                    }
                },
                updateMorphTargets: function () {
                    const e = this.geometry;
                    if (e.isBufferGeometry) {
                        const t = e.morphAttributes,
                        n = Object.keys(t);
                        if (n.length > 0) {
                            const e = t[n[0]];
                            if (void 0 !== e) {
                                this.morphTargetInfluences = [],
                                this.morphTargetDictionary = {};
                                for (let t = 0, n = e.length; t < n; t++) {
                                    const n = e[t].name || String(t);
                                    this.morphTargetInfluences.push(0),
                                    this.morphTargetDictionary[n] = t
                                }
                            }
                        }
                    } else {
                        const t = e.morphTargets;
                        void 0 !== t && t.length > 0 && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")
                    }
                }
            }),
            Pc.prototype = Object.assign(Object.create(Wn.prototype), {
                constructor: Pc,
                isVideoTexture: !0,
                update: function () {
                    const e = this.image;
                    !1 == "requestVideoFrameCallback" in e && e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0)
                }
            }),
            Vc.prototype = Object.create(Wn.prototype),
            Vc.prototype.constructor = Vc,
            Vc.prototype.isCompressedTexture = !0,
            Rc.prototype = Object.create(Wn.prototype),
            Rc.prototype.constructor = Rc,
            Rc.prototype.isCanvasTexture = !0,
            Fc.prototype = Object.create(Wn.prototype),
            Fc.prototype.constructor = Fc,
            Fc.prototype.isDepthTexture = !0;
            let Ic = 0;
            const Oc = new _i,
            Dc = new Zi,
            Uc = new Qn;
            function Bc() {
                Object.defineProperty(this, "id", {
                    value: Ic += 2
                }),
                this.uuid = Dn.generateUUID(),
                this.name = "",
                this.type = "Geometry",
                this.vertices = [],
                this.colors = [],
                this.faces = [],
                this.faceVertexUvs = [[]],
                this.morphTargets = [],
                this.morphNormals = [],
                this.skinWeights = [],
                this.skinIndices = [],
                this.lineDistances = [],
                this.boundingBox = null,
                this.boundingSphere = null,
                this.elementsNeedUpdate = !1,
                this.verticesNeedUpdate = !1,
                this.uvsNeedUpdate = !1,
                this.normalsNeedUpdate = !1,
                this.colorsNeedUpdate = !1,
                this.lineDistancesNeedUpdate = !1,
                this.groupsNeedUpdate = !1
            }
            Bc.prototype = Object.assign(Object.create(Fn.prototype), {
                constructor: Bc,
                isGeometry: !0,
                applyMatrix4: function (e) {
                    const t = (new Bn).getNormalMatrix(e);
                    for (let t = 0, n = this.vertices.length; t < n; t++)
                        this.vertices[t].applyMatrix4(e);
                    for (let e = 0, n = this.faces.length; e < n; e++) {
                        const n = this.faces[e];
                        n.normal.applyMatrix3(t).normalize();
                        for (let e = 0, i = n.vertexNormals.length; e < i; e++)
                            n.vertexNormals[e].applyMatrix3(t).normalize()
                    }
                    return null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere && this.computeBoundingSphere(),
                    this.verticesNeedUpdate = !0,
                    this.normalsNeedUpdate = !0,
                    this
                },
                rotateX: function (e) {
                    return Oc.makeRotationX(e),
                    this.applyMatrix4(Oc),
                    this
                },
                rotateY: function (e) {
                    return Oc.makeRotationY(e),
                    this.applyMatrix4(Oc),
                    this
                },
                rotateZ: function (e) {
                    return Oc.makeRotationZ(e),
                    this.applyMatrix4(Oc),
                    this
                },
                translate: function (e, t, n) {
                    return Oc.makeTranslation(e, t, n),
                    this.applyMatrix4(Oc),
                    this
                },
                scale: function (e, t, n) {
                    return Oc.makeScale(e, t, n),
                    this.applyMatrix4(Oc),
                    this
                },
                lookAt: function (e) {
                    return Dc.lookAt(e),
                    Dc.updateMatrix(),
                    this.applyMatrix4(Dc.matrix),
                    this
                },
                fromBufferGeometry: function (e) {
                    const t = this,
                    n = null !== e.index ? e.index : void 0,
                    i = e.attributes;
                    if (void 0 === i.position)
                        return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."), this;
                    const a = i.position,
                    r = i.normal,
                    o = i.color,
                    s = i.uv,
                    c = i.uv2;
                    void 0 !== c && (this.faceVertexUvs[1] = []);
                    for (let e = 0; e < a.count; e++)
                        t.vertices.push((new Qn).fromBufferAttribute(a, e)), void 0 !== o && t.colors.push((new ga).fromBufferAttribute(o, e));
                    function l(e, n, i, a) {
                        const l = void 0 === o ? [] : [t.colors[e].clone(), t.colors[n].clone(), t.colors[i].clone()],
                        h = void 0 === r ? [] : [(new Qn).fromBufferAttribute(r, e), (new Qn).fromBufferAttribute(r, n), (new Qn).fromBufferAttribute(r, i)],
                        u = new xa(e, n, i, h, l, a);
                        t.faces.push(u),
                        void 0 !== s && t.faceVertexUvs[0].push([(new Un).fromBufferAttribute(s, e), (new Un).fromBufferAttribute(s, n), (new Un).fromBufferAttribute(s, i)]),
                        void 0 !== c && t.faceVertexUvs[1].push([(new Un).fromBufferAttribute(c, e), (new Un).fromBufferAttribute(c, n), (new Un).fromBufferAttribute(c, i)])
                    }
                    const h = e.groups;
                    if (h.length > 0)
                        for (let e = 0; e < h.length; e++) {
                            const t = h[e],
                            i = t.start;
                            for (let e = i, a = i + t.count; e < a; e += 3)
                                void 0 !== n ? l(n.getX(e), n.getX(e + 1), n.getX(e + 2), t.materialIndex) : l(e, e + 1, e + 2, t.materialIndex)
                        }
                    else if (void 0 !== n)
                        for (let e = 0; e < n.count; e += 3)
                            l(n.getX(e), n.getX(e + 1), n.getX(e + 2));
                    else
                        for (let e = 0; e < a.count; e += 3)
                            l(e, e + 1, e + 2);
                    return this.computeFaceNormals(),
                    null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
                    null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
                    this
                },
                center: function () {
                    return this.computeBoundingBox(),
                    this.boundingBox.getCenter(Uc).negate(),
                    this.translate(Uc.x, Uc.y, Uc.z),
                    this
                },
                normalize: function () {
                    this.computeBoundingSphere();
                    const e = this.boundingSphere.center,
                    t = this.boundingSphere.radius,
                    n = 0 === t ? 1 : 1 / t,
                    i = new _i;
                    return i.set(n, 0, 0, -n * e.x, 0, n, 0, -n * e.y, 0, 0, n, -n * e.z, 0, 0, 0, 1),
                    this.applyMatrix4(i),
                    this
                },
                computeFaceNormals: function () {
                    const e = new Qn,
                    t = new Qn;
                    for (let n = 0, i = this.faces.length; n < i; n++) {
                        const i = this.faces[n],
                        a = this.vertices[i.a],
                        r = this.vertices[i.b],
                        o = this.vertices[i.c];
                        e.subVectors(o, r),
                        t.subVectors(a, r),
                        e.cross(t),
                        e.normalize(),
                        i.normal.copy(e)
                    }
                },
                computeVertexNormals: function (e) {
                    void 0 === e && (e = !0);
                    const t = new Array(this.vertices.length);
                    for (let e = 0, n = this.vertices.length; e < n; e++)
                        t[e] = new Qn;
                    if (e) {
                        const e = new Qn,
                        n = new Qn;
                        for (let i = 0, a = this.faces.length; i < a; i++) {
                            const a = this.faces[i],
                            r = this.vertices[a.a],
                            o = this.vertices[a.b],
                            s = this.vertices[a.c];
                            e.subVectors(s, o),
                            n.subVectors(r, o),
                            e.cross(n),
                            t[a.a].add(e),
                            t[a.b].add(e),
                            t[a.c].add(e)
                        }
                    } else {
                        this.computeFaceNormals();
                        for (let e = 0, n = this.faces.length; e < n; e++) {
                            const n = this.faces[e];
                            t[n.a].add(n.normal),
                            t[n.b].add(n.normal),
                            t[n.c].add(n.normal)
                        }
                    }
                    for (let e = 0, n = this.vertices.length; e < n; e++)
                        t[e].normalize();
                    for (let e = 0, n = this.faces.length; e < n; e++) {
                        const n = this.faces[e],
                        i = n.vertexNormals;
                        3 === i.length ? (i[0].copy(t[n.a]), i[1].copy(t[n.b]), i[2].copy(t[n.c])) : (i[0] = t[n.a].clone(), i[1] = t[n.b].clone(), i[2] = t[n.c].clone())
                    }
                    this.faces.length > 0 && (this.normalsNeedUpdate = !0)
                },
                computeFlatVertexNormals: function () {
                    this.computeFaceNormals();
                    for (let e = 0, t = this.faces.length; e < t; e++) {
                        const t = this.faces[e],
                        n = t.vertexNormals;
                        3 === n.length ? (n[0].copy(t.normal), n[1].copy(t.normal), n[2].copy(t.normal)) : (n[0] = t.normal.clone(), n[1] = t.normal.clone(), n[2] = t.normal.clone())
                    }
                    this.faces.length > 0 && (this.normalsNeedUpdate = !0)
                },
                computeMorphNormals: function () {
                    for (let e = 0, t = this.faces.length; e < t; e++) {
                        const t = this.faces[e];
                        t.__originalFaceNormal ? t.__originalFaceNormal.copy(t.normal) : t.__originalFaceNormal = t.normal.clone(),
                        t.__originalVertexNormals || (t.__originalVertexNormals = []);
                        for (let e = 0, n = t.vertexNormals.length; e < n; e++)
                            t.__originalVertexNormals[e] ? t.__originalVertexNormals[e].copy(t.vertexNormals[e]) : t.__originalVertexNormals[e] = t.vertexNormals[e].clone()
                    }
                    const e = new Bc;
                    e.faces = this.faces;
                    for (let t = 0, n = this.morphTargets.length; t < n; t++) {
                        if (!this.morphNormals[t]) {
                            this.morphNormals[t] = {},
                            this.morphNormals[t].faceNormals = [],
                            this.morphNormals[t].vertexNormals = [];
                            const e = this.morphNormals[t].faceNormals,
                            n = this.morphNormals[t].vertexNormals;
                            for (let t = 0, i = this.faces.length; t < i; t++) {
                                const t = new Qn,
                                i = {
                                    a: new Qn,
                                    b: new Qn,
                                    c: new Qn
                                };
                                e.push(t),
                                n.push(i)
                            }
                        }
                        const n = this.morphNormals[t];
                        e.vertices = this.morphTargets[t].vertices,
                        e.computeFaceNormals(),
                        e.computeVertexNormals();
                        for (let e = 0, t = this.faces.length; e < t; e++) {
                            const t = this.faces[e],
                            i = n.faceNormals[e],
                            a = n.vertexNormals[e];
                            i.copy(t.normal),
                            a.a.copy(t.vertexNormals[0]),
                            a.b.copy(t.vertexNormals[1]),
                            a.c.copy(t.vertexNormals[2])
                        }
                    }
                    for (let e = 0, t = this.faces.length; e < t; e++) {
                        const t = this.faces[e];
                        t.normal = t.__originalFaceNormal,
                        t.vertexNormals = t.__originalVertexNormals
                    }
                },
                computeBoundingBox: function () {
                    null === this.boundingBox && (this.boundingBox = new $n),
                    this.boundingBox.setFromPoints(this.vertices)
                },
                computeBoundingSphere: function () {
                    null === this.boundingSphere && (this.boundingSphere = new mi),
                    this.boundingSphere.setFromPoints(this.vertices)
                },
                merge: function (e, t, n) {
                    if (!e || !e.isGeometry)
                        return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", e);
                    let i;
                    const a = this.vertices.length,
                    r = this.vertices,
                    o = e.vertices,
                    s = this.faces,
                    c = e.faces,
                    l = this.colors,
                    h = e.colors;
                    void 0 === n && (n = 0),
                    void 0 !== t && (i = (new Bn).getNormalMatrix(t));
                    for (let e = 0, n = o.length; e < n; e++) {
                        const n = o[e].clone();
                        void 0 !== t && n.applyMatrix4(t),
                        r.push(n)
                    }
                    for (let e = 0, t = h.length; e < t; e++)
                        l.push(h[e].clone());
                    for (let e = 0, t = c.length; e < t; e++) {
                        const t = c[e];
                        let r,
                        o;
                        const l = t.vertexNormals,
                        h = t.vertexColors,
                        u = new xa(t.a + a, t.b + a, t.c + a);
                        u.normal.copy(t.normal),
                        void 0 !== i && u.normal.applyMatrix3(i).normalize();
                        for (let e = 0, t = l.length; e < t; e++)
                            r = l[e].clone(), void 0 !== i && r.applyMatrix3(i).normalize(), u.vertexNormals.push(r);
                        u.color.copy(t.color);
                        for (let e = 0, t = h.length; e < t; e++)
                            o = h[e], u.vertexColors.push(o.clone());
                        u.materialIndex = t.materialIndex + n,
                        s.push(u)
                    }
                    for (let t = 0, n = e.faceVertexUvs.length; t < n; t++) {
                        const n = e.faceVertexUvs[t];
                        void 0 === this.faceVertexUvs[t] && (this.faceVertexUvs[t] = []);
                        for (let e = 0, i = n.length; e < i; e++) {
                            const i = n[e],
                            a = [];
                            for (let e = 0, t = i.length; e < t; e++)
                                a.push(i[e].clone());
                            this.faceVertexUvs[t].push(a)
                        }
                    }
                },
                mergeMesh: function (e) {
                    e && e.isMesh ? (e.matrixAutoUpdate && e.updateMatrix(), this.merge(e.geometry, e.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", e)
                },
                mergeVertices: function () {
                    const e = {},
                    t = [],
                    n = [],
                    i = Math.pow(10, 4);
                    for (let a = 0, r = this.vertices.length; a < r; a++) {
                        const r = this.vertices[a],
                        o = Math.round(r.x * i) + "_" + Math.round(r.y * i) + "_" + Math.round(r.z * i);
                        void 0 === e[o] ? (e[o] = a, t.push(this.vertices[a]), n[a] = t.length - 1) : n[a] = n[e[o]]
                    }
                    const a = [];
                    for (let e = 0, t = this.faces.length; e < t; e++) {
                        const t = this.faces[e];
                        t.a = n[t.a],
                        t.b = n[t.b],
                        t.c = n[t.c];
                        const i = [t.a, t.b, t.c];
                        for (let t = 0; t < 3; t++)
                            if (i[t] === i[(t + 1) % 3]) {
                                a.push(e);
                                break
                            }
                    }
                    for (let e = a.length - 1; e >= 0; e--) {
                        const t = a[e];
                        this.faces.splice(t, 1);
                        for (let e = 0, n = this.faceVertexUvs.length; e < n; e++)
                            this.faceVertexUvs[e].splice(t, 1)
                    }
                    const r = this.vertices.length - t.length;
                    return this.vertices = t,
                    r
                },
                setFromPoints: function (e) {
                    this.vertices = [];
                    for (let t = 0, n = e.length; t < n; t++) {
                        const n = e[t];
                        this.vertices.push(new Qn(n.x, n.y, n.z || 0))
                    }
                    return this
                },
                sortFacesByMaterialIndex: function () {
                    const e = this.faces,
                    t = e.length;
                    for (let n = 0; n < t; n++)
                        e[n]._id = n;
                    e.sort((function (e, t) {
                            return e.materialIndex - t.materialIndex
                        }));
                    const n = this.faceVertexUvs[0],
                    i = this.faceVertexUvs[1];
                    let a,
                    r;
                    n && n.length === t && (a = []),
                    i && i.length === t && (r = []);
                    for (let o = 0; o < t; o++) {
                        const t = e[o]._id;
                        a && a.push(n[t]),
                        r && r.push(i[t])
                    }
                    a && (this.faceVertexUvs[0] = a),
                    r && (this.faceVertexUvs[1] = r)
                },
                toJSON: function () {
                    const e = {
                        metadata: {
                            version: 4.5,
                            type: "Geometry",
                            generator: "Geometry.toJSON"
                        }
                    };
                    if (e.uuid = this.uuid, e.type = this.type, "" !== this.name && (e.name = this.name), void 0 !== this.parameters) {
                        const t = this.parameters;
                        for (const n in t)
                            void 0 !== t[n] && (e[n] = t[n]);
                        return e
                    }
                    const t = [];
                    for (let e = 0; e < this.vertices.length; e++) {
                        const n = this.vertices[e];
                        t.push(n.x, n.y, n.z)
                    }
                    const n = [],
                    i = [],
                    a = {},
                    r = [],
                    o = {},
                    s = [],
                    c = {};
                    for (let e = 0; e < this.faces.length; e++) {
                        const t = this.faces[e],
                        i = !0,
                        a = !1,
                        r = void 0 !== this.faceVertexUvs[0][e],
                        o = t.normal.length() > 0,
                        s = t.vertexNormals.length > 0,
                        c = 1 !== t.color.r || 1 !== t.color.g || 1 !== t.color.b,
                        d = t.vertexColors.length > 0;
                        let p = 0;
                        if (p = l(p, 0, 0), p = l(p, 1, i), p = l(p, 2, a), p = l(p, 3, r), p = l(p, 4, o), p = l(p, 5, s), p = l(p, 6, c), p = l(p, 7, d), n.push(p), n.push(t.a, t.b, t.c), n.push(t.materialIndex), r) {
                            const t = this.faceVertexUvs[0][e];
                            n.push(f(t[0]), f(t[1]), f(t[2]))
                        }
                        if (o && n.push(h(t.normal)), s) {
                            const e = t.vertexNormals;
                            n.push(h(e[0]), h(e[1]), h(e[2]))
                        }
                        if (c && n.push(u(t.color)), d) {
                            const e = t.vertexColors;
                            n.push(u(e[0]), u(e[1]), u(e[2]))
                        }
                    }
                    function l(e, t, n) {
                        return n ? e | 1 << t : e & ~(1 << t)
                    }
                    function h(e) {
                        const t = e.x.toString() + e.y.toString() + e.z.toString();
                        return void 0 !== a[t] || (a[t] = i.length / 3, i.push(e.x, e.y, e.z)),
                        a[t]
                    }
                    function u(e) {
                        const t = e.r.toString() + e.g.toString() + e.b.toString();
                        return void 0 !== o[t] || (o[t] = r.length, r.push(e.getHex())),
                        o[t]
                    }
                    function f(e) {
                        const t = e.x.toString() + e.y.toString();
                        return void 0 !== c[t] || (c[t] = s.length / 2, s.push(e.x, e.y)),
                        c[t]
                    }
                    return e.data = {},
                    e.data.vertices = t,
                    e.data.normals = i,
                    r.length > 0 && (e.data.colors = r),
                    s.length > 0 && (e.data.uvs = [s]),
                    e.data.faces = n,
                    e
                },
                clone: function () {
                    return (new Bc).copy(this)
                },
                copy: function (e) {
                    this.vertices = [],
                    this.colors = [],
                    this.faces = [],
                    this.faceVertexUvs = [[]],
                    this.morphTargets = [],
                    this.morphNormals = [],
                    this.skinWeights = [],
                    this.skinIndices = [],
                    this.lineDistances = [],
                    this.boundingBox = null,
                    this.boundingSphere = null,
                    this.name = e.name;
                    const t = e.vertices;
                    for (let e = 0, n = t.length; e < n; e++)
                        this.vertices.push(t[e].clone());
                    const n = e.colors;
                    for (let e = 0, t = n.length; e < t; e++)
                        this.colors.push(n[e].clone());
                    const i = e.faces;
                    for (let e = 0, t = i.length; e < t; e++)
                        this.faces.push(i[e].clone());
                    for (let t = 0, n = e.faceVertexUvs.length; t < n; t++) {
                        const n = e.faceVertexUvs[t];
                        void 0 === this.faceVertexUvs[t] && (this.faceVertexUvs[t] = []);
                        for (let e = 0, i = n.length; e < i; e++) {
                            const i = n[e],
                            a = [];
                            for (let e = 0, t = i.length; e < t; e++) {
                                const t = i[e];
                                a.push(t.clone())
                            }
                            this.faceVertexUvs[t].push(a)
                        }
                    }
                    const a = e.morphTargets;
                    for (let e = 0, t = a.length; e < t; e++) {
                        const t = {};
                        if (t.name = a[e].name, void 0 !== a[e].vertices) {
                            t.vertices = [];
                            for (let n = 0, i = a[e].vertices.length; n < i; n++)
                                t.vertices.push(a[e].vertices[n].clone())
                        }
                        if (void 0 !== a[e].normals) {
                            t.normals = [];
                            for (let n = 0, i = a[e].normals.length; n < i; n++)
                                t.normals.push(a[e].normals[n].clone())
                        }
                        this.morphTargets.push(t)
                    }
                    const r = e.morphNormals;
                    for (let e = 0, t = r.length; e < t; e++) {
                        const t = {};
                        if (void 0 !== r[e].vertexNormals) {
                            t.vertexNormals = [];
                            for (let n = 0, i = r[e].vertexNormals.length; n < i; n++) {
                                const i = r[e].vertexNormals[n],
                                a = {};
                                a.a = i.a.clone(),
                                a.b = i.b.clone(),
                                a.c = i.c.clone(),
                                t.vertexNormals.push(a)
                            }
                        }
                        if (void 0 !== r[e].faceNormals) {
                            t.faceNormals = [];
                            for (let n = 0, i = r[e].faceNormals.length; n < i; n++)
                                t.faceNormals.push(r[e].faceNormals[n].clone())
                        }
                        this.morphNormals.push(t)
                    }
                    const o = e.skinWeights;
                    for (let e = 0, t = o.length; e < t; e++)
                        this.skinWeights.push(o[e].clone());
                    const s = e.skinIndices;
                    for (let e = 0, t = s.length; e < t; e++)
                        this.skinIndices.push(s[e].clone());
                    const c = e.lineDistances;
                    for (let e = 0, t = c.length; e < t; e++)
                        this.lineDistances.push(c[e]);
                    const l = e.boundingBox;
                    null !== l && (this.boundingBox = l.clone());
                    const h = e.boundingSphere;
                    return null !== h && (this.boundingSphere = h.clone()),
                    this.elementsNeedUpdate = e.elementsNeedUpdate,
                    this.verticesNeedUpdate = e.verticesNeedUpdate,
                    this.uvsNeedUpdate = e.uvsNeedUpdate,
                    this.normalsNeedUpdate = e.normalsNeedUpdate,
                    this.colorsNeedUpdate = e.colorsNeedUpdate,
                    this.lineDistancesNeedUpdate = e.lineDistancesNeedUpdate,
                    this.groupsNeedUpdate = e.groupsNeedUpdate,
                    this
                },
                dispose: function () {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            });
            class kc extends Bc {
                constructor(e, t, n, i, a, r) {
                    super(),
                    this.type = "BoxGeometry",
                    this.parameters = {
                        width: e,
                        height: t,
                        depth: n,
                        widthSegments: i,
                        heightSegments: a,
                        depthSegments: r
                    },
                    this.fromBufferGeometry(new hr(e, t, n, i, a, r)),
                    this.mergeVertices()
                }
            }
            class Gc extends Ga {
                constructor(e, t, n, i) {
                    super(),
                    this.type = "CircleBufferGeometry",
                    this.parameters = {
                        radius: e,
                        segments: t,
                        thetaStart: n,
                        thetaLength: i
                    },
                    e = e || 1,
                    t = void 0 !== t ? Math.max(3, t) : 8,
                    n = void 0 !== n ? n : 0,
                    i = void 0 !== i ? i : 2 * Math.PI;
                    const a = [],
                    r = [],
                    o = [],
                    s = [],
                    c = new Qn,
                    l = new Un;
                    r.push(0, 0, 0),
                    o.push(0, 0, 1),
                    s.push(.5, .5);
                    for (let a = 0, h = 3; a <= t; a++, h += 3) {
                        const u = n + a / t * i;
                        c.x = e * Math.cos(u),
                        c.y = e * Math.sin(u),
                        r.push(c.x, c.y, c.z),
                        o.push(0, 0, 1),
                        l.x = (r[h] / e + 1) / 2,
                        l.y = (r[h + 1] / e + 1) / 2,
                        s.push(l.x, l.y)
                    }
                    for (let e = 1; e <= t; e++)
                        a.push(e, e + 1, 0);
                    this.setIndex(a),
                    this.setAttribute("position", new Na(r, 3)),
                    this.setAttribute("normal", new Na(o, 3)),
                    this.setAttribute("uv", new Na(s, 2))
                }
            }
            class jc extends Bc {
                constructor(e, t, n, i) {
                    super(),
                    this.type = "CircleGeometry",
                    this.parameters = {
                        radius: e,
                        segments: t,
                        thetaStart: n,
                        thetaLength: i
                    },
                    this.fromBufferGeometry(new Gc(e, t, n, i)),
                    this.mergeVertices()
                }
            }
            class Wc extends Ga {
                constructor(e, t, n, i, a, r, o, s) {
                    super(),
                    this.type = "CylinderBufferGeometry",
                    this.parameters = {
                        radiusTop: e,
                        radiusBottom: t,
                        height: n,
                        radialSegments: i,
                        heightSegments: a,
                        openEnded: r,
                        thetaStart: o,
                        thetaLength: s
                    };
                    const c = this;
                    e = void 0 !== e ? e : 1,
                    t = void 0 !== t ? t : 1,
                    n = n || 1,
                    i = Math.floor(i) || 8,
                    a = Math.floor(a) || 1,
                    r = void 0 !== r && r,
                    o = void 0 !== o ? o : 0,
                    s = void 0 !== s ? s : 2 * Math.PI;
                    const l = [],
                    h = [],
                    u = [],
                    f = [];
                    let d = 0;
                    const p = [],
                    m = n / 2;
                    let v = 0;
                    function g(n) {
                        const a = d,
                        r = new Un,
                        p = new Qn;
                        let g = 0;
                        const x = !0 === n ? e : t,
                        y = !0 === n ? 1 : -1;
                        for (let e = 1; e <= i; e++)
                            h.push(0, m * y, 0), u.push(0, y, 0), f.push(.5, .5), d++;
                        const b = d;
                        for (let e = 0; e <= i; e++) {
                            const t = e / i * s + o,
                            n = Math.cos(t),
                            a = Math.sin(t);
                            p.x = x * a,
                            p.y = m * y,
                            p.z = x * n,
                            h.push(p.x, p.y, p.z),
                            u.push(0, y, 0),
                            r.x = .5 * n + .5,
                            r.y = .5 * a * y + .5,
                            f.push(r.x, r.y),
                            d++
                        }
                        for (let e = 0; e < i; e++) {
                            const t = a + e,
                            i = b + e;
                            !0 === n ? l.push(i, i + 1, t) : l.push(i + 1, i, t),
                            g += 3
                        }
                        c.addGroup(v, g, !0 === n ? 1 : 2),
                        v += g
                    }
                    !function () {
                        const r = new Qn,
                        g = new Qn;
                        let x = 0;
                        const y = (t - e) / n;
                        for (let c = 0; c <= a; c++) {
                            const l = [],
                            v = c / a,
                            x = v * (t - e) + e;
                            for (let e = 0; e <= i; e++) {
                                const t = e / i,
                                a = t * s + o,
                                c = Math.sin(a),
                                p = Math.cos(a);
                                g.x = x * c,
                                g.y = -v * n + m,
                                g.z = x * p,
                                h.push(g.x, g.y, g.z),
                                r.set(c, y, p).normalize(),
                                u.push(r.x, r.y, r.z),
                                f.push(t, 1 - v),
                                l.push(d++)
                            }
                            p.push(l)
                        }
                        for (let e = 0; e < i; e++)
                            for (let t = 0; t < a; t++) {
                                const n = p[t][e],
                                i = p[t + 1][e],
                                a = p[t + 1][e + 1],
                                r = p[t][e + 1];
                                l.push(n, i, r),
                                l.push(i, a, r),
                                x += 6
                            }
                        c.addGroup(v, x, 0),
                        v += x
                    }
                    (),
                    !1 === r && (e > 0 && g(!0), t > 0 && g(!1)),
                    this.setIndex(l),
                    this.setAttribute("position", new Na(h, 3)),
                    this.setAttribute("normal", new Na(u, 3)),
                    this.setAttribute("uv", new Na(f, 2))
                }
            }
            class Xc extends Bc {
                constructor(e, t, n, i, a, r, o, s) {
                    super(),
                    this.type = "CylinderGeometry",
                    this.parameters = {
                        radiusTop: e,
                        radiusBottom: t,
                        height: n,
                        radialSegments: i,
                        heightSegments: a,
                        openEnded: r,
                        thetaStart: o,
                        thetaLength: s
                    },
                    this.fromBufferGeometry(new Wc(e, t, n, i, a, r, o, s)),
                    this.mergeVertices()
                }
            }
            class qc extends Xc {
                constructor(e, t, n, i, a, r, o) {
                    super(0, e, t, n, i, a, r, o),
                    this.type = "ConeGeometry",
                    this.parameters = {
                        radius: e,
                        height: t,
                        radialSegments: n,
                        heightSegments: i,
                        openEnded: a,
                        thetaStart: r,
                        thetaLength: o
                    }
                }
            }
            class Yc extends Wc {
                constructor(e, t, n, i, a, r, o) {
                    super(0, e, t, n, i, a, r, o),
                    this.type = "ConeBufferGeometry",
                    this.parameters = {
                        radius: e,
                        height: t,
                        radialSegments: n,
                        heightSegments: i,
                        openEnded: a,
                        thetaStart: r,
                        thetaLength: o
                    }
                }
            }
            class Zc extends Ga {
                constructor(e, t, n, i) {
                    super(),
                    this.type = "PolyhedronBufferGeometry",
                    this.parameters = {
                        vertices: e,
                        indices: t,
                        radius: n,
                        detail: i
                    },
                    n = n || 1;
                    const a = [],
                    r = [];
                    function o(e, t, n, i) {
                        const a = i + 1,
                        r = [];
                        for (let i = 0; i <= a; i++) {
                            r[i] = [];
                            const o = e.clone().lerp(n, i / a),
                            s = t.clone().lerp(n, i / a),
                            c = a - i;
                            for (let e = 0; e <= c; e++)
                                r[i][e] = 0 === e && i === a ? o : o.clone().lerp(s, e / c)
                        }
                        for (let e = 0; e < a; e++)
                            for (let t = 0; t < 2 * (a - e) - 1; t++) {
                                const n = Math.floor(t / 2);
                                t % 2 == 0 ? (s(r[e][n + 1]), s(r[e + 1][n]), s(r[e][n])) : (s(r[e][n + 1]), s(r[e + 1][n + 1]), s(r[e + 1][n]))
                            }
                    }
                    function s(e) {
                        a.push(e.x, e.y, e.z)
                    }
                    function c(t, n) {
                        const i = 3 * t;
                        n.x = e[i + 0],
                        n.y = e[i + 1],
                        n.z = e[i + 2]
                    }
                    function l(e, t, n, i) {
                        i < 0 && 1 === e.x && (r[t] = e.x - 1),
                        0 === n.x && 0 === n.z && (r[t] = i / 2 / Math.PI + .5)
                    }
                    function h(e) {
                        return Math.atan2(e.z, -e.x)
                    }
                    !function (e) {
                        const n = new Qn,
                        i = new Qn,
                        a = new Qn;
                        for (let r = 0; r < t.length; r += 3)
                            c(t[r + 0], n), c(t[r + 1], i), c(t[r + 2], a), o(n, i, a, e)
                    }
                    (i = i || 0),
                    function (e) {
                        const t = new Qn;
                        for (let n = 0; n < a.length; n += 3)
                            t.x = a[n + 0], t.y = a[n + 1], t.z = a[n + 2], t.normalize().multiplyScalar(e), a[n + 0] = t.x, a[n + 1] = t.y, a[n + 2] = t.z
                    }
                    (n),
                    function () {
                        const e = new Qn;
                        for (let n = 0; n < a.length; n += 3) {
                            e.x = a[n + 0],
                            e.y = a[n + 1],
                            e.z = a[n + 2];
                            const i = h(e) / 2 / Math.PI + .5,
                            o = (t = e, Math.atan2(-t.y, Math.sqrt(t.x * t.x + t.z * t.z)) / Math.PI + .5);
                            r.push(i, 1 - o)
                        }
                        var t;
                        (function () {
                            const e = new Qn,
                            t = new Qn,
                            n = new Qn,
                            i = new Qn,
                            o = new Un,
                            s = new Un,
                            c = new Un;
                            for (let u = 0, f = 0; u < a.length; u += 9, f += 6) {
                                e.set(a[u + 0], a[u + 1], a[u + 2]),
                                t.set(a[u + 3], a[u + 4], a[u + 5]),
                                n.set(a[u + 6], a[u + 7], a[u + 8]),
                                o.set(r[f + 0], r[f + 1]),
                                s.set(r[f + 2], r[f + 3]),
                                c.set(r[f + 4], r[f + 5]),
                                i.copy(e).add(t).add(n).divideScalar(3);
                                const d = h(i);
                                l(o, f + 0, e, d),
                                l(s, f + 2, t, d),
                                l(c, f + 4, n, d)
                            }
                        })(),
                        function () {
                            for (let e = 0; e < r.length; e += 6) {
                                const t = r[e + 0],
                                n = r[e + 2],
                                i = r[e + 4],
                                a = Math.max(t, n, i),
                                o = Math.min(t, n, i);
                                a > .9 && o < .1 && (t < .2 && (r[e + 0] += 1), n < .2 && (r[e + 2] += 1), i < .2 && (r[e + 4] += 1))
                            }
                        }
                        ()
                    }
                    (),
                    this.setAttribute("position", new Na(a, 3)),
                    this.setAttribute("normal", new Na(a.slice(), 3)),
                    this.setAttribute("uv", new Na(r, 2)),
                    0 === i ? this.computeVertexNormals() : this.normalizeNormals()
                }
            }
            class Qc extends Zc {
                constructor(e, t) {
                    const n = (1 + Math.sqrt(5)) / 2,
                    i = 1 / n;
                    super([-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, 0, -n, 0, -i, n, 0, -i, -n, 0, i, n, 0, i], [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], e, t),
                    this.type = "DodecahedronBufferGeometry",
                    this.parameters = {
                        radius: e,
                        detail: t
                    }
                }
            }
            class Jc extends Bc {
                constructor(e, t) {
                    super(),
                    this.type = "DodecahedronGeometry",
                    this.parameters = {
                        radius: e,
                        detail: t
                    },
                    this.fromBufferGeometry(new Qc(e, t)),
                    this.mergeVertices()
                }
            }
            const Kc = new Qn,
            $c = new Qn,
            el = new Qn,
            tl = new ha;
            class nl extends Ga {
                constructor(e, t) {
                    super(),
                    this.type = "EdgesGeometry",
                    this.parameters = {
                        thresholdAngle: t
                    },
                    t = void 0 !== t ? t : 1,
                    e.isGeometry && (e = (new Ga).fromGeometry(e));
                    const n = Math.pow(10, 4),
                    i = Math.cos(Dn.DEG2RAD * t),
                    a = e.getIndex(),
                    r = e.getAttribute("position"),
                    o = a ? a.count : r.count,
                    s = [0, 0, 0],
                    c = ["a", "b", "c"],
                    l = new Array(3),
                    h = {},
                    u = [];
                    for (let e = 0; e < o; e += 3) {
                        a ? (s[0] = a.getX(e), s[1] = a.getX(e + 1), s[2] = a.getX(e + 2)) : (s[0] = e, s[1] = e + 1, s[2] = e + 2);
                        const {
                            a: t,
                            b: o,
                            c: f
                        } = tl;
                        if (t.fromBufferAttribute(r, s[0]), o.fromBufferAttribute(r, s[1]), f.fromBufferAttribute(r, s[2]), tl.getNormal(el), l[0] = `${Math.round(t.x*n)},${Math.round(t.y*n)},${Math.round(t.z*n)}`, l[1] = `${Math.round(o.x*n)},${Math.round(o.y*n)},${Math.round(o.z*n)}`, l[2] = `${Math.round(f.x*n)},${Math.round(f.y*n)},${Math.round(f.z*n)}`, l[0] !== l[1] && l[1] !== l[2] && l[2] !== l[0])
                            for (let e = 0; e < 3; e++) {
                                const t = (e + 1) % 3,
                                n = l[e],
                                a = l[t],
                                r = tl[c[e]],
                                o = tl[c[t]],
                                f = `${n}_${a}`,
                                d = `${a}_${n}`;
                                d in h && h[d] ? (el.dot(h[d].normal) <= i && (u.push(r.x, r.y, r.z), u.push(o.x, o.y, o.z)), h[d] = null) : f in h || (h[f] = {
                                        index0: s[e],
                                        index1: s[t],
                                        normal: el.clone()
                                    })
                            }
                    }
                    for (const e in h)
                        if (h[e]) {
                            const {
                                index0: t,
                                index1: n
                            } = h[e];
                            Kc.fromBufferAttribute(r, t),
                            $c.fromBufferAttribute(r, n),
                            u.push(Kc.x, Kc.y, Kc.z),
                            u.push($c.x, $c.y, $c.z)
                        }
                    this.setAttribute("position", new Na(u, 3))
                }
            }
            function il(e, t, n, i, a) {
                let r,
                o;
                if (a === function (e, t, n, i) {
                    let a = 0;
                    for (let r = t, o = n - i; r < n; r += i)
                        a += (e[o] - e[r])
                             * (e[r + 1] + e[o + 1]), o = r;
                        return a
                    }
                        (e, t, n, i) > 0)for (r = t; r < n; r += i)
                        o = _l(r, e[r], e[r + 1], o);
                else
                    for (r = n - i; r >= t; r -= i)
                        o = _l(r, e[r], e[r + 1], o);
                return o && xl(o, o.next) && (Sl(o), o = o.next),
                o
            }
            function al(e, t) {
                if (!e)
                    return e;
                t || (t = e);
                let n,
                i = e;
                do {
                    if (n = !1, i.steiner || !xl(i, i.next) && 0 !== gl(i.prev, i, i.next))
                        i = i.next;
                    else {
                        if (Sl(i), i = t = i.prev, i === i.next)
                            break;
                        n = !0
                    }
                } while (n || i !== t);
                return t
            }
            function rl(e, t, n, i, a, r, o) {
                if (!e)
                    return;
                !o && r && function (e, t, n, i) {
                    let a = e;
                    do {
                        null === a.z && (a.z = dl(a.x, a.y, t, n, i)),
                        a.prevZ = a.prev,
                        a.nextZ = a.next,
                        a = a.next
                    } while (a !== e);
                    a.prevZ.nextZ = null,
                    a.prevZ = null,
                    function (e) {
                        let t,
                        n,
                        i,
                        a,
                        r,
                        o,
                        s,
                        c,
                        l = 1;
                        do {
                            for (n = e, e = null, r = null, o = 0; n; ) {
                                for (o++, i = n, s = 0, t = 0; t < l && (s++, i = i.nextZ, i); t++);
                                for (c = l; s > 0 || c > 0 && i; )
                                    0 !== s && (0 === c || !i || n.z <= i.z) ? (a = n, n = n.nextZ, s--) : (a = i, i = i.nextZ, c--), r ? r.nextZ = a : e = a, a.prevZ = r, r = a;
                                n = i
                            }
                            r.nextZ = null,
                            l *= 2
                        } while (o > 1)
                    }
                    (a)
                }
                (e, i, a, r);
                let s,
                c,
                l = e;
                for (; e.prev !== e.next; )
                    if (s = e.prev, c = e.next, r ? sl(e, i, a, r) : ol(e))
                        t.push(s.i / n), t.push(e.i / n), t.push(c.i / n), Sl(e), e = c.next, l = c.next;
                    else if ((e = c) === l) {
                        o ? 1 === o ? rl(e = cl(al(e), t, n), t, n, i, a, r, 2) : 2 === o && ll(e, t, n, i, a, r) : rl(al(e), t, n, i, a, r, 1);
                        break
                    }
            }
            function ol(e) {
                const t = e.prev,
                n = e,
                i = e.next;
                if (gl(t, n, i) >= 0)
                    return !1;
                let a = e.next.next;
                for (; a !== e.prev; ) {
                    if (ml(t.x, t.y, n.x, n.y, i.x, i.y, a.x, a.y) && gl(a.prev, a, a.next) >= 0)
                        return !1;
                    a = a.next
                }
                return !0
            }
            function sl(e, t, n, i) {
                const a = e.prev,
                r = e,
                o = e.next;
                if (gl(a, r, o) >= 0)
                    return !1;
                const s = a.x < r.x ? a.x < o.x ? a.x : o.x : r.x < o.x ? r.x : o.x,
                c = a.y < r.y ? a.y < o.y ? a.y : o.y : r.y < o.y ? r.y : o.y,
                l = a.x > r.x ? a.x > o.x ? a.x : o.x : r.x > o.x ? r.x : o.x,
                h = a.y > r.y ? a.y > o.y ? a.y : o.y : r.y > o.y ? r.y : o.y,
                u = dl(s, c, t, n, i),
                f = dl(l, h, t, n, i);
                let d = e.prevZ,
                p = e.nextZ;
                for (; d && d.z >= u && p && p.z <= f; ) {
                    if (d !== e.prev && d !== e.next && ml(a.x, a.y, r.x, r.y, o.x, o.y, d.x, d.y) && gl(d.prev, d, d.next) >= 0)
                        return !1;
                    if (d = d.prevZ, p !== e.prev && p !== e.next && ml(a.x, a.y, r.x, r.y, o.x, o.y, p.x, p.y) && gl(p.prev, p, p.next) >= 0)
                        return !1;
                    p = p.nextZ
                }
                for (; d && d.z >= u; ) {
                    if (d !== e.prev && d !== e.next && ml(a.x, a.y, r.x, r.y, o.x, o.y, d.x, d.y) && gl(d.prev, d, d.next) >= 0)
                        return !1;
                    d = d.prevZ
                }
                for (; p && p.z <= f; ) {
                    if (p !== e.prev && p !== e.next && ml(a.x, a.y, r.x, r.y, o.x, o.y, p.x, p.y) && gl(p.prev, p, p.next) >= 0)
                        return !1;
                    p = p.nextZ
                }
                return !0
            }
            function cl(e, t, n) {
                let i = e;
                do {
                    const a = i.prev,
                    r = i.next.next;
                    !xl(a, r) && yl(a, i, i.next, r) && zl(a, r) && zl(r, a) && (t.push(a.i / n), t.push(i.i / n), t.push(r.i / n), Sl(i), Sl(i.next), i = e = r),
                    i = i.next
                } while (i !== e);
                return al(i)
            }
            function ll(e, t, n, i, a, r) {
                let o = e;
                do {
                    let e = o.next.next;
                    for (; e !== o.prev; ) {
                        if (o.i !== e.i && vl(o, e)) {
                            let s = wl(o, e);
                            return o = al(o, o.next),
                            s = al(s, s.next),
                            rl(o, t, n, i, a, r),
                            void rl(s, t, n, i, a, r)
                        }
                        e = e.next
                    }
                    o = o.next
                } while (o !== e)
            }
            function hl(e, t) {
                return e.x - t.x
            }
            function ul(e, t) {
                if (t = function (e, t) {
                    let n = t;
                    const i = e.x,
                    a = e.y;
                    let r,
                    o = -1 / 0;
                    do {
                        if (a <= n.y && a >= n.next.y && n.next.y !== n.y) {
                            const e = n.x + (a - n.y) * (n.next.x - n.x) / (n.next.y - n.y);
                            if (e <= i && e > o) {
                                if (o = e, e === i) {
                                    if (a === n.y)
                                        return n;
                                    if (a === n.next.y)
                                        return n.next
                                }
                                r = n.x < n.next.x ? n : n.next
                            }
                        }
                        n = n.next
                    } while (n !== t);
                    if (!r)
                        return null;
                    if (i === o)
                        return r;
                    const s = r,
                    c = r.x,
                    l = r.y;
                    let h,
                    u = 1 / 0;
                    n = r;
                    do {
                        i >= n.x && n.x >= c && i !== n.x && ml(a < l ? i : o, a, c, l, a < l ? o : i, a, n.x, n.y) && (h = Math.abs(a - n.y) / (i - n.x), zl(n, e) && (h < u || h === u && (n.x > r.x || n.x === r.x && fl(r, n))) && (r = n, u = h)),
                        n = n.next
                    } while (n !== s);
                    return r
                }
                    (e, t)) {
                    const n = wl(t, e);
                    al(t, t.next),
                    al(n, n.next)
                }
            }
            function fl(e, t) {
                return gl(e.prev, e, t.prev) < 0 && gl(t.next, e, e.next) < 0
            }
            function dl(e, t, n, i, a) {
                return (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - n) * a) | e << 8)) | e << 4)) | e << 2)) | e << 1)) | (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - i) * a) | t << 8)) | t << 4)) | t << 2)) | t << 1)) << 1
            }
            function pl(e) {
                let t = e,
                n = e;
                do {
                    (t.x < n.x || t.x === n.x && t.y < n.y) && (n = t),
                    t = t.next
                } while (t !== e);
                return n
            }
            function ml(e, t, n, i, a, r, o, s) {
                return (a - o) * (t - s) - (e - o) * (r - s) >= 0 && (e - o) * (i - s) - (n - o) * (t - s) >= 0 && (n - o) * (r - s) - (a - o) * (i - s) >= 0
            }
            function vl(e, t) {
                return e.next.i !== t.i && e.prev.i !== t.i && !function (e, t) {
                    let n = e;
                    do {
                        if (n.i !== e.i && n.next.i !== e.i && n.i !== t.i && n.next.i !== t.i && yl(n, n.next, e, t))
                            return !0;
                        n = n.next
                    } while (n !== e);
                    return !1
                }
                (e, t) && (zl(e, t) && zl(t, e) && function (e, t) {
                    let n = e,
                    i = !1;
                    const a = (e.x + t.x) / 2,
                    r = (e.y + t.y) / 2;
                    do {
                        n.y > r != n.next.y > r && n.next.y !== n.y && a < (n.next.x - n.x) * (r - n.y) / (n.next.y - n.y) + n.x && (i = !i),
                        n = n.next
                    } while (n !== e);
                    return i
                }
                    (e, t) && (gl(e.prev, e, t.prev) || gl(e, t.prev, t)) || xl(e, t) && gl(e.prev, e, e.next) > 0 && gl(t.prev, t, t.next) > 0)
            }
            function gl(e, t, n) {
                return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y)
            }
            function xl(e, t) {
                return e.x === t.x && e.y === t.y
            }
            function yl(e, t, n, i) {
                const a = Ml(gl(e, t, n)),
                r = Ml(gl(e, t, i)),
                o = Ml(gl(n, i, e)),
                s = Ml(gl(n, i, t));
                return a !== r && o !== s || !(0 !== a || !bl(e, n, t)) || !(0 !== r || !bl(e, i, t)) || !(0 !== o || !bl(n, e, i)) || !(0 !== s || !bl(n, t, i))
            }
            function bl(e, t, n) {
                return t.x <= Math.max(e.x, n.x) && t.x >= Math.min(e.x, n.x) && t.y <= Math.max(e.y, n.y) && t.y >= Math.min(e.y, n.y)
            }
            function Ml(e) {
                return e > 0 ? 1 : e < 0 ? -1 : 0
            }
            function zl(e, t) {
                return gl(e.prev, e, e.next) < 0 ? gl(e, t, e.next) >= 0 && gl(e, e.prev, t) >= 0 : gl(e, t, e.prev) < 0 || gl(e, e.next, t) < 0
            }
            function wl(e, t) {
                const n = new Ll(e.i, e.x, e.y),
                i = new Ll(t.i, t.x, t.y),
                a = e.next,
                r = t.prev;
                return e.next = t,
                t.prev = e,
                n.next = a,
                a.prev = n,
                i.next = n,
                n.prev = i,
                r.next = i,
                i.prev = r,
                i
            }
            function _l(e, t, n, i) {
                const a = new Ll(e, t, n);
                return i ? (a.next = i.next, a.prev = i, i.next.prev = a, i.next = a) : (a.prev = a, a.next = a),
                a
            }
            function Sl(e) {
                e.next.prev = e.prev,
                e.prev.next = e.next,
                e.prevZ && (e.prevZ.nextZ = e.nextZ),
                e.nextZ && (e.nextZ.prevZ = e.prevZ)
            }
            function Ll(e, t, n) {
                this.i = e,
                this.x = t,
                this.y = n,
                this.prev = null,
                this.next = null,
                this.z = null,
                this.prevZ = null,
                this.nextZ = null,
                this.steiner = !1
            }
            const Al = {
                area: function (e) {
                    const t = e.length;
                    let n = 0;
                    for (let i = t - 1, a = 0; a < t; i = a++)
                        n += e[i].x * e[a].y - e[a].x * e[i].y;
                    return .5 * n
                },
                isClockWise: function (e) {
                    return Al.area(e) < 0
                },
                triangulateShape: function (e, t) {
                    const n = [],
                    i = [],
                    a = [];
                    Tl(e),
                    Cl(n, e);
                    let r = e.length;
                    t.forEach(Tl);
                    for (let e = 0; e < t.length; e++)
                        i.push(r), r += t[e].length, Cl(n, t[e]);
                    const o = function (e, t, n) {
                        n = n || 2;
                        const i = t && t.length,
                        a = i ? t[0] * n : e.length;
                        let r = il(e, 0, a, n, !0);
                        const o = [];
                        if (!r || r.next === r.prev)
                            return o;
                        let s,
                        c,
                        l,
                        h,
                        u,
                        f,
                        d;
                        if (i && (r = function (e, t, n, i) {
                                const a = [];
                                let r,
                                o,
                                s,
                                c,
                                l;
                                for (r = 0, o = t.length; r < o; r++)
                                    s = t[r] * i, c = r < o - 1 ? t[r + 1] * i : e.length, l = il(e, s, c, i, !1), l === l.next && (l.steiner = !0) , a.push(pl(l));
                                    for (a.sort(hl), r = 0; r < a.length; r++)
                                        ul(a[r], n), n = al(n, n.next);
                                    return n
                                }
                                    (e, t, r, n)), e.length > 80 * n) {
                                s = l = e[0],
                                c = h = e[1];
                                for (let t = n; t < a; t += n)
                                    u = e[t], f = e[t + 1], u < s && (s = u), f < c && (c = f), u > l && (l = u), f > h && (h = f);
                                d = Math.max(l - s, h - c),
                                d = 0 !== d ? 1 / d : 0
                            }
                        return rl(r, o, n, s, c, d),
                        o
                    }
                    (n, i);
                    for (let e = 0; e < o.length; e += 3)
                        a.push(o.slice(e, e + 3));
                    return a
                }
            };
            function Tl(e) {
                const t = e.length;
                t > 2 && e[t - 1].equals(e[0]) && e.pop()
            }
            function Cl(e, t) {
                for (let n = 0; n < t.length; n++)
                    e.push(t[n].x), e.push(t[n].y)
            }
            class El extends Ga {
                constructor(e, t) {
                    super(),
                    this.type = "ExtrudeBufferGeometry",
                    this.parameters = {
                        shapes: e,
                        options: t
                    },
                    e = Array.isArray(e) ? e : [e];
                    const n = this,
                    i = [],
                    a = [];
                    for (let t = 0, n = e.length; t < n; t++)
                        r(e[t]);
                    function r(e) {
                        const r = [],
                        o = void 0 !== t.curveSegments ? t.curveSegments : 12,
                        s = void 0 !== t.steps ? t.steps : 1;
                        let c = void 0 !== t.depth ? t.depth : 100,
                        l = void 0 === t.bevelEnabled || t.bevelEnabled,
                        h = void 0 !== t.bevelThickness ? t.bevelThickness : 6,
                        u = void 0 !== t.bevelSize ? t.bevelSize : h - 2,
                        f = void 0 !== t.bevelOffset ? t.bevelOffset : 0,
                        d = void 0 !== t.bevelSegments ? t.bevelSegments : 3;
                        const p = t.extrudePath,
                        m = void 0 !== t.UVGenerator ? t.UVGenerator : Hl;
                        void 0 !== t.amount && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), c = t.amount);
                        let v,
                        g,
                        x,
                        y,
                        b,
                        M = !1;
                        p && (v = p.getSpacedPoints(s), M = !0, l = !1, g = p.computeFrenetFrames(s, !1), x = new Qn, y = new Qn, b = new Qn),
                        l || (d = 0, h = 0, u = 0, f = 0);
                        const z = e.extractPoints(o);
                        let w = z.shape;
                        const _ = z.holes;
                        if (!Al.isClockWise(w)) {
                            w = w.reverse();
                            for (let e = 0, t = _.length; e < t; e++) {
                                const t = _[e];
                                Al.isClockWise(t) && (_[e] = t.reverse())
                            }
                        }
                        const S = Al.triangulateShape(w, _),
                        L = w;
                        for (let e = 0, t = _.length; e < t; e++) {
                            const t = _[e];
                            w = w.concat(t)
                        }
                        function A(e, t, n) {
                            return t || console.error("THREE.ExtrudeGeometry: vec does not exist"),
                            t.clone().multiplyScalar(n).add(e)
                        }
                        const T = w.length,
                        C = S.length;
                        function E(e, t, n) {
                            let i,
                            a,
                            r;
                            const o = e.x - t.x,
                            s = e.y - t.y,
                            c = n.x - e.x,
                            l = n.y - e.y,
                            h = o * o + s * s,
                            u = o * l - s * c;
                            if (Math.abs(u) > Number.EPSILON) {
                                const u = Math.sqrt(h),
                                f = Math.sqrt(c * c + l * l),
                                d = t.x - s / u,
                                p = t.y + o / u,
                                m = ((n.x - l / f - d) * l - (n.y + c / f - p) * c) / (o * l - s * c);
                                i = d + o * m - e.x,
                                a = p + s * m - e.y;
                                const v = i * i + a * a;
                                if (v <= 2)
                                    return new Un(i, a);
                                r = Math.sqrt(v / 2)
                            } else {
                                let e = !1;
                                o > Number.EPSILON ? c > Number.EPSILON && (e = !0) : o < -Number.EPSILON ? c < -Number.EPSILON && (e = !0) : Math.sign(s) === Math.sign(l) && (e = !0),
                                e ? (i = -s, a = o, r = Math.sqrt(h)) : (i = o, a = s, r = Math.sqrt(h / 2))
                            }
                            return new Un(i / r, a / r)
                        }
                        const H = [];
                        for (let e = 0, t = L.length, n = t - 1, i = e + 1; e < t; e++, n++, i++)
                            n === t && (n = 0), i === t && (i = 0), H[e] = E(L[e], L[n], L[i]);
                        const N = [];
                        let P,
                        V = H.concat();
                        for (let e = 0, t = _.length; e < t; e++) {
                            const t = _[e];
                            P = [];
                            for (let e = 0, n = t.length, i = n - 1, a = e + 1; e < n; e++, i++, a++)
                                i === n && (i = 0), a === n && (a = 0), P[e] = E(t[e], t[i], t[a]);
                            N.push(P),
                            V = V.concat(P)
                        }
                        for (let e = 0; e < d; e++) {
                            const t = e / d,
                            n = h * Math.cos(t * Math.PI / 2),
                            i = u * Math.sin(t * Math.PI / 2) + f;
                            for (let e = 0, t = L.length; e < t; e++) {
                                const t = A(L[e], H[e], i);
                                I(t.x, t.y, -n)
                            }
                            for (let e = 0, t = _.length; e < t; e++) {
                                const t = _[e];
                                P = N[e];
                                for (let e = 0, a = t.length; e < a; e++) {
                                    const a = A(t[e], P[e], i);
                                    I(a.x, a.y, -n)
                                }
                            }
                        }
                        const R = u + f;
                        for (let e = 0; e < T; e++) {
                            const t = l ? A(w[e], V[e], R) : w[e];
                            M ? (y.copy(g.normals[0]).multiplyScalar(t.x), x.copy(g.binormals[0]).multiplyScalar(t.y), b.copy(v[0]).add(y).add(x), I(b.x, b.y, b.z)) : I(t.x, t.y, 0)
                        }
                        for (let e = 1; e <= s; e++)
                            for (let t = 0; t < T; t++) {
                                const n = l ? A(w[t], V[t], R) : w[t];
                                M ? (y.copy(g.normals[e]).multiplyScalar(n.x), x.copy(g.binormals[e]).multiplyScalar(n.y), b.copy(v[e]).add(y).add(x), I(b.x, b.y, b.z)) : I(n.x, n.y, c / s * e)
                            }
                        for (let e = d - 1; e >= 0; e--) {
                            const t = e / d,
                            n = h * Math.cos(t * Math.PI / 2),
                            i = u * Math.sin(t * Math.PI / 2) + f;
                            for (let e = 0, t = L.length; e < t; e++) {
                                const t = A(L[e], H[e], i);
                                I(t.x, t.y, c + n)
                            }
                            for (let e = 0, t = _.length; e < t; e++) {
                                const t = _[e];
                                P = N[e];
                                for (let e = 0, a = t.length; e < a; e++) {
                                    const a = A(t[e], P[e], i);
                                    M ? I(a.x, a.y + v[s - 1].y, v[s - 1].x + n) : I(a.x, a.y, c + n)
                                }
                            }
                        }
                        function F(e, t) {
                            let n = e.length;
                            for (; --n >= 0; ) {
                                const i = n;
                                let a = n - 1;
                                a < 0 && (a = e.length - 1);
                                for (let e = 0, n = s + 2 * d; e < n; e++) {
                                    const n = T * e,
                                    r = T * (e + 1);
                                    D(t + i + n, t + a + n, t + a + r, t + i + r)
                                }
                            }
                        }
                        function I(e, t, n) {
                            r.push(e),
                            r.push(t),
                            r.push(n)
                        }
                        function O(e, t, a) {
                            U(e),
                            U(t),
                            U(a);
                            const r = i.length / 3,
                            o = m.generateTopUV(n, i, r - 3, r - 2, r - 1);
                            B(o[0]),
                            B(o[1]),
                            B(o[2])
                        }
                        function D(e, t, a, r) {
                            U(e),
                            U(t),
                            U(r),
                            U(t),
                            U(a),
                            U(r);
                            const o = i.length / 3,
                            s = m.generateSideWallUV(n, i, o - 6, o - 3, o - 2, o - 1);
                            B(s[0]),
                            B(s[1]),
                            B(s[3]),
                            B(s[1]),
                            B(s[2]),
                            B(s[3])
                        }
                        function U(e) {
                            i.push(r[3 * e + 0]),
                            i.push(r[3 * e + 1]),
                            i.push(r[3 * e + 2])
                        }
                        function B(e) {
                            a.push(e.x),
                            a.push(e.y)
                        }
                        !function () {
                            const e = i.length / 3;
                            if (l) {
                                let e = 0,
                                t = T * e;
                                for (let e = 0; e < C; e++) {
                                    const n = S[e];
                                    O(n[2] + t, n[1] + t, n[0] + t)
                                }
                                e = s + 2 * d,
                                t = T * e;
                                for (let e = 0; e < C; e++) {
                                    const n = S[e];
                                    O(n[0] + t, n[1] + t, n[2] + t)
                                }
                            } else {
                                for (let e = 0; e < C; e++) {
                                    const t = S[e];
                                    O(t[2], t[1], t[0])
                                }
                                for (let e = 0; e < C; e++) {
                                    const t = S[e];
                                    O(t[0] + T * s, t[1] + T * s, t[2] + T * s)
                                }
                            }
                            n.addGroup(e, i.length / 3 - e, 0)
                        }
                        (),
                        function () {
                            const e = i.length / 3;
                            let t = 0;
                            F(L, t),
                            t += L.length;
                            for (let e = 0, n = _.length; e < n; e++) {
                                const n = _[e];
                                F(n, t),
                                t += n.length
                            }
                            n.addGroup(e, i.length / 3 - e, 1)
                        }
                        ()
                    }
                    this.setAttribute("position", new Na(i, 3)),
                    this.setAttribute("uv", new Na(a, 2)),
                    this.computeVertexNormals()
                }
                toJSON() {
                    const e = Ga.prototype.toJSON.call(this);
                    return function (e, t, n) {
                        if (n.shapes = [], Array.isArray(e))
                            for (let t = 0, i = e.length; t < i; t++) {
                                const i = e[t];
                                n.shapes.push(i.uuid)
                            }
                        else
                            n.shapes.push(e.uuid);
                        return void 0 !== t.extrudePath && (n.options.extrudePath = t.extrudePath.toJSON()),
                        n
                    }
                    (this.parameters.shapes, this.parameters.options, e)
                }
            }
            const Hl = {
                generateTopUV: function (e, t, n, i, a) {
                    const r = t[3 * n],
                    o = t[3 * n + 1],
                    s = t[3 * i],
                    c = t[3 * i + 1],
                    l = t[3 * a],
                    h = t[3 * a + 1];
                    return [new Un(r, o), new Un(s, c), new Un(l, h)]
                },
                generateSideWallUV: function (e, t, n, i, a, r) {
                    const o = t[3 * n],
                    s = t[3 * n + 1],
                    c = t[3 * n + 2],
                    l = t[3 * i],
                    h = t[3 * i + 1],
                    u = t[3 * i + 2],
                    f = t[3 * a],
                    d = t[3 * a + 1],
                    p = t[3 * a + 2],
                    m = t[3 * r],
                    v = t[3 * r + 1],
                    g = t[3 * r + 2];
                    return Math.abs(s - h) < .01 ? [new Un(o, 1 - c), new Un(l, 1 - u), new Un(f, 1 - p), new Un(m, 1 - g)] : [new Un(s, 1 - c), new Un(h, 1 - u), new Un(d, 1 - p), new Un(v, 1 - g)]
                }
            };
            class Nl extends Bc {
                constructor(e, t) {
                    super(),
                    this.type = "ExtrudeGeometry",
                    this.parameters = {
                        shapes: e,
                        options: t
                    },
                    this.fromBufferGeometry(new El(e, t)),
                    this.mergeVertices()
                }
                toJSON() {
                    const e = super.toJSON();
                    return function (e, t, n) {
                        if (n.shapes = [], Array.isArray(e))
                            for (let t = 0, i = e.length; t < i; t++) {
                                const i = e[t];
                                n.shapes.push(i.uuid)
                            }
                        else
                            n.shapes.push(e.uuid);
                        return void 0 !== t.extrudePath && (n.options.extrudePath = t.extrudePath.toJSON()),
                        n
                    }
                    (this.parameters.shapes, this.parameters.options, e)
                }
            }
            class Pl extends Zc {
                constructor(e, t) {
                    const n = (1 + Math.sqrt(5)) / 2;
                    super([-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1], [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], e, t),
                    this.type = "IcosahedronBufferGeometry",
                    this.parameters = {
                        radius: e,
                        detail: t
                    }
                }
            }
            class Vl extends Bc {
                constructor(e, t) {
                    super(),
                    this.type = "IcosahedronGeometry",
                    this.parameters = {
                        radius: e,
                        detail: t
                    },
                    this.fromBufferGeometry(new Pl(e, t)),
                    this.mergeVertices()
                }
            }
            class Rl extends Ga {
                constructor(e, t, n, i) {
                    super(),
                    this.type = "LatheBufferGeometry",
                    this.parameters = {
                        points: e,
                        segments: t,
                        phiStart: n,
                        phiLength: i
                    },
                    t = Math.floor(t) || 12,
                    n = n || 0,
                    i = i || 2 * Math.PI,
                    i = Dn.clamp(i, 0, 2 * Math.PI);
                    const a = [],
                    r = [],
                    o = [],
                    s = 1 / t,
                    c = new Qn,
                    l = new Un;
                    for (let a = 0; a <= t; a++) {
                        const h = n + a * s * i,
                        u = Math.sin(h),
                        f = Math.cos(h);
                        for (let n = 0; n <= e.length - 1; n++)
                            c.x = e[n].x * u, c.y = e[n].y, c.z = e[n].x * f, r.push(c.x, c.y, c.z), l.x = a / t, l.y = n / (e.length - 1), o.push(l.x, l.y)
                    }
                    for (let n = 0; n < t; n++)
                        for (let t = 0; t < e.length - 1; t++) {
                            const i = t + n * e.length,
                            r = i,
                            o = i + e.length,
                            s = i + e.length + 1,
                            c = i + 1;
                            a.push(r, o, c),
                            a.push(o, s, c)
                        }
                    if (this.setIndex(a), this.setAttribute("position", new Na(r, 3)), this.setAttribute("uv", new Na(o, 2)), this.computeVertexNormals(), i === 2 * Math.PI) {
                        const n = this.attributes.normal.array,
                        i = new Qn,
                        a = new Qn,
                        r = new Qn,
                        o = t * e.length * 3;
                        for (let t = 0, s = 0; t < e.length; t++, s += 3)
                            i.x = n[s + 0], i.y = n[s + 1], i.z = n[s + 2], a.x = n[o + s + 0], a.y = n[o + s + 1], a.z = n[o + s + 2], r.addVectors(i, a).normalize(), n[s + 0] = n[o + s + 0] = r.x, n[s + 1] = n[o + s + 1] = r.y, n[s + 2] = n[o + s + 2] = r.z
                    }
                }
            }
            class Fl extends Bc {
                constructor(e, t, n, i) {
                    super(),
                    this.type = "LatheGeometry",
                    this.parameters = {
                        points: e,
                        segments: t,
                        phiStart: n,
                        phiLength: i
                    },
                    this.fromBufferGeometry(new Rl(e, t, n, i)),
                    this.mergeVertices()
                }
            }
            class Il extends Zc {
                constructor(e, t) {
                    super([1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], e, t),
                    this.type = "OctahedronBufferGeometry",
                    this.parameters = {
                        radius: e,
                        detail: t
                    }
                }
            }
            class Ol extends Bc {
                constructor(e, t) {
                    super(),
                    this.type = "OctahedronGeometry",
                    this.parameters = {
                        radius: e,
                        detail: t
                    },
                    this.fromBufferGeometry(new Il(e, t)),
                    this.mergeVertices()
                }
            }
            function Dl(e, t, n) {
                Ga.call(this),
                this.type = "ParametricBufferGeometry",
                this.parameters = {
                    func: e,
                    slices: t,
                    stacks: n
                };
                const i = [],
                a = [],
                r = [],
                o = [],
                s = 1e-5,
                c = new Qn,
                l = new Qn,
                h = new Qn,
                u = new Qn,
                f = new Qn;
                e.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
                const d = t + 1;
                for (let i = 0; i <= n; i++) {
                    const d = i / n;
                    for (let n = 0; n <= t; n++) {
                        const i = n / t;
                        e(i, d, l),
                        a.push(l.x, l.y, l.z),
                        i - s >= 0 ? (e(i - s, d, h), u.subVectors(l, h)) : (e(i + s, d, h), u.subVectors(h, l)),
                        d - s >= 0 ? (e(i, d - s, h), f.subVectors(l, h)) : (e(i, d + s, h), f.subVectors(h, l)),
                        c.crossVectors(u, f).normalize(),
                        r.push(c.x, c.y, c.z),
                        o.push(i, d)
                    }
                }
                for (let e = 0; e < n; e++)
                    for (let n = 0; n < t; n++) {
                        const t = e * d + n,
                        a = e * d + n + 1,
                        r = (e + 1) * d + n + 1,
                        o = (e + 1) * d + n;
                        i.push(t, a, o),
                        i.push(a, r, o)
                    }
                this.setIndex(i),
                this.setAttribute("position", new Na(a, 3)),
                this.setAttribute("normal", new Na(r, 3)),
                this.setAttribute("uv", new Na(o, 2))
            }
            function Ul(e, t, n) {
                Bc.call(this),
                this.type = "ParametricGeometry",
                this.parameters = {
                    func: e,
                    slices: t,
                    stacks: n
                },
                this.fromBufferGeometry(new Dl(e, t, n)),
                this.mergeVertices()
            }
            Dl.prototype = Object.create(Ga.prototype),
            Dl.prototype.constructor = Dl,
            Ul.prototype = Object.create(Bc.prototype),
            Ul.prototype.constructor = Ul;
            class Bl extends Bc {
                constructor(e, t, n, i) {
                    super(),
                    this.type = "PlaneGeometry",
                    this.parameters = {
                        width: e,
                        height: t,
                        widthSegments: n,
                        heightSegments: i
                    },
                    this.fromBufferGeometry(new Ar(e, t, n, i)),
                    this.mergeVertices()
                }
            }
            class kl extends Bc {
                constructor(e, t, n, i) {
                    super(),
                    this.type = "PolyhedronGeometry",
                    this.parameters = {
                        vertices: e,
                        indices: t,
                        radius: n,
                        detail: i
                    },
                    this.fromBufferGeometry(new Zc(e, t, n, i)),
                    this.mergeVertices()
                }
            }
            class Gl extends Ga {
                constructor(e, t, n, i, a, r) {
                    super(),
                    this.type = "RingBufferGeometry",
                    this.parameters = {
                        innerRadius: e,
                        outerRadius: t,
                        thetaSegments: n,
                        phiSegments: i,
                        thetaStart: a,
                        thetaLength: r
                    },
                    e = e || .5,
                    t = t || 1,
                    a = void 0 !== a ? a : 0,
                    r = void 0 !== r ? r : 2 * Math.PI,
                    n = void 0 !== n ? Math.max(3, n) : 8;
                    const o = [],
                    s = [],
                    c = [],
                    l = [];
                    let h = e;
                    const u = (t - e) / (i = void 0 !== i ? Math.max(1, i) : 1),
                    f = new Qn,
                    d = new Un;
                    for (let e = 0; e <= i; e++) {
                        for (let e = 0; e <= n; e++) {
                            const i = a + e / n * r;
                            f.x = h * Math.cos(i),
                            f.y = h * Math.sin(i),
                            s.push(f.x, f.y, f.z),
                            c.push(0, 0, 1),
                            d.x = (f.x / t + 1) / 2,
                            d.y = (f.y / t + 1) / 2,
                            l.push(d.x, d.y)
                        }
                        h += u
                    }
                    for (let e = 0; e < i; e++) {
                        const t = e * (n + 1);
                        for (let e = 0; e < n; e++) {
                            const i = e + t,
                            a = i,
                            r = i + n + 1,
                            s = i + n + 2,
                            c = i + 1;
                            o.push(a, r, c),
                            o.push(r, s, c)
                        }
                    }
                    this.setIndex(o),
                    this.setAttribute("position", new Na(s, 3)),
                    this.setAttribute("normal", new Na(c, 3)),
                    this.setAttribute("uv", new Na(l, 2))
                }
            }
            class jl extends Bc {
                constructor(e, t, n, i, a, r) {
                    super(),
                    this.type = "RingGeometry",
                    this.parameters = {
                        innerRadius: e,
                        outerRadius: t,
                        thetaSegments: n,
                        phiSegments: i,
                        thetaStart: a,
                        thetaLength: r
                    },
                    this.fromBufferGeometry(new Gl(e, t, n, i, a, r)),
                    this.mergeVertices()
                }
            }
            class Wl extends Ga {
                constructor(e, t) {
                    super(),
                    this.type = "ShapeBufferGeometry",
                    this.parameters = {
                        shapes: e,
                        curveSegments: t
                    },
                    t = t || 12;
                    const n = [],
                    i = [],
                    a = [],
                    r = [];
                    let o = 0,
                    s = 0;
                    if (!1 === Array.isArray(e))
                        c(e);
                    else
                        for (let t = 0; t < e.length; t++)
                            c(e[t]), this.addGroup(o, s, t), o += s, s = 0;
                    function c(e) {
                        const o = i.length / 3,
                        c = e.extractPoints(t);
                        let l = c.shape;
                        const h = c.holes;
                        !1 === Al.isClockWise(l) && (l = l.reverse());
                        for (let e = 0, t = h.length; e < t; e++) {
                            const t = h[e];
                            !0 === Al.isClockWise(t) && (h[e] = t.reverse())
                        }
                        const u = Al.triangulateShape(l, h);
                        for (let e = 0, t = h.length; e < t; e++) {
                            const t = h[e];
                            l = l.concat(t)
                        }
                        for (let e = 0, t = l.length; e < t; e++) {
                            const t = l[e];
                            i.push(t.x, t.y, 0),
                            a.push(0, 0, 1),
                            r.push(t.x, t.y)
                        }
                        for (let e = 0, t = u.length; e < t; e++) {
                            const t = u[e],
                            i = t[0] + o,
                            a = t[1] + o,
                            r = t[2] + o;
                            n.push(i, a, r),
                            s += 3
                        }
                    }
                    this.setIndex(n),
                    this.setAttribute("position", new Na(i, 3)),
                    this.setAttribute("normal", new Na(a, 3)),
                    this.setAttribute("uv", new Na(r, 2))
                }
                toJSON() {
                    const e = Ga.prototype.toJSON.call(this);
                    return function (e, t) {
                        if (t.shapes = [], Array.isArray(e))
                            for (let n = 0, i = e.length; n < i; n++) {
                                const i = e[n];
                                t.shapes.push(i.uuid)
                            }
                        else
                            t.shapes.push(e.uuid);
                        return t
                    }
                    (this.parameters.shapes, e)
                }
            }
            class Xl extends Bc {
                constructor(e, t) {
                    super(),
                    this.type = "ShapeGeometry",
                    "object" == typeof t && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."), t = t.curveSegments),
                    this.parameters = {
                        shapes: e,
                        curveSegments: t
                    },
                    this.fromBufferGeometry(new Wl(e, t)),
                    this.mergeVertices()
                }
                toJSON() {
                    const e = Bc.prototype.toJSON.call(this);
                    return function (e, t) {
                        if (t.shapes = [], Array.isArray(e))
                            for (let n = 0, i = e.length; n < i; n++) {
                                const i = e[n];
                                t.shapes.push(i.uuid)
                            }
                        else
                            t.shapes.push(e.uuid);
                        return t
                    }
                    (this.parameters.shapes, e)
                }
            }
            class ql extends Ga {
                constructor(e, t, n, i, a, r, o) {
                    super(),
                    this.type = "SphereBufferGeometry",
                    this.parameters = {
                        radius: e,
                        widthSegments: t,
                        heightSegments: n,
                        phiStart: i,
                        phiLength: a,
                        thetaStart: r,
                        thetaLength: o
                    },
                    e = e || 1,
                    t = Math.max(3, Math.floor(t) || 8),
                    n = Math.max(2, Math.floor(n) || 6),
                    i = void 0 !== i ? i : 0,
                    a = void 0 !== a ? a : 2 * Math.PI,
                    r = void 0 !== r ? r : 0,
                    o = void 0 !== o ? o : Math.PI;
                    const s = Math.min(r + o, Math.PI);
                    let c = 0;
                    const l = [],
                    h = new Qn,
                    u = new Qn,
                    f = [],
                    d = [],
                    p = [],
                    m = [];
                    for (let f = 0; f <= n; f++) {
                        const v = [],
                        g = f / n;
                        let x = 0;
                        0 == f && 0 == r ? x = .5 / t : f == n && s == Math.PI && (x =  - .5 / t);
                        for (let n = 0; n <= t; n++) {
                            const s = n / t;
                            h.x = -e * Math.cos(i + s * a) * Math.sin(r + g * o),
                            h.y = e * Math.cos(r + g * o),
                            h.z = e * Math.sin(i + s * a) * Math.sin(r + g * o),
                            d.push(h.x, h.y, h.z),
                            u.copy(h).normalize(),
                            p.push(u.x, u.y, u.z),
                            m.push(s + x, 1 - g),
                            v.push(c++)
                        }
                        l.push(v)
                    }
                    for (let e = 0; e < n; e++)
                        for (let i = 0; i < t; i++) {
                            const t = l[e][i + 1],
                            a = l[e][i],
                            o = l[e + 1][i],
                            c = l[e + 1][i + 1];
                            (0 !== e || r > 0) && f.push(t, a, c),
                            (e !== n - 1 || s < Math.PI) && f.push(a, o, c)
                        }
                    this.setIndex(f),
                    this.setAttribute("position", new Na(d, 3)),
                    this.setAttribute("normal", new Na(p, 3)),
                    this.setAttribute("uv", new Na(m, 2))
                }
            }
            class Yl extends Bc {
                constructor(e, t, n, i, a, r, o) {
                    super(),
                    this.type = "SphereGeometry",
                    this.parameters = {
                        radius: e,
                        widthSegments: t,
                        heightSegments: n,
                        phiStart: i,
                        phiLength: a,
                        thetaStart: r,
                        thetaLength: o
                    },
                    this.fromBufferGeometry(new ql(e, t, n, i, a, r, o)),
                    this.mergeVertices()
                }
            }
            class Zl extends Zc {
                constructor(e, t) {
                    super([1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], e, t),
                    this.type = "TetrahedronBufferGeometry",
                    this.parameters = {
                        radius: e,
                        detail: t
                    }
                }
            }
            class Ql extends Bc {
                constructor(e, t) {
                    super(),
                    this.type = "TetrahedronGeometry",
                    this.parameters = {
                        radius: e,
                        detail: t
                    },
                    this.fromBufferGeometry(new Zl(e, t)),
                    this.mergeVertices()
                }
            }
            class Jl extends El {
                constructor(e, t) {
                    const n = (t = t || {}).font;
                    if (!n || !n.isFont)
                        return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."), new Ga;
                    const i = n.generateShapes(e, t.size);
                    t.depth = void 0 !== t.height ? t.height : 50,
                    void 0 === t.bevelThickness && (t.bevelThickness = 10),
                    void 0 === t.bevelSize && (t.bevelSize = 8),
                    void 0 === t.bevelEnabled && (t.bevelEnabled = !1),
                    super(i, t),
                    this.type = "TextBufferGeometry"
                }
            }
            class Kl extends Bc {
                constructor(e, t) {
                    super(),
                    this.type = "TextGeometry",
                    this.parameters = {
                        text: e,
                        parameters: t
                    },
                    this.fromBufferGeometry(new Jl(e, t)),
                    this.mergeVertices()
                }
            }
            class $l extends Ga {
                constructor(e, t, n, i, a) {
                    super(),
                    this.type = "TorusBufferGeometry",
                    this.parameters = {
                        radius: e,
                        tube: t,
                        radialSegments: n,
                        tubularSegments: i,
                        arc: a
                    },
                    e = e || 1,
                    t = t || .4,
                    n = Math.floor(n) || 8,
                    i = Math.floor(i) || 6,
                    a = a || 2 * Math.PI;
                    const r = [],
                    o = [],
                    s = [],
                    c = [],
                    l = new Qn,
                    h = new Qn,
                    u = new Qn;
                    for (let r = 0; r <= n; r++)
                        for (let f = 0; f <= i; f++) {
                            const d = f / i * a,
                            p = r / n * Math.PI * 2;
                            h.x = (e + t * Math.cos(p)) * Math.cos(d),
                            h.y = (e + t * Math.cos(p)) * Math.sin(d),
                            h.z = t * Math.sin(p),
                            o.push(h.x, h.y, h.z),
                            l.x = e * Math.cos(d),
                            l.y = e * Math.sin(d),
                            u.subVectors(h, l).normalize(),
                            s.push(u.x, u.y, u.z),
                            c.push(f / i),
                            c.push(r / n)
                        }
                    for (let e = 1; e <= n; e++)
                        for (let t = 1; t <= i; t++) {
                            const n = (i + 1) * e + t - 1,
                            a = (i + 1) * (e - 1) + t - 1,
                            o = (i + 1) * (e - 1) + t,
                            s = (i + 1) * e + t;
                            r.push(n, a, s),
                            r.push(a, o, s)
                        }
                    this.setIndex(r),
                    this.setAttribute("position", new Na(o, 3)),
                    this.setAttribute("normal", new Na(s, 3)),
                    this.setAttribute("uv", new Na(c, 2))
                }
            }
            class eh extends Bc {
                constructor(e, t, n, i, a) {
                    super(),
                    this.type = "TorusGeometry",
                    this.parameters = {
                        radius: e,
                        tube: t,
                        radialSegments: n,
                        tubularSegments: i,
                        arc: a
                    },
                    this.fromBufferGeometry(new $l(e, t, n, i, a)),
                    this.mergeVertices()
                }
            }
            class th extends Ga {
                constructor(e, t, n, i, a, r) {
                    super(),
                    this.type = "TorusKnotBufferGeometry",
                    this.parameters = {
                        radius: e,
                        tube: t,
                        tubularSegments: n,
                        radialSegments: i,
                        p: a,
                        q: r
                    },
                    e = e || 1,
                    t = t || .4,
                    n = Math.floor(n) || 64,
                    i = Math.floor(i) || 8,
                    a = a || 2,
                    r = r || 3;
                    const o = [],
                    s = [],
                    c = [],
                    l = [],
                    h = new Qn,
                    u = new Qn,
                    f = new Qn,
                    d = new Qn,
                    p = new Qn,
                    m = new Qn,
                    v = new Qn;
                    for (let o = 0; o <= n; ++o) {
                        const x = o / n * a * Math.PI * 2;
                        g(x, a, r, e, f),
                        g(x + .01, a, r, e, d),
                        m.subVectors(d, f),
                        v.addVectors(d, f),
                        p.crossVectors(m, v),
                        v.crossVectors(p, m),
                        p.normalize(),
                        v.normalize();
                        for (let e = 0; e <= i; ++e) {
                            const a = e / i * Math.PI * 2,
                            r = -t * Math.cos(a),
                            d = t * Math.sin(a);
                            h.x = f.x + (r * v.x + d * p.x),
                            h.y = f.y + (r * v.y + d * p.y),
                            h.z = f.z + (r * v.z + d * p.z),
                            s.push(h.x, h.y, h.z),
                            u.subVectors(h, f).normalize(),
                            c.push(u.x, u.y, u.z),
                            l.push(o / n),
                            l.push(e / i)
                        }
                    }
                    for (let e = 1; e <= n; e++)
                        for (let t = 1; t <= i; t++) {
                            const n = (i + 1) * (e - 1) + (t - 1),
                            a = (i + 1) * e + (t - 1),
                            r = (i + 1) * e + t,
                            s = (i + 1) * (e - 1) + t;
                            o.push(n, a, s),
                            o.push(a, r, s)
                        }
                    function g(e, t, n, i, a) {
                        const r = Math.cos(e),
                        o = Math.sin(e),
                        s = n / t * e,
                        c = Math.cos(s);
                        a.x = i * (2 + c) * .5 * r,
                        a.y = i * (2 + c) * o * .5,
                        a.z = i * Math.sin(s) * .5
                    }
                    this.setIndex(o),
                    this.setAttribute("position", new Na(s, 3)),
                    this.setAttribute("normal", new Na(c, 3)),
                    this.setAttribute("uv", new Na(l, 2))
                }
            }
            class nh extends Bc {
                constructor(e, t, n, i, a, r, o) {
                    super(),
                    this.type = "TorusKnotGeometry",
                    this.parameters = {
                        radius: e,
                        tube: t,
                        tubularSegments: n,
                        radialSegments: i,
                        p: a,
                        q: r
                    },
                    void 0 !== o && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),
                    this.fromBufferGeometry(new th(e, t, n, i, a, r)),
                    this.mergeVertices()
                }
            }
            class ih extends Ga {
                constructor(e, t, n, i, a) {
                    super(),
                    this.type = "TubeBufferGeometry",
                    this.parameters = {
                        path: e,
                        tubularSegments: t,
                        radius: n,
                        radialSegments: i,
                        closed: a
                    },
                    t = t || 64,
                    n = n || 1,
                    i = i || 8,
                    a = a || !1;
                    const r = e.computeFrenetFrames(t, a);
                    this.tangents = r.tangents,
                    this.normals = r.normals,
                    this.binormals = r.binormals;
                    const o = new Qn,
                    s = new Qn,
                    c = new Un;
                    let l = new Qn;
                    const h = [],
                    u = [],
                    f = [],
                    d = [];
                    function p(a) {
                        l = e.getPointAt(a / t, l);
                        const c = r.normals[a],
                        f = r.binormals[a];
                        for (let e = 0; e <= i; e++) {
                            const t = e / i * Math.PI * 2,
                            a = Math.sin(t),
                            r = -Math.cos(t);
                            s.x = r * c.x + a * f.x,
                            s.y = r * c.y + a * f.y,
                            s.z = r * c.z + a * f.z,
                            s.normalize(),
                            u.push(s.x, s.y, s.z),
                            o.x = l.x + n * s.x,
                            o.y = l.y + n * s.y,
                            o.z = l.z + n * s.z,
                            h.push(o.x, o.y, o.z)
                        }
                    }
                    !function () {
                        for (let e = 0; e < t; e++)
                            p(e);
                        p(!1 === a ? t : 0),
                        function () {
                            for (let e = 0; e <= t; e++)
                                for (let n = 0; n <= i; n++)
                                    c.x = e / t, c.y = n / i, f.push(c.x, c.y)
                        }
                        (),
                        function () {
                            for (let e = 1; e <= t; e++)
                                for (let t = 1; t <= i; t++) {
                                    const n = (i + 1) * (e - 1) + (t - 1),
                                    a = (i + 1) * e + (t - 1),
                                    r = (i + 1) * e + t,
                                    o = (i + 1) * (e - 1) + t;
                                    d.push(n, a, o),
                                    d.push(a, r, o)
                                }
                        }
                        ()
                    }
                    (),
                    this.setIndex(d),
                    this.setAttribute("position", new Na(h, 3)),
                    this.setAttribute("normal", new Na(u, 3)),
                    this.setAttribute("uv", new Na(f, 2))
                }
                toJSON() {
                    const e = Ga.prototype.toJSON.call(this);
                    return e.path = this.parameters.path.toJSON(),
                    e
                }
            }
            class ah extends Bc {
                constructor(e, t, n, i, a, r) {
                    super(),
                    this.type = "TubeGeometry",
                    this.parameters = {
                        path: e,
                        tubularSegments: t,
                        radius: n,
                        radialSegments: i,
                        closed: a
                    },
                    void 0 !== r && console.warn("THREE.TubeGeometry: taper has been removed.");
                    const o = new ih(e, t, n, i, a);
                    this.tangents = o.tangents,
                    this.normals = o.normals,
                    this.binormals = o.binormals,
                    this.fromBufferGeometry(o),
                    this.mergeVertices()
                }
            }
            class rh extends Ga {
                constructor(e) {
                    super(),
                    this.type = "WireframeGeometry";
                    const t = [],
                    n = [0, 0],
                    i = {},
                    a = ["a", "b", "c"];
                    if (e && e.isGeometry) {
                        const r = e.faces;
                        for (let e = 0, t = r.length; e < t; e++) {
                            const t = r[e];
                            for (let e = 0; e < 3; e++) {
                                const r = t[a[e]],
                                o = t[a[(e + 1) % 3]];
                                n[0] = Math.min(r, o),
                                n[1] = Math.max(r, o);
                                const s = n[0] + "," + n[1];
                                void 0 === i[s] && (i[s] = {
                                        index1: n[0],
                                        index2: n[1]
                                    })
                            }
                        }
                        for (const n in i) {
                            const a = i[n];
                            let r = e.vertices[a.index1];
                            t.push(r.x, r.y, r.z),
                            r = e.vertices[a.index2],
                            t.push(r.x, r.y, r.z)
                        }
                    } else if (e && e.isBufferGeometry) {
                        const a = new Qn;
                        if (null !== e.index) {
                            const r = e.attributes.position,
                            o = e.index;
                            let s = e.groups;
                            0 === s.length && (s = [{
                                        start: 0,
                                        count: o.count,
                                        materialIndex: 0
                                    }
                                ]);
                            for (let e = 0, t = s.length; e < t; ++e) {
                                const t = s[e],
                                a = t.start;
                                for (let e = a, r = a + t.count; e < r; e += 3)
                                    for (let t = 0; t < 3; t++) {
                                        const a = o.getX(e + t),
                                        r = o.getX(e + (t + 1) % 3);
                                        n[0] = Math.min(a, r),
                                        n[1] = Math.max(a, r);
                                        const s = n[0] + "," + n[1];
                                        void 0 === i[s] && (i[s] = {
                                                index1: n[0],
                                                index2: n[1]
                                            })
                                    }
                            }
                            for (const e in i) {
                                const n = i[e];
                                a.fromBufferAttribute(r, n.index1),
                                t.push(a.x, a.y, a.z),
                                a.fromBufferAttribute(r, n.index2),
                                t.push(a.x, a.y, a.z)
                            }
                        } else {
                            const n = e.attributes.position;
                            for (let e = 0, i = n.count / 3; e < i; e++)
                                for (let i = 0; i < 3; i++) {
                                    const r = 3 * e + i;
                                    a.fromBufferAttribute(n, r),
                                    t.push(a.x, a.y, a.z);
                                    const o = 3 * e + (i + 1) % 3;
                                    a.fromBufferAttribute(n, o),
                                    t.push(a.x, a.y, a.z)
                                }
                        }
                    }
                    this.setAttribute("position", new Na(t, 3))
                }
            }
            var oh = Object.freeze({
                __proto__: null,
                BoxGeometry: kc,
                BoxBufferGeometry: hr,
                CircleGeometry: jc,
                CircleBufferGeometry: Gc,
                ConeGeometry: qc,
                ConeBufferGeometry: Yc,
                CylinderGeometry: Xc,
                CylinderBufferGeometry: Wc,
                DodecahedronGeometry: Jc,
                DodecahedronBufferGeometry: Qc,
                EdgesGeometry: nl,
                ExtrudeGeometry: Nl,
                ExtrudeBufferGeometry: El,
                IcosahedronGeometry: Vl,
                IcosahedronBufferGeometry: Pl,
                LatheGeometry: Fl,
                LatheBufferGeometry: Rl,
                OctahedronGeometry: Ol,
                OctahedronBufferGeometry: Il,
                ParametricGeometry: Ul,
                ParametricBufferGeometry: Dl,
                PlaneGeometry: Bl,
                PlaneBufferGeometry: Ar,
                PolyhedronGeometry: kl,
                PolyhedronBufferGeometry: Zc,
                RingGeometry: jl,
                RingBufferGeometry: Gl,
                ShapeGeometry: Xl,
                ShapeBufferGeometry: Wl,
                SphereGeometry: Yl,
                SphereBufferGeometry: ql,
                TetrahedronGeometry: Ql,
                TetrahedronBufferGeometry: Zl,
                TextGeometry: Kl,
                TextBufferGeometry: Jl,
                TorusGeometry: eh,
                TorusBufferGeometry: $l,
                TorusKnotGeometry: nh,
                TorusKnotBufferGeometry: th,
                TubeGeometry: ah,
                TubeBufferGeometry: ih,
                WireframeGeometry: rh
            });
            function sh(e) {
                ba.call(this),
                this.type = "ShadowMaterial",
                this.color = new ga(0),
                this.transparent = !0,
                this.setValues(e)
            }
            function ch(e) {
                pr.call(this, e),
                this.type = "RawShaderMaterial"
            }
            function lh(e) {
                ba.call(this),
                this.defines = {
                    STANDARD: ""
                },
                this.type = "MeshStandardMaterial",
                this.color = new ga(16777215),
                this.roughness = 1,
                this.metalness = 0,
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.emissive = new ga(0),
                this.emissiveIntensity = 1,
                this.emissiveMap = null,
                this.bumpMap = null,
                this.bumpScale = 1,
                this.normalMap = null,
                this.normalMapType = sn,
                this.normalScale = new Un(1, 1),
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.roughnessMap = null,
                this.metalnessMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.envMapIntensity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.vertexTangents = !1,
                this.setValues(e)
            }
            function hh(e) {
                lh.call(this),
                this.defines = {
                    STANDARD: "",
                    PHYSICAL: ""
                },
                this.type = "MeshPhysicalMaterial",
                this.clearcoat = 0,
                this.clearcoatMap = null,
                this.clearcoatRoughness = 0,
                this.clearcoatRoughnessMap = null,
                this.clearcoatNormalScale = new Un(1, 1),
                this.clearcoatNormalMap = null,
                this.reflectivity = .5,
                Object.defineProperty(this, "ior", {
                    get: function () {
                        return (1 + .4 * this.reflectivity) / (1 - .4 * this.reflectivity)
                    },
                    set: function (e) {
                        this.reflectivity = Dn.clamp(2.5 * (e - 1) / (e + 1), 0, 1)
                    }
                }),
                this.sheen = null,
                this.transmission = 0,
                this.transmissionMap = null,
                this.setValues(e)
            }
            function uh(e) {
                ba.call(this),
                this.type = "MeshPhongMaterial",
                this.color = new ga(16777215),
                this.specular = new ga(1118481),
                this.shininess = 30,
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.emissive = new ga(0),
                this.emissiveIntensity = 1,
                this.emissiveMap = null,
                this.bumpMap = null,
                this.bumpScale = 1,
                this.normalMap = null,
                this.normalMapType = sn,
                this.normalScale = new Un(1, 1),
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.specularMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.combine = Z,
                this.reflectivity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(e)
            }
            function fh(e) {
                ba.call(this),
                this.defines = {
                    TOON: ""
                },
                this.type = "MeshToonMaterial",
                this.color = new ga(16777215),
                this.map = null,
                this.gradientMap = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.emissive = new ga(0),
                this.emissiveIntensity = 1,
                this.emissiveMap = null,
                this.bumpMap = null,
                this.bumpScale = 1,
                this.normalMap = null,
                this.normalMapType = sn,
                this.normalScale = new Un(1, 1),
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.alphaMap = null,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(e)
            }
            function dh(e) {
                ba.call(this),
                this.type = "MeshNormalMaterial",
                this.bumpMap = null,
                this.bumpScale = 1,
                this.normalMap = null,
                this.normalMapType = sn,
                this.normalScale = new Un(1, 1),
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.fog = !1,
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(e)
            }
            function ph(e) {
                ba.call(this),
                this.type = "MeshLambertMaterial",
                this.color = new ga(16777215),
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.emissive = new ga(0),
                this.emissiveIntensity = 1,
                this.emissiveMap = null,
                this.specularMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.combine = Z,
                this.reflectivity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(e)
            }
            function mh(e) {
                ba.call(this),
                this.defines = {
                    MATCAP: ""
                },
                this.type = "MeshMatcapMaterial",
                this.color = new ga(16777215),
                this.matcap = null,
                this.map = null,
                this.bumpMap = null,
                this.bumpScale = 1,
                this.normalMap = null,
                this.normalMapType = sn,
                this.normalScale = new Un(1, 1),
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.alphaMap = null,
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(e)
            }
            function vh(e) {
                mc.call(this),
                this.type = "LineDashedMaterial",
                this.scale = 1,
                this.dashSize = 3,
                this.gapSize = 1,
                this.setValues(e)
            }
            sh.prototype = Object.create(ba.prototype),
            sh.prototype.constructor = sh,
            sh.prototype.isShadowMaterial = !0,
            sh.prototype.copy = function (e) {
                return ba.prototype.copy.call(this, e),
                this.color.copy(e.color),
                this
            },
            ch.prototype = Object.create(pr.prototype),
            ch.prototype.constructor = ch,
            ch.prototype.isRawShaderMaterial = !0,
            lh.prototype = Object.create(ba.prototype),
            lh.prototype.constructor = lh,
            lh.prototype.isMeshStandardMaterial = !0,
            lh.prototype.copy = function (e) {
                return ba.prototype.copy.call(this, e),
                this.defines = {
                    STANDARD: ""
                },
                this.color.copy(e.color),
                this.roughness = e.roughness,
                this.metalness = e.metalness,
                this.map = e.map,
                this.lightMap = e.lightMap,
                this.lightMapIntensity = e.lightMapIntensity,
                this.aoMap = e.aoMap,
                this.aoMapIntensity = e.aoMapIntensity,
                this.emissive.copy(e.emissive),
                this.emissiveMap = e.emissiveMap,
                this.emissiveIntensity = e.emissiveIntensity,
                this.bumpMap = e.bumpMap,
                this.bumpScale = e.bumpScale,
                this.normalMap = e.normalMap,
                this.normalMapType = e.normalMapType,
                this.normalScale.copy(e.normalScale),
                this.displacementMap = e.displacementMap,
                this.displacementScale = e.displacementScale,
                this.displacementBias = e.displacementBias,
                this.roughnessMap = e.roughnessMap,
                this.metalnessMap = e.metalnessMap,
                this.alphaMap = e.alphaMap,
                this.envMap = e.envMap,
                this.envMapIntensity = e.envMapIntensity,
                this.refractionRatio = e.refractionRatio,
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this.wireframeLinecap = e.wireframeLinecap,
                this.wireframeLinejoin = e.wireframeLinejoin,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.morphNormals = e.morphNormals,
                this.vertexTangents = e.vertexTangents,
                this
            },
            hh.prototype = Object.create(lh.prototype),
            hh.prototype.constructor = hh,
            hh.prototype.isMeshPhysicalMaterial = !0,
            hh.prototype.copy = function (e) {
                return lh.prototype.copy.call(this, e),
                this.defines = {
                    STANDARD: "",
                    PHYSICAL: ""
                },
                this.clearcoat = e.clearcoat,
                this.clearcoatMap = e.clearcoatMap,
                this.clearcoatRoughness = e.clearcoatRoughness,
                this.clearcoatRoughnessMap = e.clearcoatRoughnessMap,
                this.clearcoatNormalMap = e.clearcoatNormalMap,
                this.clearcoatNormalScale.copy(e.clearcoatNormalScale),
                this.reflectivity = e.reflectivity,
                e.sheen ? this.sheen = (this.sheen || new ga).copy(e.sheen) : this.sheen = null,
                this.transmission = e.transmission,
                this.transmissionMap = e.transmissionMap,
                this
            },
            uh.prototype = Object.create(ba.prototype),
            uh.prototype.constructor = uh,
            uh.prototype.isMeshPhongMaterial = !0,
            uh.prototype.copy = function (e) {
                return ba.prototype.copy.call(this, e),
                this.color.copy(e.color),
                this.specular.copy(e.specular),
                this.shininess = e.shininess,
                this.map = e.map,
                this.lightMap = e.lightMap,
                this.lightMapIntensity = e.lightMapIntensity,
                this.aoMap = e.aoMap,
                this.aoMapIntensity = e.aoMapIntensity,
                this.emissive.copy(e.emissive),
                this.emissiveMap = e.emissiveMap,
                this.emissiveIntensity = e.emissiveIntensity,
                this.bumpMap = e.bumpMap,
                this.bumpScale = e.bumpScale,
                this.normalMap = e.normalMap,
                this.normalMapType = e.normalMapType,
                this.normalScale.copy(e.normalScale),
                this.displacementMap = e.displacementMap,
                this.displacementScale = e.displacementScale,
                this.displacementBias = e.displacementBias,
                this.specularMap = e.specularMap,
                this.alphaMap = e.alphaMap,
                this.envMap = e.envMap,
                this.combine = e.combine,
                this.reflectivity = e.reflectivity,
                this.refractionRatio = e.refractionRatio,
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this.wireframeLinecap = e.wireframeLinecap,
                this.wireframeLinejoin = e.wireframeLinejoin,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.morphNormals = e.morphNormals,
                this
            },
            fh.prototype = Object.create(ba.prototype),
            fh.prototype.constructor = fh,
            fh.prototype.isMeshToonMaterial = !0,
            fh.prototype.copy = function (e) {
                return ba.prototype.copy.call(this, e),
                this.color.copy(e.color),
                this.map = e.map,
                this.gradientMap = e.gradientMap,
                this.lightMap = e.lightMap,
                this.lightMapIntensity = e.lightMapIntensity,
                this.aoMap = e.aoMap,
                this.aoMapIntensity = e.aoMapIntensity,
                this.emissive.copy(e.emissive),
                this.emissiveMap = e.emissiveMap,
                this.emissiveIntensity = e.emissiveIntensity,
                this.bumpMap = e.bumpMap,
                this.bumpScale = e.bumpScale,
                this.normalMap = e.normalMap,
                this.normalMapType = e.normalMapType,
                this.normalScale.copy(e.normalScale),
                this.displacementMap = e.displacementMap,
                this.displacementScale = e.displacementScale,
                this.displacementBias = e.displacementBias,
                this.alphaMap = e.alphaMap,
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this.wireframeLinecap = e.wireframeLinecap,
                this.wireframeLinejoin = e.wireframeLinejoin,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.morphNormals = e.morphNormals,
                this
            },
            dh.prototype = Object.create(ba.prototype),
            dh.prototype.constructor = dh,
            dh.prototype.isMeshNormalMaterial = !0,
            dh.prototype.copy = function (e) {
                return ba.prototype.copy.call(this, e),
                this.bumpMap = e.bumpMap,
                this.bumpScale = e.bumpScale,
                this.normalMap = e.normalMap,
                this.normalMapType = e.normalMapType,
                this.normalScale.copy(e.normalScale),
                this.displacementMap = e.displacementMap,
                this.displacementScale = e.displacementScale,
                this.displacementBias = e.displacementBias,
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.morphNormals = e.morphNormals,
                this
            },
            ph.prototype = Object.create(ba.prototype),
            ph.prototype.constructor = ph,
            ph.prototype.isMeshLambertMaterial = !0,
            ph.prototype.copy = function (e) {
                return ba.prototype.copy.call(this, e),
                this.color.copy(e.color),
                this.map = e.map,
                this.lightMap = e.lightMap,
                this.lightMapIntensity = e.lightMapIntensity,
                this.aoMap = e.aoMap,
                this.aoMapIntensity = e.aoMapIntensity,
                this.emissive.copy(e.emissive),
                this.emissiveMap = e.emissiveMap,
                this.emissiveIntensity = e.emissiveIntensity,
                this.specularMap = e.specularMap,
                this.alphaMap = e.alphaMap,
                this.envMap = e.envMap,
                this.combine = e.combine,
                this.reflectivity = e.reflectivity,
                this.refractionRatio = e.refractionRatio,
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this.wireframeLinecap = e.wireframeLinecap,
                this.wireframeLinejoin = e.wireframeLinejoin,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.morphNormals = e.morphNormals,
                this
            },
            mh.prototype = Object.create(ba.prototype),
            mh.prototype.constructor = mh,
            mh.prototype.isMeshMatcapMaterial = !0,
            mh.prototype.copy = function (e) {
                return ba.prototype.copy.call(this, e),
                this.defines = {
                    MATCAP: ""
                },
                this.color.copy(e.color),
                this.matcap = e.matcap,
                this.map = e.map,
                this.bumpMap = e.bumpMap,
                this.bumpScale = e.bumpScale,
                this.normalMap = e.normalMap,
                this.normalMapType = e.normalMapType,
                this.normalScale.copy(e.normalScale),
                this.displacementMap = e.displacementMap,
                this.displacementScale = e.displacementScale,
                this.displacementBias = e.displacementBias,
                this.alphaMap = e.alphaMap,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.morphNormals = e.morphNormals,
                this
            },
            vh.prototype = Object.create(mc.prototype),
            vh.prototype.constructor = vh,
            vh.prototype.isLineDashedMaterial = !0,
            vh.prototype.copy = function (e) {
                return mc.prototype.copy.call(this, e),
                this.scale = e.scale,
                this.dashSize = e.dashSize,
                this.gapSize = e.gapSize,
                this
            };
            var gh = Object.freeze({
                __proto__: null,
                ShadowMaterial: sh,
                SpriteMaterial: Us,
                RawShaderMaterial: ch,
                ShaderMaterial: pr,
                PointsMaterial: Lc,
                MeshPhysicalMaterial: hh,
                MeshStandardMaterial: lh,
                MeshPhongMaterial: uh,
                MeshToonMaterial: fh,
                MeshNormalMaterial: dh,
                MeshLambertMaterial: ph,
                MeshDepthMaterial: Ms,
                MeshDistanceMaterial: zs,
                MeshBasicMaterial: Ma,
                MeshMatcapMaterial: mh,
                LineDashedMaterial: vh,
                LineBasicMaterial: mc,
                Material: ba
            });
            const xh = {
                arraySlice: function (e, t, n) {
                    return xh.isTypedArray(e) ? new e.constructor(e.subarray(t, void 0 !== n ? n : e.length)) : e.slice(t, n)
                },
                convertArray: function (e, t, n) {
                    return !e || !n && e.constructor === t ? e : "number" == typeof t.BYTES_PER_ELEMENT ? new t(e) : Array.prototype.slice.call(e)
                },
                isTypedArray: function (e) {
                    return ArrayBuffer.isView(e) && !(e instanceof DataView)
                },
                getKeyframeOrder: function (e) {
                    const t = e.length,
                    n = new Array(t);
                    for (let e = 0; e !== t; ++e)
                        n[e] = e;
                    return n.sort((function (t, n) {
                            return e[t] - e[n]
                        })),
                    n
                },
                sortedArray: function (e, t, n) {
                    const i = e.length,
                    a = new e.constructor(i);
                    for (let r = 0, o = 0; o !== i; ++r) {
                        const i = n[r] * t;
                        for (let n = 0; n !== t; ++n)
                            a[o++] = e[i + n]
                    }
                    return a
                },
                flattenJSON: function (e, t, n, i) {
                    let a = 1,
                    r = e[0];
                    for (; void 0 !== r && void 0 === r[i]; )
                        r = e[a++];
                    if (void 0 === r)
                        return;
                    let o = r[i];
                    if (void 0 !== o)
                        if (Array.isArray(o))
                            do {
                                o = r[i],
                                void 0 !== o && (t.push(r.time), n.push.apply(n, o)),
                                r = e[a++]
                            } while (void 0 !== r);
                        else if (void 0 !== o.toArray)
                            do {
                                o = r[i],
                                void 0 !== o && (t.push(r.time), o.toArray(n, n.length)),
                                r = e[a++]
                            } while (void 0 !== r);
                        else
                            do {
                                o = r[i],
                                void 0 !== o && (t.push(r.time), n.push(o)),
                                r = e[a++]
                            } while (void 0 !== r)
                },
                subclip: function (e, t, n, i, a) {
                    a = a || 30;
                    const r = e.clone();
                    r.name = t;
                    const o = [];
                    for (let e = 0; e < r.tracks.length; ++e) {
                        const t = r.tracks[e],
                        s = t.getValueSize(),
                        c = [],
                        l = [];
                        for (let e = 0; e < t.times.length; ++e) {
                            const r = t.times[e] * a;
                            if (!(r < n || r >= i)) {
                                c.push(t.times[e]);
                                for (let n = 0; n < s; ++n)
                                    l.push(t.values[e * s + n])
                            }
                        }
                        0 !== c.length && (t.times = xh.convertArray(c, t.times.constructor), t.values = xh.convertArray(l, t.values.constructor), o.push(t))
                    }
                    r.tracks = o;
                    let s = 1 / 0;
                    for (let e = 0; e < r.tracks.length; ++e)
                        s > r.tracks[e].times[0] && (s = r.tracks[e].times[0]);
                    for (let e = 0; e < r.tracks.length; ++e)
                        r.tracks[e].shift(-1 * s);
                    return r.resetDuration(),
                    r
                },
                makeClipAdditive: function (e, t, n, i) {
                    void 0 === t && (t = 0),
                    void 0 === n && (n = e),
                    (void 0 === i || i <= 0) && (i = 30);
                    const a = n.tracks.length,
                    r = t / i;
                    for (let t = 0; t < a; ++t) {
                        const i = n.tracks[t],
                        a = i.ValueTypeName;
                        if ("bool" === a || "string" === a)
                            continue;
                        const o = e.tracks.find((function (e) {
                                    return e.name === i.name && e.ValueTypeName === a
                                }));
                        if (void 0 === o)
                            continue;
                        let s = 0;
                        const c = i.getValueSize();
                        i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (s = c / 3);
                        let l = 0;
                        const h = o.getValueSize();
                        o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (l = h / 3);
                        const u = i.times.length - 1;
                        let f;
                        if (r <= i.times[0]) {
                            const e = s,
                            t = c - s;
                            f = xh.arraySlice(i.values, e, t)
                        } else if (r >= i.times[u]) {
                            const e = u * c + s,
                            t = e + c - s;
                            f = xh.arraySlice(i.values, e, t)
                        } else {
                            const e = i.createInterpolant(),
                            t = s,
                            n = c - s;
                            e.evaluate(r),
                            f = xh.arraySlice(e.resultBuffer, t, n)
                        }
                        "quaternion" === a && (new Zn).fromArray(f).normalize().conjugate().toArray(f);
                        const d = o.times.length;
                        for (let e = 0; e < d; ++e) {
                            const t = e * h + l;
                            if ("quaternion" === a)
                                Zn.multiplyQuaternionsFlat(o.values, t, f, 0, o.values, t);
                            else {
                                const e = h - 2 * l;
                                for (let n = 0; n < e; ++n)
                                    o.values[t + n] -= f[n]
                            }
                        }
                    }
                    return e.blendMode = Xt,
                    e
                }
            };
            function yh(e, t, n, i) {
                this.parameterPositions = e,
                this._cachedIndex = 0,
                this.resultBuffer = void 0 !== i ? i : new t.constructor(n),
                this.sampleValues = t,
                this.valueSize = n
            }
            function bh(e, t, n, i) {
                yh.call(this, e, t, n, i),
                this._weightPrev = -0,
                this._offsetPrev = -0,
                this._weightNext = -0,
                this._offsetNext = -0
            }
            function Mh(e, t, n, i) {
                yh.call(this, e, t, n, i)
            }
            function zh(e, t, n, i) {
                yh.call(this, e, t, n, i)
            }
            function wh(e, t, n, i) {
                if (void 0 === e)
                    throw new Error("THREE.KeyframeTrack: track name is undefined");
                if (void 0 === t || 0 === t.length)
                    throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
                this.name = e,
                this.times = xh.convertArray(t, this.TimeBufferType),
                this.values = xh.convertArray(n, this.ValueBufferType),
                this.setInterpolation(i || this.DefaultInterpolation)
            }
            function _h(e, t, n) {
                wh.call(this, e, t, n)
            }
            function Sh(e, t, n, i) {
                wh.call(this, e, t, n, i)
            }
            function Lh(e, t, n, i) {
                wh.call(this, e, t, n, i)
            }
            function Ah(e, t, n, i) {
                yh.call(this, e, t, n, i)
            }
            function Th(e, t, n, i) {
                wh.call(this, e, t, n, i)
            }
            function Ch(e, t, n, i) {
                wh.call(this, e, t, n, i)
            }
            function Eh(e, t, n, i) {
                wh.call(this, e, t, n, i)
            }
            function Hh(e, t, n, i) {
                this.name = e,
                this.tracks = n,
                this.duration = void 0 !== t ? t : -1,
                this.blendMode = void 0 !== i ? i : Wt,
                this.uuid = Dn.generateUUID(),
                this.duration < 0 && this.resetDuration()
            }
            function Nh(e) {
                if (void 0 === e.type)
                    throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
                const t = function (e) {
                    switch (e.toLowerCase()) {
                    case "scalar":
                    case "double":
                    case "float":
                    case "number":
                    case "integer":
                        return Lh;
                    case "vector":
                    case "vector2":
                    case "vector3":
                    case "vector4":
                        return Eh;
                    case "color":
                        return Sh;
                    case "quaternion":
                        return Th;
                    case "bool":
                    case "boolean":
                        return _h;
                    case "string":
                        return Ch
                    }
                    throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + e)
                }
                (e.type);
                if (void 0 === e.times) {
                    const t = [],
                    n = [];
                    xh.flattenJSON(e.keys, t, n, "value"),
                    e.times = t,
                    e.values = n
                }
                return void 0 !== t.parse ? t.parse(e) : new t(e.name, e.times, e.values, e.interpolation)
            }
            Object.assign(yh.prototype, {
                evaluate: function (e) {
                    const t = this.parameterPositions;
                    let n = this._cachedIndex,
                    i = t[n],
                    a = t[n - 1];
                    e: {
                        t: {
                            let r;
                            n: {
                                i: if (!(e < i)) {
                                    for (let r = n + 2; ; ) {
                                        if (void 0 === i) {
                                            if (e < a)
                                                break i;
                                            return n = t.length,
                                            this._cachedIndex = n,
                                            this.afterEnd_(n - 1, e, a)
                                        }
                                        if (n === r)
                                            break;
                                        if (a = i, i = t[++n], e < i)
                                            break t
                                    }
                                    r = t.length;
                                    break n
                                }
                                if (e >= a)
                                    break e; {
                                    const o = t[1];
                                    e < o && (n = 2, a = o);
                                    for (let r = n - 2; ; ) {
                                        if (void 0 === a)
                                            return this._cachedIndex = 0, this.beforeStart_(0, e, i);
                                        if (n === r)
                                            break;
                                        if (i = a, a = t[--n - 1], e >= a)
                                            break t
                                    }
                                    r = n,
                                    n = 0
                                }
                            }
                            for (; n < r; ) {
                                const i = n + r >>> 1;
                                e < t[i] ? r = i : n = i + 1
                            }
                            if (i = t[n], a = t[n - 1], void 0 === a)
                                return this._cachedIndex = 0, this.beforeStart_(0, e, i);
                            if (void 0 === i)
                                return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, a, e)
                        }
                        this._cachedIndex = n,
                        this.intervalChanged_(n, a, i)
                    }
                    return this.interpolate_(n, a, e, i)
                },
                settings: null,
                DefaultSettings_: {},
                getSettings_: function () {
                    return this.settings || this.DefaultSettings_
                },
                copySampleValue_: function (e) {
                    const t = this.resultBuffer,
                    n = this.sampleValues,
                    i = this.valueSize,
                    a = e * i;
                    for (let e = 0; e !== i; ++e)
                        t[e] = n[a + e];
                    return t
                },
                interpolate_: function () {
                    throw new Error("call to abstract method")
                },
                intervalChanged_: function () {}
            }),
            Object.assign(yh.prototype, {
                beforeStart_: yh.prototype.copySampleValue_,
                afterEnd_: yh.prototype.copySampleValue_
            }),
            bh.prototype = Object.assign(Object.create(yh.prototype), {
                constructor: bh,
                DefaultSettings_: {
                    endingStart: kt,
                    endingEnd: kt
                },
                intervalChanged_: function (e, t, n) {
                    const i = this.parameterPositions;
                    let a = e - 2,
                    r = e + 1,
                    o = i[a],
                    s = i[r];
                    if (void 0 === o)
                        switch (this.getSettings_().endingStart) {
                        case Gt:
                            a = e,
                            o = 2 * t - n;
                            break;
                        case jt:
                            a = i.length - 2,
                            o = t + i[a] - i[a + 1];
                            break;
                        default:
                            a = e,
                            o = n
                        }
                    if (void 0 === s)
                        switch (this.getSettings_().endingEnd) {
                        case Gt:
                            r = e,
                            s = 2 * n - t;
                            break;
                        case jt:
                            r = 1,
                            s = n + i[1] - i[0];
                            break;
                        default:
                            r = e - 1,
                            s = t
                        }
                    const c = .5 * (n - t),
                    l = this.valueSize;
                    this._weightPrev = c / (t - o),
                    this._weightNext = c / (s - n),
                    this._offsetPrev = a * l,
                    this._offsetNext = r * l
                },
                interpolate_: function (e, t, n, i) {
                    const a = this.resultBuffer,
                    r = this.sampleValues,
                    o = this.valueSize,
                    s = e * o,
                    c = s - o,
                    l = this._offsetPrev,
                    h = this._offsetNext,
                    u = this._weightPrev,
                    f = this._weightNext,
                    d = (n - t) / (i - t),
                    p = d * d,
                    m = p * d,
                    v = -u * m + 2 * u * p - u * d,
                    g = (1 + u) * m + (-1.5 - 2 * u) * p + ( - .5 + u) * d + 1,
                    x = (-1 - f) * m + (1.5 + f) * p + .5 * d,
                    y = f * m - f * p;
                    for (let e = 0; e !== o; ++e)
                        a[e] = v * r[l + e] + g * r[c + e] + x * r[s + e] + y * r[h + e];
                    return a
                }
            }),
            Mh.prototype = Object.assign(Object.create(yh.prototype), {
                constructor: Mh,
                interpolate_: function (e, t, n, i) {
                    const a = this.resultBuffer,
                    r = this.sampleValues,
                    o = this.valueSize,
                    s = e * o,
                    c = s - o,
                    l = (n - t) / (i - t),
                    h = 1 - l;
                    for (let e = 0; e !== o; ++e)
                        a[e] = r[c + e] * h + r[s + e] * l;
                    return a
                }
            }),
            zh.prototype = Object.assign(Object.create(yh.prototype), {
                constructor: zh,
                interpolate_: function (e) {
                    return this.copySampleValue_(e - 1)
                }
            }),
            Object.assign(wh, {
                toJSON: function (e) {
                    const t = e.constructor;
                    let n;
                    if (void 0 !== t.toJSON)
                        n = t.toJSON(e);
                    else {
                        n = {
                            name: e.name,
                            times: xh.convertArray(e.times, Array),
                            values: xh.convertArray(e.values, Array)
                        };
                        const t = e.getInterpolation();
                        t !== e.DefaultInterpolation && (n.interpolation = t)
                    }
                    return n.type = e.ValueTypeName,
                    n
                }
            }),
            Object.assign(wh.prototype, {
                constructor: wh,
                TimeBufferType: Float32Array,
                ValueBufferType: Float32Array,
                DefaultInterpolation: Ut,
                InterpolantFactoryMethodDiscrete: function (e) {
                    return new zh(this.times, this.values, this.getValueSize(), e)
                },
                InterpolantFactoryMethodLinear: function (e) {
                    return new Mh(this.times, this.values, this.getValueSize(), e)
                },
                InterpolantFactoryMethodSmooth: function (e) {
                    return new bh(this.times, this.values, this.getValueSize(), e)
                },
                setInterpolation: function (e) {
                    let t;
                    switch (e) {
                    case Dt:
                        t = this.InterpolantFactoryMethodDiscrete;
                        break;
                    case Ut:
                        t = this.InterpolantFactoryMethodLinear;
                        break;
                    case Bt:
                        t = this.InterpolantFactoryMethodSmooth
                    }
                    if (void 0 === t) {
                        const t = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                        if (void 0 === this.createInterpolant) {
                            if (e === this.DefaultInterpolation)
                                throw new Error(t);
                            this.setInterpolation(this.DefaultInterpolation)
                        }
                        return console.warn("THREE.KeyframeTrack:", t),
                        this
                    }
                    return this.createInterpolant = t,
                    this
                },
                getInterpolation: function () {
                    switch (this.createInterpolant) {
                    case this.InterpolantFactoryMethodDiscrete:
                        return Dt;
                    case this.InterpolantFactoryMethodLinear:
                        return Ut;
                    case this.InterpolantFactoryMethodSmooth:
                        return Bt
                    }
                },
                getValueSize: function () {
                    return this.values.length / this.times.length
                },
                shift: function (e) {
                    if (0 !== e) {
                        const t = this.times;
                        for (let n = 0, i = t.length; n !== i; ++n)
                            t[n] += e
                    }
                    return this
                },
                scale: function (e) {
                    if (1 !== e) {
                        const t = this.times;
                        for (let n = 0, i = t.length; n !== i; ++n)
                            t[n] *= e
                    }
                    return this
                },
                trim: function (e, t) {
                    const n = this.times,
                    i = n.length;
                    let a = 0,
                    r = i - 1;
                    for (; a !== i && n[a] < e; )
                        ++a;
                    for (; -1 !== r && n[r] > t; )
                        --r;
                    if (++r, 0 !== a || r !== i) {
                        a >= r && (r = Math.max(r, 1), a = r - 1);
                        const e = this.getValueSize();
                        this.times = xh.arraySlice(n, a, r),
                        this.values = xh.arraySlice(this.values, a * e, r * e)
                    }
                    return this
                },
                validate: function () {
                    let e = !0;
                    const t = this.getValueSize();
                    t - Math.floor(t) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = !1);
                    const n = this.times,
                    i = this.values,
                    a = n.length;
                    0 === a && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = !1);
                    let r = null;
                    for (let t = 0; t !== a; t++) {
                        const i = n[t];
                        if ("number" == typeof i && isNaN(i)) {
                            console.error("THREE.KeyframeTrack: Time is not a valid number.", this, t, i),
                            e = !1;
                            break
                        }
                        if (null !== r && r > i) {
                            console.error("THREE.KeyframeTrack: Out of order keys.", this, t, i, r),
                            e = !1;
                            break
                        }
                        r = i
                    }
                    if (void 0 !== i && xh.isTypedArray(i))
                        for (let t = 0, n = i.length; t !== n; ++t) {
                            const n = i[t];
                            if (isNaN(n)) {
                                console.error("THREE.KeyframeTrack: Value is not a valid number.", this, t, n),
                                e = !1;
                                break
                            }
                        }
                    return e
                },
                optimize: function () {
                    const e = xh.arraySlice(this.times),
                    t = xh.arraySlice(this.values),
                    n = this.getValueSize(),
                    i = this.getInterpolation() === Bt,
                    a = e.length - 1;
                    let r = 1;
                    for (let o = 1; o < a; ++o) {
                        let a = !1;
                        const s = e[o];
                        if (s !== e[o + 1] && (1 !== o || s !== s[0]))
                            if (i)
                                a = !0;
                            else {
                                const e = o * n,
                                i = e - n,
                                r = e + n;
                                for (let o = 0; o !== n; ++o) {
                                    const n = t[e + o];
                                    if (n !== t[i + o] || n !== t[r + o]) {
                                        a = !0;
                                        break
                                    }
                                }
                            }
                        if (a) {
                            if (o !== r) {
                                e[r] = e[o];
                                const i = o * n,
                                a = r * n;
                                for (let e = 0; e !== n; ++e)
                                    t[a + e] = t[i + e]
                            }
                            ++r
                        }
                    }
                    if (a > 0) {
                        e[r] = e[a];
                        for (let e = a * n, i = r * n, o = 0; o !== n; ++o)
                            t[i + o] = t[e + o];
                        ++r
                    }
                    return r !== e.length ? (this.times = xh.arraySlice(e, 0, r), this.values = xh.arraySlice(t, 0, r * n)) : (this.times = e, this.values = t),
                    this
                },
                clone: function () {
                    const e = xh.arraySlice(this.times, 0),
                    t = xh.arraySlice(this.values, 0),
                    n = new(0, this.constructor)(this.name, e, t);
                    return n.createInterpolant = this.createInterpolant,
                    n
                }
            }),
            _h.prototype = Object.assign(Object.create(wh.prototype), {
                constructor: _h,
                ValueTypeName: "bool",
                ValueBufferType: Array,
                DefaultInterpolation: Dt,
                InterpolantFactoryMethodLinear: void 0,
                InterpolantFactoryMethodSmooth: void 0
            }),
            Sh.prototype = Object.assign(Object.create(wh.prototype), {
                constructor: Sh,
                ValueTypeName: "color"
            }),
            Lh.prototype = Object.assign(Object.create(wh.prototype), {
                constructor: Lh,
                ValueTypeName: "number"
            }),
            Ah.prototype = Object.assign(Object.create(yh.prototype), {
                constructor: Ah,
                interpolate_: function (e, t, n, i) {
                    const a = this.resultBuffer,
                    r = this.sampleValues,
                    o = this.valueSize,
                    s = (n - t) / (i - t);
                    let c = e * o;
                    for (let e = c + o; c !== e; c += 4)
                        Zn.slerpFlat(a, 0, r, c - o, r, c, s);
                    return a
                }
            }),
            Th.prototype = Object.assign(Object.create(wh.prototype), {
                constructor: Th,
                ValueTypeName: "quaternion",
                DefaultInterpolation: Ut,
                InterpolantFactoryMethodLinear: function (e) {
                    return new Ah(this.times, this.values, this.getValueSize(), e)
                },
                InterpolantFactoryMethodSmooth: void 0
            }),
            Ch.prototype = Object.assign(Object.create(wh.prototype), {
                constructor: Ch,
                ValueTypeName: "string",
                ValueBufferType: Array,
                DefaultInterpolation: Dt,
                InterpolantFactoryMethodLinear: void 0,
                InterpolantFactoryMethodSmooth: void 0
            }),
            Eh.prototype = Object.assign(Object.create(wh.prototype), {
                constructor: Eh,
                ValueTypeName: "vector"
            }),
            Object.assign(Hh, {
                parse: function (e) {
                    const t = [],
                    n = e.tracks,
                    i = 1 / (e.fps || 1);
                    for (let e = 0, a = n.length; e !== a; ++e)
                        t.push(Nh(n[e]).scale(i));
                    return new Hh(e.name, e.duration, t, e.blendMode)
                },
                toJSON: function (e) {
                    const t = [],
                    n = e.tracks,
                    i = {
                        name: e.name,
                        duration: e.duration,
                        tracks: t,
                        uuid: e.uuid,
                        blendMode: e.blendMode
                    };
                    for (let e = 0, i = n.length; e !== i; ++e)
                        t.push(wh.toJSON(n[e]));
                    return i
                },
                CreateFromMorphTargetSequence: function (e, t, n, i) {
                    const a = t.length,
                    r = [];
                    for (let e = 0; e < a; e++) {
                        let o = [],
                        s = [];
                        o.push((e + a - 1) % a, e, (e + 1) % a),
                        s.push(0, 1, 0);
                        const c = xh.getKeyframeOrder(o);
                        o = xh.sortedArray(o, 1, c),
                        s = xh.sortedArray(s, 1, c),
                        i || 0 !== o[0] || (o.push(a), s.push(s[0])),
                        r.push(new Lh(".morphTargetInfluences[" + t[e].name + "]", o, s).scale(1 / n))
                    }
                    return new Hh(e, -1, r)
                },
                findByName: function (e, t) {
                    let n = e;
                    if (!Array.isArray(e)) {
                        const t = e;
                        n = t.geometry && t.geometry.animations || t.animations
                    }
                    for (let e = 0; e < n.length; e++)
                        if (n[e].name === t)
                            return n[e];
                    return null
                },
                CreateClipsFromMorphTargetSequences: function (e, t, n) {
                    const i = {},
                    a = /^([\w-]*?)([\d]+)$/;
                    for (let t = 0, n = e.length; t < n; t++) {
                        const n = e[t],
                        r = n.name.match(a);
                        if (r && r.length > 1) {
                            const e = r[1];
                            let t = i[e];
                            t || (i[e] = t = []),
                            t.push(n)
                        }
                    }
                    const r = [];
                    for (const e in i)
                        r.push(Hh.CreateFromMorphTargetSequence(e, i[e], t, n));
                    return r
                },
                parseAnimation: function (e, t) {
                    if (!e)
                        return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
                    const n = function (e, t, n, i, a) {
                        if (0 !== n.length) {
                            const r = [],
                            o = [];
                            xh.flattenJSON(n, r, o, i),
                            0 !== r.length && a.push(new e(t, r, o))
                        }
                    },
                    i = [],
                    a = e.name || "default",
                    r = e.fps || 30,
                    o = e.blendMode;
                    let s = e.length || -1;
                    const c = e.hierarchy || [];
                    for (let e = 0; e < c.length; e++) {
                        const a = c[e].keys;
                        if (a && 0 !== a.length)
                            if (a[0].morphTargets) {
                                const e = {};
                                let t;
                                for (t = 0; t < a.length; t++)
                                    if (a[t].morphTargets)
                                        for (let n = 0; n < a[t].morphTargets.length; n++)
                                            e[a[t].morphTargets[n]] = -1;
                                for (const n in e) {
                                    const e = [],
                                    r = [];
                                    for (let i = 0; i !== a[t].morphTargets.length; ++i) {
                                        const i = a[t];
                                        e.push(i.time),
                                        r.push(i.morphTarget === n ? 1 : 0)
                                    }
                                    i.push(new Lh(".morphTargetInfluence[" + n + "]", e, r))
                                }
                                s = e.length * (r || 1)
                            } else {
                                const r = ".bones[" + t[e].name + "]";
                                n(Eh, r + ".position", a, "pos", i),
                                n(Th, r + ".quaternion", a, "rot", i),
                                n(Eh, r + ".scale", a, "scl", i)
                            }
                    }
                    return 0 === i.length ? null : new Hh(a, s, i, o)
                }
            }),
            Object.assign(Hh.prototype, {
                resetDuration: function () {
                    let e = 0;
                    for (let t = 0, n = this.tracks.length; t !== n; ++t) {
                        const n = this.tracks[t];
                        e = Math.max(e, n.times[n.times.length - 1])
                    }
                    return this.duration = e,
                    this
                },
                trim: function () {
                    for (let e = 0; e < this.tracks.length; e++)
                        this.tracks[e].trim(0, this.duration);
                    return this
                },
                validate: function () {
                    let e = !0;
                    for (let t = 0; t < this.tracks.length; t++)
                        e = e && this.tracks[t].validate();
                    return e
                },
                optimize: function () {
                    for (let e = 0; e < this.tracks.length; e++)
                        this.tracks[e].optimize();
                    return this
                },
                clone: function () {
                    const e = [];
                    for (let t = 0; t < this.tracks.length; t++)
                        e.push(this.tracks[t].clone());
                    return new Hh(this.name, this.duration, e, this.blendMode)
                }
            });
            const Ph = {
                enabled: !1,
                files: {},
                add: function (e, t) {
                    !1 !== this.enabled && (this.files[e] = t)
                },
                get: function (e) {
                    if (!1 !== this.enabled)
                        return this.files[e]
                },
                remove: function (e) {
                    delete this.files[e]
                },
                clear: function () {
                    this.files = {}
                }
            };
            function Vh(e, t, n) {
                const i = this;
                let a = !1,
                r = 0,
                o = 0,
                s = void 0;
                const c = [];
                this.onStart = void 0,
                this.onLoad = e,
                this.onProgress = t,
                this.onError = n,
                this.itemStart = function (e) {
                    o++,
                    !1 === a && void 0 !== i.onStart && i.onStart(e, r, o),
                    a = !0
                },
                this.itemEnd = function (e) {
                    r++,
                    void 0 !== i.onProgress && i.onProgress(e, r, o),
                    r === o && (a = !1, void 0 !== i.onLoad && i.onLoad())
                },
                this.itemError = function (e) {
                    void 0 !== i.onError && i.onError(e)
                },
                this.resolveURL = function (e) {
                    return s ? s(e) : e
                },
                this.setURLModifier = function (e) {
                    return s = e,
                    this
                },
                this.addHandler = function (e, t) {
                    return c.push(e, t),
                    this
                },
                this.removeHandler = function (e) {
                    const t = c.indexOf(e);
                    return -1 !== t && c.splice(t, 2),
                    this
                },
                this.getHandler = function (e) {
                    for (let t = 0, n = c.length; t < n; t += 2) {
                        const n = c[t],
                        i = c[t + 1];
                        if (n.global && (n.lastIndex = 0), n.test(e))
                            return i
                    }
                    return null
                }
            }
            const Rh = new Vh;
            function Fh(e) {
                this.manager = void 0 !== e ? e : Rh,
                this.crossOrigin = "anonymous",
                this.withCredentials = !1,
                this.path = "",
                this.resourcePath = "",
                this.requestHeader = {}
            }
            Object.assign(Fh.prototype, {
                load: function () {},
                loadAsync: function (e, t) {
                    const n = this;
                    return new Promise((function (i, a) {
                            n.load(e, i, t, a)
                        }))
                },
                parse: function () {},
                setCrossOrigin: function (e) {
                    return this.crossOrigin = e,
                    this
                },
                setWithCredentials: function (e) {
                    return this.withCredentials = e,
                    this
                },
                setPath: function (e) {
                    return this.path = e,
                    this
                },
                setResourcePath: function (e) {
                    return this.resourcePath = e,
                    this
                },
                setRequestHeader: function (e) {
                    return this.requestHeader = e,
                    this
                }
            });
            const Ih = {};
            function Oh(e) {
                Fh.call(this, e)
            }
            function Dh(e) {
                Fh.call(this, e)
            }
            function Uh(e) {
                Fh.call(this, e)
            }
            function Bh(e) {
                Fh.call(this, e)
            }
            function kh(e) {
                Fh.call(this, e)
            }
            function Gh(e) {
                Fh.call(this, e)
            }
            function jh(e) {
                Fh.call(this, e)
            }
            function Wh() {
                this.type = "Curve",
                this.arcLengthDivisions = 200
            }
            function Xh(e, t, n, i, a, r, o, s) {
                Wh.call(this),
                this.type = "EllipseCurve",
                this.aX = e || 0,
                this.aY = t || 0,
                this.xRadius = n || 1,
                this.yRadius = i || 1,
                this.aStartAngle = a || 0,
                this.aEndAngle = r || 2 * Math.PI,
                this.aClockwise = o || !1,
                this.aRotation = s || 0
            }
            function qh(e, t, n, i, a, r) {
                Xh.call(this, e, t, n, n, i, a, r),
                this.type = "ArcCurve"
            }
            function Yh() {
                let e = 0,
                t = 0,
                n = 0,
                i = 0;
                function a(a, r, o, s) {
                    e = a,
                    t = o,
                    n = -3 * a + 3 * r - 2 * o - s,
                    i = 2 * a - 2 * r + o + s
                }
                return {
                    initCatmullRom: function (e, t, n, i, r) {
                        a(t, n, r * (n - e), r * (i - t))
                    },
                    initNonuniformCatmullRom: function (e, t, n, i, r, o, s) {
                        let c = (t - e) / r - (n - e) / (r + o) + (n - t) / o,
                        l = (n - t) / o - (i - t) / (o + s) + (i - n) / s;
                        c *= o,
                        l *= o,
                        a(t, n, c, l)
                    },
                    calc: function (a) {
                        const r = a * a;
                        return e + t * a + n * r + i * (r * a)
                    }
                }
            }
            Oh.prototype = Object.assign(Object.create(Fh.prototype), {
                constructor: Oh,
                load: function (e, t, n, i) {
                    void 0 === e && (e = ""),
                    void 0 !== this.path && (e = this.path + e),
                    e = this.manager.resolveURL(e);
                    const a = this,
                    r = Ph.get(e);
                    if (void 0 !== r)
                        return a.manager.itemStart(e), setTimeout((function () {
                                t && t(r),
                                a.manager.itemEnd(e)
                            }), 0), r;
                    if (void 0 !== Ih[e])
                        return void Ih[e].push({
                            onLoad: t,
                            onProgress: n,
                            onError: i
                        });
                    const o = e.match(/^data:(.*?)(;base64)?,(.*)$/);
                    let s;
                    if (o) {
                        const n = o[1],
                        r = !!o[2];
                        let s = o[3];
                        s = decodeURIComponent(s),
                        r && (s = atob(s));
                        try {
                            let i;
                            const r = (this.responseType || "").toLowerCase();
                            switch (r) {
                            case "arraybuffer":
                            case "blob":
                                const e = new Uint8Array(s.length);
                                for (let t = 0; t < s.length; t++)
                                    e[t] = s.charCodeAt(t);
                                i = "blob" === r ? new Blob([e.buffer], {
                                    type: n
                                }) : e.buffer;
                                break;
                            case "document":
                                const t = new DOMParser;
                                i = t.parseFromString(s, n);
                                break;
                            case "json":
                                i = JSON.parse(s);
                                break;
                            default:
                                i = s
                            }
                            setTimeout((function () {
                                    t && t(i),
                                    a.manager.itemEnd(e)
                                }), 0)
                        } catch (t) {
                            setTimeout((function () {
                                    i && i(t),
                                    a.manager.itemError(e),
                                    a.manager.itemEnd(e)
                                }), 0)
                        }
                    } else {
                        Ih[e] = [],
                        Ih[e].push({
                            onLoad: t,
                            onProgress: n,
                            onError: i
                        }),
                        s = new XMLHttpRequest,
                        s.open("GET", e, !0),
                        s.addEventListener("load", (function (t) {
                                const n = this.response,
                                i = Ih[e];
                                if (delete Ih[e], 200 === this.status || 0 === this.status) {
                                    0 === this.status && console.warn("THREE.FileLoader: HTTP Status 0 received."),
                                    Ph.add(e, n);
                                    for (let e = 0, t = i.length; e < t; e++) {
                                        const t = i[e];
                                        t.onLoad && t.onLoad(n)
                                    }
                                    a.manager.itemEnd(e)
                                } else {
                                    for (let e = 0, n = i.length; e < n; e++) {
                                        const n = i[e];
                                        n.onError && n.onError(t)
                                    }
                                    a.manager.itemError(e),
                                    a.manager.itemEnd(e)
                                }
                            }), !1),
                        s.addEventListener("progress", (function (t) {
                                const n = Ih[e];
                                for (let e = 0, i = n.length; e < i; e++) {
                                    const i = n[e];
                                    i.onProgress && i.onProgress(t)
                                }
                            }), !1),
                        s.addEventListener("error", (function (t) {
                                const n = Ih[e];
                                delete Ih[e];
                                for (let e = 0, i = n.length; e < i; e++) {
                                    const i = n[e];
                                    i.onError && i.onError(t)
                                }
                                a.manager.itemError(e),
                                a.manager.itemEnd(e)
                            }), !1),
                        s.addEventListener("abort", (function (t) {
                                const n = Ih[e];
                                delete Ih[e];
                                for (let e = 0, i = n.length; e < i; e++) {
                                    const i = n[e];
                                    i.onError && i.onError(t)
                                }
                                a.manager.itemError(e),
                                a.manager.itemEnd(e)
                            }), !1),
                        void 0 !== this.responseType && (s.responseType = this.responseType),
                        void 0 !== this.withCredentials && (s.withCredentials = this.withCredentials),
                        s.overrideMimeType && s.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain");
                        for (const e in this.requestHeader)
                            s.setRequestHeader(e, this.requestHeader[e]);
                        s.send(null)
                    }
                    return a.manager.itemStart(e),
                    s
                },
                setResponseType: function (e) {
                    return this.responseType = e,
                    this
                },
                setMimeType: function (e) {
                    return this.mimeType = e,
                    this
                }
            }),
            Dh.prototype = Object.assign(Object.create(Fh.prototype), {
                constructor: Dh,
                load: function (e, t, n, i) {
                    const a = this,
                    r = new Oh(a.manager);
                    r.setPath(a.path),
                    r.setRequestHeader(a.requestHeader),
                    r.setWithCredentials(a.withCredentials),
                    r.load(e, (function (n) {
                            try {
                                t(a.parse(JSON.parse(n)))
                            } catch (t) {
                                i ? i(t) : console.error(t),
                                a.manager.itemError(e)
                            }
                        }), n, i)
                },
                parse: function (e) {
                    const t = [];
                    for (let n = 0; n < e.length; n++) {
                        const i = Hh.parse(e[n]);
                        t.push(i)
                    }
                    return t
                }
            }),
            Uh.prototype = Object.assign(Object.create(Fh.prototype), {
                constructor: Uh,
                load: function (e, t, n, i) {
                    const a = this,
                    r = [],
                    o = new Vc;
                    o.image = r;
                    const s = new Oh(this.manager);
                    s.setPath(this.path),
                    s.setResponseType("arraybuffer"),
                    s.setRequestHeader(this.requestHeader),
                    s.setWithCredentials(a.withCredentials);
                    let c = 0;
                    function l(l) {
                        s.load(e[l], (function (e) {
                                const n = a.parse(e, !0);
                                r[l] = {
                                    width: n.width,
                                    height: n.height,
                                    format: n.format,
                                    mipmaps: n.mipmaps
                                },
                                c += 1,
                                6 === c && (1 === n.mipmapCount && (o.minFilter = ye), o.format = n.format, o.needsUpdate = !0, t && t(o))
                            }), n, i)
                    }
                    if (Array.isArray(e))
                        for (let t = 0, n = e.length; t < n; ++t)
                            l(t);
                    else
                        s.load(e, (function (e) {
                                const n = a.parse(e, !0);
                                if (n.isCubemap) {
                                    const e = n.mipmaps.length / n.mipmapCount;
                                    for (let t = 0; t < e; t++) {
                                        r[t] = {
                                            mipmaps: []
                                        };
                                        for (let e = 0; e < n.mipmapCount; e++)
                                            r[t].mipmaps.push(n.mipmaps[t * n.mipmapCount + e]), r[t].format = n.format, r[t].width = n.width, r[t].height = n.height
                                    }
                                } else
                                    o.image.width = n.width, o.image.height = n.height, o.mipmaps = n.mipmaps;
                                1 === n.mipmapCount && (o.minFilter = ye),
                                o.format = n.format,
                                o.needsUpdate = !0,
                                t && t(o)
                            }), n, i);
                    return o
                }
            }),
            Bh.prototype = Object.assign(Object.create(Fh.prototype), {
                constructor: Bh,
                load: function (e, t, n, i) {
                    void 0 !== this.path && (e = this.path + e),
                    e = this.manager.resolveURL(e);
                    const a = this,
                    r = Ph.get(e);
                    if (void 0 !== r)
                        return a.manager.itemStart(e), setTimeout((function () {
                                t && t(r),
                                a.manager.itemEnd(e)
                            }), 0), r;
                    const o = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
                    function s() {
                        o.removeEventListener("load", s, !1),
                        o.removeEventListener("error", c, !1),
                        Ph.add(e, this),
                        t && t(this),
                        a.manager.itemEnd(e)
                    }
                    function c(t) {
                        o.removeEventListener("load", s, !1),
                        o.removeEventListener("error", c, !1),
                        i && i(t),
                        a.manager.itemError(e),
                        a.manager.itemEnd(e)
                    }
                    return o.addEventListener("load", s, !1),
                    o.addEventListener("error", c, !1),
                    "data:" !== e.substr(0, 5) && void 0 !== this.crossOrigin && (o.crossOrigin = this.crossOrigin),
                    a.manager.itemStart(e),
                    o.src = e,
                    o
                }
            }),
            kh.prototype = Object.assign(Object.create(Fh.prototype), {
                constructor: kh,
                load: function (e, t, n, i) {
                    const a = new yr,
                    r = new Bh(this.manager);
                    r.setCrossOrigin(this.crossOrigin),
                    r.setPath(this.path);
                    let o = 0;
                    function s(n) {
                        r.load(e[n], (function (e) {
                                a.images[n] = e,
                                o++,
                                6 === o && (a.needsUpdate = !0, t && t(a))
                            }), void 0, i)
                    }
                    for (let t = 0; t < e.length; ++t)
                        s(t);
                    return a
                }
            }),
            Gh.prototype = Object.assign(Object.create(Fh.prototype), {
                constructor: Gh,
                load: function (e, t, n, i) {
                    const a = this,
                    r = new Mr,
                    o = new Oh(this.manager);
                    return o.setResponseType("arraybuffer"),
                    o.setRequestHeader(this.requestHeader),
                    o.setPath(this.path),
                    o.setWithCredentials(a.withCredentials),
                    o.load(e, (function (e) {
                            const n = a.parse(e);
                            n && (void 0 !== n.image ? r.image = n.image : void 0 !== n.data && (r.image.width = n.width, r.image.height = n.height, r.image.data = n.data), r.wrapS = void 0 !== n.wrapS ? n.wrapS : fe, r.wrapT = void 0 !== n.wrapT ? n.wrapT : fe, r.magFilter = void 0 !== n.magFilter ? n.magFilter : ye, r.minFilter = void 0 !== n.minFilter ? n.minFilter : ye, r.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1, void 0 !== n.format && (r.format = n.format), void 0 !== n.type && (r.type = n.type), void 0 !== n.mipmaps && (r.mipmaps = n.mipmaps, r.minFilter = ze), 1 === n.mipmapCount && (r.minFilter = ye), r.needsUpdate = !0, t && t(r, n))
                        }), n, i),
                    r
                }
            }),
            jh.prototype = Object.assign(Object.create(Fh.prototype), {
                constructor: jh,
                load: function (e, t, n, i) {
                    const a = new Wn,
                    r = new Bh(this.manager);
                    return r.setCrossOrigin(this.crossOrigin),
                    r.setPath(this.path),
                    r.load(e, (function (n) {
                            a.image = n;
                            const i = e.search(/\.jpe?g($|\?)/i) > 0 || 0 === e.search(/^data\:image\/jpeg/);
                            a.format = i ? Ie : Oe,
                            a.needsUpdate = !0,
                            void 0 !== t && t(a)
                        }), n, i),
                    a
                }
            }),
            Object.assign(Wh.prototype, {
                getPoint: function () {
                    return console.warn("THREE.Curve: .getPoint() not implemented."),
                    null
                },
                getPointAt: function (e, t) {
                    const n = this.getUtoTmapping(e);
                    return this.getPoint(n, t)
                },
                getPoints: function (e) {
                    void 0 === e && (e = 5);
                    const t = [];
                    for (let n = 0; n <= e; n++)
                        t.push(this.getPoint(n / e));
                    return t
                },
                getSpacedPoints: function (e) {
                    void 0 === e && (e = 5);
                    const t = [];
                    for (let n = 0; n <= e; n++)
                        t.push(this.getPointAt(n / e));
                    return t
                },
                getLength: function () {
                    const e = this.getLengths();
                    return e[e.length - 1]
                },
                getLengths: function (e) {
                    if (void 0 === e && (e = this.arcLengthDivisions), this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate)
                        return this.cacheArcLengths;
                    this.needsUpdate = !1;
                    const t = [];
                    let n,
                    i = this.getPoint(0),
                    a = 0;
                    t.push(0);
                    for (let r = 1; r <= e; r++)
                        n = this.getPoint(r / e), a += n.distanceTo(i), t.push(a), i = n;
                    return this.cacheArcLengths = t,
                    t
                },
                updateArcLengths: function () {
                    this.needsUpdate = !0,
                    this.getLengths()
                },
                getUtoTmapping: function (e, t) {
                    const n = this.getLengths();
                    let i = 0;
                    const a = n.length;
                    let r;
                    r = t || e * n[a - 1];
                    let o,
                    s = 0,
                    c = a - 1;
                    for (; s <= c; )
                        if (i = Math.floor(s + (c - s) / 2), o = n[i] - r, o < 0)
                            s = i + 1;
                        else {
                            if (!(o > 0)) {
                                c = i;
                                break
                            }
                            c = i - 1
                        }
                    if (i = c, n[i] === r)
                        return i / (a - 1);
                    const l = n[i];
                    return (i + (r - l) / (n[i + 1] - l)) / (a - 1)
                },
                getTangent: function (e, t) {
                    const n = 1e-4;
                    let i = e - n,
                    a = e + n;
                    i < 0 && (i = 0),
                    a > 1 && (a = 1);
                    const r = this.getPoint(i),
                    o = this.getPoint(a),
                    s = t || (r.isVector2 ? new Un : new Qn);
                    return s.copy(o).sub(r).normalize(),
                    s
                },
                getTangentAt: function (e, t) {
                    const n = this.getUtoTmapping(e);
                    return this.getTangent(n, t)
                },
                computeFrenetFrames: function (e, t) {
                    const n = new Qn,
                    i = [],
                    a = [],
                    r = [],
                    o = new Qn,
                    s = new _i;
                    for (let t = 0; t <= e; t++) {
                        const n = t / e;
                        i[t] = this.getTangentAt(n, new Qn),
                        i[t].normalize()
                    }
                    a[0] = new Qn,
                    r[0] = new Qn;
                    let c = Number.MAX_VALUE;
                    const l = Math.abs(i[0].x),
                    h = Math.abs(i[0].y),
                    u = Math.abs(i[0].z);
                    l <= c && (c = l, n.set(1, 0, 0)),
                    h <= c && (c = h, n.set(0, 1, 0)),
                    u <= c && n.set(0, 0, 1),
                    o.crossVectors(i[0], n).normalize(),
                    a[0].crossVectors(i[0], o),
                    r[0].crossVectors(i[0], a[0]);
                    for (let t = 1; t <= e; t++) {
                        if (a[t] = a[t - 1].clone(), r[t] = r[t - 1].clone(), o.crossVectors(i[t - 1], i[t]), o.length() > Number.EPSILON) {
                            o.normalize();
                            const e = Math.acos(Dn.clamp(i[t - 1].dot(i[t]), -1, 1));
                            a[t].applyMatrix4(s.makeRotationAxis(o, e))
                        }
                        r[t].crossVectors(i[t], a[t])
                    }
                    if (!0 === t) {
                        let t = Math.acos(Dn.clamp(a[0].dot(a[e]), -1, 1));
                        t /= e,
                        i[0].dot(o.crossVectors(a[0], a[e])) > 0 && (t = -t);
                        for (let n = 1; n <= e; n++)
                            a[n].applyMatrix4(s.makeRotationAxis(i[n], t * n)), r[n].crossVectors(i[n], a[n])
                    }
                    return {
                        tangents: i,
                        normals: a,
                        binormals: r
                    }
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.arcLengthDivisions = e.arcLengthDivisions,
                    this
                },
                toJSON: function () {
                    const e = {
                        metadata: {
                            version: 4.5,
                            type: "Curve",
                            generator: "Curve.toJSON"
                        }
                    };
                    return e.arcLengthDivisions = this.arcLengthDivisions,
                    e.type = this.type,
                    e
                },
                fromJSON: function (e) {
                    return this.arcLengthDivisions = e.arcLengthDivisions,
                    this
                }
            }),
            Xh.prototype = Object.create(Wh.prototype),
            Xh.prototype.constructor = Xh,
            Xh.prototype.isEllipseCurve = !0,
            Xh.prototype.getPoint = function (e, t) {
                const n = t || new Un,
                i = 2 * Math.PI;
                let a = this.aEndAngle - this.aStartAngle;
                const r = Math.abs(a) < Number.EPSILON;
                for (; a < 0; )
                    a += i;
                for (; a > i; )
                    a -= i;
                a < Number.EPSILON && (a = r ? 0 : i),
                !0 !== this.aClockwise || r || (a === i ? a = -i : a -= i);
                const o = this.aStartAngle + e * a;
                let s = this.aX + this.xRadius * Math.cos(o),
                c = this.aY + this.yRadius * Math.sin(o);
                if (0 !== this.aRotation) {
                    const e = Math.cos(this.aRotation),
                    t = Math.sin(this.aRotation),
                    n = s - this.aX,
                    i = c - this.aY;
                    s = n * e - i * t + this.aX,
                    c = n * t + i * e + this.aY
                }
                return n.set(s, c)
            },
            Xh.prototype.copy = function (e) {
                return Wh.prototype.copy.call(this, e),
                this.aX = e.aX,
                this.aY = e.aY,
                this.xRadius = e.xRadius,
                this.yRadius = e.yRadius,
                this.aStartAngle = e.aStartAngle,
                this.aEndAngle = e.aEndAngle,
                this.aClockwise = e.aClockwise,
                this.aRotation = e.aRotation,
                this
            },
            Xh.prototype.toJSON = function () {
                const e = Wh.prototype.toJSON.call(this);
                return e.aX = this.aX,
                e.aY = this.aY,
                e.xRadius = this.xRadius,
                e.yRadius = this.yRadius,
                e.aStartAngle = this.aStartAngle,
                e.aEndAngle = this.aEndAngle,
                e.aClockwise = this.aClockwise,
                e.aRotation = this.aRotation,
                e
            },
            Xh.prototype.fromJSON = function (e) {
                return Wh.prototype.fromJSON.call(this, e),
                this.aX = e.aX,
                this.aY = e.aY,
                this.xRadius = e.xRadius,
                this.yRadius = e.yRadius,
                this.aStartAngle = e.aStartAngle,
                this.aEndAngle = e.aEndAngle,
                this.aClockwise = e.aClockwise,
                this.aRotation = e.aRotation,
                this
            },
            qh.prototype = Object.create(Xh.prototype),
            qh.prototype.constructor = qh,
            qh.prototype.isArcCurve = !0;
            const Zh = new Qn,
            Qh = new Yh,
            Jh = new Yh,
            Kh = new Yh;
            function $h(e, t, n, i) {
                Wh.call(this),
                this.type = "CatmullRomCurve3",
                this.points = e || [],
                this.closed = t || !1,
                this.curveType = n || "centripetal",
                this.tension = void 0 !== i ? i : .5
            }
            function eu(e, t, n, i, a) {
                const r = .5 * (i - t),
                o = .5 * (a - n),
                s = e * e;
                return (2 * n - 2 * i + r + o) * (e * s) + (-3 * n + 3 * i - 2 * r - o) * s + r * e + n
            }
            function tu(e, t, n, i) {
                return function (e, t) {
                    const n = 1 - e;
                    return n * n * t
                }
                (e, t) + function (e, t) {
                    return 2 * (1 - e) * e * t
                }
                (e, n) + function (e, t) {
                    return e * e * t
                }
                (e, i)
            }
            function nu(e, t, n, i, a) {
                return function (e, t) {
                    const n = 1 - e;
                    return n * n * n * t
                }
                (e, t) + function (e, t) {
                    const n = 1 - e;
                    return 3 * n * n * e * t
                }
                (e, n) + function (e, t) {
                    return 3 * (1 - e) * e * e * t
                }
                (e, i) + function (e, t) {
                    return e * e * e * t
                }
                (e, a)
            }
            function iu(e, t, n, i) {
                Wh.call(this),
                this.type = "CubicBezierCurve",
                this.v0 = e || new Un,
                this.v1 = t || new Un,
                this.v2 = n || new Un,
                this.v3 = i || new Un
            }
            function au(e, t, n, i) {
                Wh.call(this),
                this.type = "CubicBezierCurve3",
                this.v0 = e || new Qn,
                this.v1 = t || new Qn,
                this.v2 = n || new Qn,
                this.v3 = i || new Qn
            }
            function ru(e, t) {
                Wh.call(this),
                this.type = "LineCurve",
                this.v1 = e || new Un,
                this.v2 = t || new Un
            }
            function ou(e, t) {
                Wh.call(this),
                this.type = "LineCurve3",
                this.v1 = e || new Qn,
                this.v2 = t || new Qn
            }
            function su(e, t, n) {
                Wh.call(this),
                this.type = "QuadraticBezierCurve",
                this.v0 = e || new Un,
                this.v1 = t || new Un,
                this.v2 = n || new Un
            }
            function cu(e, t, n) {
                Wh.call(this),
                this.type = "QuadraticBezierCurve3",
                this.v0 = e || new Qn,
                this.v1 = t || new Qn,
                this.v2 = n || new Qn
            }
            function lu(e) {
                Wh.call(this),
                this.type = "SplineCurve",
                this.points = e || []
            }
            $h.prototype = Object.create(Wh.prototype),
            $h.prototype.constructor = $h,
            $h.prototype.isCatmullRomCurve3 = !0,
            $h.prototype.getPoint = function (e, t) {
                const n = t || new Qn,
                i = this.points,
                a = i.length,
                r = (a - (this.closed ? 0 : 1)) * e;
                let o,
                s,
                c = Math.floor(r),
                l = r - c;
                this.closed ? c += c > 0 ? 0 : (Math.floor(Math.abs(c) / a) + 1) * a : 0 === l && c === a - 1 && (c = a - 2, l = 1),
                this.closed || c > 0 ? o = i[(c - 1) % a] : (Zh.subVectors(i[0], i[1]).add(i[0]), o = Zh);
                const h = i[c % a],
                u = i[(c + 1) % a];
                if (this.closed || c + 2 < a ? s = i[(c + 2) % a] : (Zh.subVectors(i[a - 1], i[a - 2]).add(i[a - 1]), s = Zh), "centripetal" === this.curveType || "chordal" === this.curveType) {
                    const e = "chordal" === this.curveType ? .5 : .25;
                    let t = Math.pow(o.distanceToSquared(h), e),
                    n = Math.pow(h.distanceToSquared(u), e),
                    i = Math.pow(u.distanceToSquared(s), e);
                    n < 1e-4 && (n = 1),
                    t < 1e-4 && (t = n),
                    i < 1e-4 && (i = n),
                    Qh.initNonuniformCatmullRom(o.x, h.x, u.x, s.x, t, n, i),
                    Jh.initNonuniformCatmullRom(o.y, h.y, u.y, s.y, t, n, i),
                    Kh.initNonuniformCatmullRom(o.z, h.z, u.z, s.z, t, n, i)
                } else
                    "catmullrom" === this.curveType && (Qh.initCatmullRom(o.x, h.x, u.x, s.x, this.tension), Jh.initCatmullRom(o.y, h.y, u.y, s.y, this.tension), Kh.initCatmullRom(o.z, h.z, u.z, s.z, this.tension));
                return n.set(Qh.calc(l), Jh.calc(l), Kh.calc(l)),
                n
            },
            $h.prototype.copy = function (e) {
                Wh.prototype.copy.call(this, e),
                this.points = [];
                for (let t = 0, n = e.points.length; t < n; t++) {
                    const n = e.points[t];
                    this.points.push(n.clone())
                }
                return this.closed = e.closed,
                this.curveType = e.curveType,
                this.tension = e.tension,
                this
            },
            $h.prototype.toJSON = function () {
                const e = Wh.prototype.toJSON.call(this);
                e.points = [];
                for (let t = 0, n = this.points.length; t < n; t++) {
                    const n = this.points[t];
                    e.points.push(n.toArray())
                }
                return e.closed = this.closed,
                e.curveType = this.curveType,
                e.tension = this.tension,
                e
            },
            $h.prototype.fromJSON = function (e) {
                Wh.prototype.fromJSON.call(this, e),
                this.points = [];
                for (let t = 0, n = e.points.length; t < n; t++) {
                    const n = e.points[t];
                    this.points.push((new Qn).fromArray(n))
                }
                return this.closed = e.closed,
                this.curveType = e.curveType,
                this.tension = e.tension,
                this
            },
            iu.prototype = Object.create(Wh.prototype),
            iu.prototype.constructor = iu,
            iu.prototype.isCubicBezierCurve = !0,
            iu.prototype.getPoint = function (e, t) {
                const n = t || new Un,
                i = this.v0,
                a = this.v1,
                r = this.v2,
                o = this.v3;
                return n.set(nu(e, i.x, a.x, r.x, o.x), nu(e, i.y, a.y, r.y, o.y)),
                n
            },
            iu.prototype.copy = function (e) {
                return Wh.prototype.copy.call(this, e),
                this.v0.copy(e.v0),
                this.v1.copy(e.v1),
                this.v2.copy(e.v2),
                this.v3.copy(e.v3),
                this
            },
            iu.prototype.toJSON = function () {
                const e = Wh.prototype.toJSON.call(this);
                return e.v0 = this.v0.toArray(),
                e.v1 = this.v1.toArray(),
                e.v2 = this.v2.toArray(),
                e.v3 = this.v3.toArray(),
                e
            },
            iu.prototype.fromJSON = function (e) {
                return Wh.prototype.fromJSON.call(this, e),
                this.v0.fromArray(e.v0),
                this.v1.fromArray(e.v1),
                this.v2.fromArray(e.v2),
                this.v3.fromArray(e.v3),
                this
            },
            au.prototype = Object.create(Wh.prototype),
            au.prototype.constructor = au,
            au.prototype.isCubicBezierCurve3 = !0,
            au.prototype.getPoint = function (e, t) {
                const n = t || new Qn,
                i = this.v0,
                a = this.v1,
                r = this.v2,
                o = this.v3;
                return n.set(nu(e, i.x, a.x, r.x, o.x), nu(e, i.y, a.y, r.y, o.y), nu(e, i.z, a.z, r.z, o.z)),
                n
            },
            au.prototype.copy = function (e) {
                return Wh.prototype.copy.call(this, e),
                this.v0.copy(e.v0),
                this.v1.copy(e.v1),
                this.v2.copy(e.v2),
                this.v3.copy(e.v3),
                this
            },
            au.prototype.toJSON = function () {
                const e = Wh.prototype.toJSON.call(this);
                return e.v0 = this.v0.toArray(),
                e.v1 = this.v1.toArray(),
                e.v2 = this.v2.toArray(),
                e.v3 = this.v3.toArray(),
                e
            },
            au.prototype.fromJSON = function (e) {
                return Wh.prototype.fromJSON.call(this, e),
                this.v0.fromArray(e.v0),
                this.v1.fromArray(e.v1),
                this.v2.fromArray(e.v2),
                this.v3.fromArray(e.v3),
                this
            },
            ru.prototype = Object.create(Wh.prototype),
            ru.prototype.constructor = ru,
            ru.prototype.isLineCurve = !0,
            ru.prototype.getPoint = function (e, t) {
                const n = t || new Un;
                return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)),
                n
            },
            ru.prototype.getPointAt = function (e, t) {
                return this.getPoint(e, t)
            },
            ru.prototype.getTangent = function (e, t) {
                const n = t || new Un;
                return n.copy(this.v2).sub(this.v1).normalize(),
                n
            },
            ru.prototype.copy = function (e) {
                return Wh.prototype.copy.call(this, e),
                this.v1.copy(e.v1),
                this.v2.copy(e.v2),
                this
            },
            ru.prototype.toJSON = function () {
                const e = Wh.prototype.toJSON.call(this);
                return e.v1 = this.v1.toArray(),
                e.v2 = this.v2.toArray(),
                e
            },
            ru.prototype.fromJSON = function (e) {
                return Wh.prototype.fromJSON.call(this, e),
                this.v1.fromArray(e.v1),
                this.v2.fromArray(e.v2),
                this
            },
            ou.prototype = Object.create(Wh.prototype),
            ou.prototype.constructor = ou,
            ou.prototype.isLineCurve3 = !0,
            ou.prototype.getPoint = function (e, t) {
                const n = t || new Qn;
                return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)),
                n
            },
            ou.prototype.getPointAt = function (e, t) {
                return this.getPoint(e, t)
            },
            ou.prototype.copy = function (e) {
                return Wh.prototype.copy.call(this, e),
                this.v1.copy(e.v1),
                this.v2.copy(e.v2),
                this
            },
            ou.prototype.toJSON = function () {
                const e = Wh.prototype.toJSON.call(this);
                return e.v1 = this.v1.toArray(),
                e.v2 = this.v2.toArray(),
                e
            },
            ou.prototype.fromJSON = function (e) {
                return Wh.prototype.fromJSON.call(this, e),
                this.v1.fromArray(e.v1),
                this.v2.fromArray(e.v2),
                this
            },
            su.prototype = Object.create(Wh.prototype),
            su.prototype.constructor = su,
            su.prototype.isQuadraticBezierCurve = !0,
            su.prototype.getPoint = function (e, t) {
                const n = t || new Un,
                i = this.v0,
                a = this.v1,
                r = this.v2;
                return n.set(tu(e, i.x, a.x, r.x), tu(e, i.y, a.y, r.y)),
                n
            },
            su.prototype.copy = function (e) {
                return Wh.prototype.copy.call(this, e),
                this.v0.copy(e.v0),
                this.v1.copy(e.v1),
                this.v2.copy(e.v2),
                this
            },
            su.prototype.toJSON = function () {
                const e = Wh.prototype.toJSON.call(this);
                return e.v0 = this.v0.toArray(),
                e.v1 = this.v1.toArray(),
                e.v2 = this.v2.toArray(),
                e
            },
            su.prototype.fromJSON = function (e) {
                return Wh.prototype.fromJSON.call(this, e),
                this.v0.fromArray(e.v0),
                this.v1.fromArray(e.v1),
                this.v2.fromArray(e.v2),
                this
            },
            cu.prototype = Object.create(Wh.prototype),
            cu.prototype.constructor = cu,
            cu.prototype.isQuadraticBezierCurve3 = !0,
            cu.prototype.getPoint = function (e, t) {
                const n = t || new Qn,
                i = this.v0,
                a = this.v1,
                r = this.v2;
                return n.set(tu(e, i.x, a.x, r.x), tu(e, i.y, a.y, r.y), tu(e, i.z, a.z, r.z)),
                n
            },
            cu.prototype.copy = function (e) {
                return Wh.prototype.copy.call(this, e),
                this.v0.copy(e.v0),
                this.v1.copy(e.v1),
                this.v2.copy(e.v2),
                this
            },
            cu.prototype.toJSON = function () {
                const e = Wh.prototype.toJSON.call(this);
                return e.v0 = this.v0.toArray(),
                e.v1 = this.v1.toArray(),
                e.v2 = this.v2.toArray(),
                e
            },
            cu.prototype.fromJSON = function (e) {
                return Wh.prototype.fromJSON.call(this, e),
                this.v0.fromArray(e.v0),
                this.v1.fromArray(e.v1),
                this.v2.fromArray(e.v2),
                this
            },
            lu.prototype = Object.create(Wh.prototype),
            lu.prototype.constructor = lu,
            lu.prototype.isSplineCurve = !0,
            lu.prototype.getPoint = function (e, t) {
                const n = t || new Un,
                i = this.points,
                a = (i.length - 1) * e,
                r = Math.floor(a),
                o = a - r,
                s = i[0 === r ? r : r - 1],
                c = i[r],
                l = i[r > i.length - 2 ? i.length - 1 : r + 1],
                h = i[r > i.length - 3 ? i.length - 1 : r + 2];
                return n.set(eu(o, s.x, c.x, l.x, h.x), eu(o, s.y, c.y, l.y, h.y)),
                n
            },
            lu.prototype.copy = function (e) {
                Wh.prototype.copy.call(this, e),
                this.points = [];
                for (let t = 0, n = e.points.length; t < n; t++) {
                    const n = e.points[t];
                    this.points.push(n.clone())
                }
                return this
            },
            lu.prototype.toJSON = function () {
                const e = Wh.prototype.toJSON.call(this);
                e.points = [];
                for (let t = 0, n = this.points.length; t < n; t++) {
                    const n = this.points[t];
                    e.points.push(n.toArray())
                }
                return e
            },
            lu.prototype.fromJSON = function (e) {
                Wh.prototype.fromJSON.call(this, e),
                this.points = [];
                for (let t = 0, n = e.points.length; t < n; t++) {
                    const n = e.points[t];
                    this.points.push((new Un).fromArray(n))
                }
                return this
            };
            var hu = Object.freeze({
                __proto__: null,
                ArcCurve: qh,
                CatmullRomCurve3: $h,
                CubicBezierCurve: iu,
                CubicBezierCurve3: au,
                EllipseCurve: Xh,
                LineCurve: ru,
                LineCurve3: ou,
                QuadraticBezierCurve: su,
                QuadraticBezierCurve3: cu,
                SplineCurve: lu
            });
            function uu() {
                Wh.call(this),
                this.type = "CurvePath",
                this.curves = [],
                this.autoClose = !1
            }
            function fu(e) {
                uu.call(this),
                this.type = "Path",
                this.currentPoint = new Un,
                e && this.setFromPoints(e)
            }
            function du(e) {
                fu.call(this, e),
                this.uuid = Dn.generateUUID(),
                this.type = "Shape",
                this.holes = []
            }
            function pu(e, t) {
                Zi.call(this),
                this.type = "Light",
                this.color = new ga(e),
                this.intensity = void 0 !== t ? t : 1
            }
            function mu(e, t, n) {
                pu.call(this, e, n),
                this.type = "HemisphereLight",
                this.position.copy(Zi.DefaultUp),
                this.updateMatrix(),
                this.groundColor = new ga(t)
            }
            function vu(e) {
                this.camera = e,
                this.bias = 0,
                this.normalBias = 0,
                this.radius = 1,
                this.mapSize = new Un(512, 512),
                this.map = null,
                this.mapPass = null,
                this.matrix = new _i,
                this.autoUpdate = !0,
                this.needsUpdate = !1,
                this._frustum = new _r,
                this._frameExtents = new Un(1, 1),
                this._viewportCount = 1,
                this._viewports = [new Xn(0, 0, 1, 1)]
            }
            function gu() {
                vu.call(this, new vr(50, 1, .5, 500)),
                this.focus = 1
            }
            function xu(e, t, n, i, a, r) {
                pu.call(this, e, t),
                this.type = "SpotLight",
                this.position.copy(Zi.DefaultUp),
                this.updateMatrix(),
                this.target = new Zi,
                Object.defineProperty(this, "power", {
                    get: function () {
                        return this.intensity * Math.PI
                    },
                    set: function (e) {
                        this.intensity = e / Math.PI
                    }
                }),
                this.distance = void 0 !== n ? n : 0,
                this.angle = void 0 !== i ? i : Math.PI / 3,
                this.penumbra = void 0 !== a ? a : 0,
                this.decay = void 0 !== r ? r : 1,
                this.shadow = new gu
            }
            function yu() {
                vu.call(this, new vr(90, 1, .5, 500)),
                this._frameExtents = new Un(4, 2),
                this._viewportCount = 6,
                this._viewports = [new Xn(2, 1, 1, 1), new Xn(0, 1, 1, 1), new Xn(3, 1, 1, 1), new Xn(1, 1, 1, 1), new Xn(3, 0, 1, 1), new Xn(1, 0, 1, 1)],
                this._cubeDirections = [new Qn(1, 0, 0), new Qn(-1, 0, 0), new Qn(0, 0, 1), new Qn(0, 0, -1), new Qn(0, 1, 0), new Qn(0, -1, 0)],
                this._cubeUps = [new Qn(0, 1, 0), new Qn(0, 1, 0), new Qn(0, 1, 0), new Qn(0, 1, 0), new Qn(0, 0, 1), new Qn(0, 0, -1)]
            }
            function bu(e, t, n, i) {
                pu.call(this, e, t),
                this.type = "PointLight",
                Object.defineProperty(this, "power", {
                    get: function () {
                        return 4 * this.intensity * Math.PI
                    },
                    set: function (e) {
                        this.intensity = e / (4 * Math.PI)
                    }
                }),
                this.distance = void 0 !== n ? n : 0,
                this.decay = void 0 !== i ? i : 1,
                this.shadow = new yu
            }
            function Mu(e, t, n, i, a, r) {
                mr.call(this),
                this.type = "OrthographicCamera",
                this.zoom = 1,
                this.view = null,
                this.left = void 0 !== e ? e : -1,
                this.right = void 0 !== t ? t : 1,
                this.top = void 0 !== n ? n : 1,
                this.bottom = void 0 !== i ? i : -1,
                this.near = void 0 !== a ? a : .1,
                this.far = void 0 !== r ? r : 2e3,
                this.updateProjectionMatrix()
            }
            function zu() {
                vu.call(this, new Mu(-5, 5, 5, -5, .5, 500))
            }
            function wu(e, t) {
                pu.call(this, e, t),
                this.type = "DirectionalLight",
                this.position.copy(Zi.DefaultUp),
                this.updateMatrix(),
                this.target = new Zi,
                this.shadow = new zu
            }
            function _u(e, t) {
                pu.call(this, e, t),
                this.type = "AmbientLight"
            }
            function Su(e, t, n, i) {
                pu.call(this, e, t),
                this.type = "RectAreaLight",
                this.width = void 0 !== n ? n : 10,
                this.height = void 0 !== i ? i : 10
            }
            uu.prototype = Object.assign(Object.create(Wh.prototype), {
                constructor: uu,
                add: function (e) {
                    this.curves.push(e)
                },
                closePath: function () {
                    const e = this.curves[0].getPoint(0),
                    t = this.curves[this.curves.length - 1].getPoint(1);
                    e.equals(t) || this.curves.push(new ru(t, e))
                },
                getPoint: function (e) {
                    const t = e * this.getLength(),
                    n = this.getCurveLengths();
                    let i = 0;
                    for (; i < n.length; ) {
                        if (n[i] >= t) {
                            const e = n[i] - t,
                            a = this.curves[i],
                            r = a.getLength(),
                            o = 0 === r ? 0 : 1 - e / r;
                            return a.getPointAt(o)
                        }
                        i++
                    }
                    return null
                },
                getLength: function () {
                    const e = this.getCurveLengths();
                    return e[e.length - 1]
                },
                updateArcLengths: function () {
                    this.needsUpdate = !0,
                    this.cacheLengths = null,
                    this.getCurveLengths()
                },
                getCurveLengths: function () {
                    if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
                        return this.cacheLengths;
                    const e = [];
                    let t = 0;
                    for (let n = 0, i = this.curves.length; n < i; n++)
                        t += this.curves[n].getLength(), e.push(t);
                    return this.cacheLengths = e,
                    e
                },
                getSpacedPoints: function (e) {
                    void 0 === e && (e = 40);
                    const t = [];
                    for (let n = 0; n <= e; n++)
                        t.push(this.getPoint(n / e));
                    return this.autoClose && t.push(t[0]),
                    t
                },
                getPoints: function (e) {
                    e = e || 12;
                    const t = [];
                    let n;
                    for (let i = 0, a = this.curves; i < a.length; i++) {
                        const r = a[i],
                        o = r && r.isEllipseCurve ? 2 * e : r && (r.isLineCurve || r.isLineCurve3) ? 1 : r && r.isSplineCurve ? e * r.points.length : e,
                        s = r.getPoints(o);
                        for (let e = 0; e < s.length; e++) {
                            const i = s[e];
                            n && n.equals(i) || (t.push(i), n = i)
                        }
                    }
                    return this.autoClose && t.length > 1 && !t[t.length - 1].equals(t[0]) && t.push(t[0]),
                    t
                },
                copy: function (e) {
                    Wh.prototype.copy.call(this, e),
                    this.curves = [];
                    for (let t = 0, n = e.curves.length; t < n; t++) {
                        const n = e.curves[t];
                        this.curves.push(n.clone())
                    }
                    return this.autoClose = e.autoClose,
                    this
                },
                toJSON: function () {
                    const e = Wh.prototype.toJSON.call(this);
                    e.autoClose = this.autoClose,
                    e.curves = [];
                    for (let t = 0, n = this.curves.length; t < n; t++) {
                        const n = this.curves[t];
                        e.curves.push(n.toJSON())
                    }
                    return e
                },
                fromJSON: function (e) {
                    Wh.prototype.fromJSON.call(this, e),
                    this.autoClose = e.autoClose,
                    this.curves = [];
                    for (let t = 0, n = e.curves.length; t < n; t++) {
                        const n = e.curves[t];
                        this.curves.push((new hu[n.type]).fromJSON(n))
                    }
                    return this
                }
            }),
            fu.prototype = Object.assign(Object.create(uu.prototype), {
                constructor: fu,
                setFromPoints: function (e) {
                    this.moveTo(e[0].x, e[0].y);
                    for (let t = 1, n = e.length; t < n; t++)
                        this.lineTo(e[t].x, e[t].y);
                    return this
                },
                moveTo: function (e, t) {
                    return this.currentPoint.set(e, t),
                    this
                },
                lineTo: function (e, t) {
                    const n = new ru(this.currentPoint.clone(), new Un(e, t));
                    return this.curves.push(n),
                    this.currentPoint.set(e, t),
                    this
                },
                quadraticCurveTo: function (e, t, n, i) {
                    const a = new su(this.currentPoint.clone(), new Un(e, t), new Un(n, i));
                    return this.curves.push(a),
                    this.currentPoint.set(n, i),
                    this
                },
                bezierCurveTo: function (e, t, n, i, a, r) {
                    const o = new iu(this.currentPoint.clone(), new Un(e, t), new Un(n, i), new Un(a, r));
                    return this.curves.push(o),
                    this.currentPoint.set(a, r),
                    this
                },
                splineThru: function (e) {
                    const t = new lu([this.currentPoint.clone()].concat(e));
                    return this.curves.push(t),
                    this.currentPoint.copy(e[e.length - 1]),
                    this
                },
                arc: function (e, t, n, i, a, r) {
                    const o = this.currentPoint.x,
                    s = this.currentPoint.y;
                    return this.absarc(e + o, t + s, n, i, a, r),
                    this
                },
                absarc: function (e, t, n, i, a, r) {
                    return this.absellipse(e, t, n, n, i, a, r),
                    this
                },
                ellipse: function (e, t, n, i, a, r, o, s) {
                    const c = this.currentPoint.x,
                    l = this.currentPoint.y;
                    return this.absellipse(e + c, t + l, n, i, a, r, o, s),
                    this
                },
                absellipse: function (e, t, n, i, a, r, o, s) {
                    const c = new Xh(e, t, n, i, a, r, o, s);
                    if (this.curves.length > 0) {
                        const e = c.getPoint(0);
                        e.equals(this.currentPoint) || this.lineTo(e.x, e.y)
                    }
                    this.curves.push(c);
                    const l = c.getPoint(1);
                    return this.currentPoint.copy(l),
                    this
                },
                copy: function (e) {
                    return uu.prototype.copy.call(this, e),
                    this.currentPoint.copy(e.currentPoint),
                    this
                },
                toJSON: function () {
                    const e = uu.prototype.toJSON.call(this);
                    return e.currentPoint = this.currentPoint.toArray(),
                    e
                },
                fromJSON: function (e) {
                    return uu.prototype.fromJSON.call(this, e),
                    this.currentPoint.fromArray(e.currentPoint),
                    this
                }
            }),
            du.prototype = Object.assign(Object.create(fu.prototype), {
                constructor: du,
                getPointsHoles: function (e) {
                    const t = [];
                    for (let n = 0, i = this.holes.length; n < i; n++)
                        t[n] = this.holes[n].getPoints(e);
                    return t
                },
                extractPoints: function (e) {
                    return {
                        shape: this.getPoints(e),
                        holes: this.getPointsHoles(e)
                    }
                },
                copy: function (e) {
                    fu.prototype.copy.call(this, e),
                    this.holes = [];
                    for (let t = 0, n = e.holes.length; t < n; t++) {
                        const n = e.holes[t];
                        this.holes.push(n.clone())
                    }
                    return this
                },
                toJSON: function () {
                    const e = fu.prototype.toJSON.call(this);
                    e.uuid = this.uuid,
                    e.holes = [];
                    for (let t = 0, n = this.holes.length; t < n; t++) {
                        const n = this.holes[t];
                        e.holes.push(n.toJSON())
                    }
                    return e
                },
                fromJSON: function (e) {
                    fu.prototype.fromJSON.call(this, e),
                    this.uuid = e.uuid,
                    this.holes = [];
                    for (let t = 0, n = e.holes.length; t < n; t++) {
                        const n = e.holes[t];
                        this.holes.push((new fu).fromJSON(n))
                    }
                    return this
                }
            }),
            pu.prototype = Object.assign(Object.create(Zi.prototype), {
                constructor: pu,
                isLight: !0,
                copy: function (e) {
                    return Zi.prototype.copy.call(this, e),
                    this.color.copy(e.color),
                    this.intensity = e.intensity,
                    this
                },
                toJSON: function (e) {
                    const t = Zi.prototype.toJSON.call(this, e);
                    return t.object.color = this.color.getHex(),
                    t.object.intensity = this.intensity,
                    void 0 !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()),
                    void 0 !== this.distance && (t.object.distance = this.distance),
                    void 0 !== this.angle && (t.object.angle = this.angle),
                    void 0 !== this.decay && (t.object.decay = this.decay),
                    void 0 !== this.penumbra && (t.object.penumbra = this.penumbra),
                    void 0 !== this.shadow && (t.object.shadow = this.shadow.toJSON()),
                    t
                }
            }),
            mu.prototype = Object.assign(Object.create(pu.prototype), {
                constructor: mu,
                isHemisphereLight: !0,
                copy: function (e) {
                    return pu.prototype.copy.call(this, e),
                    this.groundColor.copy(e.groundColor),
                    this
                }
            }),
            Object.assign(vu.prototype, {
                _projScreenMatrix: new _i,
                _lightPositionWorld: new Qn,
                _lookTarget: new Qn,
                getViewportCount: function () {
                    return this._viewportCount
                },
                getFrustum: function () {
                    return this._frustum
                },
                updateMatrices: function (e) {
                    const t = this.camera,
                    n = this.matrix,
                    i = this._projScreenMatrix,
                    a = this._lookTarget,
                    r = this._lightPositionWorld;
                    r.setFromMatrixPosition(e.matrixWorld),
                    t.position.copy(r),
                    a.setFromMatrixPosition(e.target.matrixWorld),
                    t.lookAt(a),
                    t.updateMatrixWorld(),
                    i.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
                    this._frustum.setFromProjectionMatrix(i),
                    n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                    n.multiply(t.projectionMatrix),
                    n.multiply(t.matrixWorldInverse)
                },
                getViewport: function (e) {
                    return this._viewports[e]
                },
                getFrameExtents: function () {
                    return this._frameExtents
                },
                copy: function (e) {
                    return this.camera = e.camera.clone(),
                    this.bias = e.bias,
                    this.radius = e.radius,
                    this.mapSize.copy(e.mapSize),
                    this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                toJSON: function () {
                    const e = {};
                    return 0 !== this.bias && (e.bias = this.bias),
                    0 !== this.normalBias && (e.normalBias = this.normalBias),
                    1 !== this.radius && (e.radius = this.radius),
                    512 === this.mapSize.x && 512 === this.mapSize.y || (e.mapSize = this.mapSize.toArray()),
                    e.camera = this.camera.toJSON(!1).object,
                    delete e.camera.matrix,
                    e
                }
            }),
            gu.prototype = Object.assign(Object.create(vu.prototype), {
                constructor: gu,
                isSpotLightShadow: !0,
                updateMatrices: function (e) {
                    const t = this.camera,
                    n = 2 * Dn.RAD2DEG * e.angle * this.focus,
                    i = this.mapSize.width / this.mapSize.height,
                    a = e.distance || t.far;
                    n === t.fov && i === t.aspect && a === t.far || (t.fov = n, t.aspect = i, t.far = a, t.updateProjectionMatrix()),
                    vu.prototype.updateMatrices.call(this, e)
                }
            }),
            xu.prototype = Object.assign(Object.create(pu.prototype), {
                constructor: xu,
                isSpotLight: !0,
                copy: function (e) {
                    return pu.prototype.copy.call(this, e),
                    this.distance = e.distance,
                    this.angle = e.angle,
                    this.penumbra = e.penumbra,
                    this.decay = e.decay,
                    this.target = e.target.clone(),
                    this.shadow = e.shadow.clone(),
                    this
                }
            }),
            yu.prototype = Object.assign(Object.create(vu.prototype), {
                constructor: yu,
                isPointLightShadow: !0,
                updateMatrices: function (e, t) {
                    void 0 === t && (t = 0);
                    const n = this.camera,
                    i = this.matrix,
                    a = this._lightPositionWorld,
                    r = this._lookTarget,
                    o = this._projScreenMatrix;
                    a.setFromMatrixPosition(e.matrixWorld),
                    n.position.copy(a),
                    r.copy(n.position),
                    r.add(this._cubeDirections[t]),
                    n.up.copy(this._cubeUps[t]),
                    n.lookAt(r),
                    n.updateMatrixWorld(),
                    i.makeTranslation(-a.x, -a.y, -a.z),
                    o.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse),
                    this._frustum.setFromProjectionMatrix(o)
                }
            }),
            bu.prototype = Object.assign(Object.create(pu.prototype), {
                constructor: bu,
                isPointLight: !0,
                copy: function (e) {
                    return pu.prototype.copy.call(this, e),
                    this.distance = e.distance,
                    this.decay = e.decay,
                    this.shadow = e.shadow.clone(),
                    this
                }
            }),
            Mu.prototype = Object.assign(Object.create(mr.prototype), {
                constructor: Mu,
                isOrthographicCamera: !0,
                copy: function (e, t) {
                    return mr.prototype.copy.call(this, e, t),
                    this.left = e.left,
                    this.right = e.right,
                    this.top = e.top,
                    this.bottom = e.bottom,
                    this.near = e.near,
                    this.far = e.far,
                    this.zoom = e.zoom,
                    this.view = null === e.view ? null : Object.assign({}, e.view),
                    this
                },
                setViewOffset: function (e, t, n, i, a, r) {
                    null === this.view && (this.view = {
                            enabled: !0,
                            fullWidth: 1,
                            fullHeight: 1,
                            offsetX: 0,
                            offsetY: 0,
                            width: 1,
                            height: 1
                        }),
                    this.view.enabled = !0,
                    this.view.fullWidth = e,
                    this.view.fullHeight = t,
                    this.view.offsetX = n,
                    this.view.offsetY = i,
                    this.view.width = a,
                    this.view.height = r,
                    this.updateProjectionMatrix()
                },
                clearViewOffset: function () {
                    null !== this.view && (this.view.enabled = !1),
                    this.updateProjectionMatrix()
                },
                updateProjectionMatrix: function () {
                    const e = (this.right - this.left) / (2 * this.zoom),
                    t = (this.top - this.bottom) / (2 * this.zoom),
                    n = (this.right + this.left) / 2,
                    i = (this.top + this.bottom) / 2;
                    let a = n - e,
                    r = n + e,
                    o = i + t,
                    s = i - t;
                    if (null !== this.view && this.view.enabled) {
                        const e = (this.right - this.left) / this.view.fullWidth / this.zoom,
                        t = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
                        a += e * this.view.offsetX,
                        r = a + e * this.view.width,
                        o -= t * this.view.offsetY,
                        s = o - t * this.view.height
                    }
                    this.projectionMatrix.makeOrthographic(a, r, o, s, this.near, this.far),
                    this.projectionMatrixInverse.getInverse(this.projectionMatrix)
                },
                toJSON: function (e) {
                    const t = Zi.prototype.toJSON.call(this, e);
                    return t.object.zoom = this.zoom,
                    t.object.left = this.left,
                    t.object.right = this.right,
                    t.object.top = this.top,
                    t.object.bottom = this.bottom,
                    t.object.near = this.near,
                    t.object.far = this.far,
                    null !== this.view && (t.object.view = Object.assign({}, this.view)),
                    t
                }
            }),
            zu.prototype = Object.assign(Object.create(vu.prototype), {
                constructor: zu,
                isDirectionalLightShadow: !0,
                updateMatrices: function (e) {
                    vu.prototype.updateMatrices.call(this, e)
                }
            }),
            wu.prototype = Object.assign(Object.create(pu.prototype), {
                constructor: wu,
                isDirectionalLight: !0,
                copy: function (e) {
                    return pu.prototype.copy.call(this, e),
                    this.target = e.target.clone(),
                    this.shadow = e.shadow.clone(),
                    this
                }
            }),
            _u.prototype = Object.assign(Object.create(pu.prototype), {
                constructor: _u,
                isAmbientLight: !0
            }),
            Su.prototype = Object.assign(Object.create(pu.prototype), {
                constructor: Su,
                isRectAreaLight: !0,
                copy: function (e) {
                    return pu.prototype.copy.call(this, e),
                    this.width = e.width,
                    this.height = e.height,
                    this
                },
                toJSON: function (e) {
                    const t = pu.prototype.toJSON.call(this, e);
                    return t.object.width = this.width,
                    t.object.height = this.height,
                    t
                }
            });
            class Lu {
                constructor() {
                    Object.defineProperty(this, "isSphericalHarmonics3", {
                        value: !0
                    }),
                    this.coefficients = [];
                    for (let e = 0; e < 9; e++)
                        this.coefficients.push(new Qn)
                }
                set(e) {
                    for (let t = 0; t < 9; t++)
                        this.coefficients[t].copy(e[t]);
                    return this
                }
                zero() {
                    for (let e = 0; e < 9; e++)
                        this.coefficients[e].set(0, 0, 0);
                    return this
                }
                getAt(e, t) {
                    const n = e.x,
                    i = e.y,
                    a = e.z,
                    r = this.coefficients;
                    return t.copy(r[0]).multiplyScalar(.282095),
                    t.addScaledVector(r[1], .488603 * i),
                    t.addScaledVector(r[2], .488603 * a),
                    t.addScaledVector(r[3], .488603 * n),
                    t.addScaledVector(r[4], n * i * 1.092548),
                    t.addScaledVector(r[5], i * a * 1.092548),
                    t.addScaledVector(r[6], .315392 * (3 * a * a - 1)),
                    t.addScaledVector(r[7], n * a * 1.092548),
                    t.addScaledVector(r[8], .546274 * (n * n - i * i)),
                    t
                }
                getIrradianceAt(e, t) {
                    const n = e.x,
                    i = e.y,
                    a = e.z,
                    r = this.coefficients;
                    return t.copy(r[0]).multiplyScalar(.886227),
                    t.addScaledVector(r[1], 1.023328 * i),
                    t.addScaledVector(r[2], 1.023328 * a),
                    t.addScaledVector(r[3], 1.023328 * n),
                    t.addScaledVector(r[4], .858086 * n * i),
                    t.addScaledVector(r[5], .858086 * i * a),
                    t.addScaledVector(r[6], .743125 * a * a - .247708),
                    t.addScaledVector(r[7], .858086 * n * a),
                    t.addScaledVector(r[8], .429043 * (n * n - i * i)),
                    t
                }
                add(e) {
                    for (let t = 0; t < 9; t++)
                        this.coefficients[t].add(e.coefficients[t]);
                    return this
                }
                addScaledSH(e, t) {
                    for (let n = 0; n < 9; n++)
                        this.coefficients[n].addScaledVector(e.coefficients[n], t);
                    return this
                }
                scale(e) {
                    for (let t = 0; t < 9; t++)
                        this.coefficients[t].multiplyScalar(e);
                    return this
                }
                lerp(e, t) {
                    for (let n = 0; n < 9; n++)
                        this.coefficients[n].lerp(e.coefficients[n], t);
                    return this
                }
                equals(e) {
                    for (let t = 0; t < 9; t++)
                        if (!this.coefficients[t].equals(e.coefficients[t]))
                            return !1;
                    return !0
                }
                copy(e) {
                    return this.set(e.coefficients)
                }
                clone() {
                    return (new this.constructor).copy(this)
                }
                fromArray(e, t) {
                    void 0 === t && (t = 0);
                    const n = this.coefficients;
                    for (let i = 0; i < 9; i++)
                        n[i].fromArray(e, t + 3 * i);
                    return this
                }
                toArray(e, t) {
                    void 0 === e && (e = []),
                    void 0 === t && (t = 0);
                    const n = this.coefficients;
                    for (let i = 0; i < 9; i++)
                        n[i].toArray(e, t + 3 * i);
                    return e
                }
                static getBasisAt(e, t) {
                    const n = e.x,
                    i = e.y,
                    a = e.z;
                    t[0] = .282095,
                    t[1] = .488603 * i,
                    t[2] = .488603 * a,
                    t[3] = .488603 * n,
                    t[4] = 1.092548 * n * i,
                    t[5] = 1.092548 * i * a,
                    t[6] = .315392 * (3 * a * a - 1),
                    t[7] = 1.092548 * n * a,
                    t[8] = .546274 * (n * n - i * i)
                }
            }
            function Au(e, t) {
                pu.call(this, void 0, t),
                this.type = "LightProbe",
                this.sh = void 0 !== e ? e : new Lu
            }
            function Tu(e) {
                Fh.call(this, e),
                this.textures = {}
            }
            Au.prototype = Object.assign(Object.create(pu.prototype), {
                constructor: Au,
                isLightProbe: !0,
                copy: function (e) {
                    return pu.prototype.copy.call(this, e),
                    this.sh.copy(e.sh),
                    this
                },
                fromJSON: function (e) {
                    return this.intensity = e.intensity,
                    this.sh.fromArray(e.sh),
                    this
                },
                toJSON: function (e) {
                    const t = pu.prototype.toJSON.call(this, e);
                    return t.object.sh = this.sh.toArray(),
                    t
                }
            }),
            Tu.prototype = Object.assign(Object.create(Fh.prototype), {
                constructor: Tu,
                load: function (e, t, n, i) {
                    const a = this,
                    r = new Oh(a.manager);
                    r.setPath(a.path),
                    r.setRequestHeader(a.requestHeader),
                    r.setWithCredentials(a.withCredentials),
                    r.load(e, (function (n) {
                            try {
                                t(a.parse(JSON.parse(n)))
                            } catch (t) {
                                i ? i(t) : console.error(t),
                                a.manager.itemError(e)
                            }
                        }), n, i)
                },
                parse: function (e) {
                    const t = this.textures;
                    function n(e) {
                        return void 0 === t[e] && console.warn("THREE.MaterialLoader: Undefined texture", e),
                        t[e]
                    }
                    const i = new gh[e.type];
                    if (void 0 !== e.uuid && (i.uuid = e.uuid), void 0 !== e.name && (i.name = e.name), void 0 !== e.color && i.color.setHex(e.color), void 0 !== e.roughness && (i.roughness = e.roughness), void 0 !== e.metalness && (i.metalness = e.metalness), void 0 !== e.sheen && (i.sheen = (new ga).setHex(e.sheen)), void 0 !== e.emissive && i.emissive.setHex(e.emissive), void 0 !== e.specular && i.specular.setHex(e.specular), void 0 !== e.shininess && (i.shininess = e.shininess), void 0 !== e.clearcoat && (i.clearcoat = e.clearcoat), void 0 !== e.clearcoatRoughness && (i.clearcoatRoughness = e.clearcoatRoughness), void 0 !== e.fog && (i.fog = e.fog), void 0 !== e.flatShading && (i.flatShading = e.flatShading), void 0 !== e.blending && (i.blending = e.blending), void 0 !== e.combine && (i.combine = e.combine), void 0 !== e.side && (i.side = e.side), void 0 !== e.opacity && (i.opacity = e.opacity), void 0 !== e.transparent && (i.transparent = e.transparent), void 0 !== e.alphaTest && (i.alphaTest = e.alphaTest), void 0 !== e.depthTest && (i.depthTest = e.depthTest), void 0 !== e.depthWrite && (i.depthWrite = e.depthWrite), void 0 !== e.colorWrite && (i.colorWrite = e.colorWrite), void 0 !== e.stencilWrite && (i.stencilWrite = e.stencilWrite), void 0 !== e.stencilWriteMask && (i.stencilWriteMask = e.stencilWriteMask), void 0 !== e.stencilFunc && (i.stencilFunc = e.stencilFunc), void 0 !== e.stencilRef && (i.stencilRef = e.stencilRef), void 0 !== e.stencilFuncMask && (i.stencilFuncMask = e.stencilFuncMask), void 0 !== e.stencilFail && (i.stencilFail = e.stencilFail), void 0 !== e.stencilZFail && (i.stencilZFail = e.stencilZFail), void 0 !== e.stencilZPass && (i.stencilZPass = e.stencilZPass), void 0 !== e.wireframe && (i.wireframe = e.wireframe), void 0 !== e.wireframeLinewidth && (i.wireframeLinewidth = e.wireframeLinewidth), void 0 !== e.wireframeLinecap && (i.wireframeLinecap = e.wireframeLinecap), void 0 !== e.wireframeLinejoin && (i.wireframeLinejoin = e.wireframeLinejoin), void 0 !== e.rotation && (i.rotation = e.rotation), 1 !== e.linewidth && (i.linewidth = e.linewidth), void 0 !== e.dashSize && (i.dashSize = e.dashSize), void 0 !== e.gapSize && (i.gapSize = e.gapSize), void 0 !== e.scale && (i.scale = e.scale), void 0 !== e.polygonOffset && (i.polygonOffset = e.polygonOffset), void 0 !== e.polygonOffsetFactor && (i.polygonOffsetFactor = e.polygonOffsetFactor), void 0 !== e.polygonOffsetUnits && (i.polygonOffsetUnits = e.polygonOffsetUnits), void 0 !== e.skinning && (i.skinning = e.skinning), void 0 !== e.morphTargets && (i.morphTargets = e.morphTargets), void 0 !== e.morphNormals && (i.morphNormals = e.morphNormals), void 0 !== e.dithering && (i.dithering = e.dithering), void 0 !== e.vertexTangents && (i.vertexTangents = e.vertexTangents), void 0 !== e.visible && (i.visible = e.visible), void 0 !== e.toneMapped && (i.toneMapped = e.toneMapped), void 0 !== e.userData && (i.userData = e.userData), void 0 !== e.vertexColors && ("number" == typeof e.vertexColors ? i.vertexColors = e.vertexColors > 0 : i.vertexColors = e.vertexColors), void 0 !== e.uniforms)
                        for (const t in e.uniforms) {
                            const a = e.uniforms[t];
                            switch (i.uniforms[t] = {}, a.type) {
                            case "t":
                                i.uniforms[t].value = n(a.value);
                                break;
                            case "c":
                                i.uniforms[t].value = (new ga).setHex(a.value);
                                break;
                            case "v2":
                                i.uniforms[t].value = (new Un).fromArray(a.value);
                                break;
                            case "v3":
                                i.uniforms[t].value = (new Qn).fromArray(a.value);
                                break;
                            case "v4":
                                i.uniforms[t].value = (new Xn).fromArray(a.value);
                                break;
                            case "m3":
                                i.uniforms[t].value = (new Bn).fromArray(a.value);
                                break;
                            case "m4":
                                i.uniforms[t].value = (new _i).fromArray(a.value);
                                break;
                            default:
                                i.uniforms[t].value = a.value
                            }
                        }
                    if (void 0 !== e.defines && (i.defines = e.defines), void 0 !== e.vertexShader && (i.vertexShader = e.vertexShader), void 0 !== e.fragmentShader && (i.fragmentShader = e.fragmentShader), void 0 !== e.extensions)
                        for (const t in e.extensions)
                            i.extensions[t] = e.extensions[t];
                    if (void 0 !== e.shading && (i.flatShading = 1 === e.shading), void 0 !== e.size && (i.size = e.size), void 0 !== e.sizeAttenuation && (i.sizeAttenuation = e.sizeAttenuation), void 0 !== e.map && (i.map = n(e.map)), void 0 !== e.matcap && (i.matcap = n(e.matcap)), void 0 !== e.alphaMap && (i.alphaMap = n(e.alphaMap)), void 0 !== e.bumpMap && (i.bumpMap = n(e.bumpMap)), void 0 !== e.bumpScale && (i.bumpScale = e.bumpScale), void 0 !== e.normalMap && (i.normalMap = n(e.normalMap)), void 0 !== e.normalMapType && (i.normalMapType = e.normalMapType), void 0 !== e.normalScale) {
                        let t = e.normalScale;
                        !1 === Array.isArray(t) && (t = [t, t]),
                        i.normalScale = (new Un).fromArray(t)
                    }
                    return void 0 !== e.displacementMap && (i.displacementMap = n(e.displacementMap)),
                    void 0 !== e.displacementScale && (i.displacementScale = e.displacementScale),
                    void 0 !== e.displacementBias && (i.displacementBias = e.displacementBias),
                    void 0 !== e.roughnessMap && (i.roughnessMap = n(e.roughnessMap)),
                    void 0 !== e.metalnessMap && (i.metalnessMap = n(e.metalnessMap)),
                    void 0 !== e.emissiveMap && (i.emissiveMap = n(e.emissiveMap)),
                    void 0 !== e.emissiveIntensity && (i.emissiveIntensity = e.emissiveIntensity),
                    void 0 !== e.specularMap && (i.specularMap = n(e.specularMap)),
                    void 0 !== e.envMap && (i.envMap = n(e.envMap)),
                    void 0 !== e.envMapIntensity && (i.envMapIntensity = e.envMapIntensity),
                    void 0 !== e.reflectivity && (i.reflectivity = e.reflectivity),
                    void 0 !== e.refractionRatio && (i.refractionRatio = e.refractionRatio),
                    void 0 !== e.lightMap && (i.lightMap = n(e.lightMap)),
                    void 0 !== e.lightMapIntensity && (i.lightMapIntensity = e.lightMapIntensity),
                    void 0 !== e.aoMap && (i.aoMap = n(e.aoMap)),
                    void 0 !== e.aoMapIntensity && (i.aoMapIntensity = e.aoMapIntensity),
                    void 0 !== e.gradientMap && (i.gradientMap = n(e.gradientMap)),
                    void 0 !== e.clearcoatMap && (i.clearcoatMap = n(e.clearcoatMap)),
                    void 0 !== e.clearcoatRoughnessMap && (i.clearcoatRoughnessMap = n(e.clearcoatRoughnessMap)),
                    void 0 !== e.clearcoatNormalMap && (i.clearcoatNormalMap = n(e.clearcoatNormalMap)),
                    void 0 !== e.clearcoatNormalScale && (i.clearcoatNormalScale = (new Un).fromArray(e.clearcoatNormalScale)),
                    void 0 !== e.transmission && (i.transmission = e.transmission),
                    void 0 !== e.transmissionMap && (i.transmissionMap = n(e.transmissionMap)),
                    i
                },
                setTextures: function (e) {
                    return this.textures = e,
                    this
                }
            });
            const Cu = {
                decodeText: function (e) {
                    if ("undefined" != typeof TextDecoder)
                        return (new TextDecoder).decode(e);
                    let t = "";
                    for (let n = 0, i = e.length; n < i; n++)
                        t += String.fromCharCode(e[n]);
                    try {
                        return decodeURIComponent(escape(t))
                    } catch (e) {
                        return t
                    }
                },
                extractUrlBase: function (e) {
                    const t = e.lastIndexOf("/");
                    return -1 === t ? "./" : e.substr(0, t + 1)
                }
            };
            function Eu() {
                Ga.call(this),
                this.type = "InstancedBufferGeometry",
                this.instanceCount = 1 / 0
            }
            function Hu(e, t, n, i) {
                "number" == typeof n && (i = n, n = !1, console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),
                _a.call(this, e, t, n),
                this.meshPerAttribute = i || 1
            }
            function Nu(e) {
                Fh.call(this, e)
            }
            Eu.prototype = Object.assign(Object.create(Ga.prototype), {
                constructor: Eu,
                isInstancedBufferGeometry: !0,
                copy: function (e) {
                    return Ga.prototype.copy.call(this, e),
                    this.instanceCount = e.instanceCount,
                    this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                toJSON: function () {
                    const e = Ga.prototype.toJSON.call(this);
                    return e.instanceCount = this.instanceCount,
                    e.isInstancedBufferGeometry = !0,
                    e
                }
            }),
            Hu.prototype = Object.assign(Object.create(_a.prototype), {
                constructor: Hu,
                isInstancedBufferAttribute: !0,
                copy: function (e) {
                    return _a.prototype.copy.call(this, e),
                    this.meshPerAttribute = e.meshPerAttribute,
                    this
                },
                toJSON: function () {
                    const e = _a.prototype.toJSON.call(this);
                    return e.meshPerAttribute = this.meshPerAttribute,
                    e.isInstancedBufferAttribute = !0,
                    e
                }
            }),
            Nu.prototype = Object.assign(Object.create(Fh.prototype), {
                constructor: Nu,
                load: function (e, t, n, i) {
                    const a = this,
                    r = new Oh(a.manager);
                    r.setPath(a.path),
                    r.setRequestHeader(a.requestHeader),
                    r.setWithCredentials(a.withCredentials),
                    r.load(e, (function (n) {
                            try {
                                t(a.parse(JSON.parse(n)))
                            } catch (t) {
                                i ? i(t) : console.error(t),
                                a.manager.itemError(e)
                            }
                        }), n, i)
                },
                parse: function (e) {
                    const t = {},
                    n = {};
                    function i(e, i) {
                        if (void 0 !== t[i])
                            return t[i];
                        const a = e.interleavedBuffers[i],
                        r = function (e, t) {
                            if (void 0 !== n[t])
                                return n[t];
                            const i = e.arrayBuffers[t],
                            a = new Uint32Array(i).buffer;
                            return n[t] = a,
                            a
                        }
                        (e, a.buffer),
                        o = new Is(new Pu[a.type](r), a.stride);
                        return o.uuid = a.uuid,
                        t[i] = o,
                        o
                    }
                    const a = e.isInstancedBufferGeometry ? new Eu : new Ga,
                    r = e.data.index;
                    if (void 0 !== r) {
                        const e = new Pu[r.type](r.array);
                        a.setIndex(new _a(e, 1))
                    }
                    const o = e.data.attributes;
                    for (const t in o) {
                        const n = o[t];
                        let r;
                        if (n.isInterleavedBufferAttribute)
                            r = new Ds(i(e.data, n.data), n.itemSize, n.offset, n.normalized);
                        else {
                            const e = new Pu[n.type](n.array);
                            r = new(n.isInstancedBufferAttribute ? Hu : _a)(e, n.itemSize, n.normalized)
                        }
                        void 0 !== n.name && (r.name = n.name),
                        a.setAttribute(t, r)
                    }
                    const s = e.data.morphAttributes;
                    if (s)
                        for (const t in s) {
                            const n = s[t],
                            r = [];
                            for (let t = 0, a = n.length; t < a; t++) {
                                const a = n[t];
                                let o;
                                o = a.isInterleavedBufferAttribute ? new Ds(i(e.data, a.data), a.itemSize, a.offset, a.normalized) : new _a(new Pu[a.type](a.array), a.itemSize, a.normalized),
                                void 0 !== a.name && (o.name = a.name),
                                r.push(o)
                            }
                            a.morphAttributes[t] = r
                        }
                    e.data.morphTargetsRelative && (a.morphTargetsRelative = !0);
                    const c = e.data.groups || e.data.drawcalls || e.data.offsets;
                    if (void 0 !== c)
                        for (let e = 0, t = c.length; e !== t; ++e) {
                            const t = c[e];
                            a.addGroup(t.start, t.count, t.materialIndex)
                        }
                    const l = e.data.boundingSphere;
                    if (void 0 !== l) {
                        const e = new Qn;
                        void 0 !== l.center && e.fromArray(l.center),
                        a.boundingSphere = new mi(e, l.radius)
                    }
                    return e.name && (a.name = e.name),
                    e.userData && (a.userData = e.userData),
                    a
                }
            });
            const Pu = {
                Int8Array,
                Uint8Array,
                Uint8ClampedArray: "undefined" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
                Int16Array,
                Uint16Array,
                Int32Array,
                Uint32Array,
                Float32Array,
                Float64Array
            };
            class Vu extends Fh {
                constructor(e) {
                    super(e)
                }
                load(e, t, n, i) {
                    const a = this,
                    r = "" === this.path ? Cu.extractUrlBase(e) : this.path;
                    this.resourcePath = this.resourcePath || r;
                    const o = new Oh(this.manager);
                    o.setPath(this.path),
                    o.setRequestHeader(this.requestHeader),
                    o.setWithCredentials(this.withCredentials),
                    o.load(e, (function (n) {
                            let r = null;
                            try {
                                r = JSON.parse(n)
                            } catch (t) {
                                return void 0 !== i && i(t),
                                void console.error("THREE:ObjectLoader: Can't parse " + e + ".", t.message)
                            }
                            const o = r.metadata;
                            void 0 !== o && void 0 !== o.type && "geometry" !== o.type.toLowerCase() ? a.parse(r, t) : console.error("THREE.ObjectLoader: Can't load " + e)
                        }), n, i)
                }
                parse(e, t) {
                    const n = this.parseShape(e.shapes),
                    i = this.parseGeometries(e.geometries, n),
                    a = this.parseImages(e.images, (function () {
                                void 0 !== t && t(s)
                            })),
                    r = this.parseTextures(e.textures, a),
                    o = this.parseMaterials(e.materials, r),
                    s = this.parseObject(e.object, i, o);
                    return e.animations && (s.animations = this.parseAnimations(e.animations)),
                    void 0 !== e.images && 0 !== e.images.length || void 0 !== t && t(s),
                    s
                }
                parseShape(e) {
                    const t = {};
                    if (void 0 !== e)
                        for (let n = 0, i = e.length; n < i; n++) {
                            const i = (new du).fromJSON(e[n]);
                            t[i.uuid] = i
                        }
                    return t
                }
                parseGeometries(e, t) {
                    const n = {};
                    let i;
                    if (void 0 !== e) {
                        const a = new Nu;
                        for (let r = 0, o = e.length; r < o; r++) {
                            let o;
                            const s = e[r];
                            switch (s.type) {
                            case "PlaneGeometry":
                            case "PlaneBufferGeometry":
                                o = new oh[s.type](s.width, s.height, s.widthSegments, s.heightSegments);
                                break;
                            case "BoxGeometry":
                            case "BoxBufferGeometry":
                            case "CubeGeometry":
                                o = new oh[s.type](s.width, s.height, s.depth, s.widthSegments, s.heightSegments, s.depthSegments);
                                break;
                            case "CircleGeometry":
                            case "CircleBufferGeometry":
                                o = new oh[s.type](s.radius, s.segments, s.thetaStart, s.thetaLength);
                                break;
                            case "CylinderGeometry":
                            case "CylinderBufferGeometry":
                                o = new oh[s.type](s.radiusTop, s.radiusBottom, s.height, s.radialSegments, s.heightSegments, s.openEnded, s.thetaStart, s.thetaLength);
                                break;
                            case "ConeGeometry":
                            case "ConeBufferGeometry":
                                o = new oh[s.type](s.radius, s.height, s.radialSegments, s.heightSegments, s.openEnded, s.thetaStart, s.thetaLength);
                                break;
                            case "SphereGeometry":
                            case "SphereBufferGeometry":
                                o = new oh[s.type](s.radius, s.widthSegments, s.heightSegments, s.phiStart, s.phiLength, s.thetaStart, s.thetaLength);
                                break;
                            case "DodecahedronGeometry":
                            case "DodecahedronBufferGeometry":
                            case "IcosahedronGeometry":
                            case "IcosahedronBufferGeometry":
                            case "OctahedronGeometry":
                            case "OctahedronBufferGeometry":
                            case "TetrahedronGeometry":
                            case "TetrahedronBufferGeometry":
                                o = new oh[s.type](s.radius, s.detail);
                                break;
                            case "RingGeometry":
                            case "RingBufferGeometry":
                                o = new oh[s.type](s.innerRadius, s.outerRadius, s.thetaSegments, s.phiSegments, s.thetaStart, s.thetaLength);
                                break;
                            case "TorusGeometry":
                            case "TorusBufferGeometry":
                                o = new oh[s.type](s.radius, s.tube, s.radialSegments, s.tubularSegments, s.arc);
                                break;
                            case "TorusKnotGeometry":
                            case "TorusKnotBufferGeometry":
                                o = new oh[s.type](s.radius, s.tube, s.tubularSegments, s.radialSegments, s.p, s.q);
                                break;
                            case "TubeGeometry":
                            case "TubeBufferGeometry":
                                o = new oh[s.type]((new hu[s.path.type]).fromJSON(s.path), s.tubularSegments, s.radius, s.radialSegments, s.closed);
                                break;
                            case "LatheGeometry":
                            case "LatheBufferGeometry":
                                o = new oh[s.type](s.points, s.segments, s.phiStart, s.phiLength);
                                break;
                            case "PolyhedronGeometry":
                            case "PolyhedronBufferGeometry":
                                o = new oh[s.type](s.vertices, s.indices, s.radius, s.details);
                                break;
                            case "ShapeGeometry":
                            case "ShapeBufferGeometry":
                                i = [];
                                for (let e = 0, n = s.shapes.length; e < n; e++) {
                                    const n = t[s.shapes[e]];
                                    i.push(n)
                                }
                                o = new oh[s.type](i, s.curveSegments);
                                break;
                            case "ExtrudeGeometry":
                            case "ExtrudeBufferGeometry":
                                i = [];
                                for (let e = 0, n = s.shapes.length; e < n; e++) {
                                    const n = t[s.shapes[e]];
                                    i.push(n)
                                }
                                const e = s.options.extrudePath;
                                void 0 !== e && (s.options.extrudePath = (new hu[e.type]).fromJSON(e)),
                                o = new oh[s.type](i, s.options);
                                break;
                            case "BufferGeometry":
                            case "InstancedBufferGeometry":
                                o = a.parse(s);
                                break;
                            case "Geometry":
                                console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');
                                break;
                            default:
                                console.warn('THREE.ObjectLoader: Unsupported geometry type "' + s.type + '"');
                                continue
                            }
                            o.uuid = s.uuid,
                            void 0 !== s.name && (o.name = s.name),
                            !0 === o.isBufferGeometry && void 0 !== s.userData && (o.userData = s.userData),
                            n[s.uuid] = o
                        }
                    }
                    return n
                }
                parseMaterials(e, t) {
                    const n = {},
                    i = {};
                    if (void 0 !== e) {
                        const a = new Tu;
                        a.setTextures(t);
                        for (let t = 0, r = e.length; t < r; t++) {
                            const r = e[t];
                            if ("MultiMaterial" === r.type) {
                                const e = [];
                                for (let t = 0; t < r.materials.length; t++) {
                                    const i = r.materials[t];
                                    void 0 === n[i.uuid] && (n[i.uuid] = a.parse(i)),
                                    e.push(n[i.uuid])
                                }
                                i[r.uuid] = e
                            } else
                                void 0 === n[r.uuid] && (n[r.uuid] = a.parse(r)), i[r.uuid] = n[r.uuid]
                        }
                    }
                    return i
                }
                parseAnimations(e) {
                    const t = [];
                    for (let n = 0; n < e.length; n++) {
                        const i = e[n],
                        a = Hh.parse(i);
                        void 0 !== i.uuid && (a.uuid = i.uuid),
                        t.push(a)
                    }
                    return t
                }
                parseImages(e, t) {
                    const n = this,
                    i = {};
                    let a;
                    function r(e) {
                        return n.manager.itemStart(e),
                        a.load(e, (function () {
                                n.manager.itemEnd(e)
                            }), void 0, (function () {
                                n.manager.itemError(e),
                                n.manager.itemEnd(e)
                            }))
                    }
                    if (void 0 !== e && e.length > 0) {
                        const o = new Vh(t);
                        a = new Bh(o),
                        a.setCrossOrigin(this.crossOrigin);
                        for (let t = 0, a = e.length; t < a; t++) {
                            const a = e[t],
                            o = a.url;
                            if (Array.isArray(o)) {
                                i[a.uuid] = [];
                                for (let e = 0, t = o.length; e < t; e++) {
                                    const t = o[e],
                                    s = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(t) ? t : n.resourcePath + t;
                                    i[a.uuid].push(r(s))
                                }
                            } else {
                                const e = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(a.url) ? a.url : n.resourcePath + a.url;
                                i[a.uuid] = r(e)
                            }
                        }
                    }
                    return i
                }
                parseTextures(e, t) {
                    function n(e, t) {
                        return "number" == typeof e ? e : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", e), t[e])
                    }
                    const i = {};
                    if (void 0 !== e)
                        for (let a = 0, r = e.length; a < r; a++) {
                            const r = e[a];
                            let o;
                            void 0 === r.image && console.warn('THREE.ObjectLoader: No "image" specified for', r.uuid),
                            void 0 === t[r.image] && console.warn("THREE.ObjectLoader: Undefined image", r.image),
                            o = Array.isArray(t[r.image]) ? new yr(t[r.image]) : new Wn(t[r.image]),
                            o.needsUpdate = !0,
                            o.uuid = r.uuid,
                            void 0 !== r.name && (o.name = r.name),
                            void 0 !== r.mapping && (o.mapping = n(r.mapping, Ru)),
                            void 0 !== r.offset && o.offset.fromArray(r.offset),
                            void 0 !== r.repeat && o.repeat.fromArray(r.repeat),
                            void 0 !== r.center && o.center.fromArray(r.center),
                            void 0 !== r.rotation && (o.rotation = r.rotation),
                            void 0 !== r.wrap && (o.wrapS = n(r.wrap[0], Fu), o.wrapT = n(r.wrap[1], Fu)),
                            void 0 !== r.format && (o.format = r.format),
                            void 0 !== r.type && (o.type = r.type),
                            void 0 !== r.encoding && (o.encoding = r.encoding),
                            void 0 !== r.minFilter && (o.minFilter = n(r.minFilter, Iu)),
                            void 0 !== r.magFilter && (o.magFilter = n(r.magFilter, Iu)),
                            void 0 !== r.anisotropy && (o.anisotropy = r.anisotropy),
                            void 0 !== r.flipY && (o.flipY = r.flipY),
                            void 0 !== r.premultiplyAlpha && (o.premultiplyAlpha = r.premultiplyAlpha),
                            void 0 !== r.unpackAlignment && (o.unpackAlignment = r.unpackAlignment),
                            i[r.uuid] = o
                        }
                    return i
                }
                parseObject(e, t, n) {
                    let i,
                    a,
                    r;
                    function o(e) {
                        return void 0 === t[e] && console.warn("THREE.ObjectLoader: Undefined geometry", e),
                        t[e]
                    }
                    function s(e) {
                        if (void 0 !== e) {
                            if (Array.isArray(e)) {
                                const t = [];
                                for (let i = 0, a = e.length; i < a; i++) {
                                    const a = e[i];
                                    void 0 === n[a] && console.warn("THREE.ObjectLoader: Undefined material", a),
                                    t.push(n[a])
                                }
                                return t
                            }
                            return void 0 === n[e] && console.warn("THREE.ObjectLoader: Undefined material", e),
                            n[e]
                        }
                    }
                    switch (e.type) {
                    case "Scene":
                        i = new Fs,
                        void 0 !== e.background && Number.isInteger(e.background) && (i.background = new ga(e.background)),
                        void 0 !== e.fog && ("Fog" === e.fog.type ? i.fog = new Rs(e.fog.color, e.fog.near, e.fog.far) : "FogExp2" === e.fog.type && (i.fog = new Vs(e.fog.color, e.fog.density)));
                        break;
                    case "PerspectiveCamera":
                        i = new vr(e.fov, e.aspect, e.near, e.far),
                        void 0 !== e.focus && (i.focus = e.focus),
                        void 0 !== e.zoom && (i.zoom = e.zoom),
                        void 0 !== e.filmGauge && (i.filmGauge = e.filmGauge),
                        void 0 !== e.filmOffset && (i.filmOffset = e.filmOffset),
                        void 0 !== e.view && (i.view = Object.assign({}, e.view));
                        break;
                    case "OrthographicCamera":
                        i = new Mu(e.left, e.right, e.top, e.bottom, e.near, e.far),
                        void 0 !== e.zoom && (i.zoom = e.zoom),
                        void 0 !== e.view && (i.view = Object.assign({}, e.view));
                        break;
                    case "AmbientLight":
                        i = new _u(e.color, e.intensity);
                        break;
                    case "DirectionalLight":
                        i = new wu(e.color, e.intensity);
                        break;
                    case "PointLight":
                        i = new bu(e.color, e.intensity, e.distance, e.decay);
                        break;
                    case "RectAreaLight":
                        i = new Su(e.color, e.intensity, e.width, e.height);
                        break;
                    case "SpotLight":
                        i = new xu(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
                        break;
                    case "HemisphereLight":
                        i = new mu(e.color, e.groundColor, e.intensity);
                        break;
                    case "LightProbe":
                        i = (new Au).fromJSON(e);
                        break;
                    case "SkinnedMesh":
                        console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
                    case "Mesh":
                        a = o(e.geometry),
                        r = s(e.material),
                        i = new sr(a, r);
                        break;
                    case "InstancedMesh":
                        a = o(e.geometry),
                        r = s(e.material);
                        const t = e.count,
                        n = e.instanceMatrix;
                        i = new pc(a, r, t),
                        i.instanceMatrix = new _a(new Float32Array(n.array), 16);
                        break;
                    case "LOD":
                        i = new ac;
                        break;
                    case "Line":
                        i = new Mc(o(e.geometry), s(e.material), e.mode);
                        break;
                    case "LineLoop":
                        i = new Sc(o(e.geometry), s(e.material));
                        break;
                    case "LineSegments":
                        i = new _c(o(e.geometry), s(e.material));
                        break;
                    case "PointCloud":
                    case "Points":
                        i = new Hc(o(e.geometry), s(e.material));
                        break;
                    case "Sprite":
                        i = new ec(s(e.material));
                        break;
                    case "Group":
                        i = new Ts;
                        break;
                    default:
                        i = new Zi
                    }
                    if (i.uuid = e.uuid, void 0 !== e.name && (i.name = e.name), void 0 !== e.matrix ? (i.matrix.fromArray(e.matrix), void 0 !== e.matrixAutoUpdate && (i.matrixAutoUpdate = e.matrixAutoUpdate), i.matrixAutoUpdate && i.matrix.decompose(i.position, i.quaternion, i.scale)) : (void 0 !== e.position && i.position.fromArray(e.position), void 0 !== e.rotation && i.rotation.fromArray(e.rotation), void 0 !== e.quaternion && i.quaternion.fromArray(e.quaternion), void 0 !== e.scale && i.scale.fromArray(e.scale)), void 0 !== e.castShadow && (i.castShadow = e.castShadow), void 0 !== e.receiveShadow && (i.receiveShadow = e.receiveShadow), e.shadow && (void 0 !== e.shadow.bias && (i.shadow.bias = e.shadow.bias), void 0 !== e.shadow.normalBias && (i.shadow.normalBias = e.shadow.normalBias), void 0 !== e.shadow.radius && (i.shadow.radius = e.shadow.radius), void 0 !== e.shadow.mapSize && i.shadow.mapSize.fromArray(e.shadow.mapSize), void 0 !== e.shadow.camera && (i.shadow.camera = this.parseObject(e.shadow.camera))), void 0 !== e.visible && (i.visible = e.visible), void 0 !== e.frustumCulled && (i.frustumCulled = e.frustumCulled), void 0 !== e.renderOrder && (i.renderOrder = e.renderOrder), void 0 !== e.userData && (i.userData = e.userData), void 0 !== e.layers && (i.layers.mask = e.layers), void 0 !== e.children) {
                        const a = e.children;
                        for (let e = 0; e < a.length; e++)
                            i.add(this.parseObject(a[e], t, n))
                    }
                    if ("LOD" === e.type) {
                        void 0 !== e.autoUpdate && (i.autoUpdate = e.autoUpdate);
                        const t = e.levels;
                        for (let e = 0; e < t.length; e++) {
                            const n = t[e],
                            a = i.getObjectByProperty("uuid", n.object);
                            void 0 !== a && i.addLevel(a, n.distance)
                        }
                    }
                    return i
                }
                setTexturePath(e) {
                    return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),
                    this.setResourcePath(e)
                }
            }
            const Ru = {
                UVMapping: ae,
                CubeReflectionMapping: re,
                CubeRefractionMapping: oe,
                EquirectangularReflectionMapping: se,
                EquirectangularRefractionMapping: ce,
                CubeUVReflectionMapping: le,
                CubeUVRefractionMapping: he
            },
            Fu = {
                RepeatWrapping: ue,
                ClampToEdgeWrapping: fe,
                MirroredRepeatWrapping: de
            },
            Iu = {
                NearestFilter: pe,
                NearestMipmapNearestFilter: me,
                NearestMipmapLinearFilter: ge,
                LinearFilter: ye,
                LinearMipmapNearestFilter: be,
                LinearMipmapLinearFilter: ze
            };
            function Ou(e) {
                "undefined" == typeof createImageBitmap && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),
                "undefined" == typeof fetch && console.warn("THREE.ImageBitmapLoader: fetch() not supported."),
                Fh.call(this, e),
                this.options = {
                    premultiplyAlpha: "none"
                }
            }
            function Du() {
                this.type = "ShapePath",
                this.color = new ga,
                this.subPaths = [],
                this.currentPath = null
            }
            function Uu(e) {
                this.type = "Font",
                this.data = e
            }
            function Bu(e, t, n, i, a) {
                const r = a.glyphs[e] || a.glyphs["?"];
                if (!r)
                    return void console.error('THREE.Font: character "' + e + '" does not exists in font family ' + a.familyName + ".");
                const o = new Du;
                let s,
                c,
                l,
                h,
                u,
                f,
                d,
                p;
                if (r.o) {
                    const e = r._cachedOutline || (r._cachedOutline = r.o.split(" "));
                    for (let a = 0, r = e.length; a < r; )
                        switch (e[a++]) {
                        case "m":
                            s = e[a++] * t + n,
                            c = e[a++] * t + i,
                            o.moveTo(s, c);
                            break;
                        case "l":
                            s = e[a++] * t + n,
                            c = e[a++] * t + i,
                            o.lineTo(s, c);
                            break;
                        case "q":
                            l = e[a++] * t + n,
                            h = e[a++] * t + i,
                            u = e[a++] * t + n,
                            f = e[a++] * t + i,
                            o.quadraticCurveTo(u, f, l, h);
                            break;
                        case "b":
                            l = e[a++] * t + n,
                            h = e[a++] * t + i,
                            u = e[a++] * t + n,
                            f = e[a++] * t + i,
                            d = e[a++] * t + n,
                            p = e[a++] * t + i,
                            o.bezierCurveTo(u, f, d, p, l, h)
                        }
                }
                return {
                    offsetX: r.ha * t,
                    path: o
                }
            }
            function ku(e) {
                Fh.call(this, e)
            }
            let Gu;
            Ou.prototype = Object.assign(Object.create(Fh.prototype), {
                constructor: Ou,
                isImageBitmapLoader: !0,
                setOptions: function (e) {
                    return this.options = e,
                    this
                },
                load: function (e, t, n, i) {
                    void 0 === e && (e = ""),
                    void 0 !== this.path && (e = this.path + e),
                    e = this.manager.resolveURL(e);
                    const a = this,
                    r = Ph.get(e);
                    if (void 0 !== r)
                        return a.manager.itemStart(e), setTimeout((function () {
                                t && t(r),
                                a.manager.itemEnd(e)
                            }), 0), r;
                    const o = {};
                    o.credentials = "anonymous" === this.crossOrigin ? "same-origin" : "include",
                    fetch(e, o).then((function (e) {
                            return e.blob()
                        })).then((function (e) {
                            return createImageBitmap(e, a.options)
                        })).then((function (n) {
                            Ph.add(e, n),
                            t && t(n),
                            a.manager.itemEnd(e)
                        })).catch((function (t) {
                            i && i(t),
                            a.manager.itemError(e),
                            a.manager.itemEnd(e)
                        })),
                    a.manager.itemStart(e)
                }
            }),
            Object.assign(Du.prototype, {
                moveTo: function (e, t) {
                    return this.currentPath = new fu,
                    this.subPaths.push(this.currentPath),
                    this.currentPath.moveTo(e, t),
                    this
                },
                lineTo: function (e, t) {
                    return this.currentPath.lineTo(e, t),
                    this
                },
                quadraticCurveTo: function (e, t, n, i) {
                    return this.currentPath.quadraticCurveTo(e, t, n, i),
                    this
                },
                bezierCurveTo: function (e, t, n, i, a, r) {
                    return this.currentPath.bezierCurveTo(e, t, n, i, a, r),
                    this
                },
                splineThru: function (e) {
                    return this.currentPath.splineThru(e),
                    this
                },
                toShapes: function (e, t) {
                    function n(e) {
                        const t = [];
                        for (let n = 0, i = e.length; n < i; n++) {
                            const i = e[n],
                            a = new du;
                            a.curves = i.curves,
                            t.push(a)
                        }
                        return t
                    }
                    function i(e, t) {
                        const n = t.length;
                        let i = !1;
                        for (let a = n - 1, r = 0; r < n; a = r++) {
                            let n = t[a],
                            o = t[r],
                            s = o.x - n.x,
                            c = o.y - n.y;
                            if (Math.abs(c) > Number.EPSILON) {
                                if (c < 0 && (n = t[r], s = -s, o = t[a], c = -c), e.y < n.y || e.y > o.y)
                                    continue;
                                if (e.y === n.y) {
                                    if (e.x === n.x)
                                        return !0
                                } else {
                                    const t = c * (e.x - n.x) - s * (e.y - n.y);
                                    if (0 === t)
                                        return !0;
                                    if (t < 0)
                                        continue;
                                    i = !i
                                }
                            } else {
                                if (e.y !== n.y)
                                    continue;
                                if (o.x <= e.x && e.x <= n.x || n.x <= e.x && e.x <= o.x)
                                    return !0
                            }
                        }
                        return i
                    }
                    const a = Al.isClockWise,
                    r = this.subPaths;
                    if (0 === r.length)
                        return [];
                    if (!0 === t)
                        return n(r);
                    let o,
                    s,
                    c;
                    const l = [];
                    if (1 === r.length)
                        return s = r[0], c = new du, c.curves = s.curves, l.push(c), l;
                    let h = !a(r[0].getPoints());
                    h = e ? !h : h;
                    const u = [],
                    f = [];
                    let d,
                    p,
                    m = [],
                    v = 0;
                    f[v] = void 0,
                    m[v] = [];
                    for (let t = 0, n = r.length; t < n; t++)
                        s = r[t], d = s.getPoints(), o = a(d), o = e ? !o : o, o ? (!h && f[v] && v++, f[v] = {
                                s: new du,
                                p: d
                            }, f[v].s.curves = s.curves, h && v++, m[v] = []) : m[v].push({
                            h: s,
                            p: d[0]
                        });
                    if (!f[0])
                        return n(r);
                    if (f.length > 1) {
                        let e = !1;
                        const t = [];
                        for (let e = 0, t = f.length; e < t; e++)
                            u[e] = [];
                        for (let n = 0, a = f.length; n < a; n++) {
                            const a = m[n];
                            for (let r = 0; r < a.length; r++) {
                                const o = a[r];
                                let s = !0;
                                for (let a = 0; a < f.length; a++)
                                    i(o.p, f[a].p) && (n !== a && t.push({
                                            froms: n,
                                            tos: a,
                                            hole: r
                                        }), s ? (s = !1, u[a].push(o)) : e = !0);
                                s && u[n].push(o)
                            }
                        }
                        t.length > 0 && (e || (m = u))
                    }
                    for (let e = 0, t = f.length; e < t; e++) {
                        c = f[e].s,
                        l.push(c),
                        p = m[e];
                        for (let e = 0, t = p.length; e < t; e++)
                            c.holes.push(p[e].h)
                    }
                    return l
                }
            }),
            Object.assign(Uu.prototype, {
                isFont: !0,
                generateShapes: function (e, t) {
                    void 0 === t && (t = 100);
                    const n = [],
                    i = function (e, t, n) {
                        const i = Array.from ? Array.from(e) : String(e).split(""),
                        a = t / n.resolution,
                        r = (n.boundingBox.yMax - n.boundingBox.yMin + n.underlineThickness) * a,
                        o = [];
                        let s = 0,
                        c = 0;
                        for (let e = 0; e < i.length; e++) {
                            const t = i[e];
                            if ("\n" === t)
                                s = 0, c -= r;
                            else {
                                const e = Bu(t, a, s, c, n);
                                s += e.offsetX,
                                o.push(e.path)
                            }
                        }
                        return o
                    }
                    (e, t, this.data);
                    for (let e = 0, t = i.length; e < t; e++)
                        Array.prototype.push.apply(n, i[e].toShapes());
                    return n
                }
            }),
            ku.prototype = Object.assign(Object.create(Fh.prototype), {
                constructor: ku,
                load: function (e, t, n, i) {
                    const a = this,
                    r = new Oh(this.manager);
                    r.setPath(this.path),
                    r.setRequestHeader(this.requestHeader),
                    r.setWithCredentials(a.withCredentials),
                    r.load(e, (function (e) {
                            let n;
                            try {
                                n = JSON.parse(e)
                            } catch (t) {
                                console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),
                                n = JSON.parse(e.substring(65, e.length - 2))
                            }
                            const i = a.parse(n);
                            t && t(i)
                        }), n, i)
                },
                parse: function (e) {
                    return new Uu(e)
                }
            });
            const ju = {
                getContext: function () {
                    return void 0 === Gu && (Gu = new(window.AudioContext || window.webkitAudioContext)),
                    Gu
                },
                setContext: function (e) {
                    Gu = e
                }
            };
            function Wu(e) {
                Fh.call(this, e)
            }
            function Xu(e, t, n) {
                Au.call(this, void 0, n);
                const i = (new ga).set(e),
                a = (new ga).set(t),
                r = new Qn(i.r, i.g, i.b),
                o = new Qn(a.r, a.g, a.b),
                s = Math.sqrt(Math.PI),
                c = s * Math.sqrt(.75);
                this.sh.coefficients[0].copy(r).add(o).multiplyScalar(s),
                this.sh.coefficients[1].copy(r).sub(o).multiplyScalar(c)
            }
            function qu(e, t) {
                Au.call(this, void 0, t);
                const n = (new ga).set(e);
                this.sh.coefficients[0].set(n.r, n.g, n.b).multiplyScalar(2 * Math.sqrt(Math.PI))
            }
            Wu.prototype = Object.assign(Object.create(Fh.prototype), {
                constructor: Wu,
                load: function (e, t, n, i) {
                    const a = this,
                    r = new Oh(a.manager);
                    r.setResponseType("arraybuffer"),
                    r.setPath(a.path),
                    r.setRequestHeader(a.requestHeader),
                    r.setWithCredentials(a.withCredentials),
                    r.load(e, (function (n) {
                            try {
                                const e = n.slice(0);
                                ju.getContext().decodeAudioData(e, (function (e) {
                                        t(e)
                                    }))
                            } catch (t) {
                                i ? i(t) : console.error(t),
                                a.manager.itemError(e)
                            }
                        }), n, i)
                }
            }),
            Xu.prototype = Object.assign(Object.create(Au.prototype), {
                constructor: Xu,
                isHemisphereLightProbe: !0,
                copy: function (e) {
                    return Au.prototype.copy.call(this, e),
                    this
                },
                toJSON: function (e) {
                    return Au.prototype.toJSON.call(this, e)
                }
            }),
            qu.prototype = Object.assign(Object.create(Au.prototype), {
                constructor: qu,
                isAmbientLightProbe: !0,
                copy: function (e) {
                    return Au.prototype.copy.call(this, e),
                    this
                },
                toJSON: function (e) {
                    return Au.prototype.toJSON.call(this, e)
                }
            });
            const Yu = new _i,
            Zu = new _i;
            function Qu() {
                this.type = "StereoCamera",
                this.aspect = 1,
                this.eyeSep = .064,
                this.cameraL = new vr,
                this.cameraL.layers.enable(1),
                this.cameraL.matrixAutoUpdate = !1,
                this.cameraR = new vr,
                this.cameraR.layers.enable(2),
                this.cameraR.matrixAutoUpdate = !1,
                this._cache = {
                    focus: null,
                    fov: null,
                    aspect: null,
                    near: null,
                    far: null,
                    zoom: null,
                    eyeSep: null
                }
            }
            Object.assign(Qu.prototype, {
                update: function (e) {
                    const t = this._cache;
                    if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep) {
                        t.focus = e.focus,
                        t.fov = e.fov,
                        t.aspect = e.aspect * this.aspect,
                        t.near = e.near,
                        t.far = e.far,
                        t.zoom = e.zoom,
                        t.eyeSep = this.eyeSep;
                        const n = e.projectionMatrix.clone(),
                        i = t.eyeSep / 2,
                        a = i * t.near / t.focus,
                        r = t.near * Math.tan(Dn.DEG2RAD * t.fov * .5) / t.zoom;
                        let o,
                        s;
                        Zu.elements[12] = -i,
                        Yu.elements[12] = i,
                        o = -r * t.aspect + a,
                        s = r * t.aspect + a,
                        n.elements[0] = 2 * t.near / (s - o),
                        n.elements[8] = (s + o) / (s - o),
                        this.cameraL.projectionMatrix.copy(n),
                        o = -r * t.aspect - a,
                        s = r * t.aspect - a,
                        n.elements[0] = 2 * t.near / (s - o),
                        n.elements[8] = (s + o) / (s - o),
                        this.cameraR.projectionMatrix.copy(n)
                    }
                    this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Zu),
                    this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Yu)
                }
            });
            class Ju {
                constructor(e) {
                    this.autoStart = void 0 === e || e,
                    this.startTime = 0,
                    this.oldTime = 0,
                    this.elapsedTime = 0,
                    this.running = !1
                }
                start() {
                    this.startTime = ("undefined" == typeof performance ? Date : performance).now(),
                    this.oldTime = this.startTime,
                    this.elapsedTime = 0,
                    this.running = !0
                }
                stop() {
                    this.getElapsedTime(),
                    this.running = !1,
                    this.autoStart = !1
                }
                getElapsedTime() {
                    return this.getDelta(),
                    this.elapsedTime
                }
                getDelta() {
                    let e = 0;
                    if (this.autoStart && !this.running)
                        return this.start(), 0;
                    if (this.running) {
                        const t = ("undefined" == typeof performance ? Date : performance).now();
                        e = (t - this.oldTime) / 1e3,
                        this.oldTime = t,
                        this.elapsedTime += e
                    }
                    return e
                }
            }
            const Ku = new Qn,
            $u = new Zn,
            ef = new Qn,
            tf = new Qn;
            class nf extends Zi {
                constructor() {
                    super(),
                    this.type = "AudioListener",
                    this.context = ju.getContext(),
                    this.gain = this.context.createGain(),
                    this.gain.connect(this.context.destination),
                    this.filter = null,
                    this.timeDelta = 0,
                    this._clock = new Ju
                }
                getInput() {
                    return this.gain
                }
                removeFilter() {
                    return null !== this.filter && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null),
                    this
                }
                getFilter() {
                    return this.filter
                }
                setFilter(e) {
                    return null !== this.filter ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
                    this.filter = e,
                    this.gain.connect(this.filter),
                    this.filter.connect(this.context.destination),
                    this
                }
                getMasterVolume() {
                    return this.gain.gain.value
                }
                setMasterVolume(e) {
                    return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01),
                    this
                }
                updateMatrixWorld(e) {
                    super.updateMatrixWorld(e);
                    const t = this.context.listener,
                    n = this.up;
                    if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(Ku, $u, ef), tf.set(0, 0, -1).applyQuaternion($u), t.positionX) {
                        const e = this.context.currentTime + this.timeDelta;
                        t.positionX.linearRampToValueAtTime(Ku.x, e),
                        t.positionY.linearRampToValueAtTime(Ku.y, e),
                        t.positionZ.linearRampToValueAtTime(Ku.z, e),
                        t.forwardX.linearRampToValueAtTime(tf.x, e),
                        t.forwardY.linearRampToValueAtTime(tf.y, e),
                        t.forwardZ.linearRampToValueAtTime(tf.z, e),
                        t.upX.linearRampToValueAtTime(n.x, e),
                        t.upY.linearRampToValueAtTime(n.y, e),
                        t.upZ.linearRampToValueAtTime(n.z, e)
                    } else
                        t.setPosition(Ku.x, Ku.y, Ku.z), t.setOrientation(tf.x, tf.y, tf.z, n.x, n.y, n.z)
                }
            }
            class af extends Zi {
                constructor(e) {
                    super(),
                    this.type = "Audio",
                    this.listener = e,
                    this.context = e.context,
                    this.gain = this.context.createGain(),
                    this.gain.connect(e.getInput()),
                    this.autoplay = !1,
                    this.buffer = null,
                    this.detune = 0,
                    this.loop = !1,
                    this.loopStart = 0,
                    this.loopEnd = 0,
                    this.offset = 0,
                    this.duration = void 0,
                    this.playbackRate = 1,
                    this.isPlaying = !1,
                    this.hasPlaybackControl = !0,
                    this.source = null,
                    this.sourceType = "empty",
                    this._startedAt = 0,
                    this._progress = 0,
                    this._connected = !1,
                    this.filters = []
                }
                getOutput() {
                    return this.gain
                }
                setNodeSource(e) {
                    return this.hasPlaybackControl = !1,
                    this.sourceType = "audioNode",
                    this.source = e,
                    this.connect(),
                    this
                }
                setMediaElementSource(e) {
                    return this.hasPlaybackControl = !1,
                    this.sourceType = "mediaNode",
                    this.source = this.context.createMediaElementSource(e),
                    this.connect(),
                    this
                }
                setMediaStreamSource(e) {
                    return this.hasPlaybackControl = !1,
                    this.sourceType = "mediaStreamNode",
                    this.source = this.context.createMediaStreamSource(e),
                    this.connect(),
                    this
                }
                setBuffer(e) {
                    return this.buffer = e,
                    this.sourceType = "buffer",
                    this.autoplay && this.play(),
                    this
                }
                play(e) {
                    if (void 0 === e && (e = 0), !0 === this.isPlaying)
                        return void console.warn("THREE.Audio: Audio is already playing.");
                    if (!1 === this.hasPlaybackControl)
                        return void console.warn("THREE.Audio: this Audio has no playback control.");
                    this._startedAt = this.context.currentTime + e;
                    const t = this.context.createBufferSource();
                    return t.buffer = this.buffer,
                    t.loop = this.loop,
                    t.loopStart = this.loopStart,
                    t.loopEnd = this.loopEnd,
                    t.onended = this.onEnded.bind(this),
                    t.start(this._startedAt, this._progress + this.offset, this.duration),
                    this.isPlaying = !0,
                    this.source = t,
                    this.setDetune(this.detune),
                    this.setPlaybackRate(this.playbackRate),
                    this.connect()
                }
                pause() {
                    if (!1 !== this.hasPlaybackControl)
                        return !0 === this.isPlaying && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate, !0 === this.loop && (this._progress = this._progress % (this.duration || this.buffer.duration)), this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;
                    console.warn("THREE.Audio: this Audio has no playback control.")
                }
                stop() {
                    if (!1 !== this.hasPlaybackControl)
                        return this._progress = 0, this.source.stop(), this.source.onended = null, this.isPlaying = !1, this;
                    console.warn("THREE.Audio: this Audio has no playback control.")
                }
                connect() {
                    if (this.filters.length > 0) {
                        this.source.connect(this.filters[0]);
                        for (let e = 1, t = this.filters.length; e < t; e++)
                            this.filters[e - 1].connect(this.filters[e]);
                        this.filters[this.filters.length - 1].connect(this.getOutput())
                    } else
                        this.source.connect(this.getOutput());
                    return this._connected = !0,
                    this
                }
                disconnect() {
                    if (this.filters.length > 0) {
                        this.source.disconnect(this.filters[0]);
                        for (let e = 1, t = this.filters.length; e < t; e++)
                            this.filters[e - 1].disconnect(this.filters[e]);
                        this.filters[this.filters.length - 1].disconnect(this.getOutput())
                    } else
                        this.source.disconnect(this.getOutput());
                    return this._connected = !1,
                    this
                }
                getFilters() {
                    return this.filters
                }
                setFilters(e) {
                    return e || (e = []),
                    !0 === this._connected ? (this.disconnect(), this.filters = e, this.connect()) : this.filters = e,
                    this
                }
                setDetune(e) {
                    if (this.detune = e, void 0 !== this.source.detune)
                        return !0 === this.isPlaying && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01), this
                }
                getDetune() {
                    return this.detune
                }
                getFilter() {
                    return this.getFilters()[0]
                }
                setFilter(e) {
                    return this.setFilters(e ? [e] : [])
                }
                setPlaybackRate(e) {
                    if (!1 !== this.hasPlaybackControl)
                        return this.playbackRate = e, !0 === this.isPlaying && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01), this;
                    console.warn("THREE.Audio: this Audio has no playback control.")
                }
                getPlaybackRate() {
                    return this.playbackRate
                }
                onEnded() {
                    this.isPlaying = !1
                }
                getLoop() {
                    return !1 === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop
                }
                setLoop(e) {
                    if (!1 !== this.hasPlaybackControl)
                        return this.loop = e, !0 === this.isPlaying && (this.source.loop = this.loop), this;
                    console.warn("THREE.Audio: this Audio has no playback control.")
                }
                setLoopStart(e) {
                    return this.loopStart = e,
                    this
                }
                setLoopEnd(e) {
                    return this.loopEnd = e,
                    this
                }
                getVolume() {
                    return this.gain.gain.value
                }
                setVolume(e) {
                    return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01),
                    this
                }
            }
            const rf = new Qn,
            of = new Zn,
            sf = new Qn,
            cf = new Qn;
            class lf extends af {
                constructor(e) {
                    super(e),
                    this.panner = this.context.createPanner(),
                    this.panner.panningModel = "HRTF",
                    this.panner.connect(this.gain)
                }
                getOutput() {
                    return this.panner
                }
                getRefDistance() {
                    return this.panner.refDistance
                }
                setRefDistance(e) {
                    return this.panner.refDistance = e,
                    this
                }
                getRolloffFactor() {
                    return this.panner.rolloffFactor
                }
                setRolloffFactor(e) {
                    return this.panner.rolloffFactor = e,
                    this
                }
                getDistanceModel() {
                    return this.panner.distanceModel
                }
                setDistanceModel(e) {
                    return this.panner.distanceModel = e,
                    this
                }
                getMaxDistance() {
                    return this.panner.maxDistance
                }
                setMaxDistance(e) {
                    return this.panner.maxDistance = e,
                    this
                }
                setDirectionalCone(e, t, n) {
                    return this.panner.coneInnerAngle = e,
                    this.panner.coneOuterAngle = t,
                    this.panner.coneOuterGain = n,
                    this
                }
                updateMatrixWorld(e) {
                    if (super.updateMatrixWorld(e), !0 === this.hasPlaybackControl && !1 === this.isPlaying)
                        return;
                    this.matrixWorld.decompose(rf, of, sf),
                    cf.set(0, 0, 1).applyQuaternion(of);
                    const t = this.panner;
                    if (t.positionX) {
                        const e = this.context.currentTime + this.listener.timeDelta;
                        t.positionX.linearRampToValueAtTime(rf.x, e),
                        t.positionY.linearRampToValueAtTime(rf.y, e),
                        t.positionZ.linearRampToValueAtTime(rf.z, e),
                        t.orientationX.linearRampToValueAtTime(cf.x, e),
                        t.orientationY.linearRampToValueAtTime(cf.y, e),
                        t.orientationZ.linearRampToValueAtTime(cf.z, e)
                    } else
                        t.setPosition(rf.x, rf.y, rf.z), t.setOrientation(cf.x, cf.y, cf.z)
                }
            }
            class hf {
                constructor(e, t) {
                    this.analyser = e.context.createAnalyser(),
                    this.analyser.fftSize = void 0 !== t ? t : 2048,
                    this.data = new Uint8Array(this.analyser.frequencyBinCount),
                    e.getOutput().connect(this.analyser)
                }
                getFrequencyData() {
                    return this.analyser.getByteFrequencyData(this.data),
                    this.data
                }
                getAverageFrequency() {
                    let e = 0;
                    const t = this.getFrequencyData();
                    for (let n = 0; n < t.length; n++)
                        e += t[n];
                    return e / t.length
                }
            }
            function uf(e, t, n) {
                let i,
                a,
                r;
                switch (this.binding = e, this.valueSize = n, t) {
                case "quaternion":
                    i = this._slerp,
                    a = this._slerpAdditive,
                    r = this._setAdditiveIdentityQuaternion,
                    this.buffer = new Float64Array(6 * n),
                    this._workIndex = 5;
                    break;
                case "string":
                case "bool":
                    i = this._select,
                    a = this._select,
                    r = this._setAdditiveIdentityOther,
                    this.buffer = new Array(5 * n);
                    break;
                default:
                    i = this._lerp,
                    a = this._lerpAdditive,
                    r = this._setAdditiveIdentityNumeric,
                    this.buffer = new Float64Array(5 * n)
                }
                this._mixBufferRegion = i,
                this._mixBufferRegionAdditive = a,
                this._setIdentity = r,
                this._origIndex = 3,
                this._addIndex = 4,
                this.cumulativeWeight = 0,
                this.cumulativeWeightAdditive = 0,
                this.useCount = 0,
                this.referenceCount = 0
            }
            Object.assign(uf.prototype, {
                accumulate: function (e, t) {
                    const n = this.buffer,
                    i = this.valueSize,
                    a = e * i + i;
                    let r = this.cumulativeWeight;
                    if (0 === r) {
                        for (let e = 0; e !== i; ++e)
                            n[a + e] = n[e];
                        r = t
                    } else {
                        r += t;
                        const e = t / r;
                        this._mixBufferRegion(n, a, 0, e, i)
                    }
                    this.cumulativeWeight = r
                },
                accumulateAdditive: function (e) {
                    const t = this.buffer,
                    n = this.valueSize,
                    i = n * this._addIndex;
                    0 === this.cumulativeWeightAdditive && this._setIdentity(),
                    this._mixBufferRegionAdditive(t, i, 0, e, n),
                    this.cumulativeWeightAdditive += e
                },
                apply: function (e) {
                    const t = this.valueSize,
                    n = this.buffer,
                    i = e * t + t,
                    a = this.cumulativeWeight,
                    r = this.cumulativeWeightAdditive,
                    o = this.binding;
                    if (this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, a < 1) {
                        const e = t * this._origIndex;
                        this._mixBufferRegion(n, i, e, 1 - a, t)
                    }
                    r > 0 && this._mixBufferRegionAdditive(n, i, this._addIndex * t, 1, t);
                    for (let e = t, a = t + t; e !== a; ++e)
                        if (n[e] !== n[e + t]) {
                            o.setValue(n, i);
                            break
                        }
                },
                saveOriginalState: function () {
                    const e = this.binding,
                    t = this.buffer,
                    n = this.valueSize,
                    i = n * this._origIndex;
                    e.getValue(t, i);
                    for (let e = n, a = i; e !== a; ++e)
                        t[e] = t[i + e % n];
                    this._setIdentity(),
                    this.cumulativeWeight = 0,
                    this.cumulativeWeightAdditive = 0
                },
                restoreOriginalState: function () {
                    const e = 3 * this.valueSize;
                    this.binding.setValue(this.buffer, e)
                },
                _setAdditiveIdentityNumeric: function () {
                    const e = this._addIndex * this.valueSize,
                    t = e + this.valueSize;
                    for (let n = e; n < t; n++)
                        this.buffer[n] = 0
                },
                _setAdditiveIdentityQuaternion: function () {
                    this._setAdditiveIdentityNumeric(),
                    this.buffer[this._addIndex * this.valueSize + 3] = 1
                },
                _setAdditiveIdentityOther: function () {
                    const e = this._origIndex * this.valueSize,
                    t = this._addIndex * this.valueSize;
                    for (let n = 0; n < this.valueSize; n++)
                        this.buffer[t + n] = this.buffer[e + n]
                },
                _select: function (e, t, n, i, a) {
                    if (i >= .5)
                        for (let i = 0; i !== a; ++i)
                            e[t + i] = e[n + i]
                },
                _slerp: function (e, t, n, i) {
                    Zn.slerpFlat(e, t, e, t, e, n, i)
                },
                _slerpAdditive: function (e, t, n, i, a) {
                    const r = this._workIndex * a;
                    Zn.multiplyQuaternionsFlat(e, r, e, t, e, n),
                    Zn.slerpFlat(e, t, e, t, e, r, i)
                },
                _lerp: function (e, t, n, i, a) {
                    const r = 1 - i;
                    for (let o = 0; o !== a; ++o) {
                        const a = t + o;
                        e[a] = e[a] * r + e[n + o] * i
                    }
                },
                _lerpAdditive: function (e, t, n, i, a) {
                    for (let r = 0; r !== a; ++r) {
                        const a = t + r;
                        e[a] = e[a] + e[n + r] * i
                    }
                }
            });
            const ff = new RegExp("[\\[\\]\\.:\\/]", "g"),
            df = "[^\\[\\]\\.:\\/]",
            pf = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]",
            mf = /((?:WC+[\/:])*)/.source.replace("WC", df),
            vf = /(WCOD+)?/.source.replace("WCOD", pf),
            gf = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", df),
            xf = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", df),
            yf = new RegExp("^" + mf + vf + gf + xf + "$"),
            bf = ["material", "materials", "bones"];
            function Mf(e, t, n) {
                const i = n || zf.parseTrackName(t);
                this._targetGroup = e,
                this._bindings = e.subscribe_(t, i)
            }
            function zf(e, t, n) {
                this.path = t,
                this.parsedPath = n || zf.parseTrackName(t),
                this.node = zf.findNode(e, this.parsedPath.nodeName) || e,
                this.rootNode = e
            }
            function wf() {
                this.uuid = Dn.generateUUID(),
                this._objects = Array.prototype.slice.call(arguments),
                this.nCachedObjects_ = 0;
                const e = {};
                this._indicesByUUID = e;
                for (let t = 0, n = arguments.length; t !== n; ++t)
                    e[arguments[t].uuid] = t;
                this._paths = [],
                this._parsedPaths = [],
                this._bindings = [],
                this._bindingsIndicesByPath = {};
                const t = this;
                this.stats = {
                    objects: {
                        get total() {
                            return t._objects.length
                        },
                        get inUse() {
                            return this.total - t.nCachedObjects_
                        }
                    },
                    get bindingsPerObject() {
                        return t._bindings.length
                    }
                }
            }
            Object.assign(Mf.prototype, {
                getValue: function (e, t) {
                    this.bind();
                    const n = this._targetGroup.nCachedObjects_,
                    i = this._bindings[n];
                    void 0 !== i && i.getValue(e, t)
                },
                setValue: function (e, t) {
                    const n = this._bindings;
                    for (let i = this._targetGroup.nCachedObjects_, a = n.length; i !== a; ++i)
                        n[i].setValue(e, t)
                },
                bind: function () {
                    const e = this._bindings;
                    for (let t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)
                        e[t].bind()
                },
                unbind: function () {
                    const e = this._bindings;
                    for (let t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)
                        e[t].unbind()
                }
            }),
            Object.assign(zf, {
                Composite: Mf,
                create: function (e, t, n) {
                    return e && e.isAnimationObjectGroup ? new zf.Composite(e, t, n) : new zf(e, t, n)
                },
                sanitizeNodeName: function (e) {
                    return e.replace(/\s/g, "_").replace(ff, "")
                },
                parseTrackName: function (e) {
                    const t = yf.exec(e);
                    if (!t)
                        throw new Error("PropertyBinding: Cannot parse trackName: " + e);
                    const n = {
                        nodeName: t[2],
                        objectName: t[3],
                        objectIndex: t[4],
                        propertyName: t[5],
                        propertyIndex: t[6]
                    },
                    i = n.nodeName && n.nodeName.lastIndexOf(".");
                    if (void 0 !== i && -1 !== i) {
                        const e = n.nodeName.substring(i + 1);
                        -1 !== bf.indexOf(e) && (n.nodeName = n.nodeName.substring(0, i), n.objectName = e)
                    }
                    if (null === n.propertyName || 0 === n.propertyName.length)
                        throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
                    return n
                },
                findNode: function (e, t) {
                    if (!t || "" === t || "." === t || -1 === t || t === e.name || t === e.uuid)
                        return e;
                    if (e.skeleton) {
                        const n = e.skeleton.getBoneByName(t);
                        if (void 0 !== n)
                            return n
                    }
                    if (e.children) {
                        const n = function (e) {
                            for (let i = 0; i < e.length; i++) {
                                const a = e[i];
                                if (a.name === t || a.uuid === t)
                                    return a;
                                const r = n(a.children);
                                if (r)
                                    return r
                            }
                            return null
                        },
                        i = n(e.children);
                        if (i)
                            return i
                    }
                    return null
                }
            }),
            Object.assign(zf.prototype, {
                _getValue_unavailable: function () {},
                _setValue_unavailable: function () {},
                BindingType: {
                    Direct: 0,
                    EntireArray: 1,
                    ArrayElement: 2,
                    HasFromToArray: 3
                },
                Versioning: {
                    None: 0,
                    NeedsUpdate: 1,
                    MatrixWorldNeedsUpdate: 2
                },
                GetterByBindingType: [function (e, t) {
                        e[t] = this.node[this.propertyName]
                    }, function (e, t) {
                        const n = this.resolvedProperty;
                        for (let i = 0, a = n.length; i !== a; ++i)
                            e[t++] = n[i]
                    }, function (e, t) {
                        e[t] = this.resolvedProperty[this.propertyIndex]
                    }, function (e, t) {
                        this.resolvedProperty.toArray(e, t)
                    }
                ],
                SetterByBindingTypeAndVersioning: [[function (e, t) {
                            this.targetObject[this.propertyName] = e[t]
                        }, function (e, t) {
                            this.targetObject[this.propertyName] = e[t],
                            this.targetObject.needsUpdate = !0
                        }, function (e, t) {
                            this.targetObject[this.propertyName] = e[t],
                            this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    ], [function (e, t) {
                            const n = this.resolvedProperty;
                            for (let i = 0, a = n.length; i !== a; ++i)
                                n[i] = e[t++]
                        }, function (e, t) {
                            const n = this.resolvedProperty;
                            for (let i = 0, a = n.length; i !== a; ++i)
                                n[i] = e[t++];
                            this.targetObject.needsUpdate = !0
                        }, function (e, t) {
                            const n = this.resolvedProperty;
                            for (let i = 0, a = n.length; i !== a; ++i)
                                n[i] = e[t++];
                            this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    ], [function (e, t) {
                            this.resolvedProperty[this.propertyIndex] = e[t]
                        }, function (e, t) {
                            this.resolvedProperty[this.propertyIndex] = e[t],
                            this.targetObject.needsUpdate = !0
                        }, function (e, t) {
                            this.resolvedProperty[this.propertyIndex] = e[t],
                            this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    ], [function (e, t) {
                            this.resolvedProperty.fromArray(e, t)
                        }, function (e, t) {
                            this.resolvedProperty.fromArray(e, t),
                            this.targetObject.needsUpdate = !0
                        }, function (e, t) {
                            this.resolvedProperty.fromArray(e, t),
                            this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    ]],
                getValue: function (e, t) {
                    this.bind(),
                    this.getValue(e, t)
                },
                setValue: function (e, t) {
                    this.bind(),
                    this.setValue(e, t)
                },
                bind: function () {
                    let e = this.node;
                    const t = this.parsedPath,
                    n = t.objectName,
                    i = t.propertyName;
                    let a = t.propertyIndex;
                    if (e || (e = zf.findNode(this.rootNode, t.nodeName) || this.rootNode, this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, !e)
                        return void console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
                    if (n) {
                        let i = t.objectIndex;
                        switch (n) {
                        case "materials":
                            if (!e.material)
                                return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                            if (!e.material.materials)
                                return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                            e = e.material.materials;
                            break;
                        case "bones":
                            if (!e.skeleton)
                                return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                            e = e.skeleton.bones;
                            for (let t = 0; t < e.length; t++)
                                if (e[t].name === i) {
                                    i = t;
                                    break
                                }
                            break;
                        default:
                            if (void 0 === e[n])
                                return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                            e = e[n]
                        }
                        if (void 0 !== i) {
                            if (void 0 === e[i])
                                return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
                            e = e[i]
                        }
                    }
                    const r = e[i];
                    if (void 0 === r) {
                        const n = t.nodeName;
                        return void console.error("THREE.PropertyBinding: Trying to update property for track: " + n + "." + i + " but it wasn't found.", e)
                    }
                    let o = this.Versioning.None;
                    this.targetObject = e,
                    void 0 !== e.needsUpdate ? o = this.Versioning.NeedsUpdate : void 0 !== e.matrixWorldNeedsUpdate && (o = this.Versioning.MatrixWorldNeedsUpdate);
                    let s = this.BindingType.Direct;
                    if (void 0 !== a) {
                        if ("morphTargetInfluences" === i) {
                            if (!e.geometry)
                                return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                            if (!e.geometry.isBufferGeometry)
                                return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.", this);
                            if (!e.geometry.morphAttributes)
                                return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                            void 0 !== e.morphTargetDictionary[a] && (a = e.morphTargetDictionary[a])
                        }
                        s = this.BindingType.ArrayElement,
                        this.resolvedProperty = r,
                        this.propertyIndex = a
                    } else
                        void 0 !== r.fromArray && void 0 !== r.toArray ? (s = this.BindingType.HasFromToArray, this.resolvedProperty = r) : Array.isArray(r) ? (s = this.BindingType.EntireArray, this.resolvedProperty = r) : this.propertyName = i;
                    this.getValue = this.GetterByBindingType[s],
                    this.setValue = this.SetterByBindingTypeAndVersioning[s][o]
                },
                unbind: function () {
                    this.node = null,
                    this.getValue = this._getValue_unbound,
                    this.setValue = this._setValue_unbound
                }
            }),
            Object.assign(zf.prototype, {
                _getValue_unbound: zf.prototype.getValue,
                _setValue_unbound: zf.prototype.setValue
            }),
            Object.assign(wf.prototype, {
                isAnimationObjectGroup: !0,
                add: function () {
                    const e = this._objects,
                    t = this._indicesByUUID,
                    n = this._paths,
                    i = this._parsedPaths,
                    a = this._bindings,
                    r = a.length;
                    let o = void 0,
                    s = e.length,
                    c = this.nCachedObjects_;
                    for (let l = 0, h = arguments.length; l !== h; ++l) {
                        const h = arguments[l],
                        u = h.uuid;
                        let f = t[u];
                        if (void 0 === f) {
                            f = s++,
                            t[u] = f,
                            e.push(h);
                            for (let e = 0, t = r; e !== t; ++e)
                                a[e].push(new zf(h, n[e], i[e]))
                        } else if (f < c) {
                            o = e[f];
                            const s = --c,
                            l = e[s];
                            t[l.uuid] = f,
                            e[f] = l,
                            t[u] = s,
                            e[s] = h;
                            for (let e = 0, t = r; e !== t; ++e) {
                                const t = a[e],
                                r = t[s];
                                let o = t[f];
                                t[f] = r,
                                void 0 === o && (o = new zf(h, n[e], i[e])),
                                t[s] = o
                            }
                        } else
                            e[f] !== o && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")
                    }
                    this.nCachedObjects_ = c
                },
                remove: function () {
                    const e = this._objects,
                    t = this._indicesByUUID,
                    n = this._bindings,
                    i = n.length;
                    let a = this.nCachedObjects_;
                    for (let r = 0, o = arguments.length; r !== o; ++r) {
                        const o = arguments[r],
                        s = o.uuid,
                        c = t[s];
                        if (void 0 !== c && c >= a) {
                            const r = a++,
                            l = e[r];
                            t[l.uuid] = c,
                            e[c] = l,
                            t[s] = r,
                            e[r] = o;
                            for (let e = 0, t = i; e !== t; ++e) {
                                const t = n[e],
                                i = t[r],
                                a = t[c];
                                t[c] = i,
                                t[r] = a
                            }
                        }
                    }
                    this.nCachedObjects_ = a
                },
                uncache: function () {
                    const e = this._objects,
                    t = this._indicesByUUID,
                    n = this._bindings,
                    i = n.length;
                    let a = this.nCachedObjects_,
                    r = e.length;
                    for (let o = 0, s = arguments.length; o !== s; ++o) {
                        const s = arguments[o].uuid,
                        c = t[s];
                        if (void 0 !== c)
                            if (delete t[s], c < a) {
                                const o = --a,
                                s = e[o],
                                l = --r,
                                h = e[l];
                                t[s.uuid] = c,
                                e[c] = s,
                                t[h.uuid] = o,
                                e[o] = h,
                                e.pop();
                                for (let e = 0, t = i; e !== t; ++e) {
                                    const t = n[e],
                                    i = t[o],
                                    a = t[l];
                                    t[c] = i,
                                    t[o] = a,
                                    t.pop()
                                }
                            } else {
                                const a = --r,
                                o = e[a];
                                t[o.uuid] = c,
                                e[c] = o,
                                e.pop();
                                for (let e = 0, t = i; e !== t; ++e) {
                                    const t = n[e];
                                    t[c] = t[a],
                                    t.pop()
                                }
                            }
                    }
                    this.nCachedObjects_ = a
                },
                subscribe_: function (e, t) {
                    const n = this._bindingsIndicesByPath;
                    let i = n[e];
                    const a = this._bindings;
                    if (void 0 !== i)
                        return a[i];
                    const r = this._paths,
                    o = this._parsedPaths,
                    s = this._objects,
                    c = s.length,
                    l = this.nCachedObjects_,
                    h = new Array(c);
                    i = a.length,
                    n[e] = i,
                    r.push(e),
                    o.push(t),
                    a.push(h);
                    for (let n = l, i = s.length; n !== i; ++n) {
                        const i = s[n];
                        h[n] = new zf(i, e, t)
                    }
                    return h
                },
                unsubscribe_: function (e) {
                    const t = this._bindingsIndicesByPath,
                    n = t[e];
                    if (void 0 !== n) {
                        const i = this._paths,
                        a = this._parsedPaths,
                        r = this._bindings,
                        o = r.length - 1,
                        s = r[o];
                        t[e[o]] = n,
                        r[n] = s,
                        r.pop(),
                        a[n] = a[o],
                        a.pop(),
                        i[n] = i[o],
                        i.pop()
                    }
                }
            });
            class _f {
                constructor(e, t, n, i) {
                    this._mixer = e,
                    this._clip = t,
                    this._localRoot = n || null,
                    this.blendMode = i || t.blendMode;
                    const a = t.tracks,
                    r = a.length,
                    o = new Array(r),
                    s = {
                        endingStart: kt,
                        endingEnd: kt
                    };
                    for (let e = 0; e !== r; ++e) {
                        const t = a[e].createInterpolant(null);
                        o[e] = t,
                        t.settings = s
                    }
                    this._interpolantSettings = s,
                    this._interpolants = o,
                    this._propertyBindings = new Array(r),
                    this._cacheIndex = null,
                    this._byClipCacheIndex = null,
                    this._timeScaleInterpolant = null,
                    this._weightInterpolant = null,
                    this.loop = It,
                    this._loopCount = -1,
                    this._startTime = null,
                    this.time = 0,
                    this.timeScale = 1,
                    this._effectiveTimeScale = 1,
                    this.weight = 1,
                    this._effectiveWeight = 1,
                    this.repetitions = 1 / 0,
                    this.paused = !1,
                    this.enabled = !0,
                    this.clampWhenFinished = !1,
                    this.zeroSlopeAtStart = !0,
                    this.zeroSlopeAtEnd = !0
                }
                play() {
                    return this._mixer._activateAction(this),
                    this
                }
                stop() {
                    return this._mixer._deactivateAction(this),
                    this.reset()
                }
                reset() {
                    return this.paused = !1,
                    this.enabled = !0,
                    this.time = 0,
                    this._loopCount = -1,
                    this._startTime = null,
                    this.stopFading().stopWarping()
                }
                isRunning() {
                    return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
                }
                isScheduled() {
                    return this._mixer._isActiveAction(this)
                }
                startAt(e) {
                    return this._startTime = e,
                    this
                }
                setLoop(e, t) {
                    return this.loop = e,
                    this.repetitions = t,
                    this
                }
                setEffectiveWeight(e) {
                    return this.weight = e,
                    this._effectiveWeight = this.enabled ? e : 0,
                    this.stopFading()
                }
                getEffectiveWeight() {
                    return this._effectiveWeight
                }
                fadeIn(e) {
                    return this._scheduleFading(e, 0, 1)
                }
                fadeOut(e) {
                    return this._scheduleFading(e, 1, 0)
                }
                crossFadeFrom(e, t, n) {
                    if (e.fadeOut(t), this.fadeIn(t), n) {
                        const n = this._clip.duration,
                        i = e._clip.duration,
                        a = i / n,
                        r = n / i;
                        e.warp(1, a, t),
                        this.warp(r, 1, t)
                    }
                    return this
                }
                crossFadeTo(e, t, n) {
                    return e.crossFadeFrom(this, t, n)
                }
                stopFading() {
                    const e = this._weightInterpolant;
                    return null !== e && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)),
                    this
                }
                setEffectiveTimeScale(e) {
                    return this.timeScale = e,
                    this._effectiveTimeScale = this.paused ? 0 : e,
                    this.stopWarping()
                }
                getEffectiveTimeScale() {
                    return this._effectiveTimeScale
                }
                setDuration(e) {
                    return this.timeScale = this._clip.duration / e,
                    this.stopWarping()
                }
                syncWith(e) {
                    return this.time = e.time,
                    this.timeScale = e.timeScale,
                    this.stopWarping()
                }
                halt(e) {
                    return this.warp(this._effectiveTimeScale, 0, e)
                }
                warp(e, t, n) {
                    const i = this._mixer,
                    a = i.time,
                    r = this.timeScale;
                    let o = this._timeScaleInterpolant;
                    null === o && (o = i._lendControlInterpolant(), this._timeScaleInterpolant = o);
                    const s = o.parameterPositions,
                    c = o.sampleValues;
                    return s[0] = a,
                    s[1] = a + n,
                    c[0] = e / r,
                    c[1] = t / r,
                    this
                }
                stopWarping() {
                    const e = this._timeScaleInterpolant;
                    return null !== e && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)),
                    this
                }
                getMixer() {
                    return this._mixer
                }
                getClip() {
                    return this._clip
                }
                getRoot() {
                    return this._localRoot || this._mixer._root
                }
                _update(e, t, n, i) {
                    if (!this.enabled)
                        return void this._updateWeight(e);
                    const a = this._startTime;
                    if (null !== a) {
                        const i = (e - a) * n;
                        if (i < 0 || 0 === n)
                            return;
                        this._startTime = null,
                        t = n * i
                    }
                    t *= this._updateTimeScale(e);
                    const r = this._updateTime(t),
                    o = this._updateWeight(e);
                    if (o > 0) {
                        const e = this._interpolants,
                        t = this._propertyBindings;
                        switch (this.blendMode) {
                        case Xt:
                            for (let n = 0, i = e.length; n !== i; ++n)
                                e[n].evaluate(r), t[n].accumulateAdditive(o);
                            break;
                        case Wt:
                        default:
                            for (let n = 0, a = e.length; n !== a; ++n)
                                e[n].evaluate(r), t[n].accumulate(i, o)
                        }
                    }
                }
                _updateWeight(e) {
                    let t = 0;
                    if (this.enabled) {
                        t = this.weight;
                        const n = this._weightInterpolant;
                        if (null !== n) {
                            const i = n.evaluate(e)[0];
                            t *= i,
                            e > n.parameterPositions[1] && (this.stopFading(), 0 === i && (this.enabled = !1))
                        }
                    }
                    return this._effectiveWeight = t,
                    t
                }
                _updateTimeScale(e) {
                    let t = 0;
                    if (!this.paused) {
                        t = this.timeScale;
                        const n = this._timeScaleInterpolant;
                        null !== n && (t *= n.evaluate(e)[0], e > n.parameterPositions[1] && (this.stopWarping(), 0 === t ? this.paused = !0 : this.timeScale = t))
                    }
                    return this._effectiveTimeScale = t,
                    t
                }
                _updateTime(e) {
                    const t = this._clip.duration,
                    n = this.loop;
                    let i = this.time + e,
                    a = this._loopCount;
                    const r = n === Ot;
                    if (0 === e)
                        return -1 === a ? i : r && 1 == (1 & a) ? t - i : i;
                    if (n === Ft) {
                        -1 === a && (this._loopCount = 0, this._setEndings(!0, !0, !1));
                        e: {
                            if (i >= t)
                                i = t;
                            else {
                                if (!(i < 0)) {
                                    this.time = i;
                                    break e
                                }
                                i = 0
                            }
                            this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                            this.time = i,
                            this._mixer.dispatchEvent({
                                type: "finished",
                                action: this,
                                direction: e < 0 ? -1 : 1
                            })
                        }
                    } else {
                        if (-1 === a && (e >= 0 ? (a = 0, this._setEndings(!0, 0 === this.repetitions, r)) : this._setEndings(0 === this.repetitions, !0, r)), i >= t || i < 0) {
                            const n = Math.floor(i / t);
                            i -= t * n,
                            a += Math.abs(n);
                            const o = this.repetitions - a;
                            if (o <= 0)
                                this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, i = e > 0 ? t : 0, this.time = i, this._mixer.dispatchEvent({
                                    type: "finished",
                                    action: this,
                                    direction: e > 0 ? 1 : -1
                                });
                            else {
                                if (1 === o) {
                                    const t = e < 0;
                                    this._setEndings(t, !t, r)
                                } else
                                    this._setEndings(!1, !1, r);
                                this._loopCount = a,
                                this.time = i,
                                this._mixer.dispatchEvent({
                                    type: "loop",
                                    action: this,
                                    loopDelta: n
                                })
                            }
                        } else
                            this.time = i;
                        if (r && 1 == (1 & a))
                            return t - i
                    }
                    return i
                }
                _setEndings(e, t, n) {
                    const i = this._interpolantSettings;
                    n ? (i.endingStart = Gt, i.endingEnd = Gt) : (i.endingStart = e ? this.zeroSlopeAtStart ? Gt : kt : jt, i.endingEnd = t ? this.zeroSlopeAtEnd ? Gt : kt : jt)
                }
                _scheduleFading(e, t, n) {
                    const i = this._mixer,
                    a = i.time;
                    let r = this._weightInterpolant;
                    null === r && (r = i._lendControlInterpolant(), this._weightInterpolant = r);
                    const o = r.parameterPositions,
                    s = r.sampleValues;
                    return o[0] = a,
                    s[0] = t,
                    o[1] = a + e,
                    s[1] = n,
                    this
                }
            }
            function Sf(e) {
                this._root = e,
                this._initMemoryManager(),
                this._accuIndex = 0,
                this.time = 0,
                this.timeScale = 1
            }
            Sf.prototype = Object.assign(Object.create(Fn.prototype), {
                constructor: Sf,
                _bindAction: function (e, t) {
                    const n = e._localRoot || this._root,
                    i = e._clip.tracks,
                    a = i.length,
                    r = e._propertyBindings,
                    o = e._interpolants,
                    s = n.uuid,
                    c = this._bindingsByRootAndName;
                    let l = c[s];
                    void 0 === l && (l = {}, c[s] = l);
                    for (let e = 0; e !== a; ++e) {
                        const a = i[e],
                        c = a.name;
                        let h = l[c];
                        if (void 0 !== h)
                            r[e] = h;
                        else {
                            if (h = r[e], void 0 !== h) {
                                null === h._cacheIndex && (++h.referenceCount, this._addInactiveBinding(h, s, c));
                                continue
                            }
                            const i = t && t._propertyBindings[e].binding.parsedPath;
                            h = new uf(zf.create(n, c, i), a.ValueTypeName, a.getValueSize()),
                            ++h.referenceCount,
                            this._addInactiveBinding(h, s, c),
                            r[e] = h
                        }
                        o[e].resultBuffer = h.buffer
                    }
                },
                _activateAction: function (e) {
                    if (!this._isActiveAction(e)) {
                        if (null === e._cacheIndex) {
                            const t = (e._localRoot || this._root).uuid,
                            n = e._clip.uuid,
                            i = this._actionsByClip[n];
                            this._bindAction(e, i && i.knownActions[0]),
                            this._addInactiveAction(e, n, t)
                        }
                        const t = e._propertyBindings;
                        for (let e = 0, n = t.length; e !== n; ++e) {
                            const n = t[e];
                            0 == n.useCount++ && (this._lendBinding(n), n.saveOriginalState())
                        }
                        this._lendAction(e)
                    }
                },
                _deactivateAction: function (e) {
                    if (this._isActiveAction(e)) {
                        const t = e._propertyBindings;
                        for (let e = 0, n = t.length; e !== n; ++e) {
                            const n = t[e];
                            0 == --n.useCount && (n.restoreOriginalState(), this._takeBackBinding(n))
                        }
                        this._takeBackAction(e)
                    }
                },
                _initMemoryManager: function () {
                    this._actions = [],
                    this._nActiveActions = 0,
                    this._actionsByClip = {},
                    this._bindings = [],
                    this._nActiveBindings = 0,
                    this._bindingsByRootAndName = {},
                    this._controlInterpolants = [],
                    this._nActiveControlInterpolants = 0;
                    const e = this;
                    this.stats = {
                        actions: {
                            get total() {
                                return e._actions.length
                            },
                            get inUse() {
                                return e._nActiveActions
                            }
                        },
                        bindings: {
                            get total() {
                                return e._bindings.length
                            },
                            get inUse() {
                                return e._nActiveBindings
                            }
                        },
                        controlInterpolants: {
                            get total() {
                                return e._controlInterpolants.length
                            },
                            get inUse() {
                                return e._nActiveControlInterpolants
                            }
                        }
                    }
                },
                _isActiveAction: function (e) {
                    const t = e._cacheIndex;
                    return null !== t && t < this._nActiveActions
                },
                _addInactiveAction: function (e, t, n) {
                    const i = this._actions,
                    a = this._actionsByClip;
                    let r = a[t];
                    if (void 0 === r)
                        r = {
                            knownActions: [e],
                            actionByRoot: {}
                        },
                    e._byClipCacheIndex = 0,
                    a[t] = r;
                    else {
                        const t = r.knownActions;
                        e._byClipCacheIndex = t.length,
                        t.push(e)
                    }
                    e._cacheIndex = i.length,
                    i.push(e),
                    r.actionByRoot[n] = e
                },
                _removeInactiveAction: function (e) {
                    const t = this._actions,
                    n = t[t.length - 1],
                    i = e._cacheIndex;
                    n._cacheIndex = i,
                    t[i] = n,
                    t.pop(),
                    e._cacheIndex = null;
                    const a = e._clip.uuid,
                    r = this._actionsByClip,
                    o = r[a],
                    s = o.knownActions,
                    c = s[s.length - 1],
                    l = e._byClipCacheIndex;
                    c._byClipCacheIndex = l,
                    s[l] = c,
                    s.pop(),
                    e._byClipCacheIndex = null,
                    delete o.actionByRoot[(e._localRoot || this._root).uuid],
                    0 === s.length && delete r[a],
                    this._removeInactiveBindingsForAction(e)
                },
                _removeInactiveBindingsForAction: function (e) {
                    const t = e._propertyBindings;
                    for (let e = 0, n = t.length; e !== n; ++e) {
                        const n = t[e];
                        0 == --n.referenceCount && this._removeInactiveBinding(n)
                    }
                },
                _lendAction: function (e) {
                    const t = this._actions,
                    n = e._cacheIndex,
                    i = this._nActiveActions++,
                    a = t[i];
                    e._cacheIndex = i,
                    t[i] = e,
                    a._cacheIndex = n,
                    t[n] = a
                },
                _takeBackAction: function (e) {
                    const t = this._actions,
                    n = e._cacheIndex,
                    i = --this._nActiveActions,
                    a = t[i];
                    e._cacheIndex = i,
                    t[i] = e,
                    a._cacheIndex = n,
                    t[n] = a
                },
                _addInactiveBinding: function (e, t, n) {
                    const i = this._bindingsByRootAndName,
                    a = this._bindings;
                    let r = i[t];
                    void 0 === r && (r = {}, i[t] = r),
                    r[n] = e,
                    e._cacheIndex = a.length,
                    a.push(e)
                },
                _removeInactiveBinding: function (e) {
                    const t = this._bindings,
                    n = e.binding,
                    i = n.rootNode.uuid,
                    a = n.path,
                    r = this._bindingsByRootAndName,
                    o = r[i],
                    s = t[t.length - 1],
                    c = e._cacheIndex;
                    s._cacheIndex = c,
                    t[c] = s,
                    t.pop(),
                    delete o[a],
                    0 === Object.keys(o).length && delete r[i]
                },
                _lendBinding: function (e) {
                    const t = this._bindings,
                    n = e._cacheIndex,
                    i = this._nActiveBindings++,
                    a = t[i];
                    e._cacheIndex = i,
                    t[i] = e,
                    a._cacheIndex = n,
                    t[n] = a
                },
                _takeBackBinding: function (e) {
                    const t = this._bindings,
                    n = e._cacheIndex,
                    i = --this._nActiveBindings,
                    a = t[i];
                    e._cacheIndex = i,
                    t[i] = e,
                    a._cacheIndex = n,
                    t[n] = a
                },
                _lendControlInterpolant: function () {
                    const e = this._controlInterpolants,
                    t = this._nActiveControlInterpolants++;
                    let n = e[t];
                    return void 0 === n && (n = new Mh(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer), n.__cacheIndex = t, e[t] = n),
                    n
                },
                _takeBackControlInterpolant: function (e) {
                    const t = this._controlInterpolants,
                    n = e.__cacheIndex,
                    i = --this._nActiveControlInterpolants,
                    a = t[i];
                    e.__cacheIndex = i,
                    t[i] = e,
                    a.__cacheIndex = n,
                    t[n] = a
                },
                _controlInterpolantsResultBuffer: new Float32Array(1),
                clipAction: function (e, t, n) {
                    const i = t || this._root,
                    a = i.uuid;
                    let r = "string" == typeof e ? Hh.findByName(i, e) : e;
                    const o = null !== r ? r.uuid : e,
                    s = this._actionsByClip[o];
                    let c = null;
                    if (void 0 === n && (n = null !== r ? r.blendMode : Wt), void 0 !== s) {
                        const e = s.actionByRoot[a];
                        if (void 0 !== e && e.blendMode === n)
                            return e;
                        c = s.knownActions[0],
                        null === r && (r = c._clip)
                    }
                    if (null === r)
                        return null;
                    const l = new _f(this, r, t, n);
                    return this._bindAction(l, c),
                    this._addInactiveAction(l, o, a),
                    l
                },
                existingAction: function (e, t) {
                    const n = t || this._root,
                    i = n.uuid,
                    a = "string" == typeof e ? Hh.findByName(n, e) : e,
                    r = a ? a.uuid : e,
                    o = this._actionsByClip[r];
                    return void 0 !== o && o.actionByRoot[i] || null
                },
                stopAllAction: function () {
                    const e = this._actions;
                    for (let t = this._nActiveActions - 1; t >= 0; --t)
                        e[t].stop();
                    return this
                },
                update: function (e) {
                    e *= this.timeScale;
                    const t = this._actions,
                    n = this._nActiveActions,
                    i = this.time += e,
                    a = Math.sign(e),
                    r = this._accuIndex ^= 1;
                    for (let o = 0; o !== n; ++o)
                        t[o]._update(i, e, a, r);
                    const o = this._bindings,
                    s = this._nActiveBindings;
                    for (let e = 0; e !== s; ++e)
                        o[e].apply(r);
                    return this
                },
                setTime: function (e) {
                    this.time = 0;
                    for (let e = 0; e < this._actions.length; e++)
                        this._actions[e].time = 0;
                    return this.update(e)
                },
                getRoot: function () {
                    return this._root
                },
                uncacheClip: function (e) {
                    const t = this._actions,
                    n = e.uuid,
                    i = this._actionsByClip,
                    a = i[n];
                    if (void 0 !== a) {
                        const e = a.knownActions;
                        for (let n = 0, i = e.length; n !== i; ++n) {
                            const i = e[n];
                            this._deactivateAction(i);
                            const a = i._cacheIndex,
                            r = t[t.length - 1];
                            i._cacheIndex = null,
                            i._byClipCacheIndex = null,
                            r._cacheIndex = a,
                            t[a] = r,
                            t.pop(),
                            this._removeInactiveBindingsForAction(i)
                        }
                        delete i[n]
                    }
                },
                uncacheRoot: function (e) {
                    const t = e.uuid,
                    n = this._actionsByClip;
                    for (const e in n) {
                        const i = n[e].actionByRoot[t];
                        void 0 !== i && (this._deactivateAction(i), this._removeInactiveAction(i))
                    }
                    const i = this._bindingsByRootAndName[t];
                    if (void 0 !== i)
                        for (const e in i) {
                            const t = i[e];
                            t.restoreOriginalState(),
                            this._removeInactiveBinding(t)
                        }
                },
                uncacheAction: function (e, t) {
                    const n = this.existingAction(e, t);
                    null !== n && (this._deactivateAction(n), this._removeInactiveAction(n))
                }
            });
            class Lf {
                constructor(e) {
                    "string" == typeof e && (console.warn("THREE.Uniform: Type parameter is no longer needed."), e = arguments[1]),
                    this.value = e
                }
                clone() {
                    return new Lf(void 0 === this.value.clone ? this.value : this.value.clone())
                }
            }
            function Af(e, t, n) {
                Is.call(this, e, t),
                this.meshPerAttribute = n || 1
            }
            function Tf(e, t, n, i, a) {
                this.buffer = e,
                this.type = t,
                this.itemSize = n,
                this.elementSize = i,
                this.count = a,
                this.version = 0
            }
            function Cf(e, t, n, i) {
                this.ray = new wi(e, t),
                this.near = n || 0,
                this.far = i || 1 / 0,
                this.camera = null,
                this.layers = new Ri,
                this.params = {
                    Mesh: {},
                    Line: {
                        threshold: 1
                    },
                    LOD: {},
                    Points: {
                        threshold: 1
                    },
                    Sprite: {}
                },
                Object.defineProperties(this.params, {
                    PointCloud: {
                        get: function () {
                            return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),
                            this.Points
                        }
                    }
                })
            }
            function Ef(e, t) {
                return e.distance - t.distance
            }
            function Hf(e, t, n, i) {
                if (e.layers.test(t.layers) && e.raycast(t, n), !0 === i) {
                    const i = e.children;
                    for (let e = 0, a = i.length; e < a; e++)
                        Hf(i[e], t, n, !0)
                }
            }
            Af.prototype = Object.assign(Object.create(Is.prototype), {
                constructor: Af,
                isInstancedInterleavedBuffer: !0,
                copy: function (e) {
                    return Is.prototype.copy.call(this, e),
                    this.meshPerAttribute = e.meshPerAttribute,
                    this
                },
                clone: function (e) {
                    const t = Is.prototype.clone.call(this, e);
                    return t.meshPerAttribute = this.meshPerAttribute,
                    t
                },
                toJSON: function (e) {
                    const t = Is.prototype.toJSON.call(this, e);
                    return t.isInstancedInterleavedBuffer = !0,
                    t.meshPerAttribute = this.meshPerAttribute,
                    t
                }
            }),
            Object.defineProperty(Tf.prototype, "needsUpdate", {
                set: function (e) {
                    !0 === e && this.version++
                }
            }),
            Object.assign(Tf.prototype, {
                isGLBufferAttribute: !0,
                setBuffer: function (e) {
                    return this.buffer = e,
                    this
                },
                setType: function (e, t) {
                    return this.type = e,
                    this.elementSize = t,
                    this
                },
                setItemSize: function (e) {
                    return this.itemSize = e,
                    this
                },
                setCount: function (e) {
                    return this.count = e,
                    this
                }
            }),
            Object.assign(Cf.prototype, {
                set: function (e, t) {
                    this.ray.set(e, t)
                },
                setFromCamera: function (e, t) {
                    t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(t).sub(this.ray.origin).normalize(), this.camera = t) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t), this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld), this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type.")
                },
                intersectObject: function (e, t, n) {
                    const i = n || [];
                    return Hf(e, this, i, t),
                    i.sort(Ef),
                    i
                },
                intersectObjects: function (e, t, n) {
                    const i = n || [];
                    if (!1 === Array.isArray(e))
                        return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), i;
                    for (let n = 0, a = e.length; n < a; n++)
                        Hf(e[n], this, i, t);
                    return i.sort(Ef),
                    i
                }
            });
            class Nf {
                constructor(e = 1, t = 0, n = 0) {
                    return this.radius = e,
                    this.phi = t,
                    this.theta = n,
                    this
                }
                set(e, t, n) {
                    return this.radius = e,
                    this.phi = t,
                    this.theta = n,
                    this
                }
                clone() {
                    return (new this.constructor).copy(this)
                }
                copy(e) {
                    return this.radius = e.radius,
                    this.phi = e.phi,
                    this.theta = e.theta,
                    this
                }
                makeSafe() {
                    const e = 1e-6;
                    return this.phi = Math.max(e, Math.min(Math.PI - e, this.phi)),
                    this
                }
                setFromVector3(e) {
                    return this.setFromCartesianCoords(e.x, e.y, e.z)
                }
                setFromCartesianCoords(e, t, n) {
                    return this.radius = Math.sqrt(e * e + t * t + n * n),
                    0 === this.radius ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, n), this.phi = Math.acos(Dn.clamp(t / this.radius, -1, 1))),
                    this
                }
            }
            class Pf {
                constructor(e, t, n) {
                    return this.radius = void 0 !== e ? e : 1,
                    this.theta = void 0 !== t ? t : 0,
                    this.y = void 0 !== n ? n : 0,
                    this
                }
                set(e, t, n) {
                    return this.radius = e,
                    this.theta = t,
                    this.y = n,
                    this
                }
                clone() {
                    return (new this.constructor).copy(this)
                }
                copy(e) {
                    return this.radius = e.radius,
                    this.theta = e.theta,
                    this.y = e.y,
                    this
                }
                setFromVector3(e) {
                    return this.setFromCartesianCoords(e.x, e.y, e.z)
                }
                setFromCartesianCoords(e, t, n) {
                    return this.radius = Math.sqrt(e * e + n * n),
                    this.theta = Math.atan2(e, n),
                    this.y = t,
                    this
                }
            }
            const Vf = new Un;
            class Rf {
                constructor(e, t) {
                    Object.defineProperty(this, "isBox2", {
                        value: !0
                    }),
                    this.min = void 0 !== e ? e : new Un(1 / 0, 1 / 0),
                    this.max = void 0 !== t ? t : new Un(-1 / 0, -1 / 0)
                }
                set(e, t) {
                    return this.min.copy(e),
                    this.max.copy(t),
                    this
                }
                setFromPoints(e) {
                    this.makeEmpty();
                    for (let t = 0, n = e.length; t < n; t++)
                        this.expandByPoint(e[t]);
                    return this
                }
                setFromCenterAndSize(e, t) {
                    const n = Vf.copy(t).multiplyScalar(.5);
                    return this.min.copy(e).sub(n),
                    this.max.copy(e).add(n),
                    this
                }
                clone() {
                    return (new this.constructor).copy(this)
                }
                copy(e) {
                    return this.min.copy(e.min),
                    this.max.copy(e.max),
                    this
                }
                makeEmpty() {
                    return this.min.x = this.min.y = 1 / 0,
                    this.max.x = this.max.y = -1 / 0,
                    this
                }
                isEmpty() {
                    return this.max.x < this.min.x || this.max.y < this.min.y
                }
                getCenter(e) {
                    return void 0 === e && (console.warn("THREE.Box2: .getCenter() target is now required"), e = new Un),
                    this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
                }
                getSize(e) {
                    return void 0 === e && (console.warn("THREE.Box2: .getSize() target is now required"), e = new Un),
                    this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min)
                }
                expandByPoint(e) {
                    return this.min.min(e),
                    this.max.max(e),
                    this
                }
                expandByVector(e) {
                    return this.min.sub(e),
                    this.max.add(e),
                    this
                }
                expandByScalar(e) {
                    return this.min.addScalar(-e),
                    this.max.addScalar(e),
                    this
                }
                containsPoint(e) {
                    return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y)
                }
                containsBox(e) {
                    return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y
                }
                getParameter(e, t) {
                    return void 0 === t && (console.warn("THREE.Box2: .getParameter() target is now required"), t = new Un),
                    t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y))
                }
                intersectsBox(e) {
                    return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y)
                }
                clampPoint(e, t) {
                    return void 0 === t && (console.warn("THREE.Box2: .clampPoint() target is now required"), t = new Un),
                    t.copy(e).clamp(this.min, this.max)
                }
                distanceToPoint(e) {
                    return Vf.copy(e).clamp(this.min, this.max).sub(e).length()
                }
                intersect(e) {
                    return this.min.max(e.min),
                    this.max.min(e.max),
                    this
                }
                union(e) {
                    return this.min.min(e.min),
                    this.max.max(e.max),
                    this
                }
                translate(e) {
                    return this.min.add(e),
                    this.max.add(e),
                    this
                }
                equals(e) {
                    return e.min.equals(this.min) && e.max.equals(this.max)
                }
            }
            const Ff = new Qn,
            If = new Qn;
            class Of {
                constructor(e, t) {
                    this.start = void 0 !== e ? e : new Qn,
                    this.end = void 0 !== t ? t : new Qn
                }
                set(e, t) {
                    return this.start.copy(e),
                    this.end.copy(t),
                    this
                }
                clone() {
                    return (new this.constructor).copy(this)
                }
                copy(e) {
                    return this.start.copy(e.start),
                    this.end.copy(e.end),
                    this
                }
                getCenter(e) {
                    return void 0 === e && (console.warn("THREE.Line3: .getCenter() target is now required"), e = new Qn),
                    e.addVectors(this.start, this.end).multiplyScalar(.5)
                }
                delta(e) {
                    return void 0 === e && (console.warn("THREE.Line3: .delta() target is now required"), e = new Qn),
                    e.subVectors(this.end, this.start)
                }
                distanceSq() {
                    return this.start.distanceToSquared(this.end)
                }
                distance() {
                    return this.start.distanceTo(this.end)
                }
                at(e, t) {
                    return void 0 === t && (console.warn("THREE.Line3: .at() target is now required"), t = new Qn),
                    this.delta(t).multiplyScalar(e).add(this.start)
                }
                closestPointToPointParameter(e, t) {
                    Ff.subVectors(e, this.start),
                    If.subVectors(this.end, this.start);
                    const n = If.dot(If);
                    let i = If.dot(Ff) / n;
                    return t && (i = Dn.clamp(i, 0, 1)),
                    i
                }
                closestPointToPoint(e, t, n) {
                    const i = this.closestPointToPointParameter(e, t);
                    return void 0 === n && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"), n = new Qn),
                    this.delta(n).multiplyScalar(i).add(this.start)
                }
                applyMatrix4(e) {
                    return this.start.applyMatrix4(e),
                    this.end.applyMatrix4(e),
                    this
                }
                equals(e) {
                    return e.start.equals(this.start) && e.end.equals(this.end)
                }
            }
            function Df(e) {
                Zi.call(this),
                this.material = e,
                this.render = function () {},
                this.hasPositions = !1,
                this.hasNormals = !1,
                this.hasColors = !1,
                this.hasUvs = !1,
                this.positionArray = null,
                this.normalArray = null,
                this.colorArray = null,
                this.uvArray = null,
                this.count = 0
            }
            Df.prototype = Object.create(Zi.prototype),
            Df.prototype.constructor = Df,
            Df.prototype.isImmediateRenderObject = !0;
            const Uf = new Qn;
            class Bf extends Zi {
                constructor(e, t) {
                    super(),
                    this.light = e,
                    this.light.updateMatrixWorld(),
                    this.matrix = e.matrixWorld,
                    this.matrixAutoUpdate = !1,
                    this.color = t;
                    const n = new Ga,
                    i = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];
                    for (let e = 0, t = 1, n = 32; e < n; e++, t++) {
                        const a = e / n * Math.PI * 2,
                        r = t / n * Math.PI * 2;
                        i.push(Math.cos(a), Math.sin(a), 1, Math.cos(r), Math.sin(r), 1)
                    }
                    n.setAttribute("position", new Na(i, 3));
                    const a = new mc({
                        fog: !1,
                        toneMapped: !1
                    });
                    this.cone = new _c(n, a),
                    this.add(this.cone),
                    this.update()
                }
                dispose() {
                    this.cone.geometry.dispose(),
                    this.cone.material.dispose()
                }
                update() {
                    this.light.updateMatrixWorld();
                    const e = this.light.distance ? this.light.distance : 1e3,
                    t = e * Math.tan(this.light.angle);
                    this.cone.scale.set(t, t, e),
                    Uf.setFromMatrixPosition(this.light.target.matrixWorld),
                    this.cone.lookAt(Uf),
                    void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color)
                }
            }
            const kf = new Qn,
            Gf = new _i,
            jf = new _i;
            class Wf extends _c {
                constructor(e) {
                    const t = Xf(e),
                    n = new Ga,
                    i = [],
                    a = [],
                    r = new ga(0, 0, 1),
                    o = new ga(0, 1, 0);
                    for (let e = 0; e < t.length; e++) {
                        const n = t[e];
                        n.parent && n.parent.isBone && (i.push(0, 0, 0), i.push(0, 0, 0), a.push(r.r, r.g, r.b), a.push(o.r, o.g, o.b))
                    }
                    n.setAttribute("position", new Na(i, 3)),
                    n.setAttribute("color", new Na(a, 3)),
                    super(n, new mc({
                            vertexColors: !0,
                            depthTest: !1,
                            depthWrite: !1,
                            toneMapped: !1,
                            transparent: !0
                        })),
                    this.type = "SkeletonHelper",
                    this.isSkeletonHelper = !0,
                    this.root = e,
                    this.bones = t,
                    this.matrix = e.matrixWorld,
                    this.matrixAutoUpdate = !1
                }
                updateMatrixWorld(e) {
                    const t = this.bones,
                    n = this.geometry,
                    i = n.getAttribute("position");
                    jf.getInverse(this.root.matrixWorld);
                    for (let e = 0, n = 0; e < t.length; e++) {
                        const a = t[e];
                        a.parent && a.parent.isBone && (Gf.multiplyMatrices(jf, a.matrixWorld), kf.setFromMatrixPosition(Gf), i.setXYZ(n, kf.x, kf.y, kf.z), Gf.multiplyMatrices(jf, a.parent.matrixWorld), kf.setFromMatrixPosition(Gf), i.setXYZ(n + 1, kf.x, kf.y, kf.z), n += 2)
                    }
                    n.getAttribute("position").needsUpdate = !0,
                    super.updateMatrixWorld(e)
                }
            }
            function Xf(e) {
                const t = [];
                e && e.isBone && t.push(e);
                for (let n = 0; n < e.children.length; n++)
                    t.push.apply(t, Xf(e.children[n]));
                return t
            }
            class qf extends sr {
                constructor(e, t, n) {
                    super(new ql(t, 4, 2), new Ma({
                            wireframe: !0,
                            fog: !1,
                            toneMapped: !1
                        })),
                    this.light = e,
                    this.light.updateMatrixWorld(),
                    this.color = n,
                    this.type = "PointLightHelper",
                    this.matrix = this.light.matrixWorld,
                    this.matrixAutoUpdate = !1,
                    this.update()
                }
                dispose() {
                    this.geometry.dispose(),
                    this.material.dispose()
                }
                update() {
                    void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color)
                }
            }
            const Yf = new Qn,
            Zf = new ga,
            Qf = new ga;
            class Jf extends Zi {
                constructor(e, t, n) {
                    super(),
                    this.light = e,
                    this.light.updateMatrixWorld(),
                    this.matrix = e.matrixWorld,
                    this.matrixAutoUpdate = !1,
                    this.color = n;
                    const i = new Il(t);
                    i.rotateY(.5 * Math.PI),
                    this.material = new Ma({
                        wireframe: !0,
                        fog: !1,
                        toneMapped: !1
                    }),
                    void 0 === this.color && (this.material.vertexColors = !0);
                    const a = i.getAttribute("position"),
                    r = new Float32Array(3 * a.count);
                    i.setAttribute("color", new _a(r, 3)),
                    this.add(new sr(i, this.material)),
                    this.update()
                }
                dispose() {
                    this.children[0].geometry.dispose(),
                    this.children[0].material.dispose()
                }
                update() {
                    const e = this.children[0];
                    if (void 0 !== this.color)
                        this.material.color.set(this.color);
                    else {
                        const t = e.geometry.getAttribute("color");
                        Zf.copy(this.light.color),
                        Qf.copy(this.light.groundColor);
                        for (let e = 0, n = t.count; e < n; e++) {
                            const i = e < n / 2 ? Zf : Qf;
                            t.setXYZ(e, i.r, i.g, i.b)
                        }
                        t.needsUpdate = !0
                    }
                    e.lookAt(Yf.setFromMatrixPosition(this.light.matrixWorld).negate())
                }
            }
            class Kf extends _c {
                constructor(e, t, n, i) {
                    e = e || 10,
                    t = t || 10,
                    n = new ga(void 0 !== n ? n : 4473924),
                    i = new ga(void 0 !== i ? i : 8947848);
                    const a = t / 2,
                    r = e / t,
                    o = e / 2,
                    s = [],
                    c = [];
                    for (let e = 0, l = 0, h = -o; e <= t; e++, h += r) {
                        s.push(-o, 0, h, o, 0, h),
                        s.push(h, 0, -o, h, 0, o);
                        const t = e === a ? n : i;
                        t.toArray(c, l),
                        l += 3,
                        t.toArray(c, l),
                        l += 3,
                        t.toArray(c, l),
                        l += 3,
                        t.toArray(c, l),
                        l += 3
                    }
                    const l = new Ga;
                    l.setAttribute("position", new Na(s, 3)),
                    l.setAttribute("color", new Na(c, 3)),
                    super(l, new mc({
                            vertexColors: !0,
                            toneMapped: !1
                        })),
                    this.type = "GridHelper"
                }
            }
            class $f extends _c {
                constructor(e, t, n, i, a, r) {
                    e = e || 10,
                    t = t || 16,
                    n = n || 8,
                    i = i || 64,
                    a = new ga(void 0 !== a ? a : 4473924),
                    r = new ga(void 0 !== r ? r : 8947848);
                    const o = [],
                    s = [];
                    for (let n = 0; n <= t; n++) {
                        const i = n / t * (2 * Math.PI),
                        c = Math.sin(i) * e,
                        l = Math.cos(i) * e;
                        o.push(0, 0, 0),
                        o.push(c, 0, l);
                        const h = 1 & n ? a : r;
                        s.push(h.r, h.g, h.b),
                        s.push(h.r, h.g, h.b)
                    }
                    for (let t = 0; t <= n; t++) {
                        const c = 1 & t ? a : r,
                        l = e - e / n * t;
                        for (let e = 0; e < i; e++) {
                            let t = e / i * (2 * Math.PI),
                            n = Math.sin(t) * l,
                            a = Math.cos(t) * l;
                            o.push(n, 0, a),
                            s.push(c.r, c.g, c.b),
                            t = (e + 1) / i * (2 * Math.PI),
                            n = Math.sin(t) * l,
                            a = Math.cos(t) * l,
                            o.push(n, 0, a),
                            s.push(c.r, c.g, c.b)
                        }
                    }
                    const c = new Ga;
                    c.setAttribute("position", new Na(o, 3)),
                    c.setAttribute("color", new Na(s, 3)),
                    super(c, new mc({
                            vertexColors: !0,
                            toneMapped: !1
                        })),
                    this.type = "PolarGridHelper"
                }
            }
            const ed = new Qn,
            td = new Qn,
            nd = new Qn;
            class id extends Zi {
                constructor(e, t, n) {
                    super(),
                    this.light = e,
                    this.light.updateMatrixWorld(),
                    this.matrix = e.matrixWorld,
                    this.matrixAutoUpdate = !1,
                    this.color = n,
                    void 0 === t && (t = 1);
                    let i = new Ga;
                    i.setAttribute("position", new Na([-t, t, 0, t, t, 0, t, -t, 0, -t, -t, 0, -t, t, 0], 3));
                    const a = new mc({
                        fog: !1,
                        toneMapped: !1
                    });
                    this.lightPlane = new Mc(i, a),
                    this.add(this.lightPlane),
                    i = new Ga,
                    i.setAttribute("position", new Na([0, 0, 0, 0, 0, 1], 3)),
                    this.targetLine = new Mc(i, a),
                    this.add(this.targetLine),
                    this.update()
                }
                dispose() {
                    this.lightPlane.geometry.dispose(),
                    this.lightPlane.material.dispose(),
                    this.targetLine.geometry.dispose(),
                    this.targetLine.material.dispose()
                }
                update() {
                    ed.setFromMatrixPosition(this.light.matrixWorld),
                    td.setFromMatrixPosition(this.light.target.matrixWorld),
                    nd.subVectors(td, ed),
                    this.lightPlane.lookAt(td),
                    void 0 !== this.color ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)),
                    this.targetLine.lookAt(td),
                    this.targetLine.scale.z = nd.length()
                }
            }
            const ad = new Qn,
            rd = new mr;
            class od extends _c {
                constructor(e) {
                    const t = new Ga,
                    n = new mc({
                        color: 16777215,
                        vertexColors: !0,
                        toneMapped: !1
                    }),
                    i = [],
                    a = [],
                    r = {},
                    o = new ga(16755200),
                    s = new ga(16711680),
                    c = new ga(43775),
                    l = new ga(16777215),
                    h = new ga(3355443);
                    function u(e, t, n) {
                        f(e, n),
                        f(t, n)
                    }
                    function f(e, t) {
                        i.push(0, 0, 0),
                        a.push(t.r, t.g, t.b),
                        void 0 === r[e] && (r[e] = []),
                        r[e].push(i.length / 3 - 1)
                    }
                    u("n1", "n2", o),
                    u("n2", "n4", o),
                    u("n4", "n3", o),
                    u("n3", "n1", o),
                    u("f1", "f2", o),
                    u("f2", "f4", o),
                    u("f4", "f3", o),
                    u("f3", "f1", o),
                    u("n1", "f1", o),
                    u("n2", "f2", o),
                    u("n3", "f3", o),
                    u("n4", "f4", o),
                    u("p", "n1", s),
                    u("p", "n2", s),
                    u("p", "n3", s),
                    u("p", "n4", s),
                    u("u1", "u2", c),
                    u("u2", "u3", c),
                    u("u3", "u1", c),
                    u("c", "t", l),
                    u("p", "c", h),
                    u("cn1", "cn2", h),
                    u("cn3", "cn4", h),
                    u("cf1", "cf2", h),
                    u("cf3", "cf4", h),
                    t.setAttribute("position", new Na(i, 3)),
                    t.setAttribute("color", new Na(a, 3)),
                    super(t, n),
                    this.type = "CameraHelper",
                    this.camera = e,
                    this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(),
                    this.matrix = e.matrixWorld,
                    this.matrixAutoUpdate = !1,
                    this.pointMap = r,
                    this.update()
                }
                update() {
                    const e = this.geometry,
                    t = this.pointMap;
                    rd.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),
                    sd("c", t, e, rd, 0, 0, -1),
                    sd("t", t, e, rd, 0, 0, 1),
                    sd("n1", t, e, rd, -1, -1, -1),
                    sd("n2", t, e, rd, 1, -1, -1),
                    sd("n3", t, e, rd, -1, 1, -1),
                    sd("n4", t, e, rd, 1, 1, -1),
                    sd("f1", t, e, rd, -1, -1, 1),
                    sd("f2", t, e, rd, 1, -1, 1),
                    sd("f3", t, e, rd, -1, 1, 1),
                    sd("f4", t, e, rd, 1, 1, 1),
                    sd("u1", t, e, rd, .7, 1.1, -1),
                    sd("u2", t, e, rd,  - .7, 1.1, -1),
                    sd("u3", t, e, rd, 0, 2, -1),
                    sd("cf1", t, e, rd, -1, 0, 1),
                    sd("cf2", t, e, rd, 1, 0, 1),
                    sd("cf3", t, e, rd, 0, -1, 1),
                    sd("cf4", t, e, rd, 0, 1, 1),
                    sd("cn1", t, e, rd, -1, 0, -1),
                    sd("cn2", t, e, rd, 1, 0, -1),
                    sd("cn3", t, e, rd, 0, -1, -1),
                    sd("cn4", t, e, rd, 0, 1, -1),
                    e.getAttribute("position").needsUpdate = !0
                }
            }
            function sd(e, t, n, i, a, r, o) {
                ad.set(a, r, o).unproject(i);
                const s = t[e];
                if (void 0 !== s) {
                    const e = n.getAttribute("position");
                    for (let t = 0, n = s.length; t < n; t++)
                        e.setXYZ(s[t], ad.x, ad.y, ad.z)
                }
            }
            const cd = new $n;
            class ld extends _c {
                constructor(e, t = 16776960) {
                    const n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),
                    i = new Float32Array(24),
                    a = new Ga;
                    a.setIndex(new _a(n, 1)),
                    a.setAttribute("position", new _a(i, 3)),
                    super(a, new mc({
                            color: t,
                            toneMapped: !1
                        })),
                    this.object = e,
                    this.type = "BoxHelper",
                    this.matrixAutoUpdate = !1,
                    this.update()
                }
                update(e) {
                    if (void 0 !== e && console.warn("THREE.BoxHelper: .update() has no longer arguments."), void 0 !== this.object && cd.setFromObject(this.object), cd.isEmpty())
                        return;
                    const t = cd.min,
                    n = cd.max,
                    i = this.geometry.attributes.position,
                    a = i.array;
                    a[0] = n.x,
                    a[1] = n.y,
                    a[2] = n.z,
                    a[3] = t.x,
                    a[4] = n.y,
                    a[5] = n.z,
                    a[6] = t.x,
                    a[7] = t.y,
                    a[8] = n.z,
                    a[9] = n.x,
                    a[10] = t.y,
                    a[11] = n.z,
                    a[12] = n.x,
                    a[13] = n.y,
                    a[14] = t.z,
                    a[15] = t.x,
                    a[16] = n.y,
                    a[17] = t.z,
                    a[18] = t.x,
                    a[19] = t.y,
                    a[20] = t.z,
                    a[21] = n.x,
                    a[22] = t.y,
                    a[23] = t.z,
                    i.needsUpdate = !0,
                    this.geometry.computeBoundingSphere()
                }
                setFromObject(e) {
                    return this.object = e,
                    this.update(),
                    this
                }
                copy(e) {
                    return _c.prototype.copy.call(this, e),
                    this.object = e.object,
                    this
                }
            }
            class hd extends _c {
                constructor(e, t = 16776960) {
                    const n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),
                    i = new Ga;
                    i.setIndex(new _a(n, 1)),
                    i.setAttribute("position", new Na([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1], 3)),
                    super(i, new mc({
                            color: t,
                            toneMapped: !1
                        })),
                    this.box = e,
                    this.type = "Box3Helper",
                    this.geometry.computeBoundingSphere()
                }
                updateMatrixWorld(e) {
                    const t = this.box;
                    t.isEmpty() || (t.getCenter(this.position), t.getSize(this.scale), this.scale.multiplyScalar(.5), super.updateMatrixWorld(e))
                }
            }
            class ud extends Mc {
                constructor(e, t, n) {
                    const i = void 0 !== n ? n : 16776960,
                    a = new Ga;
                    a.setAttribute("position", new Na([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 3)),
                    a.computeBoundingSphere(),
                    super(a, new mc({
                            color: i,
                            toneMapped: !1
                        })),
                    this.type = "PlaneHelper",
                    this.plane = e,
                    this.size = void 0 === t ? 1 : t;
                    const r = new Ga;
                    r.setAttribute("position", new Na([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1], 3)),
                    r.computeBoundingSphere(),
                    this.add(new sr(r, new Ma({
                                color: i,
                                opacity: .2,
                                transparent: !0,
                                depthWrite: !1,
                                toneMapped: !1
                            })))
                }
                updateMatrixWorld(e) {
                    let t = -this.plane.constant;
                    Math.abs(t) < 1e-8 && (t = 1e-8),
                    this.scale.set(.5 * this.size, .5 * this.size, t),
                    this.children[0].material.side = t < 0 ? m : p,
                    this.lookAt(this.plane.normal),
                    super.updateMatrixWorld(e)
                }
            }
            const fd = new Qn;
            let dd,
            pd;
            class md extends Zi {
                constructor(e, t, n, i, a, r) {
                    super(),
                    this.type = "ArrowHelper",
                    void 0 === e && (e = new Qn(0, 0, 1)),
                    void 0 === t && (t = new Qn(0, 0, 0)),
                    void 0 === n && (n = 1),
                    void 0 === i && (i = 16776960),
                    void 0 === a && (a = .2 * n),
                    void 0 === r && (r = .2 * a),
                    void 0 === dd && (dd = new Ga, dd.setAttribute("position", new Na([0, 0, 0, 0, 1, 0], 3)), pd = new Wc(0, .5, 1, 5, 1), pd.translate(0,  - .5, 0)),
                    this.position.copy(t),
                    this.line = new Mc(dd, new mc({
                                color: i,
                                toneMapped: !1
                            })),
                    this.line.matrixAutoUpdate = !1,
                    this.add(this.line),
                    this.cone = new sr(pd, new Ma({
                                color: i,
                                toneMapped: !1
                            })),
                    this.cone.matrixAutoUpdate = !1,
                    this.add(this.cone),
                    this.setDirection(e),
                    this.setLength(n, a, r)
                }
                setDirection(e) {
                    if (e.y > .99999)
                        this.quaternion.set(0, 0, 0, 1);
                    else if (e.y <  - .99999)
                        this.quaternion.set(1, 0, 0, 0);
                    else {
                        fd.set(e.z, 0, -e.x).normalize();
                        const t = Math.acos(e.y);
                        this.quaternion.setFromAxisAngle(fd, t)
                    }
                }
                setLength(e, t, n) {
                    void 0 === t && (t = .2 * e),
                    void 0 === n && (n = .2 * t),
                    this.line.scale.set(1, Math.max(1e-4, e - t), 1),
                    this.line.updateMatrix(),
                    this.cone.scale.set(n, t, n),
                    this.cone.position.y = e,
                    this.cone.updateMatrix()
                }
                setColor(e) {
                    this.line.material.color.set(e),
                    this.cone.material.color.set(e)
                }
                copy(e) {
                    return super.copy(e, !1),
                    this.line.copy(e.line),
                    this.cone.copy(e.cone),
                    this
                }
            }
            class vd extends _c {
                constructor(e = 1) {
                    const t = [0, 0, 0, e, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e],
                    n = new Ga;
                    n.setAttribute("position", new Na(t, 3)),
                    n.setAttribute("color", new Na([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1], 3)),
                    super(n, new mc({
                            vertexColors: !0,
                            toneMapped: !1
                        })),
                    this.type = "AxesHelper"
                }
            }
            const gd = Math.pow(2, 8),
            xd = [.125, .215, .35, .446, .526, .582],
            yd = 5 + xd.length,
            bd = {
                [Qt]: 0,
                [Jt]: 1,
                [$t]: 2,
                [tn]: 3,
                [nn]: 4,
                [an]: 5,
                [Kt]: 6
            },
            Md = new Mu, {
                _lodPlanes: zd,
                _sizeLods: wd,
                _sigmas: _d
            } = Hd();
            let Sd = null;
            const Ld = (1 + Math.sqrt(5)) / 2,
            Ad = 1 / Ld,
            Td = [new Qn(1, 1, 1), new Qn(-1, 1, 1), new Qn(1, 1, -1), new Qn(-1, 1, -1), new Qn(0, Ld, Ad), new Qn(0, Ld, -Ad), new Qn(Ad, 0, Ld), new Qn(-Ad, 0, Ld), new Qn(Ld, Ad, 0), new Qn(-Ld, Ad, 0)];
            class Cd {
                constructor(e) {
                    this._renderer = e,
                    this._pingPongRenderTarget = null,
                    this._blurMaterial = new ch({
                        name: "SphericalGaussianBlur",
                        defines: {
                            n: 20
                        },
                        uniforms: {
                            envMap: {
                                value: null
                            },
                            samples: {
                                value: 1
                            },
                            weights: {
                                value: new Float32Array(20)
                            },
                            latitudinal: {
                                value: !1
                            },
                            dTheta: {
                                value: 0
                            },
                            mipInt: {
                                value: 0
                            },
                            poleAxis: {
                                value: new Qn(0, 1, 0)
                            },
                            inputEncoding: {
                                value: bd[Qt]
                            },
                            outputEncoding: {
                                value: bd[Qt]
                            }
                        },
                        vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                        fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",
                        blending: y,
                        depthTest: !1,
                        depthWrite: !1
                    }),
                    this._equirectShader = null,
                    this._cubemapShader = null,
                    this._compileMaterial(this._blurMaterial)
                }
                fromScene(e, t = 0, n = .1, i = 100) {
                    Sd = this._renderer.getRenderTarget();
                    const a = this._allocateTargets();
                    return this._sceneToCubeUV(e, n, i, a),
                    t > 0 && this._blur(a, 0, 0, t),
                    this._applyPMREM(a),
                    this._cleanup(a),
                    a
                }
                fromEquirectangular(e) {
                    return this._fromTexture(e)
                }
                fromCubemap(e) {
                    return this._fromTexture(e)
                }
                compileCubemapShader() {
                    null === this._cubemapShader && (this._cubemapShader = Rd(), this._compileMaterial(this._cubemapShader))
                }
                compileEquirectangularShader() {
                    null === this._equirectShader && (this._equirectShader = Vd(), this._compileMaterial(this._equirectShader))
                }
                dispose() {
                    this._blurMaterial.dispose(),
                    null !== this._cubemapShader && this._cubemapShader.dispose(),
                    null !== this._equirectShader && this._equirectShader.dispose();
                    for (let e = 0; e < zd.length; e++)
                        zd[e].dispose()
                }
                _cleanup(e) {
                    this._pingPongRenderTarget.dispose(),
                    this._renderer.setRenderTarget(Sd),
                    e.scissorTest = !1,
                    Pd(e, 0, 0, e.width, e.height)
                }
                _fromTexture(e) {
                    Sd = this._renderer.getRenderTarget();
                    const t = this._allocateTargets(e);
                    return this._textureToCubeUV(e, t),
                    this._applyPMREM(t),
                    this._cleanup(t),
                    t
                }
                _allocateTargets(e) {
                    const t = {
                        magFilter: pe,
                        minFilter: pe,
                        generateMipmaps: !1,
                        type: _e,
                        format: Be,
                        encoding: Ed(e) ? e.encoding : $t,
                        depthBuffer: !1
                    },
                    n = Nd(t);
                    return n.depthBuffer = !e,
                    this._pingPongRenderTarget = Nd(t),
                    n
                }
                _compileMaterial(e) {
                    const t = new sr(zd[0], e);
                    this._renderer.compile(t, Md)
                }
                _sceneToCubeUV(e, t, n, i) {
                    const a = new vr(90, 1, t, n),
                    r = [1, -1, 1, 1, 1, 1],
                    o = [1, 1, 1, -1, -1, -1],
                    s = this._renderer,
                    c = s.outputEncoding,
                    l = s.toneMapping,
                    h = s.getClearColor(),
                    u = s.getClearAlpha();
                    s.toneMapping = K,
                    s.outputEncoding = Qt;
                    let f = e.background;
                    if (f && f.isColor) {
                        f.convertSRGBToLinear();
                        const t = Math.max(f.r, f.g, f.b),
                        n = Math.min(Math.max(Math.ceil(Math.log2(t)), -128), 127);
                        f = f.multiplyScalar(Math.pow(2, -n));
                        const i = (n + 128) / 255;
                        s.setClearColor(f, i),
                        e.background = null
                    }
                    for (let t = 0; t < 6; t++) {
                        const n = t % 3;
                        0 == n ? (a.up.set(0, r[t], 0), a.lookAt(o[t], 0, 0)) : 1 == n ? (a.up.set(0, 0, r[t]), a.lookAt(0, o[t], 0)) : (a.up.set(0, r[t], 0), a.lookAt(0, 0, o[t])),
                        Pd(i, n * gd, t > 2 ? gd : 0, gd, gd),
                        s.setRenderTarget(i),
                        s.render(e, a)
                    }
                    s.toneMapping = l,
                    s.outputEncoding = c,
                    s.setClearColor(h, u)
                }
                _textureToCubeUV(e, t) {
                    const n = this._renderer;
                    e.isCubeTexture ? null == this._cubemapShader && (this._cubemapShader = Rd()) : null == this._equirectShader && (this._equirectShader = Vd());
                    const i = e.isCubeTexture ? this._cubemapShader : this._equirectShader,
                    a = new sr(zd[0], i),
                    r = i.uniforms;
                    r.envMap.value = e,
                    e.isCubeTexture || r.texelSize.value.set(1 / e.image.width, 1 / e.image.height),
                    r.inputEncoding.value = bd[e.encoding],
                    r.outputEncoding.value = bd[t.texture.encoding],
                    Pd(t, 0, 0, 3 * gd, 2 * gd),
                    n.setRenderTarget(t),
                    n.render(a, Md)
                }
                _applyPMREM(e) {
                    const t = this._renderer,
                    n = t.autoClear;
                    t.autoClear = !1;
                    for (let t = 1; t < yd; t++) {
                        const n = Math.sqrt(_d[t] * _d[t] - _d[t - 1] * _d[t - 1]),
                        i = Td[(t - 1) % Td.length];
                        this._blur(e, t - 1, t, n, i)
                    }
                    t.autoClear = n
                }
                _blur(e, t, n, i, a) {
                    const r = this._pingPongRenderTarget;
                    this._halfBlur(e, r, t, n, i, "latitudinal", a),
                    this._halfBlur(r, e, n, n, i, "longitudinal", a)
                }
                _halfBlur(e, t, n, i, a, r, o) {
                    const s = this._renderer,
                    c = this._blurMaterial;
                    "latitudinal" !== r && "longitudinal" !== r && console.error("blur direction must be either latitudinal or longitudinal!");
                    const l = new sr(zd[i], c),
                    h = c.uniforms,
                    u = wd[n] - 1,
                    f = isFinite(a) ? Math.PI / (2 * u) : 2 * Math.PI / 39,
                    d = a / f,
                    p = isFinite(a) ? 1 + Math.floor(3 * d) : 20;
                    p > 20 && console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${p} samples when the maximum is set to 20`);
                    const m = [];
                    let v = 0;
                    for (let e = 0; e < 20; ++e) {
                        const t = e / d,
                        n = Math.exp(-t * t / 2);
                        m.push(n),
                        0 == e ? v += n : e < p && (v += 2 * n)
                    }
                    for (let e = 0; e < m.length; e++)
                        m[e] = m[e] / v;
                    h.envMap.value = e.texture,
                    h.samples.value = p,
                    h.weights.value = m,
                    h.latitudinal.value = "latitudinal" === r,
                    o && (h.poleAxis.value = o),
                    h.dTheta.value = f,
                    h.mipInt.value = 8 - n,
                    h.inputEncoding.value = bd[e.texture.encoding],
                    h.outputEncoding.value = bd[e.texture.encoding];
                    const g = wd[i];
                    Pd(t, 3 * Math.max(0, gd - 2 * g), (0 === i ? 0 : 2 * gd) + 2 * g * (i > 4 ? i - 8 + 4 : 0), 3 * g, 2 * g),
                    s.setRenderTarget(t),
                    s.render(l, Md)
                }
            }
            function Ed(e) {
                return void 0 !== e && e.type === _e && (e.encoding === Qt || e.encoding === Jt || e.encoding === Kt)
            }
            function Hd() {
                const e = [],
                t = [],
                n = [];
                let i = 8;
                for (let a = 0; a < yd; a++) {
                    const r = Math.pow(2, i);
                    t.push(r);
                    let o = 1 / r;
                    a > 4 ? o = xd[a - 8 + 4 - 1] : 0 == a && (o = 0),
                    n.push(o);
                    const s = 1 / (r - 1),
                    c = -s / 2,
                    l = 1 + s / 2,
                    h = [c, c, l, c, l, l, c, c, l, l, c, l],
                    u = 6,
                    f = 6,
                    d = 3,
                    p = 2,
                    m = 1,
                    v = new Float32Array(d * f * u),
                    g = new Float32Array(p * f * u),
                    x = new Float32Array(m * f * u);
                    for (let e = 0; e < u; e++) {
                        const t = e % 3 * 2 / 3 - 1,
                        n = e > 2 ? 0 : -1,
                        i = [t, n, 0, t + 2 / 3, n, 0, t + 2 / 3, n + 1, 0, t, n, 0, t + 2 / 3, n + 1, 0, t, n + 1, 0];
                        v.set(i, d * f * e),
                        g.set(h, p * f * e);
                        const a = [e, e, e, e, e, e];
                        x.set(a, m * f * e)
                    }
                    const y = new Ga;
                    y.setAttribute("position", new _a(v, d)),
                    y.setAttribute("uv", new _a(g, p)),
                    y.setAttribute("faceIndex", new _a(x, m)),
                    e.push(y),
                    i > 4 && i--
                }
                return {
                    _lodPlanes: e,
                    _sizeLods: t,
                    _sigmas: n
                }
            }
            function Nd(e) {
                const t = new qn(3 * gd, 3 * gd, e);
                return t.texture.mapping = le,
                t.texture.name = "PMREM.cubeUv",
                t.scissorTest = !0,
                t
            }
            function Pd(e, t, n, i, a) {
                e.viewport.set(t, n, i, a),
                e.scissor.set(t, n, i, a)
            }
            function Vd() {
                return new ch({
                    name: "EquirectangularToCubeUV",
                    uniforms: {
                        envMap: {
                            value: null
                        },
                        texelSize: {
                            value: new Un(1, 1)
                        },
                        inputEncoding: {
                            value: bd[Qt]
                        },
                        outputEncoding: {
                            value: bd[Qt]
                        }
                    },
                    vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                    fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",
                    blending: y,
                    depthTest: !1,
                    depthWrite: !1
                })
            }
            function Rd() {
                return new ch({
                    name: "CubemapToCubeUV",
                    uniforms: {
                        envMap: {
                            value: null
                        },
                        inputEncoding: {
                            value: bd[Qt]
                        },
                        outputEncoding: {
                            value: bd[Qt]
                        }
                    },
                    vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                    fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",
                    blending: y,
                    depthTest: !1,
                    depthWrite: !1
                })
            }
            function Fd(e, t, n, i, a, r, o) {
                return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),
                new xa(e, t, n, a, r, o)
            }
            const Id = 0,
            Od = 1,
            Dd = 0,
            Ud = 1,
            Bd = 2;
            function kd(e) {
                return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),
                e
            }
            function Gd(e) {
                return void 0 === e && (e = []),
                console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),
                e.isMultiMaterial = !0,
                e.materials = e,
                e.clone = function () {
                    return e.slice()
                },
                e
            }
            function jd(e, t) {
                return console.warn("THREE.PointCloud has been renamed to THREE.Points."),
                new Hc(e, t)
            }
            function Wd(e) {
                return console.warn("THREE.Particle has been renamed to THREE.Sprite."),
                new ec(e)
            }
            function Xd(e, t) {
                return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),
                new Hc(e, t)
            }
            function qd(e) {
                return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),
                new Lc(e)
            }
            function Yd(e) {
                return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),
                new Lc(e)
            }
            function Zd(e) {
                return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),
                new Lc(e)
            }
            function Qd(e, t, n) {
                return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),
                new Qn(e, t, n)
            }
            function Jd(e, t) {
                return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),
                new _a(e, t).setUsage(Ln)
            }
            function Kd(e, t) {
                return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),
                new Sa(e, t)
            }
            function $d(e, t) {
                return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),
                new La(e, t)
            }
            function ep(e, t) {
                return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),
                new Aa(e, t)
            }
            function tp(e, t) {
                return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),
                new Ta(e, t)
            }
            function np(e, t) {
                return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),
                new Ca(e, t)
            }
            function ip(e, t) {
                return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),
                new Ea(e, t)
            }
            function ap(e, t) {
                return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),
                new Ha(e, t)
            }
            function rp(e, t) {
                return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),
                new Na(e, t)
            }
            function op(e, t) {
                return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),
                new Pa(e, t)
            }
            function sp(e) {
                console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),
                $h.call(this, e),
                this.type = "catmullrom",
                this.closed = !0
            }
            function cp(e) {
                console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),
                $h.call(this, e),
                this.type = "catmullrom"
            }
            function lp(e) {
                console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),
                $h.call(this, e),
                this.type = "catmullrom"
            }
            function hp(e) {
                return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),
                new vd(e)
            }
            function up(e, t) {
                return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),
                new ld(e, t)
            }
            function fp(e, t) {
                return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),
                new _c(new nl(e.geometry), new mc({
                        color: void 0 !== t ? t : 16777215
                    }))
            }
            function dp(e, t) {
                return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),
                new _c(new rh(e.geometry), new mc({
                        color: void 0 !== t ? t : 16777215
                    }))
            }
            function pp(e) {
                return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),
                new Oh(e)
            }
            function mp(e) {
                return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),
                new Gh(e)
            }
            function vp(e, t, n) {
                return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),
                new br(e, n)
            }
            Wh.create = function (e, t) {
                return console.log("THREE.Curve.create() has been deprecated"),
                e.prototype = Object.create(Wh.prototype),
                e.prototype.constructor = e,
                e.prototype.getPoint = t,
                e
            },
            Object.assign(uu.prototype, {
                createPointsGeometry: function (e) {
                    console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
                    const t = this.getPoints(e);
                    return this.createGeometry(t)
                },
                createSpacedPointsGeometry: function (e) {
                    console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
                    const t = this.getSpacedPoints(e);
                    return this.createGeometry(t)
                },
                createGeometry: function (e) {
                    console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
                    const t = new Bc;
                    for (let n = 0, i = e.length; n < i; n++) {
                        const i = e[n];
                        t.vertices.push(new Qn(i.x, i.y, i.z || 0))
                    }
                    return t
                }
            }),
            Object.assign(fu.prototype, {
                fromPoints: function (e) {
                    return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),
                    this.setFromPoints(e)
                }
            }),
            sp.prototype = Object.create($h.prototype),
            cp.prototype = Object.create($h.prototype),
            lp.prototype = Object.create($h.prototype),
            Object.assign(lp.prototype, {
                initFromArray: function () {
                    console.error("THREE.Spline: .initFromArray() has been removed.")
                },
                getControlPointsArray: function () {
                    console.error("THREE.Spline: .getControlPointsArray() has been removed.")
                },
                reparametrizeByArcLength: function () {
                    console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")
                }
            }),
            Kf.prototype.setColors = function () {
                console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
            },
            Wf.prototype.update = function () {
                console.error("THREE.SkeletonHelper: update() no longer needs to be called.")
            },
            Object.assign(Fh.prototype, {
                extractUrlBase: function (e) {
                    return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),
                    Cu.extractUrlBase(e)
                }
            }),
            Fh.Handlers = {
                add: function () {
                    console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")
                },
                get: function () {
                    console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")
                }
            },
            Object.assign(Rf.prototype, {
                center: function (e) {
                    return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),
                    this.getCenter(e)
                },
                empty: function () {
                    return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),
                    this.isEmpty()
                },
                isIntersectionBox: function (e) {
                    return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),
                    this.intersectsBox(e)
                },
                size: function (e) {
                    return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),
                    this.getSize(e)
                }
            }),
            Object.assign($n.prototype, {
                center: function (e) {
                    return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),
                    this.getCenter(e)
                },
                empty: function () {
                    return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),
                    this.isEmpty()
                },
                isIntersectionBox: function (e) {
                    return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),
                    this.intersectsBox(e)
                },
                isIntersectionSphere: function (e) {
                    return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
                    this.intersectsSphere(e)
                },
                size: function (e) {
                    return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),
                    this.getSize(e)
                }
            }),
            Object.assign(mi.prototype, {
                empty: function () {
                    return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),
                    this.isEmpty()
                }
            }),
            _r.prototype.setFromMatrix = function (e) {
                return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),
                this.setFromProjectionMatrix(e)
            },
            Of.prototype.center = function (e) {
                return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),
                this.getCenter(e)
            },
            Object.assign(Dn, {
                random16: function () {
                    return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),
                    Math.random()
                },
                nearestPowerOfTwo: function (e) {
                    return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),
                    Dn.floorPowerOfTwo(e)
                },
                nextPowerOfTwo: function (e) {
                    return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),
                    Dn.ceilPowerOfTwo(e)
                }
            }),
            Object.assign(Bn.prototype, {
                flattenToArrayOffset: function (e, t) {
                    return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
                    this.toArray(e, t)
                },
                multiplyVector3: function (e) {
                    return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),
                    e.applyMatrix3(this)
                },
                multiplyVector3Array: function () {
                    console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")
                },
                applyToBufferAttribute: function (e) {
                    return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),
                    e.applyMatrix3(this)
                },
                applyToVector3Array: function () {
                    console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")
                }
            }),
            Object.assign(_i.prototype, {
                extractPosition: function (e) {
                    return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),
                    this.copyPosition(e)
                },
                flattenToArrayOffset: function (e, t) {
                    return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
                    this.toArray(e, t)
                },
                getPosition: function () {
                    return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),
                    (new Qn).setFromMatrixColumn(this, 3)
                },
                setRotationFromQuaternion: function (e) {
                    return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),
                    this.makeRotationFromQuaternion(e)
                },
                multiplyToArray: function () {
                    console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")
                },
                multiplyVector3: function (e) {
                    return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),
                    e.applyMatrix4(this)
                },
                multiplyVector4: function (e) {
                    return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),
                    e.applyMatrix4(this)
                },
                multiplyVector3Array: function () {
                    console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")
                },
                rotateAxis: function (e) {
                    console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),
                    e.transformDirection(this)
                },
                crossVector: function (e) {
                    return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),
                    e.applyMatrix4(this)
                },
                translate: function () {
                    console.error("THREE.Matrix4: .translate() has been removed.")
                },
                rotateX: function () {
                    console.error("THREE.Matrix4: .rotateX() has been removed.")
                },
                rotateY: function () {
                    console.error("THREE.Matrix4: .rotateY() has been removed.")
                },
                rotateZ: function () {
                    console.error("THREE.Matrix4: .rotateZ() has been removed.")
                },
                rotateByAxis: function () {
                    console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
                },
                applyToBufferAttribute: function (e) {
                    return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),
                    e.applyMatrix4(this)
                },
                applyToVector3Array: function () {
                    console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")
                },
                makeFrustum: function (e, t, n, i, a, r) {
                    return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),
                    this.makePerspective(e, t, i, n, a, r)
                }
            }),
            $i.prototype.isIntersectionLine = function (e) {
                return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),
                this.intersectsLine(e)
            },
            Zn.prototype.multiplyVector3 = function (e) {
                return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),
                e.applyQuaternion(this)
            },
            Object.assign(wi.prototype, {
                isIntersectionBox: function (e) {
                    return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),
                    this.intersectsBox(e)
                },
                isIntersectionPlane: function (e) {
                    return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),
                    this.intersectsPlane(e)
                },
                isIntersectionSphere: function (e) {
                    return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
                    this.intersectsSphere(e)
                }
            }),
            Object.assign(ha.prototype, {
                area: function () {
                    return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),
                    this.getArea()
                },
                barycoordFromPoint: function (e, t) {
                    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),
                    this.getBarycoord(e, t)
                },
                midpoint: function (e) {
                    return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),
                    this.getMidpoint(e)
                },
                normal: function (e) {
                    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),
                    this.getNormal(e)
                },
                plane: function (e) {
                    return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),
                    this.getPlane(e)
                }
            }),
            Object.assign(ha, {
                barycoordFromPoint: function (e, t, n, i, a) {
                    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),
                    ha.getBarycoord(e, t, n, i, a)
                },
                normal: function (e, t, n, i) {
                    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),
                    ha.getNormal(e, t, n, i)
                }
            }),
            Object.assign(du.prototype, {
                extractAllPoints: function (e) {
                    return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),
                    this.extractPoints(e)
                },
                extrude: function (e) {
                    return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),
                    new Nl(this, e)
                },
                makeGeometry: function (e) {
                    return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),
                    new Xl(this, e)
                }
            }),
            Object.assign(Un.prototype, {
                fromAttribute: function (e, t, n) {
                    return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),
                    this.fromBufferAttribute(e, t, n)
                },
                distanceToManhattan: function (e) {
                    return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),
                    this.manhattanDistanceTo(e)
                },
                lengthManhattan: function () {
                    return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),
                    this.manhattanLength()
                }
            }),
            Object.assign(Qn.prototype, {
                setEulerFromRotationMatrix: function () {
                    console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
                },
                setEulerFromQuaternion: function () {
                    console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
                },
                getPositionFromMatrix: function (e) {
                    return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),
                    this.setFromMatrixPosition(e)
                },
                getScaleFromMatrix: function (e) {
                    return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),
                    this.setFromMatrixScale(e)
                },
                getColumnFromMatrix: function (e, t) {
                    return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),
                    this.setFromMatrixColumn(t, e)
                },
                applyProjection: function (e) {
                    return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),
                    this.applyMatrix4(e)
                },
                fromAttribute: function (e, t, n) {
                    return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),
                    this.fromBufferAttribute(e, t, n)
                },
                distanceToManhattan: function (e) {
                    return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),
                    this.manhattanDistanceTo(e)
                },
                lengthManhattan: function () {
                    return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),
                    this.manhattanLength()
                }
            }),
            Object.assign(Xn.prototype, {
                fromAttribute: function (e, t, n) {
                    return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),
                    this.fromBufferAttribute(e, t, n)
                },
                lengthManhattan: function () {
                    return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),
                    this.manhattanLength()
                }
            }),
            Object.assign(Bc.prototype, {
                computeTangents: function () {
                    console.error("THREE.Geometry: .computeTangents() has been removed.")
                },
                computeLineDistances: function () {
                    console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")
                },
                applyMatrix: function (e) {
                    return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),
                    this.applyMatrix4(e)
                }
            }),
            Object.assign(Zi.prototype, {
                getChildByName: function (e) {
                    return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),
                    this.getObjectByName(e)
                },
                renderDepth: function () {
                    console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
                },
                translate: function (e, t) {
                    return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),
                    this.translateOnAxis(t, e)
                },
                getWorldRotation: function () {
                    console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")
                },
                applyMatrix: function (e) {
                    return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),
                    this.applyMatrix4(e)
                }
            }),
            Object.defineProperties(Zi.prototype, {
                eulerOrder: {
                    get: function () {
                        return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                        this.rotation.order
                    },
                    set: function (e) {
                        console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                        this.rotation.order = e
                    }
                },
                useQuaternion: {
                    get: function () {
                        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                    },
                    set: function () {
                        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                    }
                }
            }),
            Object.assign(sr.prototype, {
                setDrawMode: function () {
                    console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")
                }
            }),
            Object.defineProperties(sr.prototype, {
                drawMode: {
                    get: function () {
                        return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),
                        qt
                    },
                    set: function () {
                        console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")
                    }
                }
            }),
            Object.defineProperties(ac.prototype, {
                objects: {
                    get: function () {
                        return console.warn("THREE.LOD: .objects has been renamed to .levels."),
                        this.levels
                    }
                }
            }),
            Object.defineProperty(cc.prototype, "useVertexTexture", {
                get: function () {
                    console.warn("THREE.Skeleton: useVertexTexture has been removed.")
                },
                set: function () {
                    console.warn("THREE.Skeleton: useVertexTexture has been removed.")
                }
            }),
            rc.prototype.initBones = function () {
                console.error("THREE.SkinnedMesh: initBones() has been removed.")
            },
            Object.defineProperty(Wh.prototype, "__arcLengthDivisions", {
                get: function () {
                    return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
                    this.arcLengthDivisions
                },
                set: function (e) {
                    console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
                    this.arcLengthDivisions = e
                }
            }),
            vr.prototype.setLens = function (e, t) {
                console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),
                void 0 !== t && (this.filmGauge = t),
                this.setFocalLength(e)
            },
            Object.defineProperties(pu.prototype, {
                onlyShadow: {
                    set: function () {
                        console.warn("THREE.Light: .onlyShadow has been removed.")
                    }
                },
                shadowCameraFov: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),
                        this.shadow.camera.fov = e
                    }
                },
                shadowCameraLeft: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),
                        this.shadow.camera.left = e
                    }
                },
                shadowCameraRight: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),
                        this.shadow.camera.right = e
                    }
                },
                shadowCameraTop: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),
                        this.shadow.camera.top = e
                    }
                },
                shadowCameraBottom: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),
                        this.shadow.camera.bottom = e
                    }
                },
                shadowCameraNear: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),
                        this.shadow.camera.near = e
                    }
                },
                shadowCameraFar: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),
                        this.shadow.camera.far = e
                    }
                },
                shadowCameraVisible: {
                    set: function () {
                        console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
                    }
                },
                shadowBias: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowBias is now .shadow.bias."),
                        this.shadow.bias = e
                    }
                },
                shadowDarkness: {
                    set: function () {
                        console.warn("THREE.Light: .shadowDarkness has been removed.")
                    }
                },
                shadowMapWidth: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),
                        this.shadow.mapSize.width = e
                    }
                },
                shadowMapHeight: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),
                        this.shadow.mapSize.height = e
                    }
                }
            }),
            Object.defineProperties(_a.prototype, {
                length: {
                    get: function () {
                        return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),
                        this.array.length
                    }
                },
                dynamic: {
                    get: function () {
                        return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),
                        this.usage === Ln
                    },
                    set: function () {
                        console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),
                        this.setUsage(Ln)
                    }
                }
            }),
            Object.assign(_a.prototype, {
                setDynamic: function (e) {
                    return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),
                    this.setUsage(!0 === e ? Ln : Sn),
                    this
                },
                copyIndicesArray: function () {
                    console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")
                },
                setArray: function () {
                    console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")
                }
            }),
            Object.assign(Ga.prototype, {
                addIndex: function (e) {
                    console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),
                    this.setIndex(e)
                },
                addAttribute: function (e, t) {
                    return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),
                    t && t.isBufferAttribute || t && t.isInterleavedBufferAttribute ? "index" === e ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(t), this) : this.setAttribute(e, t) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.setAttribute(e, new _a(arguments[1], arguments[2])))
                },
                addDrawCall: function (e, t, n) {
                    void 0 !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),
                    console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),
                    this.addGroup(e, t)
                },
                clearDrawCalls: function () {
                    console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),
                    this.clearGroups()
                },
                computeTangents: function () {
                    console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
                },
                computeOffsets: function () {
                    console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
                },
                removeAttribute: function (e) {
                    return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),
                    this.deleteAttribute(e)
                },
                applyMatrix: function (e) {
                    return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),
                    this.applyMatrix4(e)
                }
            }),
            Object.defineProperties(Ga.prototype, {
                drawcalls: {
                    get: function () {
                        return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),
                        this.groups
                    }
                },
                offsets: {
                    get: function () {
                        return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),
                        this.groups
                    }
                }
            }),
            Object.defineProperties(Eu.prototype, {
                maxInstancedCount: {
                    get: function () {
                        return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),
                        this.instanceCount
                    },
                    set: function (e) {
                        console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),
                        this.instanceCount = e
                    }
                }
            }),
            Object.defineProperties(Cf.prototype, {
                linePrecision: {
                    get: function () {
                        return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),
                        this.params.Line.threshold
                    },
                    set: function (e) {
                        console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),
                        this.params.Line.threshold = e
                    }
                }
            }),
            Object.defineProperties(Is.prototype, {
                dynamic: {
                    get: function () {
                        return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),
                        this.usage === Ln
                    },
                    set: function (e) {
                        console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),
                        this.setUsage(e)
                    }
                }
            }),
            Object.assign(Is.prototype, {
                setDynamic: function (e) {
                    return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),
                    this.setUsage(!0 === e ? Ln : Sn),
                    this
                },
                setArray: function () {
                    console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")
                }
            }),
            Object.assign(El.prototype, {
                getArrays: function () {
                    console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")
                },
                addShapeList: function () {
                    console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")
                },
                addShape: function () {
                    console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")
                }
            }),
            Object.assign(Fs.prototype, {
                dispose: function () {
                    console.error("THREE.Scene: .dispose() has been removed.")
                }
            }),
            Object.defineProperties(Lf.prototype, {
                dynamic: {
                    set: function () {
                        console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")
                    }
                },
                onUpdate: {
                    value: function () {
                        return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),
                        this
                    }
                }
            }),
            Object.defineProperties(ba.prototype, {
                wrapAround: {
                    get: function () {
                        console.warn("THREE.Material: .wrapAround has been removed.")
                    },
                    set: function () {
                        console.warn("THREE.Material: .wrapAround has been removed.")
                    }
                },
                overdraw: {
                    get: function () {
                        console.warn("THREE.Material: .overdraw has been removed.")
                    },
                    set: function () {
                        console.warn("THREE.Material: .overdraw has been removed.")
                    }
                },
                wrapRGB: {
                    get: function () {
                        return console.warn("THREE.Material: .wrapRGB has been removed."),
                        new ga
                    }
                },
                shading: {
                    get: function () {
                        console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.")
                    },
                    set: function (e) {
                        console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                        this.flatShading = e === g
                    }
                },
                stencilMask: {
                    get: function () {
                        return console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."),
                        this.stencilFuncMask
                    },
                    set: function (e) {
                        console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."),
                        this.stencilFuncMask = e
                    }
                }
            }),
            Object.defineProperties(uh.prototype, {
                metal: {
                    get: function () {
                        return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),
                        !1
                    },
                    set: function () {
                        console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")
                    }
                }
            }),
            Object.defineProperties(hh.prototype, {
                transparency: {
                    get: function () {
                        return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),
                        this.transmission
                    },
                    set: function (e) {
                        console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),
                        this.transmission = e
                    }
                }
            }),
            Object.defineProperties(pr.prototype, {
                derivatives: {
                    get: function () {
                        return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                        this.extensions.derivatives
                    },
                    set: function (e) {
                        console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                        this.extensions.derivatives = e
                    }
                }
            }),
            Object.assign(Ns.prototype, {
                clearTarget: function (e, t, n, i) {
                    console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),
                    this.setRenderTarget(e),
                    this.clear(t, n, i)
                },
                animate: function (e) {
                    console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),
                    this.setAnimationLoop(e)
                },
                getCurrentRenderTarget: function () {
                    return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),
                    this.getRenderTarget()
                },
                getMaxAnisotropy: function () {
                    return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),
                    this.capabilities.getMaxAnisotropy()
                },
                getPrecision: function () {
                    return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),
                    this.capabilities.precision
                },
                resetGLState: function () {
                    return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),
                    this.state.reset()
                },
                supportsFloatTextures: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),
                    this.extensions.get("OES_texture_float")
                },
                supportsHalfFloatTextures: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),
                    this.extensions.get("OES_texture_half_float")
                },
                supportsStandardDerivatives: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),
                    this.extensions.get("OES_standard_derivatives")
                },
                supportsCompressedTextureS3TC: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),
                    this.extensions.get("WEBGL_compressed_texture_s3tc")
                },
                supportsCompressedTexturePVRTC: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),
                    this.extensions.get("WEBGL_compressed_texture_pvrtc")
                },
                supportsBlendMinMax: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),
                    this.extensions.get("EXT_blend_minmax")
                },
                supportsVertexTextures: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),
                    this.capabilities.vertexTextures
                },
                supportsInstancedArrays: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),
                    this.extensions.get("ANGLE_instanced_arrays")
                },
                enableScissorTest: function (e) {
                    console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),
                    this.setScissorTest(e)
                },
                initMaterial: function () {
                    console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
                },
                addPrePlugin: function () {
                    console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
                },
                addPostPlugin: function () {
                    console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
                },
                updateShadowMap: function () {
                    console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
                },
                setFaceCulling: function () {
                    console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")
                },
                allocTextureUnit: function () {
                    console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")
                },
                setTexture: function () {
                    console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")
                },
                setTexture2D: function () {
                    console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")
                },
                setTextureCube: function () {
                    console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")
                },
                getActiveMipMapLevel: function () {
                    return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),
                    this.getActiveMipmapLevel()
                }
            }),
            Object.defineProperties(Ns.prototype, {
                shadowMapEnabled: {
                    get: function () {
                        return this.shadowMap.enabled
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),
                        this.shadowMap.enabled = e
                    }
                },
                shadowMapType: {
                    get: function () {
                        return this.shadowMap.type
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),
                        this.shadowMap.type = e
                    }
                },
                shadowMapCullFace: {
                    get: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
                    },
                    set: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
                    }
                },
                context: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),
                        this.getContext()
                    }
                },
                vr: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),
                        this.xr
                    }
                },
                gammaInput: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),
                        !1
                    },
                    set: function () {
                        console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")
                    }
                },
                gammaOutput: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),
                        !1
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),
                        this.outputEncoding = !0 === e ? Jt : Qt
                    }
                },
                toneMappingWhitePoint: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),
                        1
                    },
                    set: function () {
                        console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")
                    }
                }
            }),
            Object.defineProperties(ws.prototype, {
                cullFace: {
                    get: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
                    },
                    set: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
                    }
                },
                renderReverseSided: {
                    get: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
                    },
                    set: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
                    }
                },
                renderSingleSided: {
                    get: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
                    },
                    set: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
                    }
                }
            }),
            Object.defineProperties(qn.prototype, {
                wrapS: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                        this.texture.wrapS
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                        this.texture.wrapS = e
                    }
                },
                wrapT: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                        this.texture.wrapT
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                        this.texture.wrapT = e
                    }
                },
                magFilter: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                        this.texture.magFilter
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                        this.texture.magFilter = e
                    }
                },
                minFilter: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                        this.texture.minFilter
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                        this.texture.minFilter = e
                    }
                },
                anisotropy: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                        this.texture.anisotropy
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                        this.texture.anisotropy = e
                    }
                },
                offset: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                        this.texture.offset
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                        this.texture.offset = e
                    }
                },
                repeat: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                        this.texture.repeat
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                        this.texture.repeat = e
                    }
                },
                format: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                        this.texture.format
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                        this.texture.format = e
                    }
                },
                type: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                        this.texture.type
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                        this.texture.type = e
                    }
                },
                generateMipmaps: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                        this.texture.generateMipmaps
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                        this.texture.generateMipmaps = e
                    }
                }
            }),
            Object.defineProperties(af.prototype, {
                load: {
                    value: function (e) {
                        console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
                        const t = this;
                        return (new Wu).load(e, (function (e) {
                                t.setBuffer(e)
                            })),
                        this
                    }
                },
                startTime: {
                    set: function () {
                        console.warn("THREE.Audio: .startTime is now .play( delay ).")
                    }
                }
            }),
            hf.prototype.getData = function () {
                return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),
                this.getFrequencyData()
            },
            xr.prototype.updateCubeMap = function (e, t) {
                return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),
                this.update(e, t)
            };
            const gp = {
                merge: function (e, t, n) {
                    let i;
                    console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),
                    t.isMesh && (t.matrixAutoUpdate && t.updateMatrix(), i = t.matrix, t = t.geometry),
                    e.merge(t, i, n)
                },
                center: function (e) {
                    return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),
                    e.center()
                }
            };
            function xp() {
                console.error("THREE.CanvasRenderer has been removed")
            }
            function yp() {
                console.error("THREE.JSONLoader has been removed.")
            }
            Gn.crossOrigin = void 0,
            Gn.loadTexture = function (e, t, n, i) {
                console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
                const a = new jh;
                a.setCrossOrigin(this.crossOrigin);
                const r = a.load(e, n, void 0, i);
                return t && (r.mapping = t),
                r
            },
            Gn.loadTextureCube = function (e, t, n, i) {
                console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
                const a = new kh;
                a.setCrossOrigin(this.crossOrigin);
                const r = a.load(e, n, void 0, i);
                return t && (r.mapping = t),
                r
            },
            Gn.loadCompressedTexture = function () {
                console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
            },
            Gn.loadCompressedTextureCube = function () {
                console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
            };
            const bp = {
                createMultiMaterialObject: function () {
                    console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")
                },
                detach: function () {
                    console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")
                },
                attach: function () {
                    console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")
                }
            };
            function Mp() {
                console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")
            }
            "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", {
                    detail: {
                        revision: i
                    }
                }))
        },
        633: function (e, t, n) {
            (function () {
                "use strict";
                var i = this.THREE || n(212);
                if (!i)
                    throw new Error("MeshLine requires three.js");
                function a() {
                    i.BufferGeometry.call(this),
                    this.type = "MeshLine",
                    this.positions = [],
                    this.previous = [],
                    this.next = [],
                    this.side = [],
                    this.width = [],
                    this.indices_array = [],
                    this.uvs = [],
                    this.counters = [],
                    this._vertices = [],
                    this._bufferArray = [],
                    this.widthCallback = null,
                    this.matrixWorld = new i.Matrix4,
                    Object.defineProperties(this, {
                        geometry: {
                            enumerable: !0,
                            get: function () {
                                return this
                            },
                            set: function (e) {
                                this.setFromGeometry(e)
                            }
                        },
                        vertices: {
                            enumerable: !0,
                            get: function () {
                                return this._vertices
                            },
                            set: function (e) {
                                this.setVertices(e)
                            }
                        },
                        bufferArray: {
                            enumerable: !0,
                            get: function () {
                                return this._bufferArray
                            },
                            set: function (e) {
                                this.setBufferArray(e)
                            }
                        }
                    })
                }
                function r(e, t) {
                    var n = new i.Matrix4,
                    a = new i.Ray,
                    r = new i.Sphere,
                    o = new i.Vector3,
                    s = this.geometry;
                    if (r.copy(s.boundingSphere), r.applyMatrix4(this.matrixWorld), !1 !== e.ray.intersectSphere(r, o)) {
                        n.getInverse(this.matrixWorld),
                        a.copy(e.ray).applyMatrix4(n);
                        var c = new i.Vector3,
                        l = new i.Vector3,
                        h = new i.Vector3,
                        u = this instanceof i.LineSegments ? 2 : 1,
                        f = s.index,
                        d = s.attributes;
                        if (null !== f)
                            for (var p = f.array, m = d.position.array, v = d.width.array, g = 0, x = p.length - 1; g < x; g += u) {
                                var y = p[g],
                                b = p[g + 1];
                                c.fromArray(m, 3 * y),
                                l.fromArray(m, 3 * b);
                                var M = null != v[Math.floor(g / 3)] ? v[Math.floor(g / 3)] : 1,
                                z = e.params.Line.threshold + this.material.lineWidth * M / 2,
                                w = z * z;
                                if (!(a.distanceSqToSegment(c, l, o, h) > w)) {
                                    o.applyMatrix4(this.matrixWorld);
                                    var _ = e.ray.origin.distanceTo(o);
                                    _ < e.near || _ > e.far || (t.push({
                                            distance: _,
                                            point: h.clone().applyMatrix4(this.matrixWorld),
                                            index: g,
                                            face: null,
                                            faceIndex: null,
                                            object: this
                                        }), g = x)
                                }
                            }
                    }
                }
                function o(e, t, n, i, a) {
                    var r;
                    if (e = e.subarray || e.slice ? e : e.buffer, n = n.subarray || n.slice ? n : n.buffer, e = t ? e.subarray ? e.subarray(t, a && t + a) : e.slice(t, a && t + a) : e, n.set)
                        n.set(e, i);
                    else
                        for (r = 0; r < e.length; r++)
                            n[r + i] = e[r];
                    return n
                }
                function s(e) {
                    i.ShaderMaterial.call(this, {
                        uniforms: Object.assign({}, i.UniformsLib.fog, {
                            lineWidth: {
                                value: 1
                            },
                            map: {
                                value: null
                            },
                            useMap: {
                                value: 0
                            },
                            alphaMap: {
                                value: null
                            },
                            useAlphaMap: {
                                value: 0
                            },
                            color: {
                                value: new i.Color(16777215)
                            },
                            opacity: {
                                value: 1
                            },
                            resolution: {
                                value: new i.Vector2(1, 1)
                            },
                            sizeAttenuation: {
                                value: 1
                            },
                            dashArray: {
                                value: 0
                            },
                            dashOffset: {
                                value: 0
                            },
                            dashRatio: {
                                value: .5
                            },
                            useDash: {
                                value: 0
                            },
                            visibility: {
                                value: 1
                            },
                            alphaTest: {
                                value: 0
                            },
                            repeat: {
                                value: new i.Vector2(1, 1)
                            }
                        }),
                        vertexShader: i.ShaderChunk.meshline_vert,
                        fragmentShader: i.ShaderChunk.meshline_frag
                    }),
                    this.type = "MeshLineMaterial",
                    Object.defineProperties(this, {
                        lineWidth: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.lineWidth.value
                            },
                            set: function (e) {
                                this.uniforms.lineWidth.value = e
                            }
                        },
                        map: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.map.value
                            },
                            set: function (e) {
                                this.uniforms.map.value = e
                            }
                        },
                        useMap: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.useMap.value
                            },
                            set: function (e) {
                                this.uniforms.useMap.value = e
                            }
                        },
                        alphaMap: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.alphaMap.value
                            },
                            set: function (e) {
                                this.uniforms.alphaMap.value = e
                            }
                        },
                        useAlphaMap: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.useAlphaMap.value
                            },
                            set: function (e) {
                                this.uniforms.useAlphaMap.value = e
                            }
                        },
                        color: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.color.value
                            },
                            set: function (e) {
                                this.uniforms.color.value = e
                            }
                        },
                        opacity: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.opacity.value
                            },
                            set: function (e) {
                                this.uniforms.opacity.value = e
                            }
                        },
                        resolution: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.resolution.value
                            },
                            set: function (e) {
                                this.uniforms.resolution.value.copy(e)
                            }
                        },
                        sizeAttenuation: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.sizeAttenuation.value
                            },
                            set: function (e) {
                                this.uniforms.sizeAttenuation.value = e
                            }
                        },
                        dashArray: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.dashArray.value
                            },
                            set: function (e) {
                                this.uniforms.dashArray.value = e,
                                this.useDash = 0 !== e ? 1 : 0
                            }
                        },
                        dashOffset: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.dashOffset.value
                            },
                            set: function (e) {
                                this.uniforms.dashOffset.value = e
                            }
                        },
                        dashRatio: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.dashRatio.value
                            },
                            set: function (e) {
                                this.uniforms.dashRatio.value = e
                            }
                        },
                        useDash: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.useDash.value
                            },
                            set: function (e) {
                                this.uniforms.useDash.value = e
                            }
                        },
                        visibility: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.visibility.value
                            },
                            set: function (e) {
                                this.uniforms.visibility.value = e
                            }
                        },
                        alphaTest: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.alphaTest.value
                            },
                            set: function (e) {
                                this.uniforms.alphaTest.value = e
                            }
                        },
                        repeat: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.repeat.value
                            },
                            set: function (e) {
                                this.uniforms.repeat.value.copy(e)
                            }
                        }
                    }),
                    this.setValues(e)
                }
                a.prototype = Object.create(i.BufferGeometry.prototype),
                a.prototype.constructor = a,
                a.prototype.isMeshLine = !0,
                a.prototype.setMatrixWorld = function (e) {
                    this.matrixWorld = e
                },
                a.prototype.setFromGeometry = function (e, t) {
                    e instanceof i.Geometry && this.setVertices(e.vertices, t),
                    e instanceof i.BufferGeometry && this.setBufferArray(e.getAttribute("position").array, t),
                    (e instanceof Float32Array || e instanceof Array) && this.setBufferArray(e, t)
                },
                a.prototype.setGeometry = function (e, t) {
                    this.setFromGeometry(e, t)
                },
                a.prototype.setVertices = function (e, t) {
                    this._vertices = e,
                    this.widthCallback = t || this.widthCallback,
                    this.positions = [],
                    this.counters = [];
                    for (var n = 0; n < e.length; n++) {
                        var i = e[n],
                        a = n / e.length;
                        this.positions.push(i.x, i.y, i.z),
                        this.positions.push(i.x, i.y, i.z),
                        this.counters.push(a),
                        this.counters.push(a)
                    }
                    this.process()
                },
                a.prototype.setBufferArray = function (e, t) {
                    this._bufferArray = e,
                    this.widthCallback = t || this.widthCallback,
                    this.positions = [],
                    this.counters = [];
                    for (var n = 0; n < e.length; n += 3) {
                        var i = n / e.length;
                        this.positions.push(e[n], e[n + 1], e[n + 2]),
                        this.positions.push(e[n], e[n + 1], e[n + 2]),
                        this.counters.push(i),
                        this.counters.push(i)
                    }
                    this.process()
                },
                a.prototype.raycast = r,
                a.prototype.compareV3 = function (e, t) {
                    var n = 6 * e,
                    i = 6 * t;
                    return this.positions[n] === this.positions[i] && this.positions[n + 1] === this.positions[i + 1] && this.positions[n + 2] === this.positions[i + 2]
                },
                a.prototype.copyV3 = function (e) {
                    var t = 6 * e;
                    return [this.positions[t], this.positions[t + 1], this.positions[t + 2]]
                },
                a.prototype.process = function () {
                    var e,
                    t,
                    n = this.positions.length / 6;
                    this.previous = [],
                    this.next = [],
                    this.side = [],
                    this.width = [],
                    this.indices_array = [],
                    this.uvs = [],
                    t = this.compareV3(0, n - 1) ? this.copyV3(n - 2) : this.copyV3(0),
                    this.previous.push(t[0], t[1], t[2]),
                    this.previous.push(t[0], t[1], t[2]);
                    for (var a = 0; a < n; a++) {
                        if (this.side.push(1), this.side.push(-1), e = this.widthCallback ? this.widthCallback(a / (n - 1)) : 1, this.width.push(e), this.width.push(e), this.uvs.push(a / (n - 1), 0), this.uvs.push(a / (n - 1), 1), a < n - 1) {
                            t = this.copyV3(a),
                            this.previous.push(t[0], t[1], t[2]),
                            this.previous.push(t[0], t[1], t[2]);
                            var r = 2 * a;
                            this.indices_array.push(r, r + 1, r + 2),
                            this.indices_array.push(r + 2, r + 1, r + 3)
                        }
                        a > 0 && (t = this.copyV3(a), this.next.push(t[0], t[1], t[2]), this.next.push(t[0], t[1], t[2]))
                    }
                    t = this.compareV3(n - 1, 0) ? this.copyV3(1) : this.copyV3(n - 1),
                    this.next.push(t[0], t[1], t[2]),
                    this.next.push(t[0], t[1], t[2]),
                    this._attributes && this._attributes.position.count === this.positions.length ? (this._attributes.position.copyArray(new Float32Array(this.positions)), this._attributes.position.needsUpdate = !0, this._attributes.previous.copyArray(new Float32Array(this.previous)), this._attributes.previous.needsUpdate = !0, this._attributes.next.copyArray(new Float32Array(this.next)), this._attributes.next.needsUpdate = !0, this._attributes.side.copyArray(new Float32Array(this.side)), this._attributes.side.needsUpdate = !0, this._attributes.width.copyArray(new Float32Array(this.width)), this._attributes.width.needsUpdate = !0, this._attributes.uv.copyArray(new Float32Array(this.uvs)), this._attributes.uv.needsUpdate = !0, this._attributes.index.copyArray(new Uint16Array(this.indices_array)), this._attributes.index.needsUpdate = !0) : this._attributes = {
                        position: new i.BufferAttribute(new Float32Array(this.positions), 3),
                        previous: new i.BufferAttribute(new Float32Array(this.previous), 3),
                        next: new i.BufferAttribute(new Float32Array(this.next), 3),
                        side: new i.BufferAttribute(new Float32Array(this.side), 1),
                        width: new i.BufferAttribute(new Float32Array(this.width), 1),
                        uv: new i.BufferAttribute(new Float32Array(this.uvs), 2),
                        index: new i.BufferAttribute(new Uint16Array(this.indices_array), 1),
                        counters: new i.BufferAttribute(new Float32Array(this.counters), 1)
                    },
                    this.setAttribute("position", this._attributes.position),
                    this.setAttribute("previous", this._attributes.previous),
                    this.setAttribute("next", this._attributes.next),
                    this.setAttribute("side", this._attributes.side),
                    this.setAttribute("width", this._attributes.width),
                    this.setAttribute("uv", this._attributes.uv),
                    this.setAttribute("counters", this._attributes.counters),
                    this.setIndex(this._attributes.index),
                    this.computeBoundingSphere(),
                    this.computeBoundingBox()
                },
                a.prototype.advance = function (e) {
                    var t = this._attributes.position.array,
                    n = this._attributes.previous.array,
                    i = this._attributes.next.array,
                    a = t.length;
                    o(t, 0, n, 0, a),
                    o(t, 6, t, 0, a - 6),
                    t[a - 6] = e.x,
                    t[a - 5] = e.y,
                    t[a - 4] = e.z,
                    t[a - 3] = e.x,
                    t[a - 2] = e.y,
                    t[a - 1] = e.z,
                    o(t, 6, i, 0, a - 6),
                    i[a - 6] = e.x,
                    i[a - 5] = e.y,
                    i[a - 4] = e.z,
                    i[a - 3] = e.x,
                    i[a - 2] = e.y,
                    i[a - 1] = e.z,
                    this._attributes.position.needsUpdate = !0,
                    this._attributes.previous.needsUpdate = !0,
                    this._attributes.next.needsUpdate = !0
                },
                i.ShaderChunk.meshline_vert = ["", i.ShaderChunk.logdepthbuf_pars_vertex, i.ShaderChunk.fog_pars_vertex, "", "attribute vec3 previous;", "attribute vec3 next;", "attribute float side;", "attribute float width;", "attribute float counters;", "", "uniform vec2 resolution;", "uniform float lineWidth;", "uniform vec3 color;", "uniform float opacity;", "uniform float sizeAttenuation;", "", "varying vec2 vUV;", "varying vec4 vColor;", "varying float vCounters;", "", "vec2 fix( vec4 i, float aspect ) {", "", "    vec2 res = i.xy / i.w;", "    res.x *= aspect;", "\t vCounters = counters;", "    return res;", "", "}", "", "void main() {", "", "    float aspect = resolution.x / resolution.y;", "", "    vColor = vec4( color, opacity );", "    vUV = uv;", "", "    mat4 m = projectionMatrix * modelViewMatrix;", "    vec4 finalPosition = m * vec4( position, 1.0 );", "    vec4 prevPos = m * vec4( previous, 1.0 );", "    vec4 nextPos = m * vec4( next, 1.0 );", "", "    vec2 currentP = fix( finalPosition, aspect );", "    vec2 prevP = fix( prevPos, aspect );", "    vec2 nextP = fix( nextPos, aspect );", "", "    float w = lineWidth * width;", "", "    vec2 dir;", "    if( nextP == currentP ) dir = normalize( currentP - prevP );", "    else if( prevP == currentP ) dir = normalize( nextP - currentP );", "    else {", "        vec2 dir1 = normalize( currentP - prevP );", "        vec2 dir2 = normalize( nextP - currentP );", "        dir = normalize( dir1 + dir2 );", "", "        vec2 perp = vec2( -dir1.y, dir1.x );", "        vec2 miter = vec2( -dir.y, dir.x );", "        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );", "", "    }", "", "    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;", "    vec4 normal = vec4( -dir.y, dir.x, 0., 1. );", "    normal.xy *= .5 * w;", "    normal *= projectionMatrix;", "    if( sizeAttenuation == 0. ) {", "        normal.xy *= finalPosition.w;", "        normal.xy /= ( vec4( resolution, 0., 1. ) * projectionMatrix ).xy;", "    }", "", "    finalPosition.xy += normal.xy * side;", "", "    gl_Position = finalPosition;", "", i.ShaderChunk.logdepthbuf_vertex, i.ShaderChunk.fog_vertex && "    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", i.ShaderChunk.fog_vertex, "}"].join("\n"),
                i.ShaderChunk.meshline_frag = ["", i.ShaderChunk.fog_pars_fragment, i.ShaderChunk.logdepthbuf_pars_fragment, "", "uniform sampler2D map;", "uniform sampler2D alphaMap;", "uniform float useMap;", "uniform float useAlphaMap;", "uniform float useDash;", "uniform float dashArray;", "uniform float dashOffset;", "uniform float dashRatio;", "uniform float visibility;", "uniform float alphaTest;", "uniform vec2 repeat;", "", "varying vec2 vUV;", "varying vec4 vColor;", "varying float vCounters;", "", "void main() {", "", i.ShaderChunk.logdepthbuf_fragment, "", "    vec4 c = vColor;", "    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );", "    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;", "    if( c.a < alphaTest ) discard;", "    if( useDash == 1. ){", "        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));", "    }", "    gl_FragColor = c;", "    gl_FragColor.a *= step(vCounters, visibility);", "", i.ShaderChunk.fog_fragment, "}"].join("\n"),
                s.prototype = Object.create(i.ShaderMaterial.prototype),
                s.prototype.constructor = s,
                s.prototype.isMeshLineMaterial = !0,
                s.prototype.copy = function (e) {
                    return i.ShaderMaterial.prototype.copy.call(this, e),
                    this.lineWidth = e.lineWidth,
                    this.map = e.map,
                    this.useMap = e.useMap,
                    this.alphaMap = e.alphaMap,
                    this.useAlphaMap = e.useAlphaMap,
                    this.color.copy(e.color),
                    this.opacity = e.opacity,
                    this.resolution.copy(e.resolution),
                    this.sizeAttenuation = e.sizeAttenuation,
                    this.dashArray.copy(e.dashArray),
                    this.dashOffset.copy(e.dashOffset),
                    this.dashRatio.copy(e.dashRatio),
                    this.useDash = e.useDash,
                    this.visibility = e.visibility,
                    this.alphaTest = e.alphaTest,
                    this.repeat.copy(e.repeat),
                    this
                },
                e.exports && (t = e.exports = {
                        MeshLine: a,
                        MeshLineMaterial: s,
                        MeshLineRaycast: r
                    }),
                t.MeshLine = a,
                t.MeshLineMaterial = s,
                t.MeshLineRaycast = r
            }).call(this)
        },
        573: (e, t, n) => {
            const i = n(187).EventEmitter,
            a = n(298),
            r = "https://www.youtube.com/iframe_api",
            o = {
                "-1": "unstarted",
                0: "ended",
                1: "playing",
                2: "paused",
                3: "buffering",
                5: "cued"
            },
            s = [];
            e.exports = class extends i {
                constructor(e, t) {
                    super();
                    const n = "string" == typeof e ? document.querySelector(e) : e;
                    n.id ? this._id = n.id : this._id = n.id = "ytplayer-" + Math.random().toString(16).slice(2, 8),
                    this._opts = Object.assign({
                        width: 640,
                        height: 360,
                        autoplay: !1,
                        captions: void 0,
                        controls: !0,
                        keyboard: !0,
                        fullscreen: !0,
                        annotations: !0,
                        modestBranding: !1,
                        related: !0,
                        timeupdateFrequency: 1e3,
                        playsInline: !0,
                        start: 0
                    }, t),
                    this.videoId = null,
                    this.destroyed = !1,
                    this._api = null,
                    this._autoplay = !1,
                    this._player = null,
                    this._ready = !1,
                    this._queue = [],
                    this._interval = null,
                    this._startInterval = this._startInterval.bind(this),
                    this._stopInterval = this._stopInterval.bind(this),
                    this.on("playing", this._startInterval),
                    this.on("unstarted", this._stopInterval),
                    this.on("ended", this._stopInterval),
                    this.on("paused", this._stopInterval),
                    this.on("buffering", this._stopInterval),
                    this._loadIframeAPI(((e, t) => {
                            if (e)
                                return this._destroy(new Error("YouTube Iframe API failed to load"));
                            this._api = t,
                            this.videoId && this.load(this.videoId, this._autoplay, this._start)
                        }))
                }
                load(e, t = !1, n = 0) {
                    this.destroyed || (this.videoId = e, this._autoplay = t, this._start = n, this._api && (this._player ? this._ready && (t ? this._player.loadVideoById(e, n) : this._player.cueVideoById(e, n)) : this._createPlayer(e)))
                }
                play() {
                    this._ready ? this._player.playVideo() : this._queueCommand("play")
                }
                pause() {
                    this._ready ? this._player.pauseVideo() : this._queueCommand("pause")
                }
                stop() {
                    this._ready ? this._player.stopVideo() : this._queueCommand("stop")
                }
                seek(e) {
                    this._ready ? this._player.seekTo(e, !0) : this._queueCommand("seek", e)
                }
                setVolume(e) {
                    this._ready ? this._player.setVolume(e) : this._queueCommand("setVolume", e)
                }
                getVolume() {
                    return this._ready && this._player.getVolume() || 0
                }
                mute() {
                    this._ready ? this._player.mute() : this._queueCommand("mute")
                }
                unMute() {
                    this._ready ? this._player.unMute() : this._queueCommand("unMute")
                }
                isMuted() {
                    return this._ready && this._player.isMuted() || !1
                }
                setSize(e, t) {
                    this._ready ? this._player.setSize(e, t) : this._queueCommand("setSize", e, t)
                }
                setPlaybackRate(e) {
                    this._ready ? this._player.setPlaybackRate(e) : this._queueCommand("setPlaybackRate", e)
                }
                setPlaybackQuality(e) {
                    this._ready ? this._player.setPlaybackQuality(e) : this._queueCommand("setPlaybackQuality", e)
                }
                getPlaybackRate() {
                    return this._ready && this._player.getPlaybackRate() || 1
                }
                getAvailablePlaybackRates() {
                    return this._ready && this._player.getAvailablePlaybackRates() || [1]
                }
                getDuration() {
                    return this._ready && this._player.getDuration() || 0
                }
                getProgress() {
                    return this._ready && this._player.getVideoLoadedFraction() || 0
                }
                getState() {
                    return this._ready && o[this._player.getPlayerState()] || "unstarted"
                }
                getCurrentTime() {
                    return this._ready && this._player.getCurrentTime() || 0
                }
                destroy() {
                    this._destroy()
                }
                _destroy(e) {
                    this.destroyed || (this.destroyed = !0, this._player && (this._player.stopVideo && this._player.stopVideo(), this._player.destroy()), this.videoId = null, this._id = null, this._opts = null, this._api = null, this._player = null, this._ready = !1, this._queue = null, this._stopInterval(), this.removeListener("playing", this._startInterval), this.removeListener("paused", this._stopInterval), this.removeListener("buffering", this._stopInterval), this.removeListener("unstarted", this._stopInterval), this.removeListener("ended", this._stopInterval), e && this.emit("error", e))
                }
                _queueCommand(e, ...t) {
                    this.destroyed || this._queue.push([e, t])
                }
                _flushQueue() {
                    for (; this._queue.length; ) {
                        const e = this._queue.shift();
                        this[e[0]].apply(this, e[1])
                    }
                }
                _loadIframeAPI(e) {
                    if (window.YT && "function" == typeof window.YT.Player)
                        return e(null, window.YT);
                    s.push(e),
                    Array.from(document.getElementsByTagName("script")).some((e => e.src === r)) || a(r).catch((e => {
                            for (; s.length; )
                                s.shift()(e)
                        }));
                    const t = window.onYouTubeIframeAPIReady;
                    window.onYouTubeIframeAPIReady = () => {
                        for ("function" == typeof t && t(); s.length; )
                            s.shift()(null, window.YT)
                    }
                }
                _createPlayer(e) {
                    if (this.destroyed)
                        return;
                    const t = this._opts;
                    this._player = new this._api.Player(this._id, {
                        width: t.width,
                        height: t.height,
                        videoId: e,
                        host: t.host,
                        playerVars: {
                            autoplay: t.autoplay ? 1 : 0,
                            cc_load_policy: null != t.captions ? !1 !== t.captions ? 1 : 0 : void 0,
                            hl: null != t.captions && !1 !== t.captions ? t.captions : void 0,
                            cc_lang_pref: null != t.captions && !1 !== t.captions ? t.captions : void 0,
                            controls: t.controls ? 2 : 0,
                            disablekb: t.keyboard ? 0 : 1,
                            enablejsapi: 1,
                            fs: t.fullscreen ? 1 : 0,
                            iv_load_policy: t.annotations ? 1 : 3,
                            modestbranding: t.modestBranding ? 1 : 0,
                            origin: window.location.origin,
                            playsinline: t.playsInline ? 1 : 0,
                            rel: t.related ? 1 : 0,
                            wmode: "opaque",
                            start: t.start
                        },
                        events: {
                            onReady: () => this._onReady(e),
                            onStateChange: e => this._onStateChange(e),
                            onPlaybackQualityChange: e => this._onPlaybackQualityChange(e),
                            onPlaybackRateChange: e => this._onPlaybackRateChange(e),
                            onError: e => this._onError(e)
                        }
                    })
                }
                _onReady(e) {
                    this.destroyed || (this._ready = !0, this.load(this.videoId, this._autoplay, this._start), this._flushQueue())
                }
                _onStateChange(e) {
                    if (this.destroyed)
                        return;
                    const t = o[e.data];
                    if (!t)
                        throw new Error("Unrecognized state change: " + e);
                    ["paused", "buffering", "ended"].includes(t) && this._onTimeupdate(),
                    this.emit(t),
                    ["unstarted", "playing", "cued"].includes(t) && this._onTimeupdate()
                }
                _onPlaybackQualityChange(e) {
                    this.destroyed || this.emit("playbackQualityChange", e.data)
                }
                _onPlaybackRateChange(e) {
                    this.destroyed || this.emit("playbackRateChange", e.data)
                }
                _onError(e) {
                    if (this.destroyed)
                        return;
                    const t = e.data;
                    return 5 !== t ? 101 === t || 150 === t || 100 === t || 2 === t ? this.emit("unplayable", this.videoId) : void this._destroy(new Error("YouTube Player Error. Unknown error code: " + t)) : void 0
                }
                _onTimeupdate() {
                    this.emit("timeupdate", this.getCurrentTime())
                }
                _startInterval() {
                    this._interval = setInterval((() => this._onTimeupdate()), this._opts.timeupdateFrequency)
                }
                _stopInterval() {
                    clearInterval(this._interval),
                    this._interval = null
                }
            }
        }
    },
    t = {};
    function n(i) {
        if (t[i])
            return t[i].exports;
        var a = t[i] = {
            id: i,
            exports: {}
        };
        return e[i].call(a.exports, a, a.exports, n),
        a.exports
    }
    n.n = e => {
        var t = e && e.__esModule ? () => e.default : () => e;
        return n.d(t, {
            a: t
        }),
        t
    },
    n.d = (e, t) => {
        for (var i in t)
            n.o(t, i) && !n.o(e, i) && Object.defineProperty(e, i, {
                enumerable: !0,
                get: t[i]
            })
    },
    n.g = function () {
        if ("object" == typeof globalThis)
            return globalThis;
        try {
            return this || new Function("return this")()
        } catch (e) {
            if ("object" == typeof window)
                return window
        }
    }
    (),
    n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t),
    n.r = e => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    },
    (() => {
        var e;
        n.g.importScripts && (e = n.g.location + "");
        var t = n.g.document;
        if (!e && t && (t.currentScript && (e = t.currentScript.src), !e)) {
            var i = t.getElementsByTagName("script");
            i.length && (e = i[i.length - 1].src)
        }
        if (!e)
            throw new Error("Automatic publicPath is not supported in this browser");
        e = e.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/"),
        n.p = e
    })(),
    (() => {
        "use strict";
        var e = n(379),
        t = n.n(e),
        i = n(423);
        t()(i.Z, {
            insert: "head",
            singleton: !1
        }),
        i.Z.locals;
        var a = n(414);
        t()(a.Z, {
            insert: "head",
            singleton: !1
        }),
        a.Z.locals;
        var r = n(380);
        function o(e) {
            return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
                return typeof e
            }
                 : function (e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            })(e)
        }
        function s(e, t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i.enumerable = i.enumerable || !1,
                i.configurable = !0,
                "value" in i && (i.writable = !0),
                Object.defineProperty(e, i.key, i)
            }
        }
        function c(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function l(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {},
                i = Object.keys(n);
                "function" == typeof Object.getOwnPropertySymbols && (i = i.concat(Object.getOwnPropertySymbols(n).filter((function (e) {
                                    return Object.getOwnPropertyDescriptor(n, e).enumerable
                                })))),
                i.forEach((function (t) {
                        c(e, t, n[t])
                    }))
            }
            return e
        }
        function h(e, t) {
            return function (e) {
                if (Array.isArray(e))
                    return e
            }
            (e) || function (e, t) {
                var n = [],
                i = !0,
                a = !1,
                r = void 0;
                try {
                    for (var o, s = e[Symbol.iterator](); !(i = (o = s.next()).done) && (n.push(o.value), !t || n.length !== t); i = !0);
                } catch (e) {
                    a = !0,
                    r = e
                }
                finally {
                    try {
                        i || null == s.return || s.return()
                    }
                    finally {
                        if (a)
                            throw r
                    }
                }
                return n
            }
            (e, t) || function () {
                throw new TypeError("Invalid attempt to destructure non-iterable instance")
            }
            ()
        }
        t()(r.Z, {
            insert: "head",
            singleton: !1
        }),
        r.Z.locals;
        var u = function () {},
        f = {},
        d = {},
        p = null,
        m = {
            mark: u,
            measure: u
        };
        try {
            "undefined" != typeof window && (f = window),
            "undefined" != typeof document && (d = document),
            "undefined" != typeof MutationObserver && (p = MutationObserver),
            "undefined" != typeof performance && (m = performance)
        } catch (e) {}
        var v = (f.navigator || {}).userAgent,
        g = void 0 === v ? "" : v,
        x = f,
        y = d,
        b = p,
        M = m,
        z = (x.document, !!y.documentElement && !!y.head && "function" == typeof y.addEventListener && "function" == typeof y.createElement),
        w = ~g.indexOf("MSIE") || ~g.indexOf("Trident/"),
        _ = "svg-inline--fa",
        S = "data-fa-i2svg",
        L = "data-fa-pseudo-element",
        A = "fontawesome-i2svg",
        T = ["HTML", "HEAD", "STYLE", "SCRIPT"],
        C = function () {
            try {
                return !0
            } catch (e) {
                return !1
            }
        }
        (),
        E = {
            fas: "solid",
            far: "regular",
            fal: "light",
            fad: "duotone",
            fab: "brands",
            fak: "kit",
            fa: "solid"
        },
        H = {
            solid: "fas",
            regular: "far",
            light: "fal",
            duotone: "fad",
            brands: "fab",
            kit: "fak"
        },
        N = "fa-layers-text",
        P = /Font Awesome ([5 ]*)(Solid|Regular|Light|Duotone|Brands|Free|Pro|Kit).*/,
        V = {
            900: "fas",
            400: "far",
            normal: "far",
            300: "fal"
        },
        R = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
        F = R.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]),
        I = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"],
        O = {
            GROUP: "group",
            SWAP_OPACITY: "swap-opacity",
            PRIMARY: "primary",
            SECONDARY: "secondary"
        },
        D = ["xs", "sm", "lg", "fw", "ul", "li", "border", "pull-left", "pull-right", "spin", "pulse", "rotate-90", "rotate-180", "rotate-270", "flip-horizontal", "flip-vertical", "flip-both", "stack", "stack-1x", "stack-2x", "inverse", "layers", "layers-text", "layers-counter", O.GROUP, O.SWAP_OPACITY, O.PRIMARY, O.SECONDARY].concat(R.map((function (e) {
                    return "".concat(e, "x")
                }))).concat(F.map((function (e) {
                    return "w-".concat(e)
                }))),
        U = x.FontAwesomeConfig || {};
        y && "function" == typeof y.querySelector && [["data-family-prefix", "familyPrefix"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]].forEach((function (e) {
                var t = h(e, 2),
                n = t[0],
                i = t[1],
                a = function (e) {
                    return "" === e || "false" !== e && ("true" === e || e)
                }
                (function (e) {
                    var t = y.querySelector("script[" + e + "]");
                    if (t)
                        return t.getAttribute(e)
                }
                    (n));
                null != a && (U[i] = a)
            }));
        var B = l({}, {
            familyPrefix: "fa",
            replacementClass: _,
            autoReplaceSvg: !0,
            autoAddCss: !0,
            autoA11y: !0,
            searchPseudoElements: !1,
            observeMutations: !0,
            mutateApproach: "async",
            keepOriginalSource: !0,
            measurePerformance: !1,
            showMissingIcons: !0
        }, U);
        B.autoReplaceSvg || (B.observeMutations = !1);
        var k = l({}, B);
        x.FontAwesomeConfig = k;
        var G = x || {};
        G.___FONT_AWESOME___ || (G.___FONT_AWESOME___ = {}),
        G.___FONT_AWESOME___.styles || (G.___FONT_AWESOME___.styles = {}),
        G.___FONT_AWESOME___.hooks || (G.___FONT_AWESOME___.hooks = {}),
        G.___FONT_AWESOME___.shims || (G.___FONT_AWESOME___.shims = []);
        var j = G.___FONT_AWESOME___,
        W = [],
        X = !1;
        function q(e) {
            z && (X ? setTimeout(e, 0) : W.push(e))
        }
        z && ((X = (y.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(y.readyState)) || y.addEventListener("DOMContentLoaded", (function e() {
                    y.removeEventListener("DOMContentLoaded", e),
                    X = 1,
                    W.map((function (e) {
                            return e()
                        }))
                })));
        var Y,
        Z = "pending",
        Q = "settled",
        J = "fulfilled",
        K = "rejected",
        $ = function () {},
        ee = void 0 !== n.g && void 0 !== n.g.process && "function" == typeof n.g.process.emit,
        te = "undefined" == typeof setImmediate ? setTimeout : setImmediate,
        ne = [];
        function ie() {
            for (var e = 0; e < ne.length; e++)
                ne[e][0](ne[e][1]);
            ne = [],
            Y = !1
        }
        function ae(e, t) {
            ne.push([e, t]),
            Y || (Y = !0, te(ie, 0))
        }
        function re(e) {
            var t = e.owner,
            n = t._state,
            i = t._data,
            a = e[n],
            r = e.then;
            if ("function" == typeof a) {
                n = J;
                try {
                    i = a(i)
                } catch (e) {
                    le(r, e)
                }
            }
            oe(r, i) || (n === J && se(r, i), n === K && le(r, i))
        }
        function oe(e, t) {
            var n;
            try {
                if (e === t)
                    throw new TypeError("A promises callback cannot return that same promise.");
                if (t && ("function" == typeof t || "object" === o(t))) {
                    var i = t.then;
                    if ("function" == typeof i)
                        return i.call(t, (function (i) {
                                n || (n = !0, t === i ? ce(e, i) : se(e, i))
                            }), (function (t) {
                                n || (n = !0, le(e, t))
                            })), !0
                }
            } catch (t) {
                return n || le(e, t),
                !0
            }
            return !1
        }
        function se(e, t) {
            e !== t && oe(e, t) || ce(e, t)
        }
        function ce(e, t) {
            e._state === Z && (e._state = Q, e._data = t, ae(ue, e))
        }
        function le(e, t) {
            e._state === Z && (e._state = Q, e._data = t, ae(fe, e))
        }
        function he(e) {
            e._then = e._then.forEach(re)
        }
        function ue(e) {
            e._state = J,
            he(e)
        }
        function fe(e) {
            e._state = K,
            he(e),
            !e._handled && ee && n.g.process.emit("unhandledRejection", e._data, e)
        }
        function de(e) {
            n.g.process.emit("rejectionHandled", e)
        }
        function pe(e) {
            if ("function" != typeof e)
                throw new TypeError("Promise resolver " + e + " is not a function");
            if (this instanceof pe == 0)
                throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
            this._then = [],
            function (e, t) {
                function n(e) {
                    le(t, e)
                }
                try {
                    e((function (e) {
                            se(t, e)
                        }), n)
                } catch (e) {
                    n(e)
                }
            }
            (e, this)
        }
        pe.prototype = {
            constructor: pe,
            _state: Z,
            _then: null,
            _data: void 0,
            _handled: !1,
            then: function (e, t) {
                var n = {
                    owner: this,
                    then: new this.constructor($),
                    fulfilled: e,
                    rejected: t
                };
                return !t && !e || this._handled || (this._handled = !0, this._state === K && ee && ae(de, this)),
                this._state === J || this._state === K ? ae(re, n) : this._then.push(n),
                n.then
            },
            catch : function (e) {
                return this.then(null, e)
            }
    },
    pe.all = function (e) {
        if (!Array.isArray(e))
            throw new TypeError("You must pass an array to Promise.all().");
            return new pe((function (t, n) {
                    var i = [],
                    a = 0;
                    function r(e) {
                        return a++,
                        function (n) {
                            i[e] = n,
                            --a || t(i)
                        }
                    }
                    for (var o, s = 0; s < e.length; s++)
                        (o = e[s]) && "function" == typeof o.then ? o.then(r(s), n) : i[s] = o;
                    a || t(i)
                }))
        },
        pe.race = function (e) {
            if (!Array.isArray(e))
                throw new TypeError("You must pass an array to Promise.race().");
            return new pe((function (t, n) {
                    for (var i, a = 0; a < e.length; a++)
                        (i = e[a]) && "function" == typeof i.then ? i.then(t, n) : t(i)
                }))
        },
        pe.resolve = function (e) {
            return e && "object" === o(e) && e.constructor === pe ? e : new pe((function (t) {
                    t(e)
                }))
        },
        pe.reject = function (e) {
            return new pe((function (t, n) {
                    n(e)
                }))
        };
        var me = "function" == typeof Promise ? Promise : pe,
        ve = 16,
        ge = {
            size: 16,
            x: 0,
            y: 0,
            rotate: 0,
            flipX: !1,
            flipY: !1
        };
        function xe(e) {
            if (e && z) {
                var t = y.createElement("style");
                t.setAttribute("type", "text/css"),
                t.innerHTML = e;
                for (var n = y.head.childNodes, i = null, a = n.length - 1; a > -1; a--) {
                    var r = n[a],
                    o = (r.tagName || "").toUpperCase();
                    ["STYLE", "LINK"].indexOf(o) > -1 && (i = r)
                }
                return y.head.insertBefore(t, i),
                e
            }
        }
        function ye() {
            for (var e = 12, t = ""; e-- > 0; )
                t += "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"[62 * Math.random() | 0];
            return t
        }
        function be(e) {
            for (var t = [], n = (e || []).length >>> 0; n--; )
                t[n] = e[n];
            return t
        }
        function Me(e) {
            return e.classList ? be(e.classList) : (e.getAttribute("class") || "").split(" ").filter((function (e) {
                    return e
                }))
        }
        function ze(e) {
            return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
        }
        function we(e) {
            return Object.keys(e || {}).reduce((function (t, n) {
                    return t + "".concat(n, ": ").concat(e[n], ";")
                }), "")
        }
        function _e(e) {
            return e.size !== ge.size || e.x !== ge.x || e.y !== ge.y || e.rotate !== ge.rotate || e.flipX || e.flipY
        }
        function Se(e) {
            var t = e.transform,
            n = e.containerWidth,
            i = e.iconWidth,
            a = {
                transform: "translate(".concat(n / 2, " 256)")
            },
            r = "translate(".concat(32 * t.x, ", ").concat(32 * t.y, ") "),
            o = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "),
            s = "rotate(".concat(t.rotate, " 0 0)");
            return {
                outer: a,
                inner: {
                    transform: "".concat(r, " ").concat(o, " ").concat(s)
                },
                path: {
                    transform: "translate(".concat(i / 2 * -1, " -256)")
                }
            }
        }
        var Le = {
            x: 0,
            y: 0,
            width: "100%",
            height: "100%"
        };
        function Ae(e) {
            var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
            return e.attributes && (e.attributes.fill || t) && (e.attributes.fill = "black"),
            e
        }
        function Te(e) {
            var t = e.icons,
            n = t.main,
            i = t.mask,
            a = e.prefix,
            r = e.iconName,
            o = e.transform,
            s = e.symbol,
            c = e.title,
            h = e.maskId,
            u = e.titleId,
            f = e.extra,
            d = e.watchable,
            p = void 0 !== d && d,
            m = i.found ? i : n,
            v = m.width,
            g = m.height,
            x = "fak" === a,
            y = x ? "" : "fa-w-".concat(Math.ceil(v / g * 16)),
            b = [k.replacementClass, r ? "".concat(k.familyPrefix, "-").concat(r) : "", y].filter((function (e) {
                    return -1 === f.classes.indexOf(e)
                })).filter((function (e) {
                    return "" !== e || !!e
                })).concat(f.classes).join(" "),
            M = {
                children: [],
                attributes: l({}, f.attributes, {
                    "data-prefix": a,
                    "data-icon": r,
                    class: b,
                    role: f.attributes.role || "img",
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 ".concat(v, " ").concat(g)
                })
            },
            z = x && !~f.classes.indexOf("fa-fw") ? {
                width: "".concat(v / g * 16 * .0625, "em")
            }
             : {};
            p && (M.attributes[S] = ""),
            c && M.children.push({
                tag: "title",
                attributes: {
                    id: M.attributes["aria-labelledby"] || "title-".concat(u || ye())
                },
                children: [c]
            });
            var w = l({}, M, {
                prefix: a,
                iconName: r,
                main: n,
                mask: i,
                maskId: h,
                transform: o,
                symbol: s,
                styles: l({}, z, f.styles)
            }),
            _ = i.found && n.found ? function (e) {
                var t,
                n = e.children,
                i = e.attributes,
                a = e.main,
                r = e.mask,
                o = e.maskId,
                s = e.transform,
                c = a.width,
                h = a.icon,
                u = r.width,
                f = r.icon,
                d = Se({
                    transform: s,
                    containerWidth: u,
                    iconWidth: c
                }),
                p = {
                    tag: "rect",
                    attributes: l({}, Le, {
                        fill: "white"
                    })
                },
                m = h.children ? {
                    children: h.children.map(Ae)
                }
                 : {},
                v = {
                    tag: "g",
                    attributes: l({}, d.inner),
                    children: [Ae(l({
                                tag: h.tag,
                                attributes: l({}, h.attributes, d.path)
                            }, m))]
                },
                g = {
                    tag: "g",
                    attributes: l({}, d.outer),
                    children: [v]
                },
                x = "mask-".concat(o || ye()),
                y = "clip-".concat(o || ye()),
                b = {
                    tag: "mask",
                    attributes: l({}, Le, {
                        id: x,
                        maskUnits: "userSpaceOnUse",
                        maskContentUnits: "userSpaceOnUse"
                    }),
                    children: [p, g]
                },
                M = {
                    tag: "defs",
                    children: [{
                            tag: "clipPath",
                            attributes: {
                                id: y
                            },
                            children: (t = f, "g" === t.tag ? t.children : [t])
                        }, b]
                };
                return n.push(M, {
                    tag: "rect",
                    attributes: l({
                        fill: "currentColor",
                        "clip-path": "url(#".concat(y, ")"),
                        mask: "url(#".concat(x, ")")
                    }, Le)
                }), {
                    children: n,
                    attributes: i
                }
            }
            (w) : function (e) {
                var t = e.children,
                n = e.attributes,
                i = e.main,
                a = e.transform,
                r = we(e.styles);
                if (r.length > 0 && (n.style = r), _e(a)) {
                    var o = Se({
                        transform: a,
                        containerWidth: i.width,
                        iconWidth: i.width
                    });
                    t.push({
                        tag: "g",
                        attributes: l({}, o.outer),
                        children: [{
                                tag: "g",
                                attributes: l({}, o.inner),
                                children: [{
                                        tag: i.icon.tag,
                                        children: i.icon.children,
                                        attributes: l({}, i.icon.attributes, o.path)
                                    }
                                ]
                            }
                        ]
                    })
                } else
                    t.push(i.icon);
                return {
                    children: t,
                    attributes: n
                }
            }
            (w),
            L = _.children,
            A = _.attributes;
            return w.children = L,
            w.attributes = A,
            s ? function (e) {
                var t = e.prefix,
                n = e.iconName,
                i = e.children,
                a = e.attributes,
                r = e.symbol;
                return [{
                        tag: "svg",
                        attributes: {
                            style: "display: none;"
                        },
                        children: [{
                                tag: "symbol",
                                attributes: l({}, a, {
                                    id: !0 === r ? "".concat(t, "-").concat(k.familyPrefix, "-").concat(n) : r
                                }),
                                children: i
                            }
                        ]
                    }
                ]
            }
            (w) : function (e) {
                var t = e.children,
                n = e.main,
                i = e.mask,
                a = e.attributes,
                r = e.styles,
                o = e.transform;
                if (_e(o) && n.found && !i.found) {
                    var s = {
                        x: n.width / n.height / 2,
                        y: .5
                    };
                    a.style = we(l({}, r, {
                                "transform-origin": "".concat(s.x + o.x / 16, "em ").concat(s.y + o.y / 16, "em")
                            }))
                }
                return [{
                        tag: "svg",
                        attributes: a,
                        children: t
                    }
                ]
            }
            (w)
        }
        function Ce(e) {
            var t = e.content,
            n = e.width,
            i = e.height,
            a = e.transform,
            r = e.title,
            o = e.extra,
            s = e.watchable,
            c = void 0 !== s && s,
            h = l({}, o.attributes, r ? {
                title: r
            }
                     : {}, {
                class: o.classes.join(" ")
            });
            c && (h[S] = "");
            var u = l({}, o.styles);
            _e(a) && (u.transform = function (e) {
                var t = e.transform,
                n = e.width,
                i = void 0 === n ? 16 : n,
                a = e.height,
                r = void 0 === a ? 16 : a,
                o = e.startCentered,
                s = void 0 !== o && o,
                c = "";
                return c += s && w ? "translate(".concat(t.x / ve - i / 2, "em, ").concat(t.y / ve - r / 2, "em) ") : s ? "translate(calc(-50% + ".concat(t.x / ve, "em), calc(-50% + ").concat(t.y / ve, "em)) ") : "translate(".concat(t.x / ve, "em, ").concat(t.y / ve, "em) "),
                (c += "scale(".concat(t.size / ve * (t.flipX ? -1 : 1), ", ").concat(t.size / ve * (t.flipY ? -1 : 1), ") ")) + "rotate(".concat(t.rotate, "deg) ")
            }
                ({
                    transform: a,
                    startCentered: !0,
                    width: n,
                    height: i
                }), u["-webkit-transform"] = u.transform);
            var f = we(u);
            f.length > 0 && (h.style = f);
            var d = [];
            return d.push({
                tag: "span",
                attributes: h,
                children: [t]
            }),
            r && d.push({
                tag: "span",
                attributes: {
                    class: "sr-only"
                },
                children: [r]
            }),
            d
        }
        var Ee = function () {},
        He = k.measurePerformance && M && M.mark && M.measure ? M : {
            mark: Ee,
            measure: Ee
        },
        Ne = 'FA "5.15.2"',
        Pe = function (e) {
            return He.mark("".concat(Ne, " ").concat(e, " begins")),
            function () {
                return function (e) {
                    He.mark("".concat(Ne, " ").concat(e, " ends")),
                    He.measure("".concat(Ne, " ").concat(e), "".concat(Ne, " ").concat(e, " begins"), "".concat(Ne, " ").concat(e, " ends"))
                }
                (e)
            }
        },
        Ve = function (e, t, n, i) {
            var a,
            r,
            o,
            s = Object.keys(e),
            c = s.length,
            l = void 0 !== i ? function (e, t) {
                return function (n, i, a, r) {
                    return e.call(t, n, i, a, r)
                }
            }
            (t, i) : t;
            for (void 0 === n ? (a = 1, o = e[s[0]]) : (a = 0, o = n); a < c; a++)
                o = l(o, e[r = s[a]], r, e);
            return o
        };
        function Re(e) {
            for (var t = "", n = 0; n < e.length; n++)
                t += ("000" + e.charCodeAt(n).toString(16)).slice(-4);
            return t
        }
        function Fe(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
            i = n.skipHooks,
            a = void 0 !== i && i,
            r = Object.keys(t).reduce((function (e, n) {
                        var i = t[n];
                        return i.icon ? e[i.iconName] = i.icon : e[n] = i,
                        e
                    }), {});
            "function" != typeof j.hooks.addPack || a ? j.styles[e] = l({}, j.styles[e] || {}, r) : j.hooks.addPack(e, r),
            "fas" === e && Fe("fa", t)
        }
        var Ie = j.styles,
        Oe = j.shims,
        De = {},
        Ue = {},
        Be = {},
        ke = function () {
            var e = function (e) {
                return Ve(Ie, (function (t, n, i) {
                        return t[i] = Ve(n, e, {}),
                        t
                    }), {})
            };
            De = e((function (e, t, n) {
                        return t[3] && (e[t[3]] = n),
                        e
                    })),
            Ue = e((function (e, t, n) {
                        var i = t[2];
                        return e[n] = n,
                        i.forEach((function (t) {
                                e[t] = n
                            })),
                        e
                    }));
            var t = "far" in Ie;
            Be = Ve(Oe, (function (e, n) {
                        var i = n[0],
                        a = n[1],
                        r = n[2];
                        return "far" !== a || t || (a = "fas"),
                        e[i] = {
                            prefix: a,
                            iconName: r
                        },
                        e
                    }), {})
        };
        function Ge(e, t) {
            return (De[e] || {})[t]
        }
        ke();
        var je = j.styles;
        function We(e) {
            return e.reduce((function (e, t) {
                    var n = function (e, t) {
                        var n,
                        i = t.split("-"),
                        a = i[0],
                        r = i.slice(1).join("-");
                        return a !== e || "" === r || (n = r, ~D.indexOf(n)) ? null : r
                    }
                    (k.familyPrefix, t);
                    if (je[t])
                        e.prefix = t;
                    else if (k.autoFetchSvg && Object.keys(E).indexOf(t) > -1)
                        e.prefix = t;
                    else if (n) {
                        var i = "fa" === e.prefix ? Be[n] || {
                            prefix: null,
                            iconName: null
                        }
                         : {};
                        e.iconName = i.iconName || n,
                        e.prefix = i.prefix || e.prefix
                    } else
                        t !== k.replacementClass && 0 !== t.indexOf("fa-w-") && e.rest.push(t);
                    return e
                }), {
                prefix: null,
                iconName: null,
                rest: []
            })
        }
        function Xe(e) {
            var t = e.tag,
            n = e.attributes,
            i = void 0 === n ? {}
             : n,
            a = e.children,
            r = void 0 === a ? [] : a;
            return "string" == typeof e ? ze(e) : "<".concat(t, " ").concat(function (e) {
                return Object.keys(e || {}).reduce((function (t, n) {
                        return t + "".concat(n, '="').concat(ze(e[n]), '" ')
                    }), "").trim()
            }
                (i), ">").concat(r.map(Xe).join(""), "</").concat(t, ">")
        }
        var qe = function () {};
        function Ye(e) {
            return "string" == typeof(e.getAttribute ? e.getAttribute(S) : null)
        }
        var Ze = {
            replace: function (e) {
                var t = e[0],
                n = e[1].map((function (e) {
                            return Xe(e)
                        })).join("\n");
                if (t.parentNode && t.outerHTML)
                    t.outerHTML = n + (k.keepOriginalSource && "svg" !== t.tagName.toLowerCase() ? "\x3c!-- ".concat(t.outerHTML, " Font Awesome fontawesome.com --\x3e") : "");
                else if (t.parentNode) {
                    var i = document.createElement("span");
                    t.parentNode.replaceChild(i, t),
                    i.outerHTML = n
                }
            },
            nest: function (e) {
                var t = e[0],
                n = e[1];
                if (~Me(t).indexOf(k.replacementClass))
                    return Ze.replace(e);
                var i = new RegExp("".concat(k.familyPrefix, "-.*"));
                delete n[0].attributes.style,
                delete n[0].attributes.id;
                var a = n[0].attributes.class.split(" ").reduce((function (e, t) {
                            return t === k.replacementClass || t.match(i) ? e.toSvg.push(t) : e.toNode.push(t),
                            e
                        }), {
                    toNode: [],
                    toSvg: []
                });
                n[0].attributes.class = a.toSvg.join(" ");
                var r = n.map((function (e) {
                            return Xe(e)
                        })).join("\n");
                t.setAttribute("class", a.toNode.join(" ")),
                t.setAttribute(S, ""),
                t.innerHTML = r
            }
        };
        function Qe(e) {
            e()
        }
        function Je(e, t) {
            var n = "function" == typeof t ? t : qe;
            if (0 === e.length)
                n();
            else {
                var i = Qe;
                "async" === k.mutateApproach && (i = x.requestAnimationFrame || Qe),
                i((function () {
                        var t = !0 === k.autoReplaceSvg ? Ze.replace : Ze[k.autoReplaceSvg] || Ze.replace,
                        i = Pe("mutate");
                        e.map(t),
                        i(),
                        n()
                    }))
            }
        }
        var Ke = !1;
        function $e() {
            Ke = !1
        }
        var et = null;
        function tt(e) {
            if (b && k.observeMutations) {
                var t = e.treeCallback,
                n = e.nodeCallback,
                i = e.pseudoElementsCallback,
                a = e.observeMutationsRoot,
                r = void 0 === a ? y : a;
                et = new b((function (e) {
                            Ke || be(e).forEach((function (e) {
                                    if ("childList" === e.type && e.addedNodes.length > 0 && !Ye(e.addedNodes[0]) && (k.searchPseudoElements && i(e.target), t(e.target)), "attributes" === e.type && e.target.parentNode && k.searchPseudoElements && i(e.target.parentNode), "attributes" === e.type && Ye(e.target) && ~I.indexOf(e.attributeName))
                                        if ("class" === e.attributeName) {
                                            var a = We(Me(e.target)),
                                            r = a.prefix,
                                            o = a.iconName;
                                            r && e.target.setAttribute("data-prefix", r),
                                            o && e.target.setAttribute("data-icon", o)
                                        } else
                                            n(e.target)
                                }))
                        })),
                z && et.observe(r, {
                    childList: !0,
                    attributes: !0,
                    characterData: !0,
                    subtree: !0
                })
            }
        }
        function nt(e) {
            var t = function (e) {
                var t,
                n,
                i = e.getAttribute("data-prefix"),
                a = e.getAttribute("data-icon"),
                r = void 0 !== e.innerText ? e.innerText.trim() : "",
                o = We(Me(e));
                return i && a && (o.prefix = i, o.iconName = a),
                o.prefix && r.length > 1 ? o.iconName = (t = o.prefix, n = e.innerText, (Ue[t] || {})[n]) : o.prefix && 1 === r.length && (o.iconName = Ge(o.prefix, Re(e.innerText))),
                o
            }
            (e),
            n = t.iconName,
            i = t.prefix,
            a = t.rest,
            r = function (e) {
                var t = e.getAttribute("style"),
                n = [];
                return t && (n = t.split(";").reduce((function (e, t) {
                                var n = t.split(":"),
                                i = n[0],
                                a = n.slice(1);
                                return i && a.length > 0 && (e[i] = a.join(":").trim()),
                                e
                            }), {})),
                n
            }
            (e),
            o = function (e) {
                return function (e) {
                    var t = {
                        size: 16,
                        x: 0,
                        y: 0,
                        flipX: !1,
                        flipY: !1,
                        rotate: 0
                    };
                    return e ? e.toLowerCase().split(" ").reduce((function (e, t) {
                            var n = t.toLowerCase().split("-"),
                            i = n[0],
                            a = n.slice(1).join("-");
                            if (i && "h" === a)
                                return e.flipX = !0, e;
                            if (i && "v" === a)
                                return e.flipY = !0, e;
                            if (a = parseFloat(a), isNaN(a))
                                return e;
                            switch (i) {
                            case "grow":
                                e.size = e.size + a;
                                break;
                            case "shrink":
                                e.size = e.size - a;
                                break;
                            case "left":
                                e.x = e.x - a;
                                break;
                            case "right":
                                e.x = e.x + a;
                                break;
                            case "up":
                                e.y = e.y - a;
                                break;
                            case "down":
                                e.y = e.y + a;
                                break;
                            case "rotate":
                                e.rotate = e.rotate + a
                            }
                            return e
                        }), t) : t
                }
                (e.getAttribute("data-fa-transform"))
            }
            (e),
            s = function (e) {
                var t = e.getAttribute("data-fa-symbol");
                return null !== t && ("" === t || t)
            }
            (e),
            c = function (e) {
                var t = be(e.attributes).reduce((function (e, t) {
                            return "class" !== e.name && "style" !== e.name && (e[t.name] = t.value),
                            e
                        }), {}),
                n = e.getAttribute("title"),
                i = e.getAttribute("data-fa-title-id");
                return k.autoA11y && (n ? t["aria-labelledby"] = "".concat(k.replacementClass, "-title-").concat(i || ye()) : (t["aria-hidden"] = "true", t.focusable = "false")),
                t
            }
            (e),
            l = function (e) {
                var t = e.getAttribute("data-fa-mask");
                return t ? We(t.split(" ").map((function (e) {
                            return e.trim()
                        }))) : {
                    prefix: null,
                    iconName: null,
                    rest: []
                }
            }
            (e);
            return {
                iconName: n,
                title: e.getAttribute("title"),
                titleId: e.getAttribute("data-fa-title-id"),
                prefix: i,
                transform: o,
                symbol: s,
                mask: l,
                maskId: e.getAttribute("data-fa-mask-id"),
                extra: {
                    classes: a,
                    styles: r,
                    attributes: c
                }
            }
        }
        function it(e) {
            this.name = "MissingIcon",
            this.message = e || "Icon unavailable",
            this.stack = (new Error).stack
        }
        it.prototype = Object.create(Error.prototype),
        it.prototype.constructor = it;
        var at = {
            fill: "currentColor"
        },
        rt = {
            attributeType: "XML",
            repeatCount: "indefinite",
            dur: "2s"
        },
        ot = {
            tag: "path",
            attributes: l({}, at, {
                d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
            })
        },
        st = l({}, rt, {
            attributeName: "opacity"
        }),
        ct = {
            tag: "g",
            children: [ot, {
                    tag: "circle",
                    attributes: l({}, at, {
                        cx: "256",
                        cy: "364",
                        r: "28"
                    }),
                    children: [{
                            tag: "animate",
                            attributes: l({}, rt, {
                                attributeName: "r",
                                values: "28;14;28;28;14;28;"
                            })
                        }, {
                            tag: "animate",
                            attributes: l({}, st, {
                                values: "1;0;1;1;0;1;"
                            })
                        }
                    ]
                }, {
                    tag: "path",
                    attributes: l({}, at, {
                        opacity: "1",
                        d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
                    }),
                    children: [{
                            tag: "animate",
                            attributes: l({}, st, {
                                values: "1;0;0;0;0;1;"
                            })
                        }
                    ]
                }, {
                    tag: "path",
                    attributes: l({}, at, {
                        opacity: "0",
                        d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
                    }),
                    children: [{
                            tag: "animate",
                            attributes: l({}, st, {
                                values: "0;0;1;1;0;0;"
                            })
                        }
                    ]
                }
            ]
        },
        lt = j.styles;
        function ht(e) {
            var t = e[0],
            n = e[1],
            i = h(e.slice(4), 1)[0];
            return {
                found: !0,
                width: t,
                height: n,
                icon: Array.isArray(i) ? {
                    tag: "g",
                    attributes: {
                        class: "".concat(k.familyPrefix, "-").concat(O.GROUP)
                    },
                    children: [{
                            tag: "path",
                            attributes: {
                                class: "".concat(k.familyPrefix, "-").concat(O.SECONDARY),
                                fill: "currentColor",
                                d: i[0]
                            }
                        }, {
                            tag: "path",
                            attributes: {
                                class: "".concat(k.familyPrefix, "-").concat(O.PRIMARY),
                                fill: "currentColor",
                                d: i[1]
                            }
                        }
                    ]
                }
                 : {
                    tag: "path",
                    attributes: {
                        fill: "currentColor",
                        d: i
                    }
                }
            }
        }
        function ut(e, t) {
            return new me((function (n, i) {
                    var a = {
                        found: !1,
                        width: 512,
                        height: 512,
                        icon: ct
                    };
                    if (e && t && lt[t] && lt[t][e])
                        return n(ht(lt[t][e]));
                    e && t && !k.showMissingIcons ? i(new it("Icon is missing for prefix ".concat(t, " with icon name ").concat(e))) : n(a)
                }))
        }
        var ft = j.styles;
        function dt(e) {
            var t = nt(e);
            return ~t.extra.classes.indexOf(N) ? function (e, t) {
                var n = t.title,
                i = t.transform,
                a = t.extra,
                r = null,
                o = null;
                if (w) {
                    var s = parseInt(getComputedStyle(e).fontSize, 10),
                    c = e.getBoundingClientRect();
                    r = c.width / s,
                    o = c.height / s
                }
                return k.autoA11y && !n && (a.attributes["aria-hidden"] = "true"),
                me.resolve([e, Ce({
                            content: e.innerHTML,
                            width: r,
                            height: o,
                            transform: i,
                            title: n,
                            extra: a,
                            watchable: !0
                        })])
            }
            (e, t) : function (e, t) {
                var n = t.iconName,
                i = t.title,
                a = t.titleId,
                r = t.prefix,
                o = t.transform,
                s = t.symbol,
                c = t.mask,
                l = t.maskId,
                u = t.extra;
                return new me((function (t, f) {
                        me.all([ut(n, r), ut(c.iconName, c.prefix)]).then((function (c) {
                                var f = h(c, 2),
                                d = f[0],
                                p = f[1];
                                t([e, Te({
                                            icons: {
                                                main: d,
                                                mask: p
                                            },
                                            prefix: r,
                                            iconName: n,
                                            transform: o,
                                            symbol: s,
                                            mask: p,
                                            maskId: l,
                                            title: i,
                                            titleId: a,
                                            extra: u,
                                            watchable: !0
                                        })])
                            }))
                    }))
            }
            (e, t)
        }
        function pt(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
            if (z) {
                var n = y.documentElement.classList,
                i = function (e) {
                    return n.add("".concat(A, "-").concat(e))
                },
                a = function (e) {
                    return n.remove("".concat(A, "-").concat(e))
                },
                r = k.autoFetchSvg ? Object.keys(E) : Object.keys(ft),
                o = [".".concat(N, ":not([").concat(S, "])")].concat(r.map((function (e) {
                            return ".".concat(e, ":not([").concat(S, "])")
                        }))).join(", ");
                if (0 !== o.length) {
                    var s = [];
                    try {
                        s = be(e.querySelectorAll(o))
                    } catch (e) {}
                    if (s.length > 0) {
                        i("pending"),
                        a("complete");
                        var c = Pe("onTree"),
                        l = s.reduce((function (e, t) {
                                    try {
                                        var n = dt(t);
                                        n && e.push(n)
                                    } catch (e) {
                                        C || e instanceof it && console.error(e)
                                    }
                                    return e
                                }), []);
                        return new me((function (e, n) {
                                me.all(l).then((function (n) {
                                        Je(n, (function () {
                                                i("active"),
                                                i("complete"),
                                                a("pending"),
                                                "function" == typeof t && t(),
                                                c(),
                                                e()
                                            }))
                                    })).catch((function () {
                                        c(),
                                        n()
                                    }))
                            }))
                    }
                }
            }
        }
        function mt(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
            dt(e).then((function (e) {
                    e && Je([e], t)
                }))
        }
        function vt(e, t) {
            var n = "".concat("data-fa-pseudo-element-pending").concat(t.replace(":", "-"));
            return new me((function (i, a) {
                    if (null !== e.getAttribute(n))
                        return i();
                    var r = be(e.children).filter((function (e) {
                                return e.getAttribute(L) === t
                            }))[0],
                    o = x.getComputedStyle(e, t),
                    s = o.getPropertyValue("font-family").match(P),
                    c = o.getPropertyValue("font-weight"),
                    h = o.getPropertyValue("content");
                    if (r && !s)
                        return e.removeChild(r), i();
                    if (s && "none" !== h && "" !== h) {
                        var u = o.getPropertyValue("content"),
                        f = ~["Solid", "Regular", "Light", "Duotone", "Brands", "Kit"].indexOf(s[2]) ? H[s[2].toLowerCase()] : V[c],
                        d = Re(3 === u.length ? u.substr(1, 1) : u),
                        p = Ge(f, d),
                        m = p;
                        if (!p || r && r.getAttribute("data-prefix") === f && r.getAttribute("data-icon") === m)
                            i();
                        else {
                            e.setAttribute(n, m),
                            r && e.removeChild(r);
                            var v = {
                                iconName: null,
                                title: null,
                                titleId: null,
                                prefix: null,
                                transform: ge,
                                symbol: !1,
                                mask: null,
                                maskId: null,
                                extra: {
                                    classes: [],
                                    styles: {},
                                    attributes: {}
                                }
                            },
                            g = v.extra;
                            g.attributes[L] = t,
                            ut(p, f).then((function (a) {
                                    var r = Te(l({}, v, {
                                                icons: {
                                                    main: a,
                                                    mask: {
                                                        prefix: null,
                                                        iconName: null,
                                                        rest: []
                                                    }
                                                },
                                                prefix: f,
                                                iconName: m,
                                                extra: g,
                                                watchable: !0
                                            })),
                                    o = y.createElement("svg");
                                    ":before" === t ? e.insertBefore(o, e.firstChild) : e.appendChild(o),
                                    o.outerHTML = r.map((function (e) {
                                                return Xe(e)
                                            })).join("\n"),
                                    e.removeAttribute(n),
                                    i()
                                })).catch(a)
                        }
                    } else
                        i()
                }))
        }
        function gt(e) {
            return me.all([vt(e, ":before"), vt(e, ":after")])
        }
        function xt(e) {
            return !(e.parentNode === document.head || ~T.indexOf(e.tagName.toUpperCase()) || e.getAttribute(L) || e.parentNode && "svg" === e.parentNode.tagName)
        }
        function yt(e) {
            if (z)
                return new me((function (t, n) {
                        var i = be(e.querySelectorAll("*")).filter(xt).map(gt),
                        a = Pe("searchPseudoElements");
                        Ke = !0,
                        me.all(i).then((function () {
                                a(),
                                $e(),
                                t()
                            })).catch((function () {
                                a(),
                                $e(),
                                n()
                            }))
                    }))
        }
        function bt() {
            var e = "fa",
            t = _,
            n = k.familyPrefix,
            i = k.replacementClass,
            a = 'svg:not(:root).svg-inline--fa {\n  overflow: visible;\n}\n\n.svg-inline--fa {\n  display: inline-block;\n  font-size: inherit;\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.225em;\n}\n.svg-inline--fa.fa-w-1 {\n  width: 0.0625em;\n}\n.svg-inline--fa.fa-w-2 {\n  width: 0.125em;\n}\n.svg-inline--fa.fa-w-3 {\n  width: 0.1875em;\n}\n.svg-inline--fa.fa-w-4 {\n  width: 0.25em;\n}\n.svg-inline--fa.fa-w-5 {\n  width: 0.3125em;\n}\n.svg-inline--fa.fa-w-6 {\n  width: 0.375em;\n}\n.svg-inline--fa.fa-w-7 {\n  width: 0.4375em;\n}\n.svg-inline--fa.fa-w-8 {\n  width: 0.5em;\n}\n.svg-inline--fa.fa-w-9 {\n  width: 0.5625em;\n}\n.svg-inline--fa.fa-w-10 {\n  width: 0.625em;\n}\n.svg-inline--fa.fa-w-11 {\n  width: 0.6875em;\n}\n.svg-inline--fa.fa-w-12 {\n  width: 0.75em;\n}\n.svg-inline--fa.fa-w-13 {\n  width: 0.8125em;\n}\n.svg-inline--fa.fa-w-14 {\n  width: 0.875em;\n}\n.svg-inline--fa.fa-w-15 {\n  width: 0.9375em;\n}\n.svg-inline--fa.fa-w-16 {\n  width: 1em;\n}\n.svg-inline--fa.fa-w-17 {\n  width: 1.0625em;\n}\n.svg-inline--fa.fa-w-18 {\n  width: 1.125em;\n}\n.svg-inline--fa.fa-w-19 {\n  width: 1.1875em;\n}\n.svg-inline--fa.fa-w-20 {\n  width: 1.25em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: 0.3em;\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: 0.3em;\n  width: auto;\n}\n.svg-inline--fa.fa-border {\n  height: 1.5em;\n}\n.svg-inline--fa.fa-li {\n  width: 2em;\n}\n.svg-inline--fa.fa-fw {\n  width: 1.25em;\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: #ff253a;\n  border-radius: 1em;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  color: #fff;\n  height: 1.5em;\n  line-height: 1;\n  max-width: 5em;\n  min-width: 1.5em;\n  overflow: hidden;\n  padding: 0.25em;\n  right: 0;\n  text-overflow: ellipsis;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: 0;\n  right: 0;\n  top: auto;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: bottom right;\n          transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: 0;\n  left: 0;\n  right: auto;\n  top: auto;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: bottom left;\n          transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  right: 0;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: 0;\n  right: auto;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top left;\n          transform-origin: top left;\n}\n\n.fa-lg {\n  font-size: 1.3333333333em;\n  line-height: 0.75em;\n  vertical-align: -0.0667em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: 2.5em;\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: -2em;\n  position: absolute;\n  text-align: center;\n  width: 2em;\n  line-height: inherit;\n}\n\n.fa-border {\n  border: solid 0.08em #eee;\n  border-radius: 0.1em;\n  padding: 0.2em 0.25em 0.15em;\n}\n\n.fa-pull-left {\n  float: left;\n}\n\n.fa-pull-right {\n  float: right;\n}\n\n.fa.fa-pull-left,\n.fas.fa-pull-left,\n.far.fa-pull-left,\n.fal.fa-pull-left,\n.fab.fa-pull-left {\n  margin-right: 0.3em;\n}\n.fa.fa-pull-right,\n.fas.fa-pull-right,\n.far.fa-pull-right,\n.fal.fa-pull-right,\n.fab.fa-pull-right {\n  margin-left: 0.3em;\n}\n\n.fa-spin {\n  -webkit-animation: fa-spin 2s infinite linear;\n          animation: fa-spin 2s infinite linear;\n}\n\n.fa-pulse {\n  -webkit-animation: fa-spin 1s infinite steps(8);\n          animation: fa-spin 1s infinite steps(8);\n}\n\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";\n  -webkit-transform: rotate(90deg);\n          transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";\n  -webkit-transform: rotate(180deg);\n          transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";\n  -webkit-transform: rotate(270deg);\n          transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";\n  -webkit-transform: scale(-1, 1);\n          transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";\n  -webkit-transform: scale(1, -1);\n          transform: scale(1, -1);\n}\n\n.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";\n  -webkit-transform: scale(-1, -1);\n          transform: scale(-1, -1);\n}\n\n:root .fa-rotate-90,\n:root .fa-rotate-180,\n:root .fa-rotate-270,\n:root .fa-flip-horizontal,\n:root .fa-flip-vertical,\n:root .fa-flip-both {\n  -webkit-filter: none;\n          filter: none;\n}\n\n.fa-stack {\n  display: inline-block;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: #fff;\n}\n\n.sr-only {\n  border: 0;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n.sr-only-focusable:active, .sr-only-focusable:focus {\n  clip: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  position: static;\n  width: auto;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: 1;\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: 0.4;\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: 0.4;\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: 1;\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}\n\n.fad.fa-inverse {\n  color: #fff;\n}';
            if (n !== e || i !== t) {
                var r = new RegExp("\\.".concat(e, "\\-"), "g"),
                o = new RegExp("\\--".concat(e, "\\-"), "g"),
                s = new RegExp("\\.".concat(t), "g");
                a = a.replace(r, ".".concat(n, "-")).replace(o, "--".concat(n, "-")).replace(s, ".".concat(i))
            }
            return a
        }
        function Mt() {
            k.autoAddCss && !_t && (xe(bt()), _t = !0)
        }
        function zt(e, t) {
            return Object.defineProperty(e, "abstract", {
                get: t
            }),
            Object.defineProperty(e, "html", {
                get: function () {
                    return e.abstract.map((function (e) {
                            return Xe(e)
                        }))
                }
            }),
            Object.defineProperty(e, "node", {
                get: function () {
                    if (z) {
                        var t = y.createElement("div");
                        return t.innerHTML = e.html,
                        t.children
                    }
                }
            }),
            e
        }
        var wt = new(function () {
            function e() {
                !function (e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }
                (this, e),
                this.definitions = {}
            }
            var t,
            n;
            return t = e,
            (n = [{
                        key: "add",
                        value: function () {
                            for (var e = this, t = arguments.length, n = new Array(t), i = 0; i < t; i++)
                                n[i] = arguments[i];
                            var a = n.reduce(this._pullDefinitions, {});
                            Object.keys(a).forEach((function (t) {
                                    e.definitions[t] = l({}, e.definitions[t] || {}, a[t]),
                                    Fe(t, a[t]),
                                    ke()
                                }))
                        }
                    }, {
                        key: "reset",
                        value: function () {
                            this.definitions = {}
                        }
                    }, {
                        key: "_pullDefinitions",
                        value: function (e, t) {
                            var n = t.prefix && t.iconName && t.icon ? {
                                0: t
                            }
                             : t;
                            return Object.keys(n).map((function (t) {
                                    var i = n[t],
                                    a = i.prefix,
                                    r = i.iconName,
                                    o = i.icon;
                                    e[a] || (e[a] = {}),
                                    e[a][r] = o
                                })),
                            e
                        }
                    }
                ]) && s(t.prototype, n),
            e
        }
                ()),
        _t = !1,
        St = {
            i2svg: function () {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                if (z) {
                    Mt();
                    var t = e.node,
                    n = void 0 === t ? y : t,
                    i = e.callback,
                    a = void 0 === i ? function () {}
                     : i;
                    return k.searchPseudoElements && yt(n),
                    pt(n, a)
                }
                return me.reject("Operation requires a DOM of some kind.")
            },
            css: bt,
            insertCss: function () {
                _t || (xe(bt()), _t = !0)
            },
            watch: function () {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                t = e.autoReplaceSvgRoot,
                n = e.observeMutationsRoot;
                !1 === k.autoReplaceSvg && (k.autoReplaceSvg = !0),
                k.observeMutations = !0,
                q((function () {
                        At({
                            autoReplaceSvgRoot: t
                        }),
                        tt({
                            treeCallback: pt,
                            nodeCallback: mt,
                            pseudoElementsCallback: yt,
                            observeMutationsRoot: n
                        })
                    }))
            }
        },
        Lt = (function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
            n = t.transform,
            i = void 0 === n ? ge : n,
            a = t.symbol,
            r = void 0 !== a && a,
            o = t.mask,
            s = void 0 === o ? null : o,
            c = t.maskId,
            h = void 0 === c ? null : c,
            u = t.title,
            f = void 0 === u ? null : u,
            d = t.titleId,
            p = void 0 === d ? null : d,
            m = t.classes,
            v = void 0 === m ? [] : m,
            g = t.attributes,
            x = void 0 === g ? {}
             : g,
            y = t.styles,
            b = void 0 === y ? {}
             : y;
            if (e) {
                var M = e.prefix,
                z = e.iconName,
                w = e.icon;
                return zt(l({
                        type: "icon"
                    }, e), (function () {
                        return Mt(),
                        k.autoA11y && (f ? x["aria-labelledby"] = "".concat(k.replacementClass, "-title-").concat(p || ye()) : (x["aria-hidden"] = "true", x.focusable = "false")),
                        Te({
                            icons: {
                                main: ht(w),
                                mask: s ? ht(s.icon) : {
                                    found: !1,
                                    width: null,
                                    height: null,
                                    icon: {}
                                }
                            },
                            prefix: M,
                            iconName: z,
                            transform: l({}, ge, i),
                            symbol: r,
                            title: f,
                            maskId: h,
                            titleId: p,
                            extra: {
                                attributes: x,
                                styles: b,
                                classes: v
                            }
                        })
                    }))
            }
        }, St),
        At = function () {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
            t = e.autoReplaceSvgRoot,
            n = void 0 === t ? y : t;
            (Object.keys(j.styles).length > 0 || k.autoFetchSvg) && z && k.autoReplaceSvg && Lt.i2svg({
                node: n
            })
        },
        Tt = {};
        try {
            "undefined" != typeof window && (Tt = window)
        } catch (e) {}
        var Ct = (Tt.navigator || {}).userAgent,
        Et = void 0 === Ct ? "" : Ct,
        Ht = Tt,
        Nt = (~Et.indexOf("MSIE") || Et.indexOf("Trident/"), function () {
            try {
                return !0
            } catch (e) {
                return !1
            }
        }
            ()),
        Pt = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
        Vt = Pt.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);
        ["xs", "sm", "lg", "fw", "ul", "li", "border", "pull-left", "pull-right", "spin", "pulse", "rotate-90", "rotate-180", "rotate-270", "flip-horizontal", "flip-vertical", "stack", "stack-1x", "stack-2x", "inverse", "layers", "layers-text", "layers-counter"].concat(Pt.map((function (e) {
                    return e + "x"
                }))).concat(Vt.map((function (e) {
                    return "w-" + e
                })));
        var Rt = Ht || {};
        Rt.___FONT_AWESOME___ || (Rt.___FONT_AWESOME___ = {}),
        Rt.___FONT_AWESOME___.styles || (Rt.___FONT_AWESOME___.styles = {}),
        Rt.___FONT_AWESOME___.hooks || (Rt.___FONT_AWESOME___.hooks = {}),
        Rt.___FONT_AWESOME___.shims || (Rt.___FONT_AWESOME___.shims = []);
        var Ft = Rt.___FONT_AWESOME___,
        It = Object.assign || function (e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var i in n)
                    Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
            }
            return e
        };
        function Ot(e, t) {
            var n = Object.keys(t).reduce((function (e, n) {
                        var i = t[n];
                        return i.icon ? e[i.iconName] = i.icon : e[n] = i,
                        e
                    }), {});
            "function" == typeof Ft.hooks.addPack ? Ft.hooks.addPack(e, n) : Ft.styles[e] = It({}, Ft.styles[e] || {}, n),
            "fas" === e && Ot("fa", t)
        }
        var Dt = {
            faAddressBook: {
                prefix: "fas",
                iconName: "address-book",
                icon: [448, 512, [], "f2b9", "M436 160c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h320c26.5 0 48-21.5 48-48v-48h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20zm-228-32c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H118.4C106 384 96 375.4 96 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2z"]
            },
            faAddressCard: {
                prefix: "fas",
                iconName: "address-card",
                icon: [576, 512, [], "f2bb", "M528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-352 96c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H86.4C74 384 64 375.4 64 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2zM512 312c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-64c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-64c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16z"]
            },
            faAdjust: {
                prefix: "fas",
                iconName: "adjust",
                icon: [512, 512, [], "f042", "M8 256c0 136.966 111.033 248 248 248s248-111.034 248-248S392.966 8 256 8 8 119.033 8 256zm248 184V72c101.705 0 184 82.311 184 184 0 101.705-82.311 184-184 184z"]
            },
            faAlignCenter: {
                prefix: "fas",
                iconName: "align-center",
                icon: [448, 512, [], "f037", "M352 44v40c0 8.837-7.163 16-16 16H112c-8.837 0-16-7.163-16-16V44c0-8.837 7.163-16 16-16h224c8.837 0 16 7.163 16 16zM16 228h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 256h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm320-200H112c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16h224c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16z"]
            },
            faAlignJustify: {
                prefix: "fas",
                iconName: "align-justify",
                icon: [448, 512, [], "f039", "M0 84V44c0-8.837 7.163-16 16-16h416c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16zm16 144h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 256h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0-128h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"]
            },
            faAlignLeft: {
                prefix: "fas",
                iconName: "align-left",
                icon: [448, 512, [], "f036", "M288 44v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16V44c0-8.837 7.163-16 16-16h256c8.837 0 16 7.163 16 16zM0 172v40c0 8.837 7.163 16 16 16h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16zm16 312h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm256-200H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16z"]
            },
            faAlignRight: {
                prefix: "fas",
                iconName: "align-right",
                icon: [448, 512, [], "f038", "M160 84V44c0-8.837 7.163-16 16-16h256c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H176c-8.837 0-16-7.163-16-16zM16 228h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 256h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm160-128h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H176c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"]
            },
            faAllergies: {
                prefix: "fas",
                iconName: "allergies",
                icon: [448, 512, [], "f461", "M416 112c-17.6 0-32 14.4-32 32v72c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V64c0-17.6-14.4-32-32-32s-32 14.4-32 32v152c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V32c0-17.6-14.4-32-32-32s-32 14.4-32 32v184c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V64c0-17.6-14.4-32-32-32S96 46.4 96 64v241l-23.6-32.5c-13-17.9-38-21.8-55.9-8.8s-21.8 38-8.8 55.9l125.6 172.7c9 12.4 23.5 19.8 38.8 19.8h197.6c22.3 0 41.6-15.3 46.7-37l26.5-112.7c3.2-13.7 4.9-28.3 5.1-42.3V144c0-17.6-14.4-32-32-32zM176 416c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-96c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm64 128c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-96c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm64 32c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm32 64c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm32-128c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z"]
            },
            faAmbulance: {
                prefix: "fas",
                iconName: "ambulance",
                icon: [640, 512, [], "f0f9", "M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h16c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm144-248c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48zm176 248c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z"]
            },
            faAmericanSignLanguageInterpreting: {
                prefix: "fas",
                iconName: "american-sign-language-interpreting",
                icon: [640, 512, [], "f2a3", "M290.547 189.039c-20.295-10.149-44.147-11.199-64.739-3.89 42.606 0 71.208 20.475 85.578 50.576 8.576 17.899-5.148 38.071-23.617 38.071 18.429 0 32.211 20.136 23.617 38.071-14.725 30.846-46.123 50.854-80.298 50.854-.557 0-94.471-8.615-94.471-8.615l-66.406 33.347c-9.384 4.693-19.815.379-23.895-7.781L1.86 290.747c-4.167-8.615-1.111-18.897 6.946-23.621l58.072-33.069L108 159.861c6.39-57.245 34.731-109.767 79.743-146.726 11.391-9.448 28.341-7.781 37.51 3.613 9.446 11.394 7.78 28.067-3.612 37.516-12.503 10.559-23.618 22.509-32.509 35.57 21.672-14.729 46.679-24.732 74.186-28.067 14.725-1.945 28.063 8.336 29.73 23.065 1.945 14.728-8.336 28.067-23.062 29.734-16.116 1.945-31.12 7.503-44.178 15.284 26.114-5.713 58.712-3.138 88.079 11.115 13.336 6.669 18.893 22.509 12.224 35.848-6.389 13.06-22.504 18.617-35.564 12.226zm-27.229 69.472c-6.112-12.505-18.338-20.286-32.231-20.286a35.46 35.46 0 0 0-35.565 35.57c0 21.428 17.808 35.57 35.565 35.57 13.893 0 26.119-7.781 32.231-20.286 4.446-9.449 13.614-15.006 23.339-15.284-9.725-.277-18.893-5.835-23.339-15.284zm374.821-37.237c4.168 8.615 1.111 18.897-6.946 23.621l-58.071 33.069L532 352.16c-6.39 57.245-34.731 109.767-79.743 146.726-10.932 9.112-27.799 8.144-37.51-3.613-9.446-11.394-7.78-28.067 3.613-37.516 12.503-10.559 23.617-22.509 32.508-35.57-21.672 14.729-46.679 24.732-74.186 28.067-10.021 2.506-27.552-5.643-29.73-23.065-1.945-14.728 8.336-28.067 23.062-29.734 16.116-1.946 31.12-7.503 44.178-15.284-26.114 5.713-58.712 3.138-88.079-11.115-13.336-6.669-18.893-22.509-12.224-35.848 6.389-13.061 22.505-18.619 35.565-12.227 20.295 10.149 44.147 11.199 64.739 3.89-42.606 0-71.208-20.475-85.578-50.576-8.576-17.899 5.148-38.071 23.617-38.071-18.429 0-32.211-20.136-23.617-38.071 14.033-29.396 44.039-50.887 81.966-50.854l92.803 8.615 66.406-33.347c9.408-4.704 19.828-.354 23.894 7.781l44.455 88.926zm-229.227-18.618c-13.893 0-26.119 7.781-32.231 20.286-4.446 9.449-13.614 15.006-23.339 15.284 9.725.278 18.893 5.836 23.339 15.284 6.112 12.505 18.338 20.286 32.231 20.286a35.46 35.46 0 0 0 35.565-35.57c0-21.429-17.808-35.57-35.565-35.57z"]
            },
            faAnchor: {
                prefix: "fas",
                iconName: "anchor",
                icon: [576, 512, [], "f13d", "M12.971 352h32.394C67.172 454.735 181.944 512 288 512c106.229 0 220.853-57.38 242.635-160h32.394c10.691 0 16.045-12.926 8.485-20.485l-67.029-67.029c-4.686-4.686-12.284-4.686-16.971 0l-67.029 67.029c-7.56 7.56-2.206 20.485 8.485 20.485h35.146c-20.29 54.317-84.963 86.588-144.117 94.015V256h52c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-52v-5.47c37.281-13.178 63.995-48.725 64-90.518C384.005 43.772 341.605.738 289.37.01 235.723-.739 192 42.525 192 96c0 41.798 26.716 77.35 64 90.53V192h-52c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h52v190.015c-58.936-7.399-123.82-39.679-144.117-94.015h35.146c10.691 0 16.045-12.926 8.485-20.485l-67.029-67.029c-4.686-4.686-12.284-4.686-16.971 0L4.485 331.515C-3.074 339.074 2.28 352 12.971 352zM288 64c17.645 0 32 14.355 32 32s-14.355 32-32 32-32-14.355-32-32 14.355-32 32-32z"]
            },
            faAngleDoubleDown: {
                prefix: "fas",
                iconName: "angle-double-down",
                icon: [320, 512, [], "f103", "M143 256.3L7 120.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0L313 86.3c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.4 9.5-24.6 9.5-34 .1zm34 192l136-136c9.4-9.4 9.4-24.6 0-33.9l-22.6-22.6c-9.4-9.4-24.6-9.4-33.9 0L160 352.1l-96.4-96.4c-9.4-9.4-24.6-9.4-33.9 0L7 278.3c-9.4 9.4-9.4 24.6 0 33.9l136 136c9.4 9.5 24.6 9.5 34 .1z"]
            },
            faAngleDoubleLeft: {
                prefix: "fas",
                iconName: "angle-double-left",
                icon: [448, 512, [], "f100", "M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z"]
            },
            faAngleDoubleRight: {
                prefix: "fas",
                iconName: "angle-double-right",
                icon: [448, 512, [], "f101", "M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z"]
            },
            faAngleDoubleUp: {
                prefix: "fas",
                iconName: "angle-double-up",
                icon: [320, 512, [], "f102", "M177 255.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 351.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 425.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1zm-34-192L7 199.7c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l96.4-96.4 96.4 96.4c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9l-136-136c-9.2-9.4-24.4-9.4-33.8 0z"]
            },
            faAngleDown: {
                prefix: "fas",
                iconName: "angle-down",
                icon: [320, 512, [], "f107", "M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"]
            },
            faAngleLeft: {
                prefix: "fas",
                iconName: "angle-left",
                icon: [256, 512, [], "f104", "M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z"]
            },
            faAngleRight: {
                prefix: "fas",
                iconName: "angle-right",
                icon: [256, 512, [], "f105", "M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"]
            },
            faAngleUp: {
                prefix: "fas",
                iconName: "angle-up",
                icon: [320, 512, [], "f106", "M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z"]
            },
            faArchive: {
                prefix: "fas",
                iconName: "archive",
                icon: [512, 512, [], "f187", "M32 448c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V160H32v288zm160-212c0-6.6 5.4-12 12-12h104c6.6 0 12 5.4 12 12v8c0 6.6-5.4 12-12 12H204c-6.6 0-12-5.4-12-12v-8zM480 32H32C14.3 32 0 46.3 0 64v48c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16V64c0-17.7-14.3-32-32-32z"]
            },
            faArrowAltCircleDown: {
                prefix: "fas",
                iconName: "arrow-alt-circle-down",
                icon: [512, 512, [], "f358", "M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zM212 140v116h-70.9c-10.7 0-16.1 13-8.5 20.5l114.9 114.3c4.7 4.7 12.2 4.7 16.9 0l114.9-114.3c7.6-7.6 2.2-20.5-8.5-20.5H300V140c0-6.6-5.4-12-12-12h-64c-6.6 0-12 5.4-12 12z"]
            },
            faArrowAltCircleLeft: {
                prefix: "fas",
                iconName: "arrow-alt-circle-left",
                icon: [512, 512, [], "f359", "M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zm116-292H256v-70.9c0-10.7-13-16.1-20.5-8.5L121.2 247.5c-4.7 4.7-4.7 12.2 0 16.9l114.3 114.9c7.6 7.6 20.5 2.2 20.5-8.5V300h116c6.6 0 12-5.4 12-12v-64c0-6.6-5.4-12-12-12z"]
            },
            faArrowAltCircleRight: {
                prefix: "fas",
                iconName: "arrow-alt-circle-right",
                icon: [512, 512, [], "f35a", "M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zM140 300h116v70.9c0 10.7 13 16.1 20.5 8.5l114.3-114.9c4.7-4.7 4.7-12.2 0-16.9l-114.3-115c-7.6-7.6-20.5-2.2-20.5 8.5V212H140c-6.6 0-12 5.4-12 12v64c0 6.6 5.4 12 12 12z"]
            },
            faArrowAltCircleUp: {
                prefix: "fas",
                iconName: "arrow-alt-circle-up",
                icon: [512, 512, [], "f35b", "M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm292 116V256h70.9c10.7 0 16.1-13 8.5-20.5L264.5 121.2c-4.7-4.7-12.2-4.7-16.9 0l-115 114.3c-7.6 7.6-2.2 20.5 8.5 20.5H212v116c0 6.6 5.4 12 12 12h64c6.6 0 12-5.4 12-12z"]
            },
            faArrowCircleDown: {
                prefix: "fas",
                iconName: "arrow-circle-down",
                icon: [512, 512, [], "f0ab", "M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-143.6-28.9L288 302.6V120c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v182.6l-72.4-75.5c-9.3-9.7-24.8-9.9-34.3-.4l-10.9 11c-9.4 9.4-9.4 24.6 0 33.9L239 404.3c9.4 9.4 24.6 9.4 33.9 0l132.7-132.7c9.4-9.4 9.4-24.6 0-33.9l-10.9-11c-9.5-9.5-25-9.3-34.3.4z"]
            },
            faArrowCircleLeft: {
                prefix: "fas",
                iconName: "arrow-circle-left",
                icon: [512, 512, [], "f0a8", "M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zm28.9-143.6L209.4 288H392c13.3 0 24-10.7 24-24v-16c0-13.3-10.7-24-24-24H209.4l75.5-72.4c9.7-9.3 9.9-24.8.4-34.3l-11-10.9c-9.4-9.4-24.6-9.4-33.9 0L107.7 239c-9.4 9.4-9.4 24.6 0 33.9l132.7 132.7c9.4 9.4 24.6 9.4 33.9 0l11-10.9c9.5-9.5 9.3-25-.4-34.3z"]
            },
            faArrowCircleRight: {
                prefix: "fas",
                iconName: "arrow-circle-right",
                icon: [512, 512, [], "f0a9", "M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm-28.9 143.6l75.5 72.4H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h182.6l-75.5 72.4c-9.7 9.3-9.9 24.8-.4 34.3l11 10.9c9.4 9.4 24.6 9.4 33.9 0L404.3 273c9.4-9.4 9.4-24.6 0-33.9L271.6 106.3c-9.4-9.4-24.6-9.4-33.9 0l-11 10.9c-9.5 9.6-9.3 25.1.4 34.4z"]
            },
            faArrowCircleUp: {
                prefix: "fas",
                iconName: "arrow-circle-up",
                icon: [512, 512, [], "f0aa", "M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm143.6 28.9l72.4-75.5V392c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24V209.4l72.4 75.5c9.3 9.7 24.8 9.9 34.3.4l10.9-11c9.4-9.4 9.4-24.6 0-33.9L273 107.7c-9.4-9.4-24.6-9.4-33.9 0L106.3 240.4c-9.4 9.4-9.4 24.6 0 33.9l10.9 11c9.6 9.5 25.1 9.3 34.4-.4z"]
            },
            faArrowDown: {
                prefix: "fas",
                iconName: "arrow-down",
                icon: [448, 512, [], "f063", "M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z"]
            },
            faArrowLeft: {
                prefix: "fas",
                iconName: "arrow-left",
                icon: [448, 512, [], "f060", "M257.5 445.1l-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z"]
            },
            faArrowRight: {
                prefix: "fas",
                iconName: "arrow-right",
                icon: [448, 512, [], "f061", "M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z"]
            },
            faArrowUp: {
                prefix: "fas",
                iconName: "arrow-up",
                icon: [448, 512, [], "f062", "M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z"]
            },
            faArrowsAlt: {
                prefix: "fas",
                iconName: "arrows-alt",
                icon: [512, 512, [], "f0b2", "M352.201 425.775l-79.196 79.196c-9.373 9.373-24.568 9.373-33.941 0l-79.196-79.196c-15.119-15.119-4.411-40.971 16.971-40.97h51.162L228 284H127.196v51.162c0 21.382-25.851 32.09-40.971 16.971L7.029 272.937c-9.373-9.373-9.373-24.569 0-33.941L86.225 159.8c15.119-15.119 40.971-4.411 40.971 16.971V228H228V127.196h-51.23c-21.382 0-32.09-25.851-16.971-40.971l79.196-79.196c9.373-9.373 24.568-9.373 33.941 0l79.196 79.196c15.119 15.119 4.411 40.971-16.971 40.971h-51.162V228h100.804v-51.162c0-21.382 25.851-32.09 40.97-16.971l79.196 79.196c9.373 9.373 9.373 24.569 0 33.941L425.773 352.2c-15.119 15.119-40.971 4.411-40.97-16.971V284H284v100.804h51.23c21.382 0 32.09 25.851 16.971 40.971z"]
            },
            faArrowsAltH: {
                prefix: "fas",
                iconName: "arrows-alt-h",
                icon: [512, 512, [], "f337", "M377.941 169.941V216H134.059v-46.059c0-21.382-25.851-32.09-40.971-16.971L7.029 239.029c-9.373 9.373-9.373 24.568 0 33.941l86.059 86.059c15.119 15.119 40.971 4.411 40.971-16.971V296h243.882v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.568 0-33.941l-86.059-86.059c-15.119-15.12-40.971-4.412-40.971 16.97z"]
            },
            faArrowsAltV: {
                prefix: "fas",
                iconName: "arrows-alt-v",
                icon: [256, 512, [], "f338", "M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"]
            },
            faAssistiveListeningSystems: {
                prefix: "fas",
                iconName: "assistive-listening-systems",
                icon: [512, 512, [], "f2a2", "M216 260c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-44.112 35.888-80 80-80s80 35.888 80 80c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-13.234-10.767-24-24-24s-24 10.766-24 24zm24-176c-97.047 0-176 78.953-176 176 0 15.464 12.536 28 28 28s28-12.536 28-28c0-66.168 53.832-120 120-120s120 53.832 120 120c0 75.164-71.009 70.311-71.997 143.622L288 404c0 28.673-23.327 52-52 52-15.464 0-28 12.536-28 28s12.536 28 28 28c59.475 0 107.876-48.328 108-107.774.595-34.428 72-48.24 72-144.226 0-97.047-78.953-176-176-176zm-80 236c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zM32 448c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm480-187.993c0-1.518-.012-3.025-.045-4.531C510.076 140.525 436.157 38.47 327.994 1.511c-14.633-4.998-30.549 2.809-35.55 17.442-5 14.633 2.81 30.549 17.442 35.55 85.906 29.354 144.61 110.513 146.077 201.953l.003.188c.026 1.118.033 2.236.033 3.363 0 15.464 12.536 28 28 28s28.001-12.536 28.001-28zM152.971 439.029l-80-80L39.03 392.97l80 80 33.941-33.941z"]
            },
            faAsterisk: {
                prefix: "fas",
                iconName: "asterisk",
                icon: [512, 512, [], "f069", "M478.21 334.093L336 256l142.21-78.093c11.795-6.477 15.961-21.384 9.232-33.037l-19.48-33.741c-6.728-11.653-21.72-15.499-33.227-8.523L296 186.718l3.475-162.204C299.763 11.061 288.937 0 275.48 0h-38.96c-13.456 0-24.283 11.061-23.994 24.514L216 186.718 77.265 102.607c-11.506-6.976-26.499-3.13-33.227 8.523l-19.48 33.741c-6.728 11.653-2.562 26.56 9.233 33.037L176 256 33.79 334.093c-11.795 6.477-15.961 21.384-9.232 33.037l19.48 33.741c6.728 11.653 21.721 15.499 33.227 8.523L216 325.282l-3.475 162.204C212.237 500.939 223.064 512 236.52 512h38.961c13.456 0 24.283-11.061 23.995-24.514L296 325.282l138.735 84.111c11.506 6.976 26.499 3.13 33.227-8.523l19.48-33.741c6.728-11.653 2.563-26.559-9.232-33.036z"]
            },
            faAt: {
                prefix: "fas",
                iconName: "at",
                icon: [512, 512, [], "f1fa", "M256 8C118.941 8 8 118.919 8 256c0 137.059 110.919 248 248 248 48.154 0 95.342-14.14 135.408-40.223 12.005-7.815 14.625-24.288 5.552-35.372l-10.177-12.433c-7.671-9.371-21.179-11.667-31.373-5.129C325.92 429.757 291.314 440 256 440c-101.458 0-184-82.542-184-184S154.542 72 256 72c100.139 0 184 57.619 184 160 0 38.786-21.093 79.742-58.17 83.693-17.349-.454-16.91-12.857-13.476-30.024l23.433-121.11C394.653 149.75 383.308 136 368.225 136h-44.981a13.518 13.518 0 0 0-13.432 11.993l-.01.092c-14.697-17.901-40.448-21.775-59.971-21.775-74.58 0-137.831 62.234-137.831 151.46 0 65.303 36.785 105.87 96 105.87 26.984 0 57.369-15.637 74.991-38.333 9.522 34.104 40.613 34.103 70.71 34.103C462.609 379.41 504 307.798 504 232 504 95.653 394.023 8 256 8zm-21.68 304.43c-22.249 0-36.07-15.623-36.07-40.771 0-44.993 30.779-72.729 58.63-72.729 22.292 0 35.601 15.241 35.601 40.77 0 45.061-33.875 72.73-58.161 72.73z"]
            },
            faAudioDescription: {
                prefix: "fas",
                iconName: "audio-description",
                icon: [512, 512, [], "f29e", "M162.925 238.709l8.822 30.655h-25.606l9.041-30.652c1.277-4.421 2.651-9.994 3.872-15.245 1.22 5.251 2.594 10.823 3.871 15.242zm166.474-32.099h-14.523v98.781h14.523c29.776 0 46.175-17.678 46.175-49.776 0-32.239-17.49-49.005-46.175-49.005zM512 112v288c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48zM245.459 336.139l-57.097-168A12.001 12.001 0 0 0 177 160h-35.894a12.001 12.001 0 0 0-11.362 8.139l-57.097 168C70.003 343.922 75.789 352 84.009 352h29.133a12 12 0 0 0 11.535-8.693l8.574-29.906h51.367l8.793 29.977A12 12 0 0 0 204.926 352h29.172c8.22 0 14.006-8.078 11.361-15.861zm184.701-80.525c0-58.977-37.919-95.614-98.96-95.614h-57.366c-6.627 0-12 5.373-12 12v168c0 6.627 5.373 12 12 12H331.2c61.041 0 98.96-36.933 98.96-96.386z"]
            },
            faBackward: {
                prefix: "fas",
                iconName: "backward",
                icon: [512, 512, [], "f04a", "M11.5 280.6l192 160c20.6 17.2 52.5 2.8 52.5-24.6V96c0-27.4-31.9-41.8-52.5-24.6l-192 160c-15.3 12.8-15.3 36.4 0 49.2zm256 0l192 160c20.6 17.2 52.5 2.8 52.5-24.6V96c0-27.4-31.9-41.8-52.5-24.6l-192 160c-15.3 12.8-15.3 36.4 0 49.2z"]
            },
            faBalanceScale: {
                prefix: "fas",
                iconName: "balance-scale",
                icon: [640, 512, [], "f24e", "M256 336h-.02c0-16.18 1.34-8.73-85.05-181.51-17.65-35.29-68.19-35.36-85.87 0C-2.06 328.75.02 320.33.02 336H0c0 44.18 57.31 80 128 80s128-35.82 128-80zM128 176l72 144H56l72-144zm511.98 160c0-16.18 1.34-8.73-85.05-181.51-17.65-35.29-68.19-35.36-85.87 0-87.12 174.26-85.04 165.84-85.04 181.51H384c0 44.18 57.31 80 128 80s128-35.82 128-80h-.02zM440 320l72-144 72 144H440zm88 128H352V153.25c23.51-10.29 41.16-31.48 46.39-57.25H528c8.84 0 16-7.16 16-16V48c0-8.84-7.16-16-16-16H383.64C369.04 12.68 346.09 0 320 0s-49.04 12.68-63.64 32H112c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h129.61c5.23 25.76 22.87 46.96 46.39 57.25V448H112c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z"]
            },
            faBan: {
                prefix: "fas",
                iconName: "ban",
                icon: [512, 512, [], "f05e", "M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z"]
            },
            faBandAid: {
                prefix: "fas",
                iconName: "band-aid",
                icon: [640, 512, [], "f462", "M0 160v192c0 35.3 28.7 64 64 64h96V96H64c-35.3 0-64 28.7-64 64zm576-64h-96v320h96c35.3 0 64-28.7 64-64V160c0-35.3-28.7-64-64-64zM192 416h256V96H192v320zm176-232c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm0 96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-96-96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm0 96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24z"]
            },
            faBarcode: {
                prefix: "fas",
                iconName: "barcode",
                icon: [512, 512, [], "f02a", "M0 448V64h18v384H0zm26.857-.273V64H36v383.727h-9.143zm27.143 0V64h8.857v383.727H54zm44.857 0V64h8.857v383.727h-8.857zm36 0V64h17.714v383.727h-17.714zm44.857 0V64h8.857v383.727h-8.857zm18 0V64h8.857v383.727h-8.857zm18 0V64h8.857v383.727h-8.857zm35.715 0V64h18v383.727h-18zm44.857 0V64h18v383.727h-18zm35.999 0V64h18.001v383.727h-18.001zm36.001 0V64h18.001v383.727h-18.001zm26.857 0V64h18v383.727h-18zm45.143 0V64h26.857v383.727h-26.857zm35.714 0V64h9.143v383.727H476zm18 .273V64h18v384h-18z"]
            },
            faBars: {
                prefix: "fas",
                iconName: "bars",
                icon: [448, 512, [], "f0c9", "M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"]
            },
            faBaseballBall: {
                prefix: "fas",
                iconName: "baseball-ball",
                icon: [496, 512, [], "f433", "M368.5 363.9l28.8-13.9c11.1 22.9 26 43.2 44.1 60.9 34-42.5 54.5-96.3 54.5-154.9 0-58.5-20.4-112.2-54.2-154.6-17.8 17.3-32.6 37.1-43.6 59.5l-28.7-14.1c12.8-26 30-49 50.8-69C375.6 34.7 315 8 248 8 181.1 8 120.5 34.6 75.9 77.7c20.7 19.9 37.9 42.9 50.7 68.8l-28.7 14.1c-11-22.3-25.7-42.1-43.5-59.4C20.4 143.7 0 197.4 0 256c0 58.6 20.4 112.3 54.4 154.7 18.2-17.7 33.2-38 44.3-61l28.8 13.9c-12.9 26.7-30.3 50.3-51.5 70.7 44.5 43.1 105.1 69.7 172 69.7 66.8 0 127.3-26.5 171.9-69.5-21.1-20.4-38.5-43.9-51.4-70.6zm-228.3-32l-30.5-9.8c14.9-46.4 12.7-93.8-.6-134l30.4-10c15 45.6 18 99.9.7 153.8zm216.3-153.4l30.4 10c-13.2 40.1-15.5 87.5-.6 134l-30.5 9.8c-17.3-54-14.3-108.3.7-153.8z"]
            },
            faBasketballBall: {
                prefix: "fas",
                iconName: "basketball-ball",
                icon: [496, 512, [], "f434", "M212.3 10.3c-43.8 6.3-86.2 24.1-122.2 53.8l77.4 77.4c27.8-35.8 43.3-81.2 44.8-131.2zM248 222L405.9 64.1c-42.4-35-93.6-53.5-145.5-56.1-1.2 63.9-21.5 122.3-58.7 167.7L248 222zM56.1 98.1c-29.7 36-47.5 78.4-53.8 122.2 50-1.5 95.5-17 131.2-44.8L56.1 98.1zm272.2 204.2c45.3-37.1 103.7-57.4 167.7-58.7-2.6-51.9-21.1-103.1-56.1-145.5L282 256l46.3 46.3zM248 290L90.1 447.9c42.4 34.9 93.6 53.5 145.5 56.1 1.3-64 21.6-122.4 58.7-167.7L248 290zm191.9 123.9c29.7-36 47.5-78.4 53.8-122.2-50.1 1.6-95.5 17.1-131.2 44.8l77.4 77.4zM167.7 209.7C122.3 246.9 63.9 267.3 0 268.4c2.6 51.9 21.1 103.1 56.1 145.5L214 256l-46.3-46.3zm116 292c43.8-6.3 86.2-24.1 122.2-53.8l-77.4-77.4c-27.7 35.7-43.2 81.2-44.8 131.2z"]
            },
            faBath: {
                prefix: "fas",
                iconName: "bath",
                icon: [512, 512, [], "f2cd", "M488 256H80V112c0-17.645 14.355-32 32-32 11.351 0 21.332 5.945 27.015 14.88-16.492 25.207-14.687 59.576 6.838 83.035-4.176 4.713-4.021 11.916.491 16.428l11.314 11.314c4.686 4.686 12.284 4.686 16.971 0l95.03-95.029c4.686-4.686 4.686-12.284 0-16.971l-11.314-11.314c-4.512-4.512-11.715-4.666-16.428-.491-17.949-16.469-42.294-21.429-64.178-15.365C163.281 45.667 139.212 32 112 32c-44.112 0-80 35.888-80 80v144h-8c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h8v32c0 28.43 12.362 53.969 32 71.547V456c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-8h256v8c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-32.453c19.638-17.578 32-43.117 32-71.547v-32h8c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24z"]
            },
            faBatteryEmpty: {
                prefix: "fas",
                iconName: "battery-empty",
                icon: [640, 512, [], "f244", "M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48z"]
            },
            faBatteryFull: {
                prefix: "fas",
                iconName: "battery-full",
                icon: [640, 512, [], "f240", "M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-48 96H96v128h416V192z"]
            },
            faBatteryHalf: {
                prefix: "fas",
                iconName: "battery-half",
                icon: [640, 512, [], "f242", "M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-240 96H96v128h224V192z"]
            },
            faBatteryQuarter: {
                prefix: "fas",
                iconName: "battery-quarter",
                icon: [640, 512, [], "f243", "M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-336 96H96v128h128V192z"]
            },
            faBatteryThreeQuarters: {
                prefix: "fas",
                iconName: "battery-three-quarters",
                icon: [640, 512, [], "f241", "M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-144 96H96v128h320V192z"]
            },
            faBed: {
                prefix: "fas",
                iconName: "bed",
                icon: [576, 512, [], "f236", "M552 288c13.255 0 24 10.745 24 24v136h-96v-64H96v64H0V88c0-13.255 10.745-24 24-24h48c13.255 0 24 10.745 24 24v200h456zM192 96c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80zm384 128c0-53.019-42.981-96-96-96H312c-13.255 0-24 10.745-24 24v104h288v-32z"]
            },
            faBeer: {
                prefix: "fas",
                iconName: "beer",
                icon: [448, 512, [], "f0fc", "M368 96h-48V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56v400c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24v-42.11l80.606-35.977C429.396 365.063 448 336.388 448 304.86V176c0-44.112-35.888-80-80-80zm16 208.86a16.018 16.018 0 0 1-9.479 14.611L320 343.805V160h48c8.822 0 16 7.178 16 16v128.86zM208 384c-8.836 0-16-7.164-16-16V144c0-8.836 7.164-16 16-16s16 7.164 16 16v224c0 8.836-7.164 16-16 16zm-96 0c-8.836 0-16-7.164-16-16V144c0-8.836 7.164-16 16-16s16 7.164 16 16v224c0 8.836-7.164 16-16 16z"]
            },
            faBell: {
                prefix: "fas",
                iconName: "bell",
                icon: [448, 512, [], "f0f3", "M433.884 366.059C411.634 343.809 384 316.118 384 208c0-79.394-57.831-145.269-133.663-157.83A31.845 31.845 0 0 0 256 32c0-17.673-14.327-32-32-32s-32 14.327-32 32c0 6.75 2.095 13.008 5.663 18.17C121.831 62.731 64 128.606 64 208c0 108.118-27.643 135.809-49.893 158.059C-16.042 396.208 5.325 448 48.048 448H160c0 35.346 28.654 64 64 64s64-28.654 64-64h111.943c42.638 0 64.151-51.731 33.941-81.941zM224 472a8 8 0 0 1 0 16c-22.056 0-40-17.944-40-40h16c0 13.234 10.766 24 24 24z"]
            },
            faBellSlash: {
                prefix: "fas",
                iconName: "bell-slash",
                icon: [576, 512, [], "f1f6", "M78.107 366.059C47.958 396.208 69.325 448 112.048 448H224c0 35.346 28.654 64 64 64 35.346 0 64-28.654 64-64h32.685L127.848 221.379c-2.198 97.078-28.439 123.378-49.741 144.68zM264 448c0 13.234 10.766 24 24 24a8 8 0 0 1 0 16c-22.056 0-40-17.944-40-40h16zm305.896 43.733l-10.762 12.086c-8.915 10.012-24.333 10.967-34.437 2.133L8.256 54.393C-1.848 45.558-2.811 30.28 6.104 20.267L16.865 8.181C25.781-1.831 41.199-2.786 51.303 6.049l113.81 99.512c24.017-28.778 57.946-48.996 96.55-55.39A31.85 31.85 0 0 1 256 32c0-17.673 14.327-32 32-32s32 14.327 32 32c0 6.75-2.095 13.008-5.663 18.17C390.169 62.731 448 128.606 448 208c0 108.118 27.634 135.809 49.884 158.059 12.149 12.149 15.923 27.776 13.33 42.121l56.53 49.427c10.104 8.835 11.067 24.113 2.152 34.126z"]
            },
            faBicycle: {
                prefix: "fas",
                iconName: "bicycle",
                icon: [640, 512, [], "f206", "M512.509 192.001c-16.373-.064-32.03 2.955-46.436 8.495l-77.68-125.153A24 24 0 0 0 368.001 64h-64c-8.837 0-16 7.163-16 16v16c0 8.837 7.163 16 16 16h50.649l14.896 24H256.002v-16c0-8.837-7.163-16-16-16h-87.459c-13.441 0-24.777 10.999-24.536 24.437.232 13.044 10.876 23.563 23.995 23.563h48.726l-29.417 47.52c-13.433-4.83-27.904-7.483-42.992-7.52C58.094 191.83.412 249.012.002 319.236-.413 390.279 57.055 448 128.002 448c59.642 0 109.758-40.793 123.967-96h52.033a24 24 0 0 0 20.406-11.367L410.37 201.77l14.938 24.067c-25.455 23.448-41.385 57.081-41.307 94.437.145 68.833 57.899 127.051 126.729 127.719 70.606.685 128.181-55.803 129.255-125.996 1.086-70.941-56.526-129.72-127.476-129.996zM186.75 265.772c9.727 10.529 16.673 23.661 19.642 38.228h-43.306l23.664-38.228zM128.002 400c-44.112 0-80-35.888-80-80s35.888-80 80-80c5.869 0 11.586.653 17.099 1.859l-45.505 73.509C89.715 331.327 101.213 352 120.002 352h81.3c-12.37 28.225-40.562 48-73.3 48zm162.63-96h-35.624c-3.96-31.756-19.556-59.894-42.383-80.026L237.371 184h127.547l-74.286 120zm217.057 95.886c-41.036-2.165-74.049-35.692-75.627-76.755-.812-21.121 6.633-40.518 19.335-55.263l44.433 71.586c4.66 7.508 14.524 9.816 22.032 5.156l13.594-8.437c7.508-4.66 9.817-14.524 5.156-22.032l-44.468-71.643a79.901 79.901 0 0 1 19.858-2.497c44.112 0 80 35.888 80 80-.001 45.54-38.252 82.316-84.313 79.885z"]
            },
            faBinoculars: {
                prefix: "fas",
                iconName: "binoculars",
                icon: [512, 512, [], "f1e5", "M192 104H96V56c0-13.255 10.745-24 24-24h48c13.255 0 24 10.745 24 24v48zm224-48c0-13.255-10.745-24-24-24h-48c-13.255 0-24 10.745-24 24v48h96V56zM0 456c0 13.255 10.745 24 24 24h120c13.255 0 24-10.745 24-24v-16H0v16zm88-328c-13.255 0-24 10.745-24 24C64 256 0 272 0 416h168V312c0-13.255 10.745-24 24-24V128H88zm256 328c0 13.255 10.745 24 24 24h120c13.255 0 24-10.745 24-24v-16H344v16zM216 128v160h80V128h-80zm128 288h168c0-144-64-160-64-264 0-13.255-10.745-24-24-24H320v160c13.255 0 24 10.745 24 24v104z"]
            },
            faBirthdayCake: {
                prefix: "fas",
                iconName: "birthday-cake",
                icon: [448, 512, [], "f1fd", "M448 384c-28.02 0-31.26-32-74.5-32-43.43 0-46.825 32-74.75 32-27.695 0-31.454-32-74.75-32-42.842 0-47.218 32-74.5 32-28.148 0-31.202-32-74.75-32-43.547 0-46.653 32-74.75 32v-80c0-26.5 21.5-48 48-48h16V112h64v144h64V112h64v144h64V112h64v144h16c26.5 0 48 21.5 48 48v80zm0 128H0v-96c43.356 0 46.767-32 74.75-32 27.951 0 31.253 32 74.75 32 42.843 0 47.217-32 74.5-32 28.148 0 31.201 32 74.75 32 43.357 0 46.767-32 74.75-32 27.488 0 31.252 32 74.5 32v96zM96 96c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40z"]
            },
            faBlender: {
                prefix: "fas",
                iconName: "blender",
                icon: [512, 512, [], "f517", "M416 384H160c-35.35 0-64 28.65-64 64v32c0 17.67 14.33 32 32 32h320c17.67 0 32-14.33 32-32v-32c0-35.35-28.65-64-64-64zm-128 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm40-416h166.54L512 0H48C21.49 0 0 21.49 0 48v160c0 26.51 21.49 48 48 48h103.27l8.73 96h256l17.46-64H328c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h114.18l17.46-64H328c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h140.36l17.46-64H328c-4.42 0-8-3.58-8-8V72c0-4.42 3.58-8 8-8zM64 192V64h69.82l11.64 128H64z"]
            },
            faBlind: {
                prefix: "fas",
                iconName: "blind",
                icon: [384, 512, [], "f29d", "M380.15 510.837a8 8 0 0 1-10.989-2.687l-125.33-206.427a31.923 31.923 0 0 0 12.958-9.485l126.048 207.608a8 8 0 0 1-2.687 10.991zM142.803 314.338l-32.54 89.485 36.12 88.285c6.693 16.36 25.377 24.192 41.733 17.501 16.357-6.692 24.193-25.376 17.501-41.734l-62.814-153.537zM96 88c24.301 0 44-19.699 44-44S120.301 0 96 0 52 19.699 52 44s19.699 44 44 44zm154.837 169.128l-120-152c-4.733-5.995-11.75-9.108-18.837-9.112V96H80v.026c-7.146.003-14.217 3.161-18.944 9.24L0 183.766v95.694c0 13.455 11.011 24.791 24.464 24.536C37.505 303.748 48 293.1 48 280v-79.766l16-20.571v140.698L9.927 469.055c-6.04 16.609 2.528 34.969 19.138 41.009 16.602 6.039 34.968-2.524 41.009-19.138L136 309.638V202.441l-31.406-39.816a4 4 0 1 1 6.269-4.971l102.3 129.217c9.145 11.584 24.368 11.339 33.708 3.965 10.41-8.216 12.159-23.334 3.966-33.708z"]
            },
            faBold: {
                prefix: "fas",
                iconName: "bold",
                icon: [384, 512, [], "f032", "M304.793 243.891c33.639-18.537 53.657-54.16 53.657-95.693 0-48.236-26.25-87.626-68.626-104.179C265.138 34.01 240.849 32 209.661 32H24c-8.837 0-16 7.163-16 16v33.049c0 8.837 7.163 16 16 16h33.113v318.53H24c-8.837 0-16 7.163-16 16V464c0 8.837 7.163 16 16 16h195.69c24.203 0 44.834-1.289 66.866-7.584C337.52 457.193 376 410.647 376 350.014c0-52.168-26.573-91.684-71.207-106.123zM142.217 100.809h67.444c16.294 0 27.536 2.019 37.525 6.717 15.828 8.479 24.906 26.502 24.906 49.446 0 35.029-20.32 56.79-53.029 56.79h-76.846V100.809zm112.642 305.475c-10.14 4.056-22.677 4.907-31.409 4.907h-81.233V281.943h84.367c39.645 0 63.057 25.38 63.057 63.057.001 28.425-13.66 52.483-34.782 61.284z"]
            },
            faBolt: {
                prefix: "fas",
                iconName: "bolt",
                icon: [320, 512, [], "f0e7", "M295.973 160H180.572L215.19 30.184C219.25 14.956 207.756 0 192 0H56C43.971 0 33.8 8.905 32.211 20.828l-31.996 240C-1.704 275.217 9.504 288 24.004 288h118.701L96.646 482.466C93.05 497.649 104.659 512 119.992 512c8.35 0 16.376-4.374 20.778-11.978l175.973-303.997c9.244-15.967-2.288-36.025-20.77-36.025z"]
            },
            faBomb: {
                prefix: "fas",
                iconName: "bomb",
                icon: [512, 512, [], "f1e2", "M440.5 88.5l-52 52L415 167c9.4 9.4 9.4 24.6 0 33.9l-17.4 17.4c11.8 26.1 18.4 55.1 18.4 85.6 0 114.9-93.1 208-208 208S0 418.9 0 304 93.1 96 208 96c30.5 0 59.5 6.6 85.6 18.4L311 97c9.4-9.4 24.6-9.4 33.9 0l26.5 26.5 52-52 17.1 17zM500 60h-24c-6.6 0-12 5.4-12 12s5.4 12 12 12h24c6.6 0 12-5.4 12-12s-5.4-12-12-12zM440 0c-6.6 0-12 5.4-12 12v24c0 6.6 5.4 12 12 12s12-5.4 12-12V12c0-6.6-5.4-12-12-12zm33.9 55l17-17c4.7-4.7 4.7-12.3 0-17-4.7-4.7-12.3-4.7-17 0l-17 17c-4.7 4.7-4.7 12.3 0 17 4.8 4.7 12.4 4.7 17 0zm-67.8 0c4.7 4.7 12.3 4.7 17 0 4.7-4.7 4.7-12.3 0-17l-17-17c-4.7-4.7-12.3-4.7-17 0-4.7 4.7-4.7 12.3 0 17l17 17zm67.8 34c-4.7-4.7-12.3-4.7-17 0-4.7 4.7-4.7 12.3 0 17l17 17c4.7 4.7 12.3 4.7 17 0 4.7-4.7 4.7-12.3 0-17l-17-17zM112 272c0-35.3 28.7-64 64-64 8.8 0 16-7.2 16-16s-7.2-16-16-16c-52.9 0-96 43.1-96 96 0 8.8 7.2 16 16 16s16-7.2 16-16z"]
            },
            faBook: {
                prefix: "fas",
                iconName: "book",
                icon: [448, 512, [], "f02d", "M448 360V24c0-13.3-10.7-24-24-24H96C43 0 0 43 0 96v320c0 53 43 96 96 96h328c13.3 0 24-10.7 24-24v-16c0-7.5-3.5-14.3-8.9-18.7-4.2-15.4-4.2-59.3 0-74.7 5.4-4.3 8.9-11.1 8.9-18.6zM128 134c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm0 64c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm253.4 250H96c-17.7 0-32-14.3-32-32 0-17.6 14.4-32 32-32h285.4c-1.9 17.1-1.9 46.9 0 64z"]
            },
            faBookOpen: {
                prefix: "fas",
                iconName: "book-open",
                icon: [576, 512, [], "f518", "M542.2.1c-54.8 3.1-163.7 14.4-231 55.6-4.6 2.8-7.3 7.9-7.3 13.2v363.9c0 11.5 12.6 18.8 23.3 13.5 69.2-34.8 169.2-44.3 218.7-46.9 16.9-.9 30-14.4 30-30.7v-338C576 13 560.6-1 542.2.1zM264.7 55.6C197.5 14.5 88.6 3.2 33.8.1 15.4-1 0 13 0 30.7v337.8c0 16.2 13.1 29.8 30 30.7 49.5 2.6 149.6 12.1 218.8 47 10.6 5.4 23.2-1.9 23.2-13.5V68.6c0-5.3-2.6-10.1-7.3-13z"]
            },
            faBookmark: {
                prefix: "fas",
                iconName: "bookmark",
                icon: [384, 512, [], "f02e", "M0 512V48C0 21.49 21.49 0 48 0h288c26.51 0 48 21.49 48 48v464L192 400 0 512z"]
            },
            faBowlingBall: {
                prefix: "fas",
                iconName: "bowling-ball",
                icon: [496, 512, [], "f436", "M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM120 192c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm64-96c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm48 144c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z"]
            },
            faBox: {
                prefix: "fas",
                iconName: "box",
                icon: [512, 512, [], "f466", "M509.5 184.6L458.9 32.8C452.4 13.2 434.1 0 413.4 0H272v192h238.7c-.4-2.5-.4-5-1.2-7.4zM240 0H98.6c-20.7 0-39 13.2-45.5 32.8L2.5 184.6c-.8 2.4-.8 4.9-1.2 7.4H240V0zM0 224v240c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V224H0z"]
            },
            faBoxOpen: {
                prefix: "fas",
                iconName: "box-open",
                icon: [640, 512, [], "f49e", "M53.2 41L1.7 143.8c-4.6 9.2.3 20.2 10.1 23l197.9 56.5c7.1 2 14.7-1 18.5-7.3L320 64 69.8 32.1c-6.9-.8-13.5 2.7-16.6 8.9zm585.1 102.8L586.8 41c-3.1-6.2-9.8-9.8-16.7-8.9L320 64l91.7 152.1c3.8 6.3 11.4 9.3 18.5 7.3l197.9-56.5c9.9-2.9 14.7-13.9 10.2-23.1zM425.7 256c-16.9 0-32.8-9-41.4-23.4L320 126l-64.2 106.6c-8.7 14.5-24.6 23.5-41.5 23.5-4.5 0-9-.6-13.3-1.9L64 215v178c0 14.7 10 27.5 24.2 31l216.2 54.1c10.2 2.5 20.9 2.5 31 0L551.8 424c14.2-3.6 24.2-16.4 24.2-31V215l-137 39.1c-4.3 1.3-8.8 1.9-13.3 1.9z"]
            },
            faBoxes: {
                prefix: "fas",
                iconName: "boxes",
                icon: [576, 512, [], "f468", "M560 288h-80v96l-32-21.3-32 21.3v-96h-80c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16h224c8.8 0 16-7.2 16-16V304c0-8.8-7.2-16-16-16zm-384-64h224c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16h-80v96l-32-21.3L256 96V0h-80c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16zm64 64h-80v96l-32-21.3L96 384v-96H16c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16h224c8.8 0 16-7.2 16-16V304c0-8.8-7.2-16-16-16z"]
            },
            faBraille: {
                prefix: "fas",
                iconName: "braille",
                icon: [640, 512, [], "f2a1", "M128 256c0 35.346-28.654 64-64 64S0 291.346 0 256s28.654-64 64-64 64 28.654 64 64zM64 384c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352C28.654 32 0 60.654 0 96s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm160 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm224 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm160 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-320c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z"]
            },
            faBriefcase: {
                prefix: "fas",
                iconName: "briefcase",
                icon: [512, 512, [], "f0b1", "M320 288h192v144c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V288h192v20c0 6.627 5.373 12 12 12h104c6.627 0 12-5.373 12-12v-20zm192-112v80H0v-80c0-26.51 21.49-48 48-48h80V80c0-26.51 21.49-48 48-48h160c26.51 0 48 21.49 48 48v48h80c26.51 0 48 21.49 48 48zM320 96H192v32h128V96z"]
            },
            faBriefcaseMedical: {
                prefix: "fas",
                iconName: "briefcase-medical",
                icon: [512, 512, [], "f469", "M464 128h-80V80c0-26.5-21.5-48-48-48H176c-26.5 0-48 21.5-48 48v48H48c-26.5 0-48 21.5-48 48v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V176c0-26.5-21.5-48-48-48zM192 96h128v32H192V96zm160 248c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48z"]
            },
            faBroadcastTower: {
                prefix: "fas",
                iconName: "broadcast-tower",
                icon: [640, 512, [], "f519", "M150.94 192h33.73c11.01 0 18.61-10.83 14.86-21.18-4.93-13.58-7.55-27.98-7.55-42.82s2.62-29.24 7.55-42.82C203.29 74.83 195.68 64 184.67 64h-33.73c-7.01 0-13.46 4.49-15.41 11.23C130.64 92.21 128 109.88 128 128c0 18.12 2.64 35.79 7.54 52.76 1.94 6.74 8.39 11.24 15.4 11.24zM89.92 23.34C95.56 12.72 87.97 0 75.96 0H40.63c-6.27 0-12.14 3.59-14.74 9.31C9.4 45.54 0 85.65 0 128c0 24.75 3.12 68.33 26.69 118.86 2.62 5.63 8.42 9.14 14.61 9.14h34.84c12.02 0 19.61-12.74 13.95-23.37-49.78-93.32-16.71-178.15-.17-209.29zM614.06 9.29C611.46 3.58 605.6 0 599.33 0h-35.42c-11.98 0-19.66 12.66-14.02 23.25 18.27 34.29 48.42 119.42.28 209.23-5.72 10.68 1.8 23.52 13.91 23.52h35.23c6.27 0 12.13-3.58 14.73-9.29C630.57 210.48 640 170.36 640 128s-9.42-82.48-25.94-118.71zM489.06 64h-33.73c-11.01 0-18.61 10.83-14.86 21.18 4.93 13.58 7.55 27.98 7.55 42.82s-2.62 29.24-7.55 42.82c-3.76 10.35 3.85 21.18 14.86 21.18h33.73c7.02 0 13.46-4.49 15.41-11.24 4.9-16.97 7.53-34.64 7.53-52.76 0-18.12-2.64-35.79-7.54-52.76-1.94-6.75-8.39-11.24-15.4-11.24zm-116.3 100.12c7.05-10.29 11.2-22.71 11.2-36.12 0-35.35-28.63-64-63.96-64-35.32 0-63.96 28.65-63.96 64 0 13.41 4.15 25.83 11.2 36.12l-130.5 313.41c-3.4 8.15.46 17.52 8.61 20.92l29.51 12.31c8.15 3.4 17.52-.46 20.91-8.61L244.96 384h150.07l49.2 118.15c3.4 8.16 12.76 12.01 20.91 8.61l29.51-12.31c8.15-3.4 12-12.77 8.61-20.92l-130.5-313.41zM271.62 320L320 203.81 368.38 320h-96.76z"]
            },
            faBroom: {
                prefix: "fas",
                iconName: "broom",
                icon: [512, 512, [], "f51a", "M10.8 247.2C-.7 251.8-3.7 266.7 5 275.4l54.8 54.8 73.2-24.4-24.4 73.2 128 128c8.8 8.8 23.6 5.7 28.2-5.8l98.1-243.7-108.4-108.4-243.7 98.1zM507.3 27.3L484.7 4.7c-6.2-6.3-16.4-6.3-22.6 0L359.8 106.9l-40.4-40.4c-4.2-4.3-11.4-3-13.9 2.5l-27.2 58.6 106.1 106.1 58.6-27.2c5.4-2.5 6.7-9.7 2.5-13.9l-40.4-40.4L507.3 49.9c6.3-6.2 6.3-16.3 0-22.6z"]
            },
            faBug: {
                prefix: "fas",
                iconName: "bug",
                icon: [512, 512, [], "f188", "M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z"]
            },
            faBuilding: {
                prefix: "fas",
                iconName: "building",
                icon: [448, 512, [], "f1ad", "M436 480h-20V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v456H12c-6.627 0-12 5.373-12 12v20h448v-20c0-6.627-5.373-12-12-12zM128 76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76zm0 96c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40zm52 148h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12zm76 160h-64v-84c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v84zm64-172c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40z"]
            },
            faBullhorn: {
                prefix: "fas",
                iconName: "bullhorn",
                icon: [576, 512, [], "f0a1", "M576 224c0-20.896-13.36-38.666-32-45.258V64c0-35.346-28.654-64-64-64-64.985 56-142.031 128-272 128H48c-26.51 0-48 21.49-48 48v96c0 26.51 21.49 48 48 48h43.263c-18.742 64.65 2.479 116.379 18.814 167.44 1.702 5.32 5.203 9.893 9.922 12.88 20.78 13.155 68.355 15.657 93.773 5.151 16.046-6.633 19.96-27.423 7.522-39.537-18.508-18.026-30.136-36.91-19.795-60.858a12.278 12.278 0 0 0-1.045-11.673c-16.309-24.679-3.581-62.107 28.517-72.752C346.403 327.887 418.591 395.081 480 448c35.346 0 64-28.654 64-64V269.258c18.64-6.592 32-24.362 32-45.258zm-96 139.855c-54.609-44.979-125.033-92.94-224-104.982v-69.747c98.967-12.042 169.391-60.002 224-104.982v279.711z"]
            },
            faBullseye: {
                prefix: "fas",
                iconName: "bullseye",
                icon: [512, 512, [], "f140", "M256 72c101.689 0 184 82.295 184 184 0 101.689-82.295 184-184 184-101.689 0-184-82.295-184-184 0-101.689 82.295-184 184-184m0-64C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 184c35.29 0 64 28.71 64 64s-28.71 64-64 64-64-28.71-64-64 28.71-64 64-64m0-64c-70.692 0-128 57.308-128 128s57.308 128 128 128 128-57.308 128-128-57.308-128-128-128z"]
            },
            faBurn: {
                prefix: "fas",
                iconName: "burn",
                icon: [384, 512, [], "f46a", "M192 0C79.7 101.3 0 220.9 0 300.5 0 425 79 512 192 512s192-87 192-211.5c0-79.9-80.2-199.6-192-300.5zm0 448c-56.5 0-96-39-96-94.8 0-13.5 4.6-61.5 96-161.2 91.4 99.7 96 147.7 96 161.2 0 55.8-39.5 94.8-96 94.8z"]
            },
            faBus: {
                prefix: "fas",
                iconName: "bus",
                icon: [512, 512, [], "f207", "M512 152v80c0 13.255-10.745 24-24 24h-8v168c0 13.255-10.745 24-24 24h-8v40c0 13.255-10.745 24-24 24h-48c-13.255 0-24-10.745-24-24v-40H160v40c0 13.255-10.745 24-24 24H88c-13.255 0-24-10.745-24-24v-40h-8c-13.255 0-24-10.745-24-24V256h-8c-13.255 0-24-10.745-24-24v-80c0-13.255 10.745-24 24-24h8V80C32 35.817 132.288 0 256 0s224 35.817 224 80v48h8c13.255 0 24 10.745 24 24zM112 320c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm288 0c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm32-56V120c0-13.255-10.745-24-24-24H104c-13.255 0-24 10.745-24 24v144c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24z"]
            },
            faCalculator: {
                prefix: "fas",
                iconName: "calculator",
                icon: [448, 512, [], "f1ec", "M0 464V48C0 21.49 21.49 0 48 0h352c26.51 0 48 21.49 48 48v416c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48zm384-284V76c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v104c0 6.627 5.373 12 12 12h296c6.627 0 12-5.373 12-12zM128 308v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm256 128V268c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v168c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-256 0v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm128-128v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm0 128v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z"]
            },
            faCalendar: {
                prefix: "fas",
                iconName: "calendar",
                icon: [448, 512, [], "f133", "M12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm436-44v-36c0-26.5-21.5-48-48-48h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v36c0 6.6 5.4 12 12 12h424c6.6 0 12-5.4 12-12z"]
            },
            faCalendarAlt: {
                prefix: "fas",
                iconName: "calendar-alt",
                icon: [448, 512, [], "f073", "M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm116 204c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm128 128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm128 128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40z"]
            },
            faCalendarCheck: {
                prefix: "fas",
                iconName: "calendar-check",
                icon: [448, 512, [], "f274", "M436 160H12c-6.627 0-12-5.373-12-12v-36c0-26.51 21.49-48 48-48h48V12c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v52h128V12c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v52h48c26.51 0 48 21.49 48 48v36c0 6.627-5.373 12-12 12zM12 192h424c6.627 0 12 5.373 12 12v260c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V204c0-6.627 5.373-12 12-12zm333.296 95.947l-28.169-28.398c-4.667-4.705-12.265-4.736-16.97-.068L194.12 364.665l-45.98-46.352c-4.667-4.705-12.266-4.736-16.971-.068l-28.397 28.17c-4.705 4.667-4.736 12.265-.068 16.97l82.601 83.269c4.667 4.705 12.265 4.736 16.97.068l142.953-141.805c4.705-4.667 4.736-12.265.068-16.97z"]
            },
            faCalendarMinus: {
                prefix: "fas",
                iconName: "calendar-minus",
                icon: [448, 512, [], "f272", "M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm304 192c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H132c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h184z"]
            },
            faCalendarPlus: {
                prefix: "fas",
                iconName: "calendar-plus",
                icon: [448, 512, [], "f271", "M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm316 140c0-6.6-5.4-12-12-12h-60v-60c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v60h-60c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h60v60c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-60h60c6.6 0 12-5.4 12-12v-40z"]
            },
            faCalendarTimes: {
                prefix: "fas",
                iconName: "calendar-times",
                icon: [448, 512, [], "f273", "M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm257.3 160l48.1-48.1c4.7-4.7 4.7-12.3 0-17l-28.3-28.3c-4.7-4.7-12.3-4.7-17 0L224 306.7l-48.1-48.1c-4.7-4.7-12.3-4.7-17 0l-28.3 28.3c-4.7 4.7-4.7 12.3 0 17l48.1 48.1-48.1 48.1c-4.7 4.7-4.7 12.3 0 17l28.3 28.3c4.7 4.7 12.3 4.7 17 0l48.1-48.1 48.1 48.1c4.7 4.7 12.3 4.7 17 0l28.3-28.3c4.7-4.7 4.7-12.3 0-17L269.3 352z"]
            },
            faCamera: {
                prefix: "fas",
                iconName: "camera",
                icon: [512, 512, [], "f030", "M512 144v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V144c0-26.5 21.5-48 48-48h88l12.3-32.9c7-18.7 24.9-31.1 44.9-31.1h125.5c20 0 37.9 12.4 44.9 31.1L376 96h88c26.5 0 48 21.5 48 48zM376 288c0-66.2-53.8-120-120-120s-120 53.8-120 120 53.8 120 120 120 120-53.8 120-120zm-32 0c0 48.5-39.5 88-88 88s-88-39.5-88-88 39.5-88 88-88 88 39.5 88 88z"]
            },
            faCameraRetro: {
                prefix: "fas",
                iconName: "camera-retro",
                icon: [512, 512, [], "f083", "M48 32C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48H48zm0 32h106c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H38c-3.3 0-6-2.7-6-6V80c0-8.8 7.2-16 16-16zm426 96H38c-3.3 0-6-2.7-6-6v-36c0-3.3 2.7-6 6-6h138l30.2-45.3c1.1-1.7 3-2.7 5-2.7H464c8.8 0 16 7.2 16 16v74c0 3.3-2.7 6-6 6zM256 424c-66.2 0-120-53.8-120-120s53.8-120 120-120 120 53.8 120 120-53.8 120-120 120zm0-208c-48.5 0-88 39.5-88 88s39.5 88 88 88 88-39.5 88-88-39.5-88-88-88zm-48 104c-8.8 0-16-7.2-16-16 0-35.3 28.7-64 64-64 8.8 0 16 7.2 16 16s-7.2 16-16 16c-17.6 0-32 14.4-32 32 0 8.8-7.2 16-16 16z"]
            },
            faCapsules: {
                prefix: "fas",
                iconName: "capsules",
                icon: [576, 512, [], "f46b", "M555.3 300.1L424.2 112.8C401.9 81 366.4 64 330.4 64c-22.6 0-45.5 6.7-65.5 20.7-19.7 13.8-33.7 32.8-41.5 53.8C220.5 79.2 172 32 112 32 50.1 32 0 82.1 0 144v224c0 61.9 50.1 112 112 112s112-50.1 112-112V218.9c3.3 8.6 7.3 17.1 12.8 25L368 431.2c22.2 31.8 57.7 48.8 93.8 48.8 22.7 0 45.5-6.7 65.5-20.7 51.7-36.2 64.2-107.5 28-159.2zM160 256H64V144c0-26.5 21.5-48 48-48s48 21.5 48 48v112zm194.8 44.9l-65.6-93.7c-7.7-11-10.7-24.4-8.3-37.6 2.3-13.2 9.7-24.8 20.7-32.5 8.5-6 18.5-9.1 28.8-9.1 16.5 0 31.9 8 41.3 21.5l65.6 93.7-82.5 57.7z"]
            },
            faCar: {
                prefix: "fas",
                iconName: "car",
                icon: [512, 512, [], "f1b9", "M499.991 168h-54.815l-7.854-20.944c-9.192-24.513-25.425-45.351-46.942-60.263S343.651 64 317.472 64H194.528c-26.18 0-51.391 7.882-72.908 22.793-21.518 14.912-37.75 35.75-46.942 60.263L66.824 168H12.009c-8.191 0-13.974 8.024-11.384 15.795l8 24A12 12 0 0 0 20.009 216h28.815l-.052.14C29.222 227.093 16 247.997 16 272v48c0 16.225 6.049 31.029 16 42.309V424c0 13.255 10.745 24 24 24h48c13.255 0 24-10.745 24-24v-40h256v40c0 13.255 10.745 24 24 24h48c13.255 0 24-10.745 24-24v-61.691c9.951-11.281 16-26.085 16-42.309v-48c0-24.003-13.222-44.907-32.772-55.86l-.052-.14h28.815a12 12 0 0 0 11.384-8.205l8-24c2.59-7.771-3.193-15.795-11.384-15.795zm-365.388 1.528C143.918 144.689 168 128 194.528 128h122.944c26.528 0 50.61 16.689 59.925 41.528L391.824 208H120.176l14.427-38.472zM88 328c-17.673 0-32-14.327-32-32 0-17.673 14.327-32 32-32s48 30.327 48 48-30.327 16-48 16zm336 0c-17.673 0-48 1.673-48-16 0-17.673 30.327-48 48-48s32 14.327 32 32c0 17.673-14.327 32-32 32z"]
            },
            faCaretDown: {
                prefix: "fas",
                iconName: "caret-down",
                icon: [320, 512, [], "f0d7", "M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"]
            },
            faCaretLeft: {
                prefix: "fas",
                iconName: "caret-left",
                icon: [192, 512, [], "f0d9", "M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z"]
            },
            faCaretRight: {
                prefix: "fas",
                iconName: "caret-right",
                icon: [192, 512, [], "f0da", "M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z"]
            },
            faCaretSquareDown: {
                prefix: "fas",
                iconName: "caret-square-down",
                icon: [448, 512, [], "f150", "M448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zM92.5 220.5l123 123c4.7 4.7 12.3 4.7 17 0l123-123c7.6-7.6 2.2-20.5-8.5-20.5H101c-10.7 0-16.1 12.9-8.5 20.5z"]
            },
            faCaretSquareLeft: {
                prefix: "fas",
                iconName: "caret-square-left",
                icon: [448, 512, [], "f191", "M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zM259.515 124.485l-123.03 123.03c-4.686 4.686-4.686 12.284 0 16.971l123.029 123.029c7.56 7.56 20.485 2.206 20.485-8.485V132.971c.001-10.691-12.925-16.045-20.484-8.486z"]
            },
            faCaretSquareRight: {
                prefix: "fas",
                iconName: "caret-square-right",
                icon: [448, 512, [], "f152", "M48 32h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48zm140.485 355.515l123.029-123.029c4.686-4.686 4.686-12.284 0-16.971l-123.029-123.03c-7.56-7.56-20.485-2.206-20.485 8.485v246.059c0 10.691 12.926 16.045 20.485 8.486z"]
            },
            faCaretSquareUp: {
                prefix: "fas",
                iconName: "caret-square-up",
                icon: [448, 512, [], "f151", "M0 432V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48zm355.515-140.485l-123.03-123.03c-4.686-4.686-12.284-4.686-16.971 0L92.485 291.515c-7.56 7.56-2.206 20.485 8.485 20.485h246.059c10.691 0 16.045-12.926 8.486-20.485z"]
            },
            faCaretUp: {
                prefix: "fas",
                iconName: "caret-up",
                icon: [320, 512, [], "f0d8", "M288.662 352H31.338c-17.818 0-26.741-21.543-14.142-34.142l128.662-128.662c7.81-7.81 20.474-7.81 28.284 0l128.662 128.662c12.6 12.599 3.676 34.142-14.142 34.142z"]
            },
            faCartArrowDown: {
                prefix: "fas",
                iconName: "cart-arrow-down",
                icon: [576, 512, [], "f218", "M504.717 320H211.572l6.545 32h268.418c15.401 0 26.816 14.301 23.403 29.319l-5.517 24.276C523.112 414.668 536 433.828 536 456c0 31.202-25.519 56.444-56.824 55.994-29.823-.429-54.35-24.631-55.155-54.447-.44-16.287 6.085-31.049 16.803-41.548H231.176C241.553 426.165 248 440.326 248 456c0 31.813-26.528 57.431-58.67 55.938-28.54-1.325-51.751-24.385-53.251-52.917-1.158-22.034 10.436-41.455 28.051-51.586L93.883 64H24C10.745 64 0 53.255 0 40V24C0 10.745 10.745 0 24 0h102.529c11.401 0 21.228 8.021 23.513 19.19L159.208 64H551.99c15.401 0 26.816 14.301 23.403 29.319l-47.273 208C525.637 312.246 515.923 320 504.717 320zM403.029 192H360v-60c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v60h-43.029c-10.691 0-16.045 12.926-8.485 20.485l67.029 67.029c4.686 4.686 12.284 4.686 16.971 0l67.029-67.029c7.559-7.559 2.205-20.485-8.486-20.485z"]
            },
            faCartPlus: {
                prefix: "fas",
                iconName: "cart-plus",
                icon: [576, 512, [], "f217", "M504.717 320H211.572l6.545 32h268.418c15.401 0 26.816 14.301 23.403 29.319l-5.517 24.276C523.112 414.668 536 433.828 536 456c0 31.202-25.519 56.444-56.824 55.994-29.823-.429-54.35-24.631-55.155-54.447-.44-16.287 6.085-31.049 16.803-41.548H231.176C241.553 426.165 248 440.326 248 456c0 31.813-26.528 57.431-58.67 55.938-28.54-1.325-51.751-24.385-53.251-52.917-1.158-22.034 10.436-41.455 28.051-51.586L93.883 64H24C10.745 64 0 53.255 0 40V24C0 10.745 10.745 0 24 0h102.529c11.401 0 21.228 8.021 23.513 19.19L159.208 64H551.99c15.401 0 26.816 14.301 23.403 29.319l-47.273 208C525.637 312.246 515.923 320 504.717 320zM408 168h-48v-40c0-8.837-7.163-16-16-16h-16c-8.837 0-16 7.163-16 16v40h-48c-8.837 0-16 7.163-16 16v16c0 8.837 7.163 16 16 16h48v40c0 8.837 7.163 16 16 16h16c8.837 0 16-7.163 16-16v-40h48c8.837 0 16-7.163 16-16v-16c0-8.837-7.163-16-16-16z"]
            },
            faCertificate: {
                prefix: "fas",
                iconName: "certificate",
                icon: [512, 512, [], "f0a3", "M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z"]
            },
            faChalkboard: {
                prefix: "fas",
                iconName: "chalkboard",
                icon: [640, 512, [], "f51b", "M96 64h448v352h64V40c0-22.06-17.94-40-40-40H72C49.94 0 32 17.94 32 40v376h64V64zm528 384H480v-64H288v64H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z"]
            },
            faChalkboardTeacher: {
                prefix: "fas",
                iconName: "chalkboard-teacher",
                icon: [640, 512, [], "f51c", "M208 352c-2.39 0-4.78.35-7.06 1.09C187.98 357.3 174.35 360 160 360c-14.35 0-27.98-2.7-40.95-6.91-2.28-.74-4.66-1.09-7.05-1.09C49.94 352-.33 402.48 0 464.62.14 490.88 21.73 512 48 512h224c26.27 0 47.86-21.12 48-47.38.33-62.14-49.94-112.62-112-112.62zm-48-32c53.02 0 96-42.98 96-96s-42.98-96-96-96-96 42.98-96 96 42.98 96 96 96zM592 0H208c-26.47 0-48 22.25-48 49.59V96c23.42 0 45.1 6.78 64 17.8V64h352v288h-64v-64H384v64h-76.24c19.1 16.69 33.12 38.73 39.69 64H592c26.47 0 48-22.25 48-49.59V49.59C640 22.25 618.47 0 592 0z"]
            },
            faChartArea: {
                prefix: "fas",
                iconName: "chart-area",
                icon: [512, 512, [], "f1fe", "M500 384c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v308h436zM372.7 159.5L288 216l-85.3-113.7c-5.1-6.8-15.5-6.3-19.9 1L96 248v104h384l-89.9-187.8c-3.2-6.5-11.4-8.7-17.4-4.7z"]
            },
            faChartBar: {
                prefix: "fas",
                iconName: "chart-bar",
                icon: [512, 512, [], "f080", "M500 384c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v308h436zm-308-44v-72c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v72c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0V204c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v136c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 0V140c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v200c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0V108c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v232c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z"]
            },
            faChartLine: {
                prefix: "fas",
                iconName: "chart-line",
                icon: [512, 512, [], "f201", "M500 384c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v308h436zM456 96H344c-21.4 0-32.1 25.9-17 41l32.9 32.9-72 72.9-55.6-55.6c-4.7-4.7-12.2-4.7-16.9 0L96.4 305c-4.7 4.6-4.8 12.2-.2 16.9l28.5 29.4c4.7 4.8 12.4 4.9 17.1.1l82.1-82.1 55.5 55.5c4.7 4.7 12.3 4.7 17 0l109.2-109.2L439 249c15.1 15.1 41 4.4 41-17V120c0-13.3-10.7-24-24-24z"]
            },
            faChartPie: {
                prefix: "fas",
                iconName: "chart-pie",
                icon: [576, 512, [], "f200", "M288 12.3V240h227.7c6.9 0 12.3-5.8 12-12.7-6.4-122.4-104.5-220.6-227-227-6.9-.3-12.7 5.1-12.7 12zM552.7 288c6.9 0 12.3 5.8 12 12.7-2.8 53.2-23.2 105.6-61.2 147.8-4.6 5.1-12.6 5.4-17.5.5L325 288h227.7zM401 433c4.8 4.8 4.7 12.8-.4 17.3-42.6 38.4-99 61.7-160.8 61.7C107.6 511.9-.2 403.8 0 271.5.2 143.4 100.8 38.9 227.3 32.3c6.9-.4 12.7 5.1 12.7 12V272l161 161z"]
            },
            faCheck: {
                prefix: "fas",
                iconName: "check",
                icon: [512, 512, [], "f00c", "M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"]
            },
            faCheckCircle: {
                prefix: "fas",
                iconName: "check-circle",
                icon: [512, 512, [], "f058", "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"]
            },
            faCheckSquare: {
                prefix: "fas",
                iconName: "check-square",
                icon: [448, 512, [], "f14a", "M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zm-204.686-98.059l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.248-16.379-6.249-22.628 0L184 302.745l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.25 16.379 6.25 22.628.001z"]
            },
            faChess: {
                prefix: "fas",
                iconName: "chess",
                icon: [512, 512, [], "f439", "M199.821 217.633a6 6 0 0 1 6 6l-.001 20.766a6 6 0 0 1-6 6h-25.805c0 31.715-2.153 96.201 17.398 153.229H64.597C84.54 345.452 82.02 279.245 82.02 250.399H56.183a6 6 0 0 1-6-6l.002-20.766a6 6 0 0 1 6-6h143.636zM41.554 115.088l34.58 95.071h103.734l34.572-95.072c2.846-7.826-2.95-16.101-11.278-16.101H152v-30.22h21.57a6 6 0 0 0 6-6V40.383a6 6 0 0 0-6-6h-28.367V6a6 6 0 0 0-6-6H116.82a6 6 0 0 0-6 6v28.383H82.421a6 6 0 0 0-6 6v22.383a6 6 0 0 0 6 6H104v30.219H52.831c-8.328.001-14.124 8.276-11.277 16.103zM222.678 445.17v-28.067a6 6 0 0 0-6-6H39.322a6 6 0 0 0-6 6v28.067l-22.148 14.164a6 6 0 0 0-2.767 5.055V506a6 6 0 0 0 6 6h227.187a6 6 0 0 0 6-6v-41.612a6 6 0 0 0-2.767-5.055l-22.149-14.163zm90.578-144.225l24.88 16.963c.09 18.124-.167 63.904-11.905 114.522h147.526c-11.713-50.475-11.969-96.324-11.882-114.537l24.859-16.949a3.856 3.856 0 0 0 1.684-3.187v-69.901a3.857 3.857 0 0 0-3.857-3.857h-27.655a3.857 3.857 0 0 0-3.857 3.857v31.514h-22.737v-31.514a3.857 3.857 0 0 0-3.858-3.857h-52.918a3.857 3.857 0 0 0-3.857 3.857v31.514h-22.737v-31.514a3.857 3.857 0 0 0-3.857-3.857H315.43a3.857 3.857 0 0 0-3.857 3.857v69.901a3.855 3.855 0 0 0 1.683 3.188zm71.585 51.906c0-8.372 6.787-15.158 15.159-15.158s15.158 6.787 15.158 15.158v30.318h-30.317v-30.318zM504.62 470.059l-13.664-10.639v-15.552a3.857 3.857 0 0 0-3.857-3.857H312.915a3.857 3.857 0 0 0-3.857 3.857v15.552l-13.677 10.639a3.857 3.857 0 0 0-1.488 3.044v35.039a3.857 3.857 0 0 0 3.857 3.857h204.5a3.857 3.857 0 0 0 3.857-3.857v-35.04a3.859 3.859 0 0 0-1.487-3.043z"]
            },
            faChessBishop: {
                prefix: "fas",
                iconName: "chess-bishop",
                icon: [320, 512, [], "f43a", "M123.158 77.881C107.369 72.53 96 57.597 96 40c0-22.091 17.909-40 40-40h47.796c22.091 0 40 17.909 40 40 0 17.541-11.295 32.434-27.005 37.829 23.993 16.657 48.577 46.839 68.703 82.05L144.929 280.443a6 6 0 0 0 0 8.485l14.142 14.142a6 6 0 0 0 8.485 0L280.9 189.726c17.758 38.297 29.371 79.443 29.371 114.273 0 53.786-22.897 75.788-58.446 86.033V448H68.174v-57.97C32.631 379.784 9.739 357.781 9.739 304c0-78.029 58.281-187.766 113.419-226.119zM320 500v-24c0-6.627-5.373-12-12-12H12c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h296c6.627 0 12-5.373 12-12z"]
            },
            faChessBoard: {
                prefix: "fas",
                iconName: "chess-board",
                icon: [512, 512, [], "f43c", "M256 256v64h-64v-64h64zm0-256h-64v64h64V0zm0 256h64v-64h-64v64zM384 0h-64v64h64V0zm0 512h64v-64h-64v64zm128-64v-64h-64v64h64zm-384 64h64v-64h-64v64zm0-512H64v64h64V0zm384 192v-64h-64v64h64zm0 128v-64h-64v64h64zM0 512h64v-64H0v64zM0 64v64h64V64H0zm0 128v64h64v-64H0zm0 128v64h64v-64H0zm256 192h64v-64h-64v64zm-64-128v64h64v-64h-64zm64-192v-64h-64v64h64zM64 384v64h64v-64H64zm64-128H64v64h64v-64zm256 128h64v-64h-64v64zM512 0h-64v64h64V0zM384 256h64v-64h-64v64zm0-192v64h64V64h-64zm-64 320v64h64v-64h-64zm-192-64v64h64v-64h-64zm128 0v64h64v-64h-64zm-64-128h-64v64h64v-64zm-64-64H64v64h64v-64zm192 192h64v-64h-64v64zM192 128V64h-64v64h64zm128 0V64h-64v64h64zm0 64h64v-64h-64v64z"]
            },
            faChessKing: {
                prefix: "fas",
                iconName: "chess-king",
                icon: [448, 512, [], "f43f", "M416 476v24c0 6.627-5.373 12-12 12H44c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12zm-8.033-324H248v-48h50a6 6 0 0 0 6-6V62a6 6 0 0 0-6-6h-50V6a6 6 0 0 0-6-6h-36a6 6 0 0 0-6 6v50h-50a6 6 0 0 0-6 6v36a6 6 0 0 0 6 6h50v48H40.033c-27.574 0-46.879 27.244-37.738 53.259L87.582 448h272.836l85.287-242.741C454.846 179.244 435.541 152 407.967 152z"]
            },
            faChessKnight: {
                prefix: "fas",
                iconName: "chess-knight",
                icon: [384, 512, [], "f441", "M352 224v224H32v-46.557c0-30.302 17.12-58.003 44.223-71.554l57.243-28.622A48 48 0 0 0 160 258.334V208l-22.127 11.063a23.996 23.996 0 0 0-12.55 15.645l-11.835 47.338a12 12 0 0 1-7.185 8.231l-29.601 11.84a11.998 11.998 0 0 1-9.33-.176L7.126 275.167A12 12 0 0 1 0 264.201v-158.26c0-6.365 2.529-12.47 7.03-16.971L16 80 1.789 51.578A16.937 16.937 0 0 1 0 44c0-6.627 5.373-12 12-12h148c106.039 0 192 85.961 192 192zm20 240H12c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h360c6.627 0 12-5.373 12-12v-24c0-6.627-5.373-12-12-12zM52 128c-11.046 0-20 8.954-20 20s8.954 20 20 20 20-8.954 20-20-8.954-20-20-20z"]
            },
            faChessPawn: {
                prefix: "fas",
                iconName: "chess-pawn",
                icon: [320, 512, [], "f443", "M264 448H56s60-42.743 60-176H84c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h40.209C95.721 210.56 76 181.588 76 148c0-46.392 37.608-84 84-84s84 37.608 84 84c0 33.588-19.721 62.56-48.209 76H236c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12h-32c0 133.257 60 176 60 176zm28 16H28c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h264c6.627 0 12-5.373 12-12v-24c0-6.627-5.373-12-12-12z"]
            },
            faChessQueen: {
                prefix: "fas",
                iconName: "chess-queen",
                icon: [512, 512, [], "f445", "M436 512H76c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12zM255.579 0c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zm204.568 154.634c-5.768-3.045-12.916-.932-16.082 4.77-8.616 15.516-22.747 37.801-44.065 37.801-28.714 0-30.625-19.804-31.686-57.542-.183-6.492-5.501-11.664-11.995-11.664h-41.006c-5.175 0-9.754 3.328-11.388 8.238-8.89 26.709-26.073 40.992-47.925 40.992s-39.034-14.283-47.925-40.992c-1.634-4.91-6.213-8.238-11.388-8.238h-41.005c-6.495 0-11.813 5.174-11.995 11.667-1.052 37.642-2.934 57.539-31.688 57.539-20.691 0-33.817-20.224-44.425-38.025-3.266-5.48-10.258-7.431-15.899-4.453l-39.179 20.679a12 12 0 0 0-5.51 15.145L112 448h288l105.014-257.448a12 12 0 0 0-5.51-15.145l-39.357-20.773z"]
            },
            faChessRook: {
                prefix: "fas",
                iconName: "chess-rook",
                icon: [384, 512, [], "f447", "M81.241 215.027C80.957 258.92 77.411 348.076 48 448h287.982c-29.4-99.604-32.936-188.912-33.221-232.975l45.418-42.312a11.998 11.998 0 0 0 3.82-8.78V44c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v44h-48V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v44H96V44c0-6.627-5.373-12-12-12H44c-6.627 0-12 5.373-12 12v119.932c0 3.33 1.384 6.51 3.82 8.78l45.421 42.315zM160 256c0-17.673 14.327-32 32-32 17.673 0 32 14.327 32 32v64.004h-64V256zm224 220v24c0 6.627-5.373 12-12 12H12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12z"]
            },
            faChevronCircleDown: {
                prefix: "fas",
                iconName: "chevron-circle-down",
                icon: [512, 512, [], "f13a", "M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zM273 369.9l135.5-135.5c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L256 285.1 154.4 183.5c-9.4-9.4-24.6-9.4-33.9 0l-17 17c-9.4 9.4-9.4 24.6 0 33.9L239 369.9c9.4 9.4 24.6 9.4 34 0z"]
            },
            faChevronCircleLeft: {
                prefix: "fas",
                iconName: "chevron-circle-left",
                icon: [512, 512, [], "f137", "M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zM142.1 273l135.5 135.5c9.4 9.4 24.6 9.4 33.9 0l17-17c9.4-9.4 9.4-24.6 0-33.9L226.9 256l101.6-101.6c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L142.1 239c-9.4 9.4-9.4 24.6 0 34z"]
            },
            faChevronCircleRight: {
                prefix: "fas",
                iconName: "chevron-circle-right",
                icon: [512, 512, [], "f138", "M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm113.9 231L234.4 103.5c-9.4-9.4-24.6-9.4-33.9 0l-17 17c-9.4 9.4-9.4 24.6 0 33.9L285.1 256 183.5 357.6c-9.4 9.4-9.4 24.6 0 33.9l17 17c9.4 9.4 24.6 9.4 33.9 0L369.9 273c9.4-9.4 9.4-24.6 0-34z"]
            },
            faChevronCircleUp: {
                prefix: "fas",
                iconName: "chevron-circle-up",
                icon: [512, 512, [], "f139", "M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm231-113.9L103.5 277.6c-9.4 9.4-9.4 24.6 0 33.9l17 17c9.4 9.4 24.6 9.4 33.9 0L256 226.9l101.6 101.6c9.4 9.4 24.6 9.4 33.9 0l17-17c9.4-9.4 9.4-24.6 0-33.9L273 142.1c-9.4-9.4-24.6-9.4-34 0z"]
            },
            faChevronDown: {
                prefix: "fas",
                iconName: "chevron-down",
                icon: [448, 512, [], "f078", "M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"]
            },
            faChevronLeft: {
                prefix: "fas",
                iconName: "chevron-left",
                icon: [320, 512, [], "f053", "M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z"]
            },
            faChevronRight: {
                prefix: "fas",
                iconName: "chevron-right",
                icon: [320, 512, [], "f054", "M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"]
            },
            faChevronUp: {
                prefix: "fas",
                iconName: "chevron-up",
                icon: [448, 512, [], "f077", "M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z"]
            },
            faChild: {
                prefix: "fas",
                iconName: "child",
                icon: [384, 512, [], "f1ae", "M120 72c0-39.765 32.235-72 72-72s72 32.235 72 72c0 39.764-32.235 72-72 72s-72-32.236-72-72zm254.627 1.373c-12.496-12.497-32.758-12.497-45.254 0L242.745 160H141.254L54.627 73.373c-12.496-12.497-32.758-12.497-45.254 0-12.497 12.497-12.497 32.758 0 45.255L104 213.254V480c0 17.673 14.327 32 32 32h16c17.673 0 32-14.327 32-32V368h16v112c0 17.673 14.327 32 32 32h16c17.673 0 32-14.327 32-32V213.254l94.627-94.627c12.497-12.497 12.497-32.757 0-45.254z"]
            },
            faChurch: {
                prefix: "fas",
                iconName: "church",
                icon: [640, 512, [], "f51d", "M464.46 246.68L352 179.2V128h48c8.84 0 16-7.16 16-16V80c0-8.84-7.16-16-16-16h-48V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v48h-48c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h48v51.2l-112.46 67.48A31.997 31.997 0 0 0 160 274.12V512h96v-96c0-35.35 28.65-64 64-64s64 28.65 64 64v96h96V274.12c0-11.24-5.9-21.66-15.54-27.44zM0 395.96V496c0 8.84 7.16 16 16 16h112V320L19.39 366.54A32.024 32.024 0 0 0 0 395.96zm620.61-29.42L512 320v192h112c8.84 0 16-7.16 16-16V395.96c0-12.8-7.63-24.37-19.39-29.42z"]
            },
            faCircle: {
                prefix: "fas",
                iconName: "circle",
                icon: [512, 512, [], "f111", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z"]
            },
            faCircleNotch: {
                prefix: "fas",
                iconName: "circle-notch",
                icon: [512, 512, [], "f1ce", "M288 39.056v16.659c0 10.804 7.281 20.159 17.686 23.066C383.204 100.434 440 171.518 440 256c0 101.689-82.295 184-184 184-101.689 0-184-82.295-184-184 0-84.47 56.786-155.564 134.312-177.219C216.719 75.874 224 66.517 224 55.712V39.064c0-15.709-14.834-27.153-30.046-23.234C86.603 43.482 7.394 141.206 8.003 257.332c.72 137.052 111.477 246.956 248.531 246.667C393.255 503.711 504 392.788 504 256c0-115.633-79.14-212.779-186.211-240.236C302.678 11.889 288 23.456 288 39.056z"]
            },
            faClipboard: {
                prefix: "fas",
                iconName: "clipboard",
                icon: [384, 512, [], "f328", "M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 0 0-6-6H102a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h180a6 6 0 0 0 6-6z"]
            },
            faClipboardCheck: {
                prefix: "fas",
                iconName: "clipboard-check",
                icon: [384, 512, [], "f46c", "M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm121.2 231.8l-143 141.8c-4.7 4.7-12.3 4.6-17-.1l-82.6-83.3c-4.7-4.7-4.6-12.3.1-17L99.1 285c4.7-4.7 12.3-4.6 17 .1l46 46.4 106-105.2c4.7-4.7 12.3-4.6 17 .1l28.2 28.4c4.7 4.8 4.6 12.3-.1 17z"]
            },
            faClipboardList: {
                prefix: "fas",
                iconName: "clipboard-list",
                icon: [384, 512, [], "f46d", "M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM96 424c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm0-96c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm0-96c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm96-192c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm128 368c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16z"]
            },
            faClock: {
                prefix: "fas",
                iconName: "clock",
                icon: [512, 512, [], "f017", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm57.1 350.1L224.9 294c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12v137.7l63.5 46.2c5.4 3.9 6.5 11.4 2.6 16.8l-28.2 38.8c-3.9 5.3-11.4 6.5-16.8 2.6z"]
            },
            faClone: {
                prefix: "fas",
                iconName: "clone",
                icon: [512, 512, [], "f24d", "M464 0c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48H176c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h288M176 416c-44.112 0-80-35.888-80-80V128H48c-26.51 0-48 21.49-48 48v288c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48v-48H176z"]
            },
            faClosedCaptioning: {
                prefix: "fas",
                iconName: "closed-captioning",
                icon: [512, 512, [], "f20a", "M464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM218.1 287.7c2.8-2.5 7.1-2.1 9.2.9l19.5 27.7c1.7 2.4 1.5 5.6-.5 7.7-53.6 56.8-172.8 32.1-172.8-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7l-17.5 30.5c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2.1 48 51.1 70.5 92.3 32.6zm190.4 0c2.8-2.5 7.1-2.1 9.2.9l19.5 27.7c1.7 2.4 1.5 5.6-.5 7.7-53.5 56.9-172.7 32.1-172.7-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7L420 222.2c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2 0 48 51 70.5 92.2 32.6z"]
            },
            faCloud: {
                prefix: "fas",
                iconName: "cloud",
                icon: [640, 512, [], "f0c2", "M537.6 226.6c4.1-10.7 6.4-22.4 6.4-34.6 0-53-43-96-96-96-19.7 0-38.1 6-53.3 16.2C367 64.2 315.3 32 256 32c-88.4 0-160 71.6-160 160 0 2.7.1 5.4.2 8.1C40.2 219.8 0 273.2 0 336c0 79.5 64.5 144 144 144h368c70.7 0 128-57.3 128-128 0-61.9-44-113.6-102.4-125.4z"]
            },
            faCloudDownloadAlt: {
                prefix: "fas",
                iconName: "cloud-download-alt",
                icon: [640, 512, [], "f381", "M537.6 226.6c4.1-10.7 6.4-22.4 6.4-34.6 0-53-43-96-96-96-19.7 0-38.1 6-53.3 16.2C367 64.2 315.3 32 256 32c-88.4 0-160 71.6-160 160 0 2.7.1 5.4.2 8.1C40.2 219.8 0 273.2 0 336c0 79.5 64.5 144 144 144h368c70.7 0 128-57.3 128-128 0-61.9-44-113.6-102.4-125.4zm-132.9 88.7L299.3 420.7c-6.2 6.2-16.4 6.2-22.6 0L171.3 315.3c-10.1-10.1-2.9-27.3 11.3-27.3H248V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v112h65.4c14.2 0 21.4 17.2 11.3 27.3z"]
            },
            faCloudUploadAlt: {
                prefix: "fas",
                iconName: "cloud-upload-alt",
                icon: [640, 512, [], "f382", "M537.6 226.6c4.1-10.7 6.4-22.4 6.4-34.6 0-53-43-96-96-96-19.7 0-38.1 6-53.3 16.2C367 64.2 315.3 32 256 32c-88.4 0-160 71.6-160 160 0 2.7.1 5.4.2 8.1C40.2 219.8 0 273.2 0 336c0 79.5 64.5 144 144 144h368c70.7 0 128-57.3 128-128 0-61.9-44-113.6-102.4-125.4zM393.4 288H328v112c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V288h-65.4c-14.3 0-21.4-17.2-11.3-27.3l105.4-105.4c6.2-6.2 16.4-6.2 22.6 0l105.4 105.4c10.1 10.1 2.9 27.3-11.3 27.3z"]
            },
            faCode: {
                prefix: "fas",
                iconName: "code",
                icon: [640, 512, [], "f121", "M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"]
            },
            faCodeBranch: {
                prefix: "fas",
                iconName: "code-branch",
                icon: [384, 512, [], "f126", "M384 144c0-44.2-35.8-80-80-80s-80 35.8-80 80c0 36.4 24.3 67.1 57.5 76.8-.6 16.1-4.2 28.5-11 36.9-15.4 19.2-49.3 22.4-85.2 25.7-28.2 2.6-57.4 5.4-81.3 16.9v-144c32.5-10.2 56-40.5 56-76.3 0-44.2-35.8-80-80-80S0 35.8 0 80c0 35.8 23.5 66.1 56 76.3v199.3C23.5 365.9 0 396.2 0 432c0 44.2 35.8 80 80 80s80-35.8 80-80c0-34-21.2-63.1-51.2-74.6 3.1-5.2 7.8-9.8 14.9-13.4 16.2-8.2 40.4-10.4 66.1-12.8 42.2-3.9 90-8.4 118.2-43.4 14-17.4 21.1-39.8 21.6-67.9 31.6-10.8 54.4-40.7 54.4-75.9zM80 64c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16zm0 384c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm224-320c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16z"]
            },
            faCoffee: {
                prefix: "fas",
                iconName: "coffee",
                icon: [640, 512, [], "f0f4", "M192 384h192c53 0 96-43 96-96h32c70.6 0 128-57.4 128-128S582.6 32 512 32H120c-13.3 0-24 10.7-24 24v232c0 53 43 96 96 96zM512 96c35.3 0 64 28.7 64 64s-28.7 64-64 64h-32V96h32zm47.7 384H48.3c-47.6 0-61-64-36-64h583.3c25 0 11.8 64-35.9 64z"]
            },
            faCog: {
                prefix: "fas",
                iconName: "cog",
                icon: [512, 512, [], "f013", "M444.788 291.1l42.616 24.599c4.867 2.809 7.126 8.618 5.459 13.985-11.07 35.642-29.97 67.842-54.689 94.586a12.016 12.016 0 0 1-14.832 2.254l-42.584-24.595a191.577 191.577 0 0 1-60.759 35.13v49.182a12.01 12.01 0 0 1-9.377 11.718c-34.956 7.85-72.499 8.256-109.219.007-5.49-1.233-9.403-6.096-9.403-11.723v-49.184a191.555 191.555 0 0 1-60.759-35.13l-42.584 24.595a12.016 12.016 0 0 1-14.832-2.254c-24.718-26.744-43.619-58.944-54.689-94.586-1.667-5.366.592-11.175 5.459-13.985L67.212 291.1a193.48 193.48 0 0 1 0-70.199l-42.616-24.599c-4.867-2.809-7.126-8.618-5.459-13.985 11.07-35.642 29.97-67.842 54.689-94.586a12.016 12.016 0 0 1 14.832-2.254l42.584 24.595a191.577 191.577 0 0 1 60.759-35.13V25.759a12.01 12.01 0 0 1 9.377-11.718c34.956-7.85 72.499-8.256 109.219-.007 5.49 1.233 9.403 6.096 9.403 11.723v49.184a191.555 191.555 0 0 1 60.759 35.13l42.584-24.595a12.016 12.016 0 0 1 14.832 2.254c24.718 26.744 43.619 58.944 54.689 94.586 1.667 5.366-.592 11.175-5.459 13.985L444.788 220.9a193.485 193.485 0 0 1 0 70.2zM336 256c0-44.112-35.888-80-80-80s-80 35.888-80 80 35.888 80 80 80 80-35.888 80-80z"]
            },
            faCogs: {
                prefix: "fas",
                iconName: "cogs",
                icon: [640, 512, [], "f085", "M512.1 191l-8.2 14.3c-3 5.3-9.4 7.5-15.1 5.4-11.8-4.4-22.6-10.7-32.1-18.6-4.6-3.8-5.8-10.5-2.8-15.7l8.2-14.3c-6.9-8-12.3-17.3-15.9-27.4h-16.5c-6 0-11.2-4.3-12.2-10.3-2-12-2.1-24.6 0-37.1 1-6 6.2-10.4 12.2-10.4h16.5c3.6-10.1 9-19.4 15.9-27.4l-8.2-14.3c-3-5.2-1.9-11.9 2.8-15.7 9.5-7.9 20.4-14.2 32.1-18.6 5.7-2.1 12.1.1 15.1 5.4l8.2 14.3c10.5-1.9 21.2-1.9 31.7 0L552 6.3c3-5.3 9.4-7.5 15.1-5.4 11.8 4.4 22.6 10.7 32.1 18.6 4.6 3.8 5.8 10.5 2.8 15.7l-8.2 14.3c6.9 8 12.3 17.3 15.9 27.4h16.5c6 0 11.2 4.3 12.2 10.3 2 12 2.1 24.6 0 37.1-1 6-6.2 10.4-12.2 10.4h-16.5c-3.6 10.1-9 19.4-15.9 27.4l8.2 14.3c3 5.2 1.9 11.9-2.8 15.7-9.5 7.9-20.4 14.2-32.1 18.6-5.7 2.1-12.1-.1-15.1-5.4l-8.2-14.3c-10.4 1.9-21.2 1.9-31.7 0zm-10.5-58.8c38.5 29.6 82.4-14.3 52.8-52.8-38.5-29.7-82.4 14.3-52.8 52.8zM386.3 286.1l33.7 16.8c10.1 5.8 14.5 18.1 10.5 29.1-8.9 24.2-26.4 46.4-42.6 65.8-7.4 8.9-20.2 11.1-30.3 5.3l-29.1-16.8c-16 13.7-34.6 24.6-54.9 31.7v33.6c0 11.6-8.3 21.6-19.7 23.6-24.6 4.2-50.4 4.4-75.9 0-11.5-2-20-11.9-20-23.6V418c-20.3-7.2-38.9-18-54.9-31.7L74 403c-10 5.8-22.9 3.6-30.3-5.3-16.2-19.4-33.3-41.6-42.2-65.7-4-10.9.4-23.2 10.5-29.1l33.3-16.8c-3.9-20.9-3.9-42.4 0-63.4L12 205.8c-10.1-5.8-14.6-18.1-10.5-29 8.9-24.2 26-46.4 42.2-65.8 7.4-8.9 20.2-11.1 30.3-5.3l29.1 16.8c16-13.7 34.6-24.6 54.9-31.7V57.1c0-11.5 8.2-21.5 19.6-23.5 24.6-4.2 50.5-4.4 76-.1 11.5 2 20 11.9 20 23.6v33.6c20.3 7.2 38.9 18 54.9 31.7l29.1-16.8c10-5.8 22.9-3.6 30.3 5.3 16.2 19.4 33.2 41.6 42.1 65.8 4 10.9.1 23.2-10 29.1l-33.7 16.8c3.9 21 3.9 42.5 0 63.5zm-117.6 21.1c59.2-77-28.7-164.9-105.7-105.7-59.2 77 28.7 164.9 105.7 105.7zm243.4 182.7l-8.2 14.3c-3 5.3-9.4 7.5-15.1 5.4-11.8-4.4-22.6-10.7-32.1-18.6-4.6-3.8-5.8-10.5-2.8-15.7l8.2-14.3c-6.9-8-12.3-17.3-15.9-27.4h-16.5c-6 0-11.2-4.3-12.2-10.3-2-12-2.1-24.6 0-37.1 1-6 6.2-10.4 12.2-10.4h16.5c3.6-10.1 9-19.4 15.9-27.4l-8.2-14.3c-3-5.2-1.9-11.9 2.8-15.7 9.5-7.9 20.4-14.2 32.1-18.6 5.7-2.1 12.1.1 15.1 5.4l8.2 14.3c10.5-1.9 21.2-1.9 31.7 0l8.2-14.3c3-5.3 9.4-7.5 15.1-5.4 11.8 4.4 22.6 10.7 32.1 18.6 4.6 3.8 5.8 10.5 2.8 15.7l-8.2 14.3c6.9 8 12.3 17.3 15.9 27.4h16.5c6 0 11.2 4.3 12.2 10.3 2 12 2.1 24.6 0 37.1-1 6-6.2 10.4-12.2 10.4h-16.5c-3.6 10.1-9 19.4-15.9 27.4l8.2 14.3c3 5.2 1.9 11.9-2.8 15.7-9.5 7.9-20.4 14.2-32.1 18.6-5.7 2.1-12.1-.1-15.1-5.4l-8.2-14.3c-10.4 1.9-21.2 1.9-31.7 0zM501.6 431c38.5 29.6 82.4-14.3 52.8-52.8-38.5-29.6-82.4 14.3-52.8 52.8z"]
            },
            faCoins: {
                prefix: "fas",
                iconName: "coins",
                icon: [512, 512, [], "f51e", "M0 405.3V448c0 35.3 86 64 192 64s192-28.7 192-64v-42.7C342.7 434.4 267.2 448 192 448S41.3 434.4 0 405.3zM320 128c106 0 192-28.7 192-64S426 0 320 0 128 28.7 128 64s86 64 192 64zM0 300.4V352c0 35.3 86 64 192 64s192-28.7 192-64v-51.6c-41.3 34-116.9 51.6-192 51.6S41.3 334.4 0 300.4zm416 11c57.3-11.1 96-31.7 96-55.4v-42.7c-23.2 16.4-57.3 27.6-96 34.5v63.6zM192 160C86 160 0 195.8 0 240s86 80 192 80 192-35.8 192-80-86-80-192-80zm219.3 56.3c60-10.8 100.7-32 100.7-56.3v-42.7c-35.5 25.1-96.5 38.6-160.7 41.8 29.5 14.3 51.2 33.5 60 57.2z"]
            },
            faColumns: {
                prefix: "fas",
                iconName: "columns",
                icon: [512, 512, [], "f0db", "M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64V160h160v256zm224 0H288V160h160v256z"]
            },
            faComment: {
                prefix: "fas",
                iconName: "comment",
                icon: [512, 512, [], "f075", "M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7S4.8 480 8 480c66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32z"]
            },
            faCommentAlt: {
                prefix: "fas",
                iconName: "comment-alt",
                icon: [512, 512, [], "f27a", "M448 0H64C28.7 0 0 28.7 0 64v288c0 35.3 28.7 64 64 64h96v84c0 9.8 11.2 15.5 19.1 9.7L304 416h144c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z"]
            },
            faCommentDots: {
                prefix: "fas",
                iconName: "comment-dots",
                icon: [512, 512, [], "f4ad", "M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7S4.8 480 8 480c66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32zM128 272c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z"]
            },
            faCommentSlash: {
                prefix: "fas",
                iconName: "comment-slash",
                icon: [640, 512, [], "f4b3", "M64 240c0 49.6 21.4 95 57 130.7-12.6 50.3-54.3 95.2-54.8 95.8-2.2 2.3-2.8 5.7-1.5 8.7 1.3 2.9 4.1 4.8 7.3 4.8 66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 27.4 0 53.7-3.6 78.4-10L72.9 186.4c-5.6 17.1-8.9 35-8.9 53.6zm569.8 218.1l-114.4-88.4C554.6 334.1 576 289.2 576 240c0-114.9-114.6-208-256-208-65.1 0-124.2 20.1-169.4 52.7L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3z"]
            },
            faComments: {
                prefix: "fas",
                iconName: "comments",
                icon: [576, 512, [], "f086", "M416 192c0-88.4-93.1-160-208-160S0 103.6 0 192c0 34.3 14.1 65.9 38 92-13.4 30.2-35.5 54.2-35.8 54.5-2.2 2.3-2.8 5.7-1.5 8.7S4.8 352 8 352c36.6 0 66.9-12.3 88.7-25 32.2 15.7 70.3 25 111.3 25 114.9 0 208-71.6 208-160zm122 220c23.9-26 38-57.7 38-92 0-66.9-53.5-124.2-129.3-148.1.9 6.6 1.3 13.3 1.3 20.1 0 105.9-107.7 192-240 192-10.8 0-21.3-.8-31.7-1.9C207.8 439.6 281.8 480 368 480c41 0 79.1-9.2 111.3-25 21.8 12.7 52.1 25 88.7 25 3.2 0 6.1-1.9 7.3-4.8 1.3-2.9.7-6.3-1.5-8.7-.3-.3-22.4-24.2-35.8-54.5z"]
            },
            faCompactDisc: {
                prefix: "fas",
                iconName: "compact-disc",
                icon: [496, 512, [], "f51f", "M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM88 256H56c0-105.9 86.1-192 192-192v32c-88.2 0-160 71.8-160 160zm160 96c-53 0-96-43-96-96s43-96 96-96 96 43 96 96-43 96-96 96zm0-128c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z"]
            },
            faCompass: {
                prefix: "fas",
                iconName: "compass",
                icon: [512, 512, [], "f14e", "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM307.446 120.844l-102.642 97.779a23.997 23.997 0 0 0-6.772 11.729l-33.359 137.779c-5.68 23.459 22.777 39.318 39.88 23.024l102.64-97.779a23.99 23.99 0 0 0 6.772-11.729l33.359-137.779c5.618-23.198-22.591-39.493-39.878-23.024zM256 224c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z"]
            },
            faCompress: {
                prefix: "fas",
                iconName: "compress",
                icon: [448, 512, [], "f066", "M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z"]
            },
            faCopy: {
                prefix: "fas",
                iconName: "copy",
                icon: [448, 512, [], "f0c5", "M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z"]
            },
            faCopyright: {
                prefix: "fas",
                iconName: "copyright",
                icon: [512, 512, [], "f1f9", "M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm117.134 346.753c-1.592 1.867-39.776 45.731-109.851 45.731-84.692 0-144.484-63.26-144.484-145.567 0-81.303 62.004-143.401 143.762-143.401 66.957 0 101.965 37.315 103.422 38.904a12 12 0 0 1 1.238 14.623l-22.38 34.655c-4.049 6.267-12.774 7.351-18.234 2.295-.233-.214-26.529-23.88-61.88-23.88-46.116 0-73.916 33.575-73.916 76.082 0 39.602 25.514 79.692 74.277 79.692 38.697 0 65.28-28.338 65.544-28.625 5.132-5.565 14.059-5.033 18.508 1.053l24.547 33.572a12.001 12.001 0 0 1-.553 14.866z"]
            },
            faCouch: {
                prefix: "fas",
                iconName: "couch",
                icon: [640, 512, [], "f4b8", "M160 224v64h320v-64c0-35.3 28.7-64 64-64h32c0-53-43-96-96-96H160c-53 0-96 43-96 96h32c35.3 0 64 28.7 64 64zm416-32h-32c-17.7 0-32 14.3-32 32v96H128v-96c0-17.7-14.3-32-32-32H64c-35.3 0-64 28.7-64 64 0 23.6 13 44 32 55.1V432c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-16h384v16c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16V311.1c19-11.1 32-31.5 32-55.1 0-35.3-28.7-64-64-64z"]
            },
            faCreditCard: {
                prefix: "fas",
                iconName: "credit-card",
                icon: [576, 512, [], "f09d", "M0 432c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V256H0v176zm192-68c0-6.6 5.4-12 12-12h136c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H204c-6.6 0-12-5.4-12-12v-40zm-128 0c0-6.6 5.4-12 12-12h72c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zM576 80v48H0V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48z"]
            },
            faCrop: {
                prefix: "fas",
                iconName: "crop",
                icon: [512, 512, [], "f125", "M488 352h-40V109.3l57-57c9.4-9.4 9.4-24.6 0-33.9L493.7 7c-9.4-9.4-24.6-9.4-33.9 0l-57 57H160V24c0-13.3-10.7-24-24-24H88C74.7 0 64 10.7 64 24v40H24C10.7 64 0 74.7 0 88v48c0 13.3 10.7 24 24 24h40v264c0 13.3 10.7 24 24 24h264v40c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24v-40h40c13.3 0 24-10.7 24-24v-48c0-13.3-10.7-24-24-24zM306.7 160L160 306.7V160h146.7zM205.3 352L352 205.3V352H205.3z"]
            },
            faCrosshairs: {
                prefix: "fas",
                iconName: "crosshairs",
                icon: [512, 512, [], "f05b", "M500 224h-30.364C455.724 130.325 381.675 56.276 288 42.364V12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v30.364C130.325 56.276 56.276 130.325 42.364 224H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h30.364C56.276 381.675 130.325 455.724 224 469.636V500c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-30.364C381.675 455.724 455.724 381.675 469.636 288H500c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zM288 404.634V364c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40.634C165.826 392.232 119.783 346.243 107.366 288H148c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40.634C119.768 165.826 165.757 119.783 224 107.366V148c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40.634C346.174 119.768 392.217 165.757 404.634 224H364c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40.634C392.232 346.174 346.243 392.217 288 404.634zM288 256c0 17.673-14.327 32-32 32s-32-14.327-32-32c0-17.673 14.327-32 32-32s32 14.327 32 32z"]
            },
            faCrow: {
                prefix: "fas",
                iconName: "crow",
                icon: [640, 512, [], "f520", "M544 32h-16.36C513.04 12.68 490.09 0 464 0c-44.18 0-80 35.82-80 80v20.98L12.09 393.57A30.216 30.216 0 0 0 0 417.74c0 22.46 23.64 37.07 43.73 27.03L165.27 384h96.49l44.41 120.1c2.27 6.23 9.15 9.44 15.38 7.17l22.55-8.21c6.23-2.27 9.44-9.15 7.17-15.38L312.94 384H352c1.91 0 3.76-.23 5.66-.29l44.51 120.38c2.27 6.23 9.15 9.44 15.38 7.17l22.55-8.21c6.23-2.27 9.44-9.15 7.17-15.38l-41.24-111.53C485.74 352.8 544 279.26 544 192v-80l96-16c0-35.35-42.98-64-96-64zm-80 72c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z"]
            },
            faCrown: {
                prefix: "fas",
                iconName: "crown",
                icon: [640, 512, [], "f521", "M528 448H112c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h416c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm64-320c-26.5 0-48 21.5-48 48 0 7.1 1.6 13.7 4.4 19.8L476 239.2c-15.4 9.2-35.3 4-44.2-11.6L350.3 85C361 76.2 368 63 368 48c0-26.5-21.5-48-48-48s-48 21.5-48 48c0 15 7 28.2 17.7 37l-81.5 142.6c-8.9 15.6-28.9 20.8-44.2 11.6l-72.3-43.4c2.7-6 4.4-12.7 4.4-19.8 0-26.5-21.5-48-48-48S0 149.5 0 176s21.5 48 48 48c2.6 0 5.2-.4 7.7-.8L128 416h384l72.3-192.8c2.5.4 5.1.8 7.7.8 26.5 0 48-21.5 48-48s-21.5-48-48-48z"]
            },
            faCube: {
                prefix: "fas",
                iconName: "cube",
                icon: [512, 512, [], "f1b2", "M239.1 6.3l-208 78c-18.7 7-31.1 25-31.1 45v225.1c0 18.2 10.3 34.8 26.5 42.9l208 104c13.5 6.8 29.4 6.8 42.9 0l208-104c16.3-8.1 26.5-24.8 26.5-42.9V129.3c0-20-12.4-37.9-31.1-44.9l-208-78C262 2.2 250 2.2 239.1 6.3zM256 68.4l192 72v1.1l-192 78-192-78v-1.1l192-72zm32 356V275.5l160-65v133.9l-160 80z"]
            },
            faCubes: {
                prefix: "fas",
                iconName: "cubes",
                icon: [512, 512, [], "f1b3", "M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z"]
            },
            faCut: {
                prefix: "fas",
                iconName: "cut",
                icon: [448, 512, [], "f0c4", "M444.485 422.426c4.689 4.689 4.684 12.287 0 16.971-32.804 32.804-85.991 32.804-118.795 0L210.176 323.883l-24.859 24.859C189.63 359.657 192 371.552 192 384c0 53.019-42.981 96-96 96S0 437.019 0 384s42.981-96 96-96c4.536 0 8.995.322 13.363.93l32.93-32.93-32.93-32.93c-4.368.608-8.827.93-13.363.93-53.019 0-96-42.981-96-96s42.981-96 96-96 96 42.981 96 96c0 12.448-2.37 24.343-6.682 35.258l24.859 24.859L325.69 72.603c32.804-32.804 85.991-32.804 118.795 0 4.684 4.684 4.689 12.282 0 16.971L278.059 256l166.426 166.426zM96 96c-17.645 0-32 14.355-32 32s14.355 32 32 32 32-14.355 32-32-14.355-32-32-32m0 256c-17.645 0-32 14.355-32 32s14.355 32 32 32 32-14.355 32-32-14.355-32-32-32m112-108c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12z"]
            },
            faDatabase: {
                prefix: "fas",
                iconName: "database",
                icon: [448, 512, [], "f1c0", "M448 73.143v45.714C448 159.143 347.667 192 224 192S0 159.143 0 118.857V73.143C0 32.857 100.333 0 224 0s224 32.857 224 73.143zM448 176v102.857C448 319.143 347.667 352 224 352S0 319.143 0 278.857V176c48.125 33.143 136.208 48.572 224 48.572S399.874 209.143 448 176zm0 160v102.857C448 479.143 347.667 512 224 512S0 479.143 0 438.857V336c48.125 33.143 136.208 48.572 224 48.572S399.874 369.143 448 336z"]
            },
            faDeaf: {
                prefix: "fas",
                iconName: "deaf",
                icon: [512, 512, [], "f2a4", "M216 260c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-44.112 35.888-80 80-80s80 35.888 80 80c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-13.234-10.767-24-24-24s-24 10.766-24 24zm24-176c-97.047 0-176 78.953-176 176 0 15.464 12.536 28 28 28s28-12.536 28-28c0-66.168 53.832-120 120-120s120 53.832 120 120c0 75.164-71.009 70.311-71.997 143.622L288 404c0 28.673-23.327 52-52 52-15.464 0-28 12.536-28 28s12.536 28 28 28c59.475 0 107.876-48.328 108-107.774.595-34.428 72-48.24 72-144.226 0-97.047-78.953-176-176-176zm268.485-52.201L480.2 3.515c-4.687-4.686-12.284-4.686-16.971 0L376.2 90.544c-4.686 4.686-4.686 12.284 0 16.971l28.285 28.285c4.686 4.686 12.284 4.686 16.97 0l87.03-87.029c4.687-4.688 4.687-12.286 0-16.972zM168.97 314.745c-4.686-4.686-12.284-4.686-16.97 0L3.515 463.23c-4.686 4.686-4.686 12.284 0 16.971L31.8 508.485c4.687 4.686 12.284 4.686 16.971 0L197.256 360c4.686-4.686 4.686-12.284 0-16.971l-28.286-28.284z"]
            },
            faDesktop: {
                prefix: "fas",
                iconName: "desktop",
                icon: [576, 512, [], "f108", "M528 0H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h192l-16 48h-72c-13.3 0-24 10.7-24 24s10.7 24 24 24h272c13.3 0 24-10.7 24-24s-10.7-24-24-24h-72l-16-48h192c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-16 352H64V64h448v288z"]
            },
            faDiagnoses: {
                prefix: "fas",
                iconName: "diagnoses",
                icon: [640, 512, [], "f470", "M496 256c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zm-176-80c48.5 0 88-39.5 88-88S368.5 0 320 0s-88 39.5-88 88 39.5 88 88 88zM59.8 364c10.2 15.3 29.3 17.8 42.9 9.8 16.2-9.6 56.2-31.7 105.3-48.6V416h224v-90.7c49.1 16.8 89.1 39 105.3 48.6 13.6 8 32.7 5.3 42.9-9.8l17.8-26.7c8.8-13.2 7.6-34.6-10-45.1-11.9-7.1-29.7-17-51.1-27.4-28.1 46.1-99.4 17.8-87.7-35.1C409.3 217.2 365.1 208 320 208c-57 0-112.9 14.5-160 32.2-.2 40.2-47.6 63.3-79.2 36-11.2 6-21.3 11.6-28.7 16-17.6 10.5-18.8 31.8-10 45.1L59.8 364zM368 344c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-96-96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-160 8c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zm512 192H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z"]
            },
            faDice: {
                prefix: "fas",
                iconName: "dice",
                icon: [640, 512, [], "f522", "M592 192H473.26c12.69 29.59 7.12 65.2-17 89.32L320 417.58V464c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48V240c0-26.51-21.49-48-48-48zM480 376c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm-46.37-186.7L258.7 14.37c-19.16-19.16-50.23-19.16-69.39 0L14.37 189.3c-19.16 19.16-19.16 50.23 0 69.39L189.3 433.63c19.16 19.16 50.23 19.16 69.39 0L433.63 258.7c19.16-19.17 19.16-50.24 0-69.4zM96 248c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm128 128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm0-128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm0-128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm128 128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z"]
            },
            faDiceFive: {
                prefix: "fas",
                iconName: "dice-five",
                icon: [448, 512, [], "f523", "M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z"]
            },
            faDiceFour: {
                prefix: "fas",
                iconName: "dice-four",
                icon: [448, 512, [], "f524", "M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm192 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z"]
            },
            faDiceOne: {
                prefix: "fas",
                iconName: "dice-one",
                icon: [448, 512, [], "f525", "M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM224 288c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z"]
            },
            faDiceSix: {
                prefix: "fas",
                iconName: "dice-six",
                icon: [448, 512, [], "f526", "M384 0H64C28.65 0 0 28.65 0 64v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V64c0-35.35-28.65-64-64-64zM128 352c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm192 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z"]
            },
            faDiceThree: {
                prefix: "fas",
                iconName: "dice-three",
                icon: [448, 512, [], "f527", "M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z"]
            },
            faDiceTwo: {
                prefix: "fas",
                iconName: "dice-two",
                icon: [448, 512, [], "f528", "M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm192 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z"]
            },
            faDivide: {
                prefix: "fas",
                iconName: "divide",
                icon: [448, 512, [], "f529", "M224 352c-35.35 0-64 28.65-64 64s28.65 64 64 64 64-28.65 64-64-28.65-64-64-64zm0-192c35.35 0 64-28.65 64-64s-28.65-64-64-64-64 28.65-64 64 28.65 64 64 64zm192 48H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"]
            },
            faDna: {
                prefix: "fas",
                iconName: "dna",
                icon: [448, 512, [], "f471", "M.1 494.1c-1.1 9.5 6.3 17.8 15.9 17.8l32.3.1c8.1 0 14.9-5.9 16-13.9.7-4.9 1.8-11.1 3.4-18.1H380c1.6 6.9 2.9 13.2 3.5 18.1 1.1 8 7.9 14 16 13.9l32.3-.1c9.6 0 17.1-8.3 15.9-17.8-4.6-37.9-25.6-129-118.9-207.7-17.6 12.4-37.1 24.2-58.5 35.4 6.2 4.6 11.4 9.4 17 14.2H159.7c21.3-18.1 47-35.6 78.7-51.4C410.5 199.1 442.1 65.8 447.9 17.9 449 8.4 441.6.1 432 .1L399.6 0c-8.1 0-14.9 5.9-16 13.9-.7 4.9-1.8 11.1-3.4 18.1H67.8c-1.6-7-2.7-13.1-3.4-18.1-1.1-8-7.9-14-16-13.9L16.1.1C6.5.1-1 8.4.1 17.9 5.3 60.8 31.4 171.8 160 256 31.5 340.2 5.3 451.2.1 494.1zM224 219.6c-25.1-13.7-46.4-28.4-64.3-43.6h128.5c-17.8 15.2-39.1 30-64.2 43.6zM355.1 96c-5.8 10.4-12.8 21.1-21 32H114c-8.3-10.9-15.3-21.6-21-32h262.1zM92.9 416c5.8-10.4 12.8-21.1 21-32h219.4c8.3 10.9 15.4 21.6 21.2 32H92.9z"]
            },
            faDollarSign: {
                prefix: "fas",
                iconName: "dollar-sign",
                icon: [288, 512, [], "f155", "M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z"]
            },
            faDolly: {
                prefix: "fas",
                iconName: "dolly",
                icon: [576, 512, [], "f472", "M294.2 277.7c18 5 34.7 13.4 49.5 24.7l161.5-53.8c8.4-2.8 12.9-11.9 10.1-20.2L454.9 47.2c-2.8-8.4-11.9-12.9-20.2-10.1l-61.1 20.4 33.1 99.4L346 177l-33.1-99.4-61.6 20.5c-8.4 2.8-12.9 11.9-10.1 20.2l53 159.4zm281 48.7L565 296c-2.8-8.4-11.9-12.9-20.2-10.1l-213.5 71.2c-17.2-22-43.6-36.4-73.5-37L158.4 21.9C154 8.8 141.8 0 128 0H16C7.2 0 0 7.2 0 16v32c0 8.8 7.2 16 16 16h88.9l92.2 276.7c-26.1 20.4-41.7 53.6-36 90.5 6.1 39.4 37.9 72.3 77.3 79.2 60.2 10.7 112.3-34.8 113.4-92.6l213.3-71.2c8.3-2.8 12.9-11.8 10.1-20.2zM256 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z"]
            },
            faDollyFlatbed: {
                prefix: "fas",
                iconName: "dolly-flatbed",
                icon: [640, 512, [], "f474", "M208 320h384c8.8 0 16-7.2 16-16V48c0-8.8-7.2-16-16-16H448v128l-48-32-48 32V32H208c-8.8 0-16 7.2-16 16v256c0 8.8 7.2 16 16 16zm416 64H128V16c0-8.8-7.2-16-16-16H16C7.2 0 0 7.2 0 16v32c0 8.8 7.2 16 16 16h48v368c0 8.8 7.2 16 16 16h82.9c-1.8 5-2.9 10.4-2.9 16 0 26.5 21.5 48 48 48s48-21.5 48-48c0-5.6-1.2-11-2.9-16H451c-1.8 5-2.9 10.4-2.9 16 0 26.5 21.5 48 48 48s48-21.5 48-48c0-5.6-1.2-11-2.9-16H624c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z"]
            },
            faDonate: {
                prefix: "fas",
                iconName: "donate",
                icon: [512, 512, [], "f4b9", "M256 416c114.9 0 208-93.1 208-208S370.9 0 256 0 48 93.1 48 208s93.1 208 208 208zM233.8 97.4V80.6c0-9.2 7.4-16.6 16.6-16.6h11.1c9.2 0 16.6 7.4 16.6 16.6v17c15.5.8 30.5 6.1 43 15.4 5.6 4.1 6.2 12.3 1.2 17.1L306 145.6c-3.8 3.7-9.5 3.8-14 1-5.4-3.4-11.4-5.1-17.8-5.1h-38.9c-9 0-16.3 8.2-16.3 18.3 0 8.2 5 15.5 12.1 17.6l62.3 18.7c25.7 7.7 43.7 32.4 43.7 60.1 0 34-26.4 61.5-59.1 62.4v16.8c0 9.2-7.4 16.6-16.6 16.6h-11.1c-9.2 0-16.6-7.4-16.6-16.6v-17c-15.5-.8-30.5-6.1-43-15.4-5.6-4.1-6.2-12.3-1.2-17.1l16.3-15.5c3.8-3.7 9.5-3.8 14-1 5.4 3.4 11.4 5.1 17.8 5.1h38.9c9 0 16.3-8.2 16.3-18.3 0-8.2-5-15.5-12.1-17.6l-62.3-18.7c-25.7-7.7-43.7-32.4-43.7-60.1.1-34 26.4-61.5 59.1-62.4zM480 352h-32.5c-19.6 26-44.6 47.7-73 64h63.8c5.3 0 9.6 3.6 9.6 8v16c0 4.4-4.3 8-9.6 8H73.6c-5.3 0-9.6-3.6-9.6-8v-16c0-4.4 4.3-8 9.6-8h63.8c-28.4-16.3-53.3-38-73-64H32c-17.7 0-32 14.3-32 32v96c0 17.7 14.3 32 32 32h448c17.7 0 32-14.3 32-32v-96c0-17.7-14.3-32-32-32z"]
            },
            faDoorClosed: {
                prefix: "fas",
                iconName: "door-closed",
                icon: [640, 512, [], "f52a", "M624 448H512V50.8C512 22.78 490.47 0 464 0H175.99c-26.47 0-48 22.78-48 50.8V448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM415.99 288c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32c.01 17.67-14.32 32-32 32z"]
            },
            faDoorOpen: {
                prefix: "fas",
                iconName: "door-open",
                icon: [640, 512, [], "f52b", "M624 448h-80V113.45C544 86.19 522.47 64 496 64H384v64h96v384h144c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM312.24 1.01l-192 49.74C105.99 54.44 96 67.7 96 82.92V448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h336V33.18c0-21.58-19.56-37.41-39.76-32.17zM264 288c-13.25 0-24-14.33-24-32s10.75-32 24-32 24 14.33 24 32-10.75 32-24 32z"]
            },
            faDotCircle: {
                prefix: "fas",
                iconName: "dot-circle",
                icon: [512, 512, [], "f192", "M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm80 248c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80z"]
            },
            faDove: {
                prefix: "fas",
                iconName: "dove",
                icon: [512, 512, [], "f4ba", "M288 167.2v-28.1c-28.2-36.3-47.1-79.3-54.1-125.2-2.1-13.5-19-18.8-27.8-8.3-21.1 24.9-37.7 54.1-48.9 86.5 34.2 38.3 80 64.6 130.8 75.1zM400 64c-44.2 0-80 35.9-80 80.1v59.4C215.6 197.3 127 133 87 41.8c-5.5-12.5-23.2-13.2-29-.9C41.4 76 32 115.2 32 156.6c0 70.8 34.1 136.9 85.1 185.9 13.2 12.7 26.1 23.2 38.9 32.8l-143.9 36C1.4 414-3.4 426.4 2.6 435.7 20 462.6 63 508.2 155.8 512c8 .3 16-2.6 22.1-7.9l65.2-56.1H320c88.4 0 160-71.5 160-159.9V128l32-64H400zm0 96.1c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z"]
            },
            faDownload: {
                prefix: "fas",
                iconName: "download",
                icon: [512, 512, [], "f019", "M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z"]
            },
            faDumbbell: {
                prefix: "fas",
                iconName: "dumbbell",
                icon: [640, 512, [], "f44b", "M104 96H56c-13.3 0-24 10.7-24 24v104H8c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h24v104c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V120c0-13.3-10.7-24-24-24zm528 128h-24V120c0-13.3-10.7-24-24-24h-48c-13.3 0-24 10.7-24 24v272c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V288h24c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM456 32h-48c-13.3 0-24 10.7-24 24v168H256V56c0-13.3-10.7-24-24-24h-48c-13.3 0-24 10.7-24 24v400c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V288h128v168c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24z"]
            },
            faEdit: {
                prefix: "fas",
                iconName: "edit",
                icon: [576, 512, [], "f044", "M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"]
            },
            faEject: {
                prefix: "fas",
                iconName: "eject",
                icon: [448, 512, [], "f052", "M448 384v64c0 17.673-14.327 32-32 32H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h384c17.673 0 32 14.327 32 32zM48.053 320h351.886c41.651 0 63.581-49.674 35.383-80.435L259.383 47.558c-19.014-20.743-51.751-20.744-70.767 0L12.67 239.565C-15.475 270.268 6.324 320 48.053 320z"]
            },
            faEllipsisH: {
                prefix: "fas",
                iconName: "ellipsis-h",
                icon: [512, 512, [], "f141", "M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"]
            },
            faEllipsisV: {
                prefix: "fas",
                iconName: "ellipsis-v",
                icon: [192, 512, [], "f142", "M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"]
            },
            faEnvelope: {
                prefix: "fas",
                iconName: "envelope",
                icon: [512, 512, [], "f0e0", "M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z"]
            },
            faEnvelopeOpen: {
                prefix: "fas",
                iconName: "envelope-open",
                icon: [512, 512, [], "f2b6", "M512 464c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V200.724a48 48 0 0 1 18.387-37.776c24.913-19.529 45.501-35.365 164.2-121.511C199.412 29.17 232.797-.347 256 .003c23.198-.354 56.596 29.172 73.413 41.433 118.687 86.137 139.303 101.995 164.2 121.512A48 48 0 0 1 512 200.724V464zm-65.666-196.605c-2.563-3.728-7.7-4.595-11.339-1.907-22.845 16.873-55.462 40.705-105.582 77.079-16.825 12.266-50.21 41.781-73.413 41.43-23.211.344-56.559-29.143-73.413-41.43-50.114-36.37-82.734-60.204-105.582-77.079-3.639-2.688-8.776-1.821-11.339 1.907l-9.072 13.196a7.998 7.998 0 0 0 1.839 10.967c22.887 16.899 55.454 40.69 105.303 76.868 20.274 14.781 56.524 47.813 92.264 47.573 35.724.242 71.961-32.771 92.263-47.573 49.85-36.179 82.418-59.97 105.303-76.868a7.998 7.998 0 0 0 1.839-10.967l-9.071-13.196z"]
            },
            faEnvelopeSquare: {
                prefix: "fas",
                iconName: "envelope-square",
                icon: [448, 512, [], "f199", "M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM178.117 262.104C87.429 196.287 88.353 196.121 64 177.167V152c0-13.255 10.745-24 24-24h272c13.255 0 24 10.745 24 24v25.167c-24.371 18.969-23.434 19.124-114.117 84.938-10.5 7.655-31.392 26.12-45.883 25.894-14.503.218-35.367-18.227-45.883-25.895zM384 217.775V360c0 13.255-10.745 24-24 24H88c-13.255 0-24-10.745-24-24V217.775c13.958 10.794 33.329 25.236 95.303 70.214 14.162 10.341 37.975 32.145 64.694 32.01 26.887.134 51.037-22.041 64.72-32.025 61.958-44.965 81.325-59.406 95.283-70.199z"]
            },
            faEquals: {
                prefix: "fas",
                iconName: "equals",
                icon: [448, 512, [], "f52c", "M416 304H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32zm0-192H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"]
            },
            faEraser: {
                prefix: "fas",
                iconName: "eraser",
                icon: [512, 512, [], "f12d", "M497.941 273.941c18.745-18.745 18.745-49.137 0-67.882l-160-160c-18.745-18.745-49.136-18.746-67.883 0l-256 256c-18.745 18.745-18.745 49.137 0 67.882l96 96A48.004 48.004 0 0 0 144 480h356c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12H355.883l142.058-142.059zm-302.627-62.627l137.373 137.373L265.373 416H150.628l-80-80 124.686-124.686z"]
            },
            faEuroSign: {
                prefix: "fas",
                iconName: "euro-sign",
                icon: [320, 512, [], "f153", "M310.706 413.765c-1.314-6.63-7.835-10.872-14.424-9.369-10.692 2.439-27.422 5.413-45.426 5.413-56.763 0-101.929-34.79-121.461-85.449h113.689a12 12 0 0 0 11.708-9.369l6.373-28.36c1.686-7.502-4.019-14.631-11.708-14.631H115.22c-1.21-14.328-1.414-28.287.137-42.245H261.95a12 12 0 0 0 11.723-9.434l6.512-29.755c1.638-7.484-4.061-14.566-11.723-14.566H130.184c20.633-44.991 62.69-75.03 117.619-75.03 14.486 0 28.564 2.25 37.851 4.145 6.216 1.268 12.347-2.498 14.002-8.623l11.991-44.368c1.822-6.741-2.465-13.616-9.326-14.917C290.217 34.912 270.71 32 249.635 32 152.451 32 74.03 92.252 45.075 176H12c-6.627 0-12 5.373-12 12v29.755c0 6.627 5.373 12 12 12h21.569c-1.009 13.607-1.181 29.287-.181 42.245H12c-6.627 0-12 5.373-12 12v28.36c0 6.627 5.373 12 12 12h30.114C67.139 414.692 145.264 480 249.635 480c26.301 0 48.562-4.544 61.101-7.788 6.167-1.595 10.027-7.708 8.788-13.957l-8.818-44.49z"]
            },
            faExchangeAlt: {
                prefix: "fas",
                iconName: "exchange-alt",
                icon: [512, 512, [], "f362", "M0 168v-16c0-13.255 10.745-24 24-24h360V80c0-21.367 25.899-32.042 40.971-16.971l80 80c9.372 9.373 9.372 24.569 0 33.941l-80 80C409.956 271.982 384 261.456 384 240v-48H24c-13.255 0-24-10.745-24-24zm488 152H128v-48c0-21.314-25.862-32.08-40.971-16.971l-80 80c-9.372 9.373-9.372 24.569 0 33.941l80 80C102.057 463.997 128 453.437 128 432v-48h360c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24z"]
            },
            faExclamation: {
                prefix: "fas",
                iconName: "exclamation",
                icon: [192, 512, [], "f12a", "M176 432c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zM25.26 25.199l13.6 272C39.499 309.972 50.041 320 62.83 320h66.34c12.789 0 23.331-10.028 23.97-22.801l13.6-272C167.425 11.49 156.496 0 142.77 0H49.23C35.504 0 24.575 11.49 25.26 25.199z"]
            },
            faExclamationCircle: {
                prefix: "fas",
                iconName: "exclamation-circle",
                icon: [512, 512, [], "f06a", "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"]
            },
            faExclamationTriangle: {
                prefix: "fas",
                iconName: "exclamation-triangle",
                icon: [576, 512, [], "f071", "M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"]
            },
            faExpand: {
                prefix: "fas",
                iconName: "expand",
                icon: [448, 512, [], "f065", "M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z"]
            },
            faExpandArrowsAlt: {
                prefix: "fas",
                iconName: "expand-arrows-alt",
                icon: [448, 512, [], "f31e", "M448.1 344v112c0 13.3-10.7 24-24 24h-112c-21.4 0-32.1-25.9-17-41l36.2-36.2L224 295.6 116.8 402.9 153 439c15.1 15.1 4.4 41-17 41H24c-13.3 0-24-10.7-24-24V344c0-21.4 25.9-32.1 41-17l36.2 36.2L184.5 256 77.2 148.7 41 185c-15.1 15.1-41 4.4-41-17V56c0-13.3 10.7-24 24-24h112c21.4 0 32.1 25.9 17 41l-36.2 36.2L224 216.4l107.3-107.3L295.1 73c-15.1-15.1-4.4-41 17-41h112c13.3 0 24 10.7 24 24v112c0 21.4-25.9 32.1-41 17l-36.2-36.2L263.6 256l107.3 107.3 36.2-36.2c15.1-15.2 41-4.5 41 16.9z"]
            },
            faExternalLinkAlt: {
                prefix: "fas",
                iconName: "external-link-alt",
                icon: [576, 512, [], "f35d", "M576 24v127.984c0 21.461-25.96 31.98-40.971 16.971l-35.707-35.709-243.523 243.523c-9.373 9.373-24.568 9.373-33.941 0l-22.627-22.627c-9.373-9.373-9.373-24.569 0-33.941L442.756 76.676l-35.703-35.705C391.982 25.9 402.656 0 424.024 0H552c13.255 0 24 10.745 24 24zM407.029 270.794l-16 16A23.999 23.999 0 0 0 384 303.765V448H64V128h264a24.003 24.003 0 0 0 16.97-7.029l16-16C376.089 89.851 365.381 64 344 64H48C21.49 64 0 85.49 0 112v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V287.764c0-21.382-25.852-32.09-40.971-16.97z"]
            },
            faExternalLinkSquareAlt: {
                prefix: "fas",
                iconName: "external-link-square-alt",
                icon: [448, 512, [], "f360", "M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zm-88 16H248.029c-21.313 0-32.08 25.861-16.971 40.971l31.984 31.987L67.515 364.485c-4.686 4.686-4.686 12.284 0 16.971l31.029 31.029c4.687 4.686 12.285 4.686 16.971 0l195.526-195.526 31.988 31.991C358.058 263.977 384 253.425 384 231.979V120c0-13.255-10.745-24-24-24z"]
            },
            faEye: {
                prefix: "fas",
                iconName: "eye",
                icon: [576, 512, [], "f06e", "M569.354 231.631C512.969 135.949 407.81 72 288 72 168.14 72 63.004 135.994 6.646 231.631a47.999 47.999 0 0 0 0 48.739C63.031 376.051 168.19 440 288 440c119.86 0 224.996-63.994 281.354-159.631a47.997 47.997 0 0 0 0-48.738zM288 392c-75.162 0-136-60.827-136-136 0-75.162 60.826-136 136-136 75.162 0 136 60.826 136 136 0 75.162-60.826 136-136 136zm104-136c0 57.438-46.562 104-104 104s-104-46.562-104-104c0-17.708 4.431-34.379 12.236-48.973l-.001.032c0 23.651 19.173 42.823 42.824 42.823s42.824-19.173 42.824-42.823c0-23.651-19.173-42.824-42.824-42.824l-.032.001C253.621 156.431 270.292 152 288 152c57.438 0 104 46.562 104 104z"]
            },
            faEyeDropper: {
                prefix: "fas",
                iconName: "eye-dropper",
                icon: [512, 512, [], "f1fb", "M177.38 206.64L39.03 344.97A24.01 24.01 0 0 0 32 361.94V424L0 480l32 32 56-32h62.06c6.36 0 12.47-2.53 16.97-7.03l138.35-138.33-128-128zm225.552 30.47l16.952 16.95c9.37 9.37 9.37 24.57 0 33.94l-40.973 40.97c-9.292 9.312-24.506 9.434-33.94 0L183.028 167.03c-9.37-9.37-9.37-24.57 0-33.94L224 92.12c9.289-9.309 24.502-9.438 33.94 0l16.992 16.99 82.606-82.601c35.19-35.19 92.5-35.5 128 0 40.49 48.08 29.66 98.34 0 128l-82.606 82.601z"]
            },
            faEyeSlash: {
                prefix: "fas",
                iconName: "eye-slash",
                icon: [576, 512, [], "f070", "M286.693 391.984l32.579 46.542A333.958 333.958 0 0 1 288 440C168.19 440 63.031 376.051 6.646 280.369a47.999 47.999 0 0 1 0-48.739c24.023-40.766 56.913-75.775 96.024-102.537l57.077 81.539C154.736 224.82 152 240.087 152 256c0 74.736 60.135 135.282 134.693 135.984zm282.661-111.615c-31.667 53.737-78.747 97.46-135.175 125.475l.011.015 41.47 59.2c7.6 10.86 4.96 25.82-5.9 33.42l-13.11 9.18c-10.86 7.6-25.82 4.96-33.42-5.9L100.34 46.94c-7.6-10.86-4.96-25.82 5.9-33.42l13.11-9.18c10.86-7.6 25.82-4.96 33.42 5.9l51.038 72.617C230.68 75.776 258.905 72 288 72c119.81 0 224.969 63.949 281.354 159.631a48.002 48.002 0 0 1 0 48.738zM424 256c0-75.174-60.838-136-136-136-17.939 0-35.056 3.473-50.729 9.772l19.299 27.058c25.869-8.171 55.044-6.163 80.4 7.41h-.03c-23.65 0-42.82 19.17-42.82 42.82 0 23.626 19.147 42.82 42.82 42.82 23.65 0 42.82-19.17 42.82-42.82v-.03c18.462 34.49 16.312 77.914-8.25 110.95v.01l19.314 27.061C411.496 321.2 424 290.074 424 256zM262.014 356.727l-77.53-110.757c-5.014 52.387 29.314 98.354 77.53 110.757z"]
            },
            faFastBackward: {
                prefix: "fas",
                iconName: "fast-backward",
                icon: [512, 512, [], "f049", "M0 436V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v151.9L235.5 71.4C256.1 54.3 288 68.6 288 96v131.9L459.5 71.4C480.1 54.3 512 68.6 512 96v320c0 27.4-31.9 41.7-52.5 24.6L288 285.3V416c0 27.4-31.9 41.7-52.5 24.6L64 285.3V436c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12z"]
            },
            faFastForward: {
                prefix: "fas",
                iconName: "fast-forward",
                icon: [512, 512, [], "f050", "M512 76v360c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V284.1L276.5 440.6c-20.6 17.2-52.5 2.8-52.5-24.6V284.1L52.5 440.6C31.9 457.8 0 443.4 0 416V96c0-27.4 31.9-41.7 52.5-24.6L224 226.8V96c0-27.4 31.9-41.7 52.5-24.6L448 226.8V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12z"]
            },
            faFax: {
                prefix: "fas",
                iconName: "fax",
                icon: [512, 512, [], "f1ac", "M128 144v320c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V144c0-26.51 21.49-48 48-48h32c26.51 0 48 21.49 48 48zm384 64v256c0 26.51-21.49 48-48 48H192c-26.51 0-48-21.49-48-48V40c0-22.091 17.909-40 40-40h207.432a39.996 39.996 0 0 1 28.284 11.716l48.569 48.569A39.999 39.999 0 0 1 480 88.568v74.174c18.641 6.591 32 24.36 32 45.258zm-320-16h240V96h-24c-13.203 0-24-10.797-24-24V48H192v144zm96 204c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40zm0-128c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40zm128 128c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40zm0-128c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40z"]
            },
            faFeather: {
                prefix: "fas",
                iconName: "feather",
                icon: [512, 512, [], "f52d", "M512 0C504.81.01 98.51 22.01 71.47 287.42c-2.62 22.6-4.22 45.28-5.37 67.98l160.65-160.65c6.25-6.25 16.38-6.25 22.62 0s6.25 16.38 0 22.62l-240 240a31.9 31.9 0 0 0-9.38 22.67C.02 497.68 14.33 512 32 512c8.19 0 16.38-3.12 22.62-9.38l55.05-55.05c38.4-.5 76.76-2.63 114.91-7.05 11.58-1.18 22.54-3.29 33.21-5.84L256 384h101.86c12.61-10.63 24.12-22.45 34.76-35.07L384 288h50.19C502.8 163.6 512 .1 512 0z"]
            },
            faFemale: {
                prefix: "fas",
                iconName: "female",
                icon: [256, 512, [], "f182", "M128 0c35.346 0 64 28.654 64 64s-28.654 64-64 64c-35.346 0-64-28.654-64-64S92.654 0 128 0m119.283 354.179l-48-192A24 24 0 0 0 176 144h-11.36c-22.711 10.443-49.59 10.894-73.28 0H80a24 24 0 0 0-23.283 18.179l-48 192C4.935 369.305 16.383 384 32 384h56v104c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V384h56c15.591 0 27.071-14.671 23.283-29.821z"]
            },
            faFighterJet: {
                prefix: "fas",
                iconName: "fighter-jet",
                icon: [640, 512, [], "f0fb", "M544 224l-128-16-48-16h-24L227.158 44h39.509C278.333 44 288 41.375 288 38s-9.667-6-21.333-6H152v12h16v164h-48l-66.667-80H18.667L8 138.667V208h8v16h48v2.666l-64 8v42.667l64 8V288H16v16H8v69.333L18.667 384h34.667L120 304h48v164h-16v12h114.667c11.667 0 21.333-2.625 21.333-6s-9.667-6-21.333-6h-39.509L344 320h24l48-16 128-16c96-21.333 96-26.583 96-32 0-5.417 0-10.667-96-32z"]
            },
            faFile: {
                prefix: "fas",
                iconName: "file",
                icon: [384, 512, [], "f15b", "M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm160-14.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z"]
            },
            faFileAlt: {
                prefix: "fas",
                iconName: "file-alt",
                icon: [384, 512, [], "f15c", "M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm64 236c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-64c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-72v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm96-114.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z"]
            },
            faFileArchive: {
                prefix: "fas",
                iconName: "file-archive",
                icon: [384, 512, [], "f1c6", "M224 136V0h-63.6v32h-32V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM95.9 32h32v32h-32V32zm32.3 384c-33.2 0-58-30.4-51.4-62.9L96.4 256v-32h32v-32h-32v-32h32v-32h-32V96h32V64h32v32h-32v32h32v32h-32v32h32v32h-32v32h22.1c5.7 0 10.7 4.1 11.8 9.7l17.3 87.7c6.4 32.4-18.4 62.6-51.4 62.6zm32.7-53c0 14.9-14.5 27-32.4 27S96 378 96 363c0-14.9 14.5-27 32.4-27s32.5 12.1 32.5 27zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z"]
            },
            faFileAudio: {
                prefix: "fas",
                iconName: "file-audio",
                icon: [384, 512, [], "f1c7", "M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm-64 268c0 10.7-12.9 16-20.5 8.5L104 376H76c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h28l35.5-36.5c7.6-7.6 20.5-2.2 20.5 8.5v136zm33.2-47.6c9.1-9.3 9.1-24.1 0-33.4-22.1-22.8 12.2-56.2 34.4-33.5 27.2 27.9 27.2 72.4 0 100.4-21.8 22.3-56.9-10.4-34.4-33.5zm86-117.1c54.4 55.9 54.4 144.8 0 200.8-21.8 22.4-57-10.3-34.4-33.5 36.2-37.2 36.3-96.5 0-133.8-22.1-22.8 12.3-56.3 34.4-33.5zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z"]
            },
            faFileCode: {
                prefix: "fas",
                iconName: "file-code",
                icon: [384, 512, [], "f1c9", "M384 121.941V128H256V0h6.059c6.365 0 12.47 2.529 16.971 7.029l97.941 97.941A24.005 24.005 0 0 1 384 121.941zM248 160c-13.2 0-24-10.8-24-24V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248zM123.206 400.505a5.4 5.4 0 0 1-7.633.246l-64.866-60.812a5.4 5.4 0 0 1 0-7.879l64.866-60.812a5.4 5.4 0 0 1 7.633.246l19.579 20.885a5.4 5.4 0 0 1-.372 7.747L101.65 336l40.763 35.874a5.4 5.4 0 0 1 .372 7.747l-19.579 20.884zm51.295 50.479l-27.453-7.97a5.402 5.402 0 0 1-3.681-6.692l61.44-211.626a5.402 5.402 0 0 1 6.692-3.681l27.452 7.97a5.4 5.4 0 0 1 3.68 6.692l-61.44 211.626a5.397 5.397 0 0 1-6.69 3.681zm160.792-111.045l-64.866 60.812a5.4 5.4 0 0 1-7.633-.246l-19.58-20.885a5.4 5.4 0 0 1 .372-7.747L284.35 336l-40.763-35.874a5.4 5.4 0 0 1-.372-7.747l19.58-20.885a5.4 5.4 0 0 1 7.633-.246l64.866 60.812a5.4 5.4 0 0 1-.001 7.879z"]
            },
            faFileExcel: {
                prefix: "fas",
                iconName: "file-excel",
                icon: [384, 512, [], "f1c3", "M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm60.1 106.5L224 336l60.1 93.5c5.1 8-.6 18.5-10.1 18.5h-34.9c-4.4 0-8.5-2.4-10.6-6.3C208.9 405.5 192 373 192 373c-6.4 14.8-10 20-36.6 68.8-2.1 3.9-6.1 6.3-10.5 6.3H110c-9.5 0-15.2-10.5-10.1-18.5l60.3-93.5-60.3-93.5c-5.2-8 .6-18.5 10.1-18.5h34.8c4.4 0 8.5 2.4 10.6 6.3 26.1 48.8 20 33.6 36.6 68.5 0 0 6.1-11.7 36.6-68.5 2.1-3.9 6.2-6.3 10.6-6.3H274c9.5-.1 15.2 10.4 10.1 18.4zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z"]
            },
            faFileImage: {
                prefix: "fas",
                iconName: "file-image",
                icon: [384, 512, [], "f1c5", "M384 121.941V128H256V0h6.059a24 24 0 0 1 16.97 7.029l97.941 97.941a24.002 24.002 0 0 1 7.03 16.971zM248 160c-13.2 0-24-10.8-24-24V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248zm-135.455 16c26.51 0 48 21.49 48 48s-21.49 48-48 48-48-21.49-48-48 21.491-48 48-48zm208 240h-256l.485-48.485L104.545 328c4.686-4.686 11.799-4.201 16.485.485L160.545 368 264.06 264.485c4.686-4.686 12.284-4.686 16.971 0L320.545 304v112z"]
            },
            faFileMedical: {
                prefix: "fas",
                iconName: "file-medical",
                icon: [384, 512, [], "f477", "M377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm64 160v48c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8z"]
            },
            faFileMedicalAlt: {
                prefix: "fas",
                iconName: "file-medical-alt",
                icon: [448, 512, [], "f478", "M288 136V0H88C74.7 0 64 10.7 64 24v232H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h140.9c3 0 5.8 1.7 7.2 4.4l19.9 39.8 56.8-113.7c2.9-5.9 11.4-5.9 14.3 0l34.7 69.5H352c8.8 0 16 7.2 16 16s-7.2 16-16 16h-89.9L240 275.8l-56.8 113.7c-2.9 5.9-11.4 5.9-14.3 0L134.1 320H64v168c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H312c-13.2 0-24-10.8-24-24zm153-31L343.1 7c-4.5-4.5-10.6-7-17-7H320v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z"]
            },
            faFilePdf: {
                prefix: "fas",
                iconName: "file-pdf",
                icon: [384, 512, [], "f1c1", "M181.9 256.1c-5-16-4.9-46.9-2-46.9 8.4 0 7.6 36.9 2 46.9zm-1.7 47.2c-7.7 20.2-17.3 43.3-28.4 62.7 18.3-7 39-17.2 62.9-21.9-12.7-9.6-24.9-23.4-34.5-40.8zM86.1 428.1c0 .8 13.2-5.4 34.9-40.2-6.7 6.3-29.1 24.5-34.9 40.2zM248 160h136v328c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V24C0 10.7 10.7 0 24 0h200v136c0 13.2 10.8 24 24 24zm-8 171.8c-20-12.2-33.3-29-42.7-53.8 4.5-18.5 11.6-46.6 6.2-64.2-4.7-29.4-42.4-26.5-47.8-6.8-5 18.3-.4 44.1 8.1 77-11.6 27.6-28.7 64.6-40.8 85.8-.1 0-.1.1-.2.1-27.1 13.9-73.6 44.5-54.5 68 5.6 6.9 16 10 21.5 10 17.9 0 35.7-18 61.1-61.8 25.8-8.5 54.1-19.1 79-23.2 21.7 11.8 47.1 19.5 64 19.5 29.2 0 31.2-32 19.7-43.4-13.9-13.6-54.3-9.7-73.6-7.2zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-74.1 255.3c4.1-2.7-2.5-11.9-42.8-9 37.1 15.8 42.8 9 42.8 9z"]
            },
            faFilePowerpoint: {
                prefix: "fas",
                iconName: "file-powerpoint",
                icon: [384, 512, [], "f1c4", "M193.7 271.2c8.8 0 15.5 2.7 20.3 8.1 9.6 10.9 9.8 32.7-.2 44.1-4.9 5.6-11.9 8.5-21.1 8.5h-26.9v-60.7h27.9zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm53 165.2c0 90.3-88.8 77.6-111.1 77.6V436c0 6.6-5.4 12-12 12h-30.8c-6.6 0-12-5.4-12-12V236.2c0-6.6 5.4-12 12-12h81c44.5 0 72.9 32.8 72.9 77z"]
            },
            faFileVideo: {
                prefix: "fas",
                iconName: "file-video",
                icon: [384, 512, [], "f1c8", "M384 121.941V128H256V0h6.059c6.365 0 12.47 2.529 16.971 7.029l97.941 97.941A24.005 24.005 0 0 1 384 121.941zM224 136V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248c-13.2 0-24-10.8-24-24zm96 144.016v111.963c0 21.445-25.943 31.998-40.971 16.971L224 353.941V392c0 13.255-10.745 24-24 24H88c-13.255 0-24-10.745-24-24V280c0-13.255 10.745-24 24-24h112c13.255 0 24 10.745 24 24v38.059l55.029-55.013c15.011-15.01 40.971-4.491 40.971 16.97z"]
            },
            faFileWord: {
                prefix: "fas",
                iconName: "file-word",
                icon: [384, 512, [], "f1c2", "M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm57.1 120H305c7.7 0 13.4 7.1 11.7 14.7l-38 168c-1.2 5.5-6.1 9.3-11.7 9.3h-38c-5.5 0-10.3-3.8-11.6-9.1-25.8-103.5-20.8-81.2-25.6-110.5h-.5c-1.1 14.3-2.4 17.4-25.6 110.5-1.3 5.3-6.1 9.1-11.6 9.1H117c-5.6 0-10.5-3.9-11.7-9.4l-37.8-168c-1.7-7.5 4-14.6 11.7-14.6h24.5c5.7 0 10.7 4 11.8 9.7 15.6 78 20.1 109.5 21 122.2 1.6-10.2 7.3-32.7 29.4-122.7 1.3-5.4 6.1-9.1 11.7-9.1h29.1c5.6 0 10.4 3.8 11.7 9.2 24 100.4 28.8 124 29.6 129.4-.2-11.2-2.6-17.8 21.6-129.2 1-5.6 5.9-9.5 11.5-9.5zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z"]
            },
            faFilm: {
                prefix: "fas",
                iconName: "film",
                icon: [512, 512, [], "f008", "M488 64h-8v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V64H96v20c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12V64h-8C10.7 64 0 74.7 0 88v336c0 13.3 10.7 24 24 24h8v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h320v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h8c13.3 0 24-10.7 24-24V88c0-13.3-10.7-24-24-24zM96 372c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm272 208c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm0-168c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm112 152c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z"]
            },
            faFilter: {
                prefix: "fas",
                iconName: "filter",
                icon: [512, 512, [], "f0b0", "M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"]
            },
            faFire: {
                prefix: "fas",
                iconName: "fire",
                icon: [384, 512, [], "f06d", "M216 23.858c0-23.802-30.653-32.765-44.149-13.038C48 191.851 224 200 224 288c0 35.629-29.114 64.458-64.85 63.994C123.98 351.538 96 322.22 96 287.046v-85.51c0-21.703-26.471-32.225-41.432-16.504C27.801 213.158 0 261.332 0 320c0 105.869 86.131 192 192 192s192-86.131 192-192c0-170.29-168-193.003-168-296.142z"]
            },
            faFireExtinguisher: {
                prefix: "fas",
                iconName: "fire-extinguisher",
                icon: [448, 512, [], "f134", "M434.027 26.329l-168 28C254.693 56.218 256 67.8 256 72h-58.332C208.353 36.108 181.446 0 144 0c-39.435 0-66.368 39.676-52.228 76.203-52.039 13.051-75.381 54.213-90.049 90.884-4.923 12.307 1.063 26.274 13.37 31.197 12.317 4.926 26.279-1.075 31.196-13.37C75.058 112.99 106.964 120 168 120v27.076c-41.543 10.862-72 49.235-72 94.129V488c0 13.255 10.745 24 24 24h144c13.255 0 24-10.745 24-24V240c0-44.731-30.596-82.312-72-92.97V120h40c0 2.974-1.703 15.716 10.027 17.671l168 28C441.342 166.89 448 161.25 448 153.834V38.166c0-7.416-6.658-13.056-13.973-11.837zM144 72c-8.822 0-16-7.178-16-16s7.178-16 16-16 16 7.178 16 16-7.178 16-16 16z"]
            },
            faFirstAid: {
                prefix: "fas",
                iconName: "first-aid",
                icon: [576, 512, [], "f479", "M0 80v352c0 26.5 21.5 48 48 48h48V32H48C21.5 32 0 53.5 0 80zm128 400h320V32H128v448zm64-248c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48zM528 32h-48v448h48c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z"]
            },
            faFlag: {
                prefix: "fas",
                iconName: "flag",
                icon: [512, 512, [], "f024", "M349.565 98.783C295.978 98.783 251.721 64 184.348 64c-24.955 0-47.309 4.384-68.045 12.013a55.947 55.947 0 0 0 3.586-23.562C118.117 24.015 94.806 1.206 66.338.048 34.345-1.254 8 24.296 8 56c0 19.026 9.497 35.825 24 45.945V488c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-94.4c28.311-12.064 63.582-22.122 114.435-22.122 53.588 0 97.844 34.783 165.217 34.783 48.169 0 86.667-16.294 122.505-40.858C506.84 359.452 512 349.571 512 339.045v-243.1c0-23.393-24.269-38.87-45.485-29.016-34.338 15.948-76.454 31.854-116.95 31.854z"]
            },
            faFlagCheckered: {
                prefix: "fas",
                iconName: "flag-checkered",
                icon: [512, 512, [], "f11e", "M466.515 66.928C487.731 57.074 512 72.551 512 95.944v243.1c0 10.526-5.161 20.407-13.843 26.358-35.837 24.564-74.335 40.858-122.505 40.858-67.373 0-111.63-34.783-165.217-34.783-50.853 0-86.124 10.058-114.435 22.122V488c0 13.255-10.745 24-24 24H56c-13.255 0-24-10.745-24-24V101.945C17.497 91.825 8 75.026 8 56 8 24.296 34.345-1.254 66.338.048c28.468 1.158 51.779 23.968 53.551 52.404.52 8.342-.81 16.31-3.586 23.562C137.039 68.384 159.393 64 184.348 64c67.373 0 111.63 34.783 165.217 34.783 40.496 0 82.612-15.906 116.95-31.855zM96 134.63v70.49c29-10.67 51.18-17.83 73.6-20.91v-71.57c-23.5 2.17-40.44 9.79-73.6 21.99zm220.8 9.19c-26.417-4.672-49.886-13.979-73.6-21.34v67.42c24.175 6.706 47.566 16.444 73.6 22.31v-68.39zm-147.2 40.39v70.04c32.796-2.978 53.91-.635 73.6 3.8V189.9c-25.247-7.035-46.581-9.423-73.6-5.69zm73.6 142.23c26.338 4.652 49.732 13.927 73.6 21.34v-67.41c-24.277-6.746-47.54-16.45-73.6-22.32v68.39zM96 342.1c23.62-8.39 47.79-13.84 73.6-16.56v-71.29c-26.11 2.35-47.36 8.04-73.6 17.36v70.49zm368-221.6c-21.3 8.85-46.59 17.64-73.6 22.47v71.91c27.31-4.36 50.03-14.1 73.6-23.89V120.5zm0 209.96v-70.49c-22.19 14.2-48.78 22.61-73.6 26.02v71.58c25.07-2.38 48.49-11.04 73.6-27.11zM316.8 212.21v68.16c25.664 7.134 46.616 9.342 73.6 5.62v-71.11c-25.999 4.187-49.943 2.676-73.6-2.67z"]
            },
            faFlask: {
                prefix: "fas",
                iconName: "flask",
                icon: [448, 512, [], "f0c3", "M437.2 403.5L320 215V64h8c13.3 0 24-10.7 24-24V24c0-13.3-10.7-24-24-24H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h8v151L10.8 403.5C-18.5 450.6 15.3 512 70.9 512h306.2c55.7 0 89.4-61.5 60.1-108.5zM137.9 320l48.2-77.6c3.7-5.2 5.8-11.6 5.8-18.4V64h64v160c0 6.9 2.2 13.2 5.8 18.4l48.2 77.6h-172z"]
            },
            faFolder: {
                prefix: "fas",
                iconName: "folder",
                icon: [512, 512, [], "f07b", "M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48z"]
            },
            faFolderOpen: {
                prefix: "fas",
                iconName: "folder-open",
                icon: [576, 512, [], "f07c", "M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z"]
            },
            faFont: {
                prefix: "fas",
                iconName: "font",
                icon: [448, 512, [], "f031", "M152 416h-24.013l26.586-80.782H292.8L319.386 416H296c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h136c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16h-26.739L275.495 42.746A16 16 0 0 0 260.382 32h-72.766a16 16 0 0 0-15.113 10.746L42.739 416H16c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h136c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16zm64.353-271.778c4.348-15.216 6.61-28.156 7.586-34.644.839 6.521 2.939 19.476 7.727 34.706l41.335 124.006h-98.619l41.971-124.068z"]
            },
            faFontAwesomeLogoFull: {
                prefix: "fas",
                iconName: "font-awesome-logo-full",
                icon: [3992, 512, ["Font Awesome"], "f4e6", "M454.6 0H57.4C25.9 0 0 25.9 0 57.4v397.3C0 486.1 25.9 512 57.4 512h397.3c31.4 0 57.4-25.9 57.4-57.4V57.4C512 25.9 486.1 0 454.6 0zm-58.9 324.9c0 4.8-4.1 6.9-8.9 8.9-19.2 8.1-39.7 15.7-61.5 15.7-40.5 0-68.7-44.8-163.2 2.5v51.8c0 30.3-45.7 30.2-45.7 0v-250c-9-7-15-17.9-15-30.3 0-21 17.1-38.2 38.2-38.2 21 0 38.2 17.1 38.2 38.2 0 12.2-5.8 23.2-14.9 30.2v21c37.1-12 65.5-34.4 146.1-3.4 26.6 11.4 68.7-15.7 76.5-15.7 5.5 0 10.3 4.1 10.3 8.9v160.4zm432.9-174.2h-137v70.1H825c39.8 0 40.4 62.2 0 62.2H691.6v105.6c0 45.5-70.7 46.4-70.7 0V128.3c0-22 18-39.8 39.8-39.8h167.8c39.6 0 40.5 62.2.1 62.2zm191.1 23.4c-169.3 0-169.1 252.4 0 252.4 169.9 0 169.9-252.4 0-252.4zm0 196.1c-81.6 0-82.1-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm372.4 53.4c-17.5 0-31.4-13.9-31.4-31.4v-117c0-62.4-72.6-52.5-99.1-16.4v133.4c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c43.3-51.6 162.4-60.4 162.4 39.3v141.5c.3 30.4-31.5 31.4-31.7 31.4zm179.7 2.9c-44.3 0-68.3-22.9-68.3-65.8V235.2H1488c-35.6 0-36.7-55.3 0-55.3h15.5v-37.3c0-41.3 63.8-42.1 63.8 0v37.5h24.9c35.4 0 35.7 55.3 0 55.3h-24.9v108.5c0 29.6 26.1 26.3 27.4 26.3 31.4 0 52.6 56.3-22.9 56.3zM1992 123c-19.5-50.2-95.5-50-114.5 0-107.3 275.7-99.5 252.7-99.5 262.8 0 42.8 58.3 51.2 72.1 14.4l13.5-35.9H2006l13 35.9c14.2 37.7 72.1 27.2 72.1-14.4 0-10.1 5.3 6.8-99.1-262.8zm-108.9 179.1l51.7-142.9 51.8 142.9h-103.5zm591.3-85.6l-53.7 176.3c-12.4 41.2-72 41-84 0l-42.3-135.9-42.3 135.9c-12.4 40.9-72 41.2-84.5 0l-54.2-176.3c-12.5-39.4 49.8-56.1 60.2-16.9L2213 342l45.3-139.5c10.9-32.7 59.6-34.7 71.2 0l45.3 139.5 39.3-142.4c10.3-38.3 72.6-23.8 60.3 16.9zm275.4 75.1c0-42.4-33.9-117.5-119.5-117.5-73.2 0-124.4 56.3-124.4 126 0 77.2 55.3 126.4 128.5 126.4 31.7 0 93-11.5 93-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-109 8.4-115.9-43.8h148.3c16.3 0 29.3-13.4 29.3-28.9zM2571 277.7c9.5-73.4 113.9-68.6 118.6 0H2571zm316.7 148.8c-31.4 0-81.6-10.5-96.6-31.9-12.4-17 2.5-39.8 21.8-39.8 16.3 0 36.8 22.9 77.7 22.9 27.4 0 40.4-11 40.4-25.8 0-39.8-142.9-7.4-142.9-102 0-40.4 35.3-75.7 98.6-75.7 31.4 0 74.1 9.9 87.6 29.4 10.8 14.8-1.4 36.2-20.9 36.2-15.1 0-26.7-17.3-66.2-17.3-22.9 0-37.8 10.5-37.8 23.8 0 35.9 142.4 6 142.4 103.1-.1 43.7-37.4 77.1-104.1 77.1zm266.8-252.4c-169.3 0-169.1 252.4 0 252.4 170.1 0 169.6-252.4 0-252.4zm0 196.1c-81.8 0-82-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm476.9 22V268.7c0-53.8-61.4-45.8-85.7-10.5v134c0 41.3-63.8 42.1-63.8 0V268.7c0-52.1-59.5-47.4-85.7-10.1v133.6c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c9.9-14.4 41.8-37.3 78.6-37.3 35.3 0 57.7 16.4 66.7 43.8 13.9-21.8 45.8-43.8 82.6-43.8 44.3 0 70.7 23.4 70.7 72.7v145.3c.5 17.3-13.5 31.4-31.9 31.4 3.5.1-31.3 1.1-31.3-31.3zM3992 291.6c0-42.4-32.4-117.5-117.9-117.5-73.2 0-127.5 56.3-127.5 126 0 77.2 58.3 126.4 131.6 126.4 31.7 0 91.5-11.5 91.5-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-110.5 8.4-117.5-43.8h149.8c16.3 0 29.1-13.4 29.3-28.9zm-180.5-13.9c9.7-74.4 115.9-68.3 120.1 0h-120.1z"]
            },
            faFootballBall: {
                prefix: "fas",
                iconName: "football-ball",
                icon: [496, 512, [], "f44e", "M481.5 60.3c-4.8-18.2-19.1-32.5-37.3-37.4C420.3 16.5 383 8.9 339.4 8L496 164.8c-.8-43.5-8.2-80.6-14.5-104.5zm-467 391.4c4.8 18.2 19.1 32.5 37.3 37.4 23.9 6.4 61.2 14 104.8 14.9L0 347.2c.8 43.5 8.2 80.6 14.5 104.5zM4.2 283.4L220.4 500c132.5-19.4 248.8-118.7 271.5-271.4L275.6 12C143.1 31.4 26.8 130.7 4.2 283.4zm317.3-123.6c3.1-3.1 8.2-3.1 11.3 0l11.3 11.3c3.1 3.1 3.1 8.2 0 11.3l-28.3 28.3 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-28.3-28.3-22.6 22.7 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L248 278.6l-22.6 22.6 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-28.3-28.3-28.3 28.3c-3.1 3.1-8.2 3.1-11.3 0l-11.3-11.3c-3.1-3.1-3.1-8.2 0-11.3l28.3-28.3-28.3-28.2c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 22.6-22.6-28.3-28.3c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 22.6-22.6-28.3-28.3c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 28.3-28.5z"]
            },
            faForward: {
                prefix: "fas",
                iconName: "forward",
                icon: [512, 512, [], "f04e", "M500.5 231.4l-192-160C287.9 54.3 256 68.6 256 96v320c0 27.4 31.9 41.8 52.5 24.6l192-160c15.3-12.8 15.3-36.4 0-49.2zm-256 0l-192-160C31.9 54.3 0 68.6 0 96v320c0 27.4 31.9 41.8 52.5 24.6l192-160c15.3-12.8 15.3-36.4 0-49.2z"]
            },
            faFrog: {
                prefix: "fas",
                iconName: "frog",
                icon: [576, 512, [], "f52e", "M446.53 97.43C439.67 60.23 407.19 32 368 32c-39.23 0-71.72 28.29-78.54 65.54C126.75 112.96-.5 250.12 0 416.98.11 451.9 29.08 480 64 480h304c8.84 0 16-7.16 16-16 0-17.67-14.33-32-32-32h-79.49l35.8-48.33c24.14-36.23 10.35-88.28-33.71-106.6-23.89-9.93-51.55-4.65-72.24 10.88l-32.76 24.59c-7.06 5.31-17.09 3.91-22.41-3.19-5.3-7.08-3.88-17.11 3.19-22.41l34.78-26.09c36.84-27.66 88.28-27.62 125.13 0 10.87 8.15 45.87 39.06 40.8 93.21L469.62 480H560c8.84 0 16-7.16 16-16 0-17.67-14.33-32-32-32h-53.63l-98.52-104.68 154.44-86.65A58.16 58.16 0 0 0 576 189.94c0-21.4-11.72-40.95-30.48-51.23-40.56-22.22-98.99-41.28-98.99-41.28zM368 136c-13.26 0-24-10.75-24-24 0-13.26 10.74-24 24-24 13.25 0 24 10.74 24 24 0 13.25-10.75 24-24 24z"]
            },
            faFrown: {
                prefix: "fas",
                iconName: "frown",
                icon: [496, 512, [], "f119", "M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm192.7 220.3c-3 2.5-6.6 3.7-10.2 3.7-4.6 0-9.1-2-12.3-5.8-22.4-26.8-55.3-42.2-90.2-42.2s-67.8 15.4-90.2 42.2c-5.6 6.8-15.7 7.7-22.5 2-6.8-5.7-7.7-15.7-2-22.5C161.7 339.6 203.6 320 248 320s86.3 19.6 114.7 53.8c5.7 6.7 4.8 16.8-2 22.5z"]
            },
            faFutbol: {
                prefix: "fas",
                iconName: "futbol",
                icon: [512, 512, [], "f1e3", "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zm-48 0l-.003-.282-26.064 22.741-62.679-58.5 16.454-84.355 34.303 3.072c-24.889-34.216-60.004-60.089-100.709-73.141l13.651 31.939L256 139l-74.953-41.525 13.651-31.939c-40.631 13.028-75.78 38.87-100.709 73.141l34.565-3.073 16.192 84.355-62.678 58.5-26.064-22.741-.003.282c0 43.015 13.497 83.952 38.472 117.991l7.704-33.897 85.138 10.447 36.301 77.826-29.902 17.786c40.202 13.122 84.29 13.148 124.572 0l-29.902-17.786 36.301-77.826 85.138-10.447 7.704 33.897C442.503 339.952 456 299.015 456 256zm-248.102 69.571l-29.894-91.312L256 177.732l77.996 56.527-29.622 91.312h-96.476z"]
            },
            faGamepad: {
                prefix: "fas",
                iconName: "gamepad",
                icon: [640, 512, [], "f11b", "M480 96H160C71.6 96 0 167.6 0 256s71.6 160 160 160c44.8 0 85.2-18.4 114.2-48h91.5c29 29.6 69.5 48 114.2 48 88.4 0 160-71.6 160-160S568.4 96 480 96zM256 276c0 6.6-5.4 12-12 12h-52v52c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-52H76c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h52v-52c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h52c6.6 0 12 5.4 12 12v40zm184 68c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-80c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z"]
            },
            faGasPump: {
                prefix: "fas",
                iconName: "gas-pump",
                icon: [512, 512, [], "f52f", "M336 448H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h320c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm157.2-340.7l-81-81c-6.2-6.2-16.4-6.2-22.6 0l-11.3 11.3c-6.2 6.2-6.2 16.4 0 22.6L416 97.9V160c0 28.1 20.9 51.3 48 55.2V376c0 13.2-10.8 24-24 24s-24-10.8-24-24v-32c0-48.6-39.4-88-88-88h-8V64c0-35.3-28.7-64-64-64H96C60.7 0 32 28.7 32 64v352h288V304h8c22.1 0 40 17.9 40 40v27.8c0 37.7 27 72 64.5 75.9 43 4.3 79.5-29.5 79.5-71.7V152.6c0-17-6.8-33.3-18.8-45.3zM256 192H96V64h160v128z"]
            },
            faGavel: {
                prefix: "fas",
                iconName: "gavel",
                icon: [512, 512, [], "f0e3", "M504.971 199.362l-22.627-22.627c-9.373-9.373-24.569-9.373-33.941 0l-5.657 5.657L329.608 69.255l5.657-5.657c9.373-9.373 9.373-24.569 0-33.941L312.638 7.029c-9.373-9.373-24.569-9.373-33.941 0L154.246 131.48c-9.373 9.373-9.373 24.569 0 33.941l22.627 22.627c9.373 9.373 24.569 9.373 33.941 0l5.657-5.657 39.598 39.598-81.04 81.04-5.657-5.657c-12.497-12.497-32.758-12.497-45.255 0L9.373 412.118c-12.497 12.497-12.497 32.758 0 45.255l45.255 45.255c12.497 12.497 32.758 12.497 45.255 0l114.745-114.745c12.497-12.497 12.497-32.758 0-45.255l-5.657-5.657 81.04-81.04 39.598 39.598-5.657 5.657c-9.373 9.373-9.373 24.569 0 33.941l22.627 22.627c9.373 9.373 24.569 9.373 33.941 0l124.451-124.451c9.372-9.372 9.372-24.568 0-33.941z"]
            },
            faGem: {
                prefix: "fas",
                iconName: "gem",
                icon: [576, 512, [], "f3a5", "M485.5 0L576 160H474.9L405.7 0h79.8zm-128 0l69.2 160H149.3L218.5 0h139zm-267 0h79.8l-69.2 160H0L90.5 0zM0 192h100.7l123 251.7c1.5 3.1-2.7 5.9-5 3.3L0 192zm148.2 0h279.6l-137 318.2c-1 2.4-4.5 2.4-5.5 0L148.2 192zm204.1 251.7l123-251.7H576L357.3 446.9c-2.3 2.7-6.5-.1-5-3.2z"]
            },
            faGenderless: {
                prefix: "fas",
                iconName: "genderless",
                icon: [288, 512, [], "f22d", "M144 176c44.1 0 80 35.9 80 80s-35.9 80-80 80-80-35.9-80-80 35.9-80 80-80m0-64C64.5 112 0 176.5 0 256s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144z"]
            },
            faGift: {
                prefix: "fas",
                iconName: "gift",
                icon: [512, 512, [], "f06b", "M32 448c0 17.7 14.3 32 32 32h160V320H32v128zm448-288h-42.1c6.2-12.1 10.1-25.5 10.1-40 0-48.5-39.5-88-88-88-41.6 0-68.5 21.3-103 68.3-34.5-47-61.4-68.3-103-68.3-48.5 0-88 39.5-88 88 0 14.5 3.8 27.9 10.1 40H32c-17.7 0-32 14.3-32 32v80c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-80c0-17.7-14.3-32-32-32zm-326.1 0c-22.1 0-40-17.9-40-40s17.9-40 40-40c19.9 0 34.6 3.3 86.1 80h-86.1zm206.1 0h-86.1c51.4-76.5 65.7-80 86.1-80 22.1 0 40 17.9 40 40s-17.9 40-40 40zm-72 320h160c17.7 0 32-14.3 32-32V320H288v160z"]
            },
            faGlassMartini: {
                prefix: "fas",
                iconName: "glass-martini",
                icon: [512, 512, [], "f000", "M507.3 27.3c10-10 2.9-27.3-11.3-27.3H16C1.8 0-5.4 17.2 4.7 27.3L216 238.6V472h-92c-15.5 0-28 12.5-28 28 0 6.6 5.4 12 12 12h296c6.6 0 12-5.4 12-12 0-15.5-12.5-28-28-28h-92V238.6L507.3 27.3z"]
            },
            faGlasses: {
                prefix: "fas",
                iconName: "glasses",
                icon: [576, 512, [], "f530", "M574.1 280.37L528.75 98.66c-5.91-23.7-21.59-44.05-43-55.81-21.44-11.73-46.97-14.11-70.19-6.33l-15.25 5.08c-8.39 2.79-12.92 11.86-10.12 20.24l5.06 15.18c2.79 8.38 11.85 12.91 20.23 10.12l13.18-4.39c10.87-3.62 23-3.57 33.16 1.73 10.29 5.37 17.57 14.56 20.37 25.82l38.46 153.82c-22.19-6.81-49.79-12.46-81.2-12.46-34.77 0-73.98 7.02-114.85 26.74h-73.18c-40.87-19.74-80.08-26.75-114.86-26.75-31.42 0-59.02 5.65-81.21 12.46l38.46-153.83c2.79-11.25 10.09-20.45 20.38-25.81 10.16-5.3 22.28-5.35 33.15-1.73l13.17 4.39c8.38 2.79 17.44-1.74 20.23-10.12l5.06-15.18c2.8-8.38-1.73-17.45-10.12-20.24l-15.25-5.08c-23.22-7.78-48.75-5.41-70.19 6.33-21.41 11.77-37.09 32.11-43 55.8L1.9 280.37A64.218 64.218 0 0 0 0 295.86v70.25C0 429.01 51.58 480 115.2 480h37.12c60.28 0 110.37-45.94 114.88-105.37l2.93-38.63h35.75l2.93 38.63C313.31 434.06 363.4 480 423.68 480h37.12c63.62 0 115.2-50.99 115.2-113.88v-70.25c0-5.23-.64-10.43-1.9-15.5zm-370.72 89.42c-1.97 25.91-24.4 46.21-51.06 46.21H115.2C86.97 416 64 393.62 64 366.11v-37.54c18.12-6.49 43.42-12.92 72.58-12.92 23.86 0 47.26 4.33 69.93 12.92l-3.13 41.22zM512 366.12c0 27.51-22.97 49.88-51.2 49.88h-37.12c-26.67 0-49.1-20.3-51.06-46.21l-3.13-41.22c22.67-8.59 46.08-12.92 69.95-12.92 29.12 0 54.43 6.44 72.55 12.93v37.54z"]
            },
            faGlobe: {
                prefix: "fas",
                iconName: "globe",
                icon: [496, 512, [], "f0ac", "M336.5 160C322 70.7 287.8 8 248 8s-74 62.7-88.5 152h177zM152 256c0 22.2 1.2 43.5 3.3 64h185.3c2.1-20.5 3.3-41.8 3.3-64s-1.2-43.5-3.3-64H155.3c-2.1 20.5-3.3 41.8-3.3 64zm324.7-96c-28.6-67.9-86.5-120.4-158-141.6 24.4 33.8 41.2 84.7 50 141.6h108zM177.2 18.4C105.8 39.6 47.8 92.1 19.3 160h108c8.7-56.9 25.5-107.8 49.9-141.6zM487.4 192H372.7c2.1 21 3.3 42.5 3.3 64s-1.2 43-3.3 64h114.6c5.5-20.5 8.6-41.8 8.6-64s-3.1-43.5-8.5-64zM120 256c0-21.5 1.2-43 3.3-64H8.6C3.2 212.5 0 233.8 0 256s3.2 43.5 8.6 64h114.6c-2-21-3.2-42.5-3.2-64zm39.5 96c14.5 89.3 48.7 152 88.5 152s74-62.7 88.5-152h-177zm159.3 141.6c71.4-21.2 129.4-73.7 158-141.6h-108c-8.8 56.9-25.6 107.8-50 141.6zM19.3 352c28.6 67.9 86.5 120.4 158 141.6-24.4-33.8-41.2-84.7-50-141.6h-108z"]
            },
            faGolfBall: {
                prefix: "fas",
                iconName: "golf-ball",
                icon: [416, 512, [], "f450", "M96 416h224c0 17.7-14.3 32-32 32h-16c-17.7 0-32 14.3-32 32v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-20c0-17.7-14.3-32-32-32h-16c-17.7 0-32-14.3-32-32zm320-208c0 74.2-39 139.2-97.5 176h-221C39 347.2 0 282.2 0 208 0 93.1 93.1 0 208 0s208 93.1 208 208zm-180.1 43.9c18.3 0 33.1-14.8 33.1-33.1 0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1zm49.1 46.9c0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1 18.3 0 33.1-14.9 33.1-33.1zm64-64c0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1 18.3 0 33.1-14.9 33.1-33.1z"]
            },
            faGraduationCap: {
                prefix: "fas",
                iconName: "graduation-cap",
                icon: [640, 512, [], "f19d", "M622.884 199.005l-275.817 85.1a96 96 0 0 1-54.134 0L92.398 222.232c-8.564 11.438-11.018 23.05-11.918 38.335C89.778 266.165 96 276.355 96 288c0 11.952-6.557 22.366-16.265 27.861l16.197 123.096c.63 4.786-3.1 9.043-7.932 9.043H40c-4.828 0-8.562-4.253-7.932-9.044L48.265 315.86C38.557 310.366 32 299.952 32 288c0-12.034 6.646-22.511 16.465-27.976.947-17.951 3.974-33.231 12.152-47.597l-43.502-13.422c-22.876-6.801-22.766-39.241 0-46.01l275.817-85.1a96 96 0 0 1 54.134 0l275.817 85.1c22.877 6.801 22.767 39.241.001 46.01zM356.503 314.682l-.207.064-.207.061a127.998 127.998 0 0 1-72.177 0l-.207-.061-.207-.064-150.914-46.57L120 352c0 35.346 89.543 64 200 64s200-28.654 200-64l-12.583-83.888-150.914 46.57z"]
            },
            faGreaterThan: {
                prefix: "fas",
                iconName: "greater-than",
                icon: [384, 512, [], "f531", "M365.52 209.85L59.22 67.01c-16.06-7.49-35.15-.54-42.64 15.52L3.01 111.61c-7.49 16.06-.54 35.15 15.52 42.64L236.96 256.1 18.49 357.99C2.47 365.46-4.46 384.5 3.01 400.52l13.52 29C24 445.54 43.04 452.47 59.06 445l306.47-142.91a32.003 32.003 0 0 0 18.48-29v-34.23c-.01-12.45-7.21-23.76-18.49-29.01z"]
            },
            faGreaterThanEqual: {
                prefix: "fas",
                iconName: "greater-than-equal",
                icon: [448, 512, [], "f532", "M55.22 107.69l175.56 68.09-175.44 68.05c-18.39 6.03-27.88 24.39-21.2 41l12.09 30.08c6.68 16.61 26.99 25.19 45.38 19.15L393.02 214.2c13.77-4.52 22.98-16.61 22.98-30.17v-15.96c0-13.56-9.21-25.65-22.98-30.17L91.3 17.92c-18.29-6-38.51 2.53-45.15 19.06L34.12 66.9c-6.64 16.53 2.81 34.79 21.1 40.79zM424 400H24c-13.25 0-24 10.74-24 24v48c0 13.25 10.75 24 24 24h400c13.25 0 24-10.75 24-24v-48c0-13.26-10.75-24-24-24z"]
            },
            faHSquare: {
                prefix: "fas",
                iconName: "h-square",
                icon: [448, 512, [], "f0fd", "M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zm-112 48h-32c-8.837 0-16 7.163-16 16v80H160v-80c0-8.837-7.163-16-16-16h-32c-8.837 0-16 7.163-16 16v224c0 8.837 7.163 16 16 16h32c8.837 0 16-7.163 16-16v-80h128v80c0 8.837 7.163 16 16 16h32c8.837 0 16-7.163 16-16V144c0-8.837-7.163-16-16-16z"]
            },
            faHandHolding: {
                prefix: "fas",
                iconName: "hand-holding",
                icon: [576, 512, [], "f4bd", "M565.3 328.1c-11.8-10.7-30.2-10-42.6 0L430.3 402c-11.3 9.1-25.4 14-40 14H272c-8.8 0-16-7.2-16-16s7.2-16 16-16h78.3c15.9 0 30.7-10.9 33.3-26.6 3.3-20-12.1-37.4-31.6-37.4H192c-27 0-53.1 9.3-74.1 26.3L71.4 384H16c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16h356.8c14.5 0 28.6-4.9 40-14L564 377c15.2-12.1 16.4-35.3 1.3-48.9z"]
            },
            faHandHoldingHeart: {
                prefix: "fas",
                iconName: "hand-holding-heart",
                icon: [576, 512, [], "f4be", "M275.3 250.5c7 7.4 18.4 7.4 25.5 0l108.9-114.2c31.6-33.2 29.8-88.2-5.6-118.8-30.8-26.7-76.7-21.9-104.9 7.7L288 36.9l-11.1-11.6C248.7-4.4 202.8-9.2 172 17.5c-35.3 30.6-37.2 85.6-5.6 118.8l108.9 114.2zm290 77.6c-11.8-10.7-30.2-10-42.6 0L430.3 402c-11.3 9.1-25.4 14-40 14H272c-8.8 0-16-7.2-16-16s7.2-16 16-16h78.3c15.9 0 30.7-10.9 33.3-26.6 3.3-20-12.1-37.4-31.6-37.4H192c-27 0-53.1 9.3-74.1 26.3L71.4 384H16c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16h356.8c14.5 0 28.6-4.9 40-14L564 377c15.2-12.1 16.4-35.3 1.3-48.9z"]
            },
            faHandHoldingUsd: {
                prefix: "fas",
                iconName: "hand-holding-usd",
                icon: [544, 512, [], "f4c0", "M257.6 144.3l50 14.3c3.6 1 6.1 4.4 6.1 8.1 0 4.6-3.8 8.4-8.4 8.4h-32.8c-3.6 0-7.1-.8-10.3-2.2-4.8-2.2-10.4-1.7-14.1 2l-17.5 17.5c-5.3 5.3-4.7 14.3 1.5 18.4 9.5 6.3 20.3 10.1 31.8 11.5V240c0 8.8 7.2 16 16 16h16c8.8 0 16-7.2 16-16v-17.6c30.3-3.6 53.3-31 49.3-63-2.9-23-20.7-41.3-42.9-47.7l-50-14.3c-3.6-1-6.1-4.4-6.1-8.1 0-4.6 3.8-8.4 8.4-8.4h32.8c3.6 0 7.1.8 10.3 2.2 4.8 2.2 10.4 1.7 14.1-2l17.5-17.5c5.3-5.3 4.7-14.3-1.5-18.4-9.5-6.3-20.3-10.1-31.8-11.5V16c0-8.8-7.2-16-16-16h-16c-8.8 0-16 7.2-16 16v17.6c-30.3 3.6-53.3 31-49.3 63 2.9 23 20.7 41.3 42.9 47.7zm276.3 183.8c-11.2-10.7-28.5-10-40.3 0L406.4 402c-10.7 9.1-24 14-37.8 14H256.9c-8.3 0-15.1-7.2-15.1-16s6.8-16 15.1-16h73.9c15.1 0 29-10.9 31.4-26.6 3.1-20-11.5-37.4-29.8-37.4H181.3c-25.5 0-50.2 9.3-69.9 26.3L67.5 384H15.1C6.8 384 0 391.2 0 400v96c0 8.8 6.8 16 15.1 16H352c13.7 0 27-4.9 37.8-14l142.8-121c14.4-12.1 15.5-35.3 1.3-48.9z"]
            },
            faHandLizard: {
                prefix: "fas",
                iconName: "hand-lizard",
                icon: [576, 512, [], "f258", "M384 480h192V363.778a95.998 95.998 0 0 0-14.833-51.263L398.127 54.368A48 48 0 0 0 357.544 32H24C10.745 32 0 42.745 0 56v16c0 30.928 25.072 56 56 56h229.981c12.844 0 21.556 13.067 16.615 24.923l-21.41 51.385A32 32 0 0 1 251.648 224H128c-35.346 0-64 28.654-64 64v8c0 13.255 10.745 24 24 24h147.406a47.995 47.995 0 0 1 25.692 7.455l111.748 70.811A24.001 24.001 0 0 1 384 418.539V480z"]
            },
            faHandPaper: {
                prefix: "fas",
                iconName: "hand-paper",
                icon: [448, 512, [], "f256", "M408.781 128.007C386.356 127.578 368 146.36 368 168.79V256h-8V79.79c0-22.43-18.356-41.212-40.781-40.783C297.488 39.423 280 57.169 280 79v177h-8V40.79C272 18.36 253.644-.422 231.219.007 209.488.423 192 18.169 192 40v216h-8V80.79c0-22.43-18.356-41.212-40.781-40.783C121.488 40.423 104 58.169 104 80v235.992l-31.648-43.519c-12.993-17.866-38.009-21.817-55.877-8.823-17.865 12.994-21.815 38.01-8.822 55.877l125.601 172.705A48 48 0 0 0 172.073 512h197.59c22.274 0 41.622-15.324 46.724-37.006l26.508-112.66a192.011 192.011 0 0 0 5.104-43.975V168c.001-21.831-17.487-39.577-39.218-39.993z"]
            },
            faHandPeace: {
                prefix: "fas",
                iconName: "hand-peace",
                icon: [448, 512, [], "f25b", "M408 216c-22.092 0-40 17.909-40 40h-8v-32c0-22.091-17.908-40-40-40s-40 17.909-40 40v32h-8V48c0-26.51-21.49-48-48-48s-48 21.49-48 48v208h-13.572L92.688 78.449C82.994 53.774 55.134 41.63 30.461 51.324 5.787 61.017-6.356 88.877 3.337 113.551l74.765 190.342-31.09 24.872c-15.381 12.306-19.515 33.978-9.741 51.081l64 112A39.998 39.998 0 0 0 136 512h240c18.562 0 34.686-12.77 38.937-30.838l32-136A39.97 39.97 0 0 0 448 336v-80c0-22.091-17.908-40-40-40z"]
            },
            faHandPointDown: {
                prefix: "fas",
                iconName: "hand-point-down",
                icon: [384, 512, [], "f0a7", "M91.826 467.2V317.966c-8.248 5.841-16.558 10.57-24.918 14.153C35.098 345.752-.014 322.222 0 288c.008-18.616 10.897-32.203 29.092-40 28.286-12.122 64.329-78.648 77.323-107.534 7.956-17.857 25.479-28.453 43.845-28.464l.001-.002h171.526c11.812 0 21.897 8.596 23.703 20.269 7.25 46.837 38.483 61.76 38.315 123.731-.007 2.724.195 13.254.195 16 0 50.654-22.122 81.574-71.263 72.6-9.297 18.597-39.486 30.738-62.315 16.45-21.177 24.645-53.896 22.639-70.944 6.299V467.2c0 24.15-20.201 44.8-43.826 44.8-23.283 0-43.826-21.35-43.826-44.8zM112 72V24c0-13.255 10.745-24 24-24h192c13.255 0 24 10.745 24 24v48c0 13.255-10.745 24-24 24H136c-13.255 0-24-10.745-24-24zm212-24c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20z"]
            },
            faHandPointLeft: {
                prefix: "fas",
                iconName: "hand-point-left",
                icon: [512, 512, [], "f0a5", "M44.8 155.826h149.234c-5.841-8.248-10.57-16.558-14.153-24.918C166.248 99.098 189.778 63.986 224 64c18.616.008 32.203 10.897 40 29.092 12.122 28.286 78.648 64.329 107.534 77.323 17.857 7.956 28.453 25.479 28.464 43.845l.002.001v171.526c0 11.812-8.596 21.897-20.269 23.703-46.837 7.25-61.76 38.483-123.731 38.315-2.724-.007-13.254.195-16 .195-50.654 0-81.574-22.122-72.6-71.263-18.597-9.297-30.738-39.486-16.45-62.315-24.645-21.177-22.639-53.896-6.299-70.944H44.8c-24.15 0-44.8-20.201-44.8-43.826 0-23.283 21.35-43.826 44.8-43.826zM440 176h48c13.255 0 24 10.745 24 24v192c0 13.255-10.745 24-24 24h-48c-13.255 0-24-10.745-24-24V200c0-13.255 10.745-24 24-24zm24 212c11.046 0 20-8.954 20-20s-8.954-20-20-20-20 8.954-20 20 8.954 20 20 20z"]
            },
            faHandPointRight: {
                prefix: "fas",
                iconName: "hand-point-right",
                icon: [512, 512, [], "f0a4", "M512 199.652c0 23.625-20.65 43.826-44.8 43.826h-99.851c16.34 17.048 18.346 49.766-6.299 70.944 14.288 22.829 2.147 53.017-16.45 62.315C353.574 425.878 322.654 448 272 448c-2.746 0-13.276-.203-16-.195-61.971.168-76.894-31.065-123.731-38.315C120.596 407.683 112 397.599 112 385.786V214.261l.002-.001c.011-18.366 10.607-35.889 28.464-43.845 28.886-12.994 95.413-49.038 107.534-77.323 7.797-18.194 21.384-29.084 40-29.092 34.222-.014 57.752 35.098 44.119 66.908-3.583 8.359-8.312 16.67-14.153 24.918H467.2c23.45 0 44.8 20.543 44.8 43.826zM96 200v192c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V200c0-13.255 10.745-24 24-24h48c13.255 0 24 10.745 24 24zM68 368c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20z"]
            },
            faHandPointUp: {
                prefix: "fas",
                iconName: "hand-point-up",
                icon: [384, 512, [], "f0a6", "M135.652 0c23.625 0 43.826 20.65 43.826 44.8v99.851c17.048-16.34 49.766-18.346 70.944 6.299 22.829-14.288 53.017-2.147 62.315 16.45C361.878 158.426 384 189.346 384 240c0 2.746-.203 13.276-.195 16 .168 61.971-31.065 76.894-38.315 123.731C343.683 391.404 333.599 400 321.786 400H150.261l-.001-.002c-18.366-.011-35.889-10.607-43.845-28.464C93.421 342.648 57.377 276.122 29.092 264 10.897 256.203.008 242.616 0 224c-.014-34.222 35.098-57.752 66.908-44.119 8.359 3.583 16.67 8.312 24.918 14.153V44.8c0-23.45 20.543-44.8 43.826-44.8zM136 416h192c13.255 0 24 10.745 24 24v48c0 13.255-10.745 24-24 24H136c-13.255 0-24-10.745-24-24v-48c0-13.255 10.745-24 24-24zm168 28c-11.046 0-20 8.954-20 20s8.954 20 20 20 20-8.954 20-20-8.954-20-20-20z"]
            },
            faHandPointer: {
                prefix: "fas",
                iconName: "hand-pointer",
                icon: [448, 512, [], "f25a", "M448 240v96c0 3.084-.356 6.159-1.063 9.162l-32 136C410.686 499.23 394.562 512 376 512H168a40.004 40.004 0 0 1-32.35-16.473l-127.997-176c-12.993-17.866-9.043-42.883 8.822-55.876 17.867-12.994 42.884-9.043 55.877 8.823L104 315.992V40c0-22.091 17.908-40 40-40s40 17.909 40 40v200h8v-40c0-22.091 17.908-40 40-40s40 17.909 40 40v40h8v-24c0-22.091 17.908-40 40-40s40 17.909 40 40v24h8c0-22.091 17.908-40 40-40s40 17.909 40 40zm-256 80h-8v96h8v-96zm88 0h-8v96h8v-96zm88 0h-8v96h8v-96z"]
            },
            faHandRock: {
                prefix: "fas",
                iconName: "hand-rock",
                icon: [512, 512, [], "f255", "M512 128.79c0-26.322-20.861-48.344-47.18-48.783C437.935 79.558 416 101.217 416 128h-8V96.79c0-26.322-20.861-48.344-47.18-48.783C333.935 47.558 312 69.217 312 96v32h-8V80.79c0-26.322-20.861-48.344-47.18-48.783C229.935 31.558 208 53.217 208 80v48h-8V96.79c0-26.322-20.861-48.344-47.18-48.783C125.935 47.558 104 69.217 104 96v136l-8-7.111V176.79c0-26.322-20.861-48.344-47.18-48.783C21.935 127.558 0 149.217 0 176v66.445a95.998 95.998 0 0 0 32.221 71.751l111.668 99.261A47.999 47.999 0 0 1 160 449.333V456c0 13.255 10.745 24 24 24h240c13.255 0 24-10.745 24-24v-2.921a96.01 96.01 0 0 1 7.523-37.254l48.954-116.265A96.002 96.002 0 0 0 512 262.306V128.79z"]
            },
            faHandScissors: {
                prefix: "fas",
                iconName: "hand-scissors",
                icon: [512, 512, [], "f257", "M216 440c0-22.092 17.909-40 40-40v-8h-32c-22.091 0-40-17.908-40-40s17.909-40 40-40h32v-8H48c-26.51 0-48-21.49-48-48s21.49-48 48-48h208v-13.572l-177.551-69.74c-24.674-9.694-36.818-37.555-27.125-62.228 9.693-24.674 37.554-36.817 62.228-27.124l190.342 74.765 24.872-31.09c12.306-15.381 33.978-19.515 51.081-9.741l112 64A40.002 40.002 0 0 1 512 168v240c0 18.562-12.77 34.686-30.838 38.937l-136 32A39.982 39.982 0 0 1 336 480h-80c-22.091 0-40-17.908-40-40z"]
            },
            faHandSpock: {
                prefix: "fas",
                iconName: "hand-spock",
                icon: [512, 512, [], "f259", "M10.872 316.585c15.139-16.086 40.454-16.854 56.543-1.713L128 371.893v-79.405L88.995 120.865c-4.896-21.542 8.598-42.974 30.14-47.87 21.549-4.894 42.975 8.599 47.87 30.141L201.747 256h9.833L164.016 48.966c-4.946-21.531 8.498-42.994 30.028-47.94 21.532-4.95 42.994 8.498 47.94 30.028L293.664 256h15.105l48.425-193.702c5.357-21.432 27.075-34.462 48.507-29.104 21.432 5.358 34.463 27.075 29.104 48.507L391.231 256h11.08l30.768-129.265c5.117-21.491 26.685-34.768 48.177-29.647 21.491 5.117 34.765 26.686 29.647 48.177l-36.292 152.467A96.024 96.024 0 0 0 472 319.967v42.102a96.002 96.002 0 0 1-3.96 27.287l-26.174 88.287C435.825 498.022 417.101 512 395.846 512H179.172a48.002 48.002 0 0 1-32.898-13.046L12.585 373.128c-16.087-15.141-16.853-40.456-1.713-56.543z"]
            },
            faHands: {
                prefix: "fas",
                iconName: "hands",
                icon: [640, 512, [], "f4c2", "M204.8 230.4c-10.6-14.1-30.7-17-44.8-6.4-14.1 10.6-17 30.7-6.4 44.8l38.1 50.8c4.8 6.4 4.1 15.3-1.5 20.9l-12.8 12.8c-6.7 6.7-17.6 6.2-23.6-1.1L64 244.4V96c0-17.7-14.3-32-32-32S0 78.3 0 96v218.4c0 10.9 3.7 21.5 10.5 30l104.1 134.3c5 6.5 8.4 13.9 10.4 21.7 1.8 6.9 8.1 11.6 15.3 11.6H272c8.8 0 16-7.2 16-16V384c0-27.7-9-54.6-25.6-76.8l-57.6-76.8zM608 64c-17.7 0-32 14.3-32 32v148.4l-89.8 107.8c-6 7.2-17 7.7-23.6 1.1l-12.8-12.8c-5.6-5.6-6.3-14.5-1.5-20.9l38.1-50.8c10.6-14.1 7.7-34.2-6.4-44.8-14.1-10.6-34.2-7.7-44.8 6.4l-57.6 76.8C361 329.4 352 356.3 352 384v112c0 8.8 7.2 16 16 16h131.7c7.1 0 13.5-4.7 15.3-11.6 2-7.8 5.4-15.2 10.4-21.7l104.1-134.3c6.8-8.5 10.5-19.1 10.5-30V96c0-17.7-14.3-32-32-32z"]
            },
            faHandsHelping: {
                prefix: "fas",
                iconName: "hands-helping",
                icon: [640, 512, [], "f4c4", "M488 192H336v56c0 39.7-32.3 72-72 72s-72-32.3-72-72V126.4l-64.9 39C107.8 176.9 96 197.8 96 220.2v47.3l-80 46.2C.7 322.5-4.6 342.1 4.3 357.4l80 138.6c8.8 15.3 28.4 20.5 43.7 11.7L231.4 448H368c35.3 0 64-28.7 64-64h16c17.7 0 32-14.3 32-32v-64h8c13.3 0 24-10.7 24-24v-48c0-13.3-10.7-24-24-24zm147.7-37.4L555.7 16C546.9.7 527.3-4.5 512 4.3L408.6 64H306.4c-12 0-23.7 3.4-33.9 9.7L239 94.6c-9.4 5.8-15 16.1-15 27.1V248c0 22.1 17.9 40 40 40s40-17.9 40-40v-88h184c30.9 0 56 25.1 56 56v28.5l80-46.2c15.3-8.9 20.5-28.4 11.7-43.7z"]
            },
            faHandshake: {
                prefix: "fas",
                iconName: "handshake",
                icon: [640, 512, [], "f2b5", "M434.7 64h-85.9c-8 0-15.7 3-21.6 8.4l-98.3 90c-.1.1-.2.3-.3.4-16.6 15.6-16.3 40.5-2.1 56 12.7 13.9 39.4 17.6 56.1 2.7.1-.1.3-.1.4-.2l79.9-73.2c6.5-5.9 16.7-5.5 22.6 1 6 6.5 5.5 16.6-1 22.6l-26.1 23.9L504 313.8c2.9 2.4 5.5 5 7.9 7.7V128l-54.6-54.6c-5.9-6-14.1-9.4-22.6-9.4zM544 128.2v223.9c0 17.7 14.3 32 32 32h64V128.2h-96zm48 223.9c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zM0 384h64c17.7 0 32-14.3 32-32V128.2H0V384zm48-63.9c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16c0-8.9 7.2-16 16-16zm435.9 18.6L334.6 217.5l-30 27.5c-29.7 27.1-75.2 24.5-101.7-4.4-26.9-29.4-24.8-74.9 4.4-101.7L289.1 64h-83.8c-8.5 0-16.6 3.4-22.6 9.4L128 128v223.9h18.3l90.5 81.9c27.4 22.3 67.7 18.1 90-9.3l.2-.2 17.9 15.5c15.9 13 39.4 10.5 52.3-5.4l31.4-38.6 5.4 4.4c13.7 11.1 33.9 9.1 45-4.7l9.5-11.7c11.2-13.8 9.1-33.9-4.6-45.1z"]
            },
            faHashtag: {
                prefix: "fas",
                iconName: "hashtag",
                icon: [448, 512, [], "f292", "M440.667 182.109l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l14.623-81.891C377.123 38.754 371.468 32 363.997 32h-40.632a12 12 0 0 0-11.813 9.891L296.175 128H197.54l14.623-81.891C213.477 38.754 207.822 32 200.35 32h-40.632a12 12 0 0 0-11.813 9.891L132.528 128H53.432a12 12 0 0 0-11.813 9.891l-7.143 40C33.163 185.246 38.818 192 46.289 192h74.81L98.242 320H19.146a12 12 0 0 0-11.813 9.891l-7.143 40C-1.123 377.246 4.532 384 12.003 384h74.81L72.19 465.891C70.877 473.246 76.532 480 84.003 480h40.632a12 12 0 0 0 11.813-9.891L151.826 384h98.634l-14.623 81.891C234.523 473.246 240.178 480 247.65 480h40.632a12 12 0 0 0 11.813-9.891L315.472 384h79.096a12 12 0 0 0 11.813-9.891l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l22.857-128h79.096a12 12 0 0 0 11.813-9.891zM261.889 320h-98.634l22.857-128h98.634l-22.857 128z"]
            },
            faHdd: {
                prefix: "fas",
                iconName: "hdd",
                icon: [576, 512, [], "f0a0", "M576 304v96c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48v-96c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48zm-48-80a79.557 79.557 0 0 1 30.777 6.165L462.25 85.374A48.003 48.003 0 0 0 422.311 64H153.689a48 48 0 0 0-39.938 21.374L17.223 230.165A79.557 79.557 0 0 1 48 224h480zm-48 96c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm-96 0c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z"]
            },
            faHeading: {
                prefix: "fas",
                iconName: "heading",
                icon: [512, 512, [], "f1dc", "M496 80V48c0-8.837-7.163-16-16-16H320c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h37.621v128H154.379V96H192c8.837 0 16-7.163 16-16V48c0-8.837-7.163-16-16-16H32c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h37.275v320H32c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h160c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16h-37.621V288H357.62v128H320c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h160c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16h-37.275V96H480c8.837 0 16-7.163 16-16z"]
            },
            faHeadphones: {
                prefix: "fas",
                iconName: "headphones",
                icon: [512, 512, [], "f025", "M256 32C114.52 32 0 146.496 0 288v48a32 32 0 0 0 17.689 28.622l14.383 7.191C34.083 431.903 83.421 480 144 480h24c13.255 0 24-10.745 24-24V280c0-13.255-10.745-24-24-24h-24c-31.342 0-59.671 12.879-80 33.627V288c0-105.869 86.131-192 192-192s192 86.131 192 192v1.627C427.671 268.879 399.342 256 368 256h-24c-13.255 0-24 10.745-24 24v176c0 13.255 10.745 24 24 24h24c60.579 0 109.917-48.098 111.928-108.187l14.382-7.191A32 32 0 0 0 512 336v-48c0-141.479-114.496-256-256-256z"]
            },
            faHeart: {
                prefix: "fas",
                iconName: "heart",
                icon: [512, 512, [], "f004", "M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z"]
            },
            faHeartbeat: {
                prefix: "fas",
                iconName: "heartbeat",
                icon: [512, 512, [], "f21e", "M320.2 243.8l-49.7 99.4c-6 12.1-23.4 11.7-28.9-.6l-56.9-126.3-30 71.7H60.6l182.5 186.5c7.1 7.3 18.6 7.3 25.7 0L451.4 288H342.3l-22.1-44.2zM473.7 73.9l-2.4-2.5c-51.5-52.6-135.8-52.6-187.4 0L256 100l-27.9-28.5c-51.5-52.7-135.9-52.7-187.4 0l-2.4 2.4C-10.4 123.7-12.5 203 31 256h102.4l35.9-86.2c5.4-12.9 23.6-13.2 29.4-.4l58.2 129.3 49-97.9c5.9-11.8 22.7-11.8 28.6 0l27.6 55.2H481c43.5-53 41.4-132.3-7.3-182.1z"]
            },
            faHelicopter: {
                prefix: "fas",
                iconName: "helicopter",
                icon: [640, 512, [], "f533", "M304 384h272c17.67 0 32-14.33 32-32 0-123.71-100.29-224-224-224V64h176c8.84 0 16-7.16 16-16V16c0-8.84-7.16-16-16-16H144c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h176v64H112L68.8 70.4C65.78 66.37 61.03 64 56 64H16.01C5.6 64-2.04 73.78.49 83.88L32 192l160 64 86.4 115.2A31.992 31.992 0 0 0 304 384zm112-188.49C478.55 208.3 528.03 257.44 540.79 320H416V195.51zm219.37 263.3l-22.15-22.2c-6.25-6.26-16.24-6.1-22.64.01-7.09 6.77-13.84 11.25-24.64 11.25H240c-8.84 0-16 7.18-16 16.03v32.06c0 8.85 7.16 16.03 16 16.03h325.94c14.88 0 35.3-.47 68.45-29.52 7.02-6.14 7.57-17.05.98-23.66z"]
            },
            faHistory: {
                prefix: "fas",
                iconName: "history",
                icon: [512, 512, [], "f1da", "M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"]
            },
            faHockeyPuck: {
                prefix: "fas",
                iconName: "hockey-puck",
                icon: [512, 512, [], "f453", "M0 160c0-53 114.6-96 256-96s256 43 256 96-114.6 96-256 96S0 213 0 160zm0 82.2V352c0 53 114.6 96 256 96s256-43 256-96V242.2c-113.4 82.3-398.5 82.4-512 0z"]
            },
            faHome: {
                prefix: "fas",
                iconName: "home",
                icon: [576, 512, [], "f015", "M488 312.7V456c0 13.3-10.7 24-24 24H348c-6.6 0-12-5.4-12-12V356c0-6.6-5.4-12-12-12h-72c-6.6 0-12 5.4-12 12v112c0 6.6-5.4 12-12 12H112c-13.3 0-24-10.7-24-24V312.7c0-3.6 1.6-7 4.4-9.3l188-154.8c4.4-3.6 10.8-3.6 15.3 0l188 154.8c2.7 2.3 4.3 5.7 4.3 9.3zm83.6-60.9L488 182.9V44.4c0-6.6-5.4-12-12-12h-56c-6.6 0-12 5.4-12 12V117l-89.5-73.7c-17.7-14.6-43.3-14.6-61 0L4.4 251.8c-5.1 4.2-5.8 11.8-1.6 16.9l25.5 31c4.2 5.1 11.8 5.8 16.9 1.6l235.2-193.7c4.4-3.6 10.8-3.6 15.3 0l235.2 193.7c5.1 4.2 12.7 3.5 16.9-1.6l25.5-31c4.2-5.2 3.4-12.7-1.7-16.9z"]
            },
            faHospital: {
                prefix: "fas",
                iconName: "hospital",
                icon: [448, 512, [], "f0f8", "M448 492v20H0v-20c0-6.627 5.373-12 12-12h20V120c0-13.255 10.745-24 24-24h88V24c0-13.255 10.745-24 24-24h112c13.255 0 24 10.745 24 24v72h88c13.255 0 24 10.745 24 24v360h20c6.627 0 12 5.373 12 12zM308 192h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zm-168 64h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12zm104 128h-40c-6.627 0-12 5.373-12 12v84h64v-84c0-6.627-5.373-12-12-12zm64-96h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zm-116 12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40zM182 96h26v26a6 6 0 0 0 6 6h20a6 6 0 0 0 6-6V96h26a6 6 0 0 0 6-6V70a6 6 0 0 0-6-6h-26V38a6 6 0 0 0-6-6h-20a6 6 0 0 0-6 6v26h-26a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6z"]
            },
            faHospitalAlt: {
                prefix: "fas",
                iconName: "hospital-alt",
                icon: [576, 512, [], "f47d", "M544 96H416V32c0-17.7-14.3-32-32-32H192c-17.7 0-32 14.3-32 32v64H32c-17.7 0-32 14.3-32 32v368c0 8.8 7.2 16 16 16h544c8.8 0 16-7.2 16-16V128c0-17.7-14.3-32-32-32zM160 436c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm160 128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm16-170c0 3.3-2.7 6-6 6h-26v26c0 3.3-2.7 6-6 6h-20c-3.3 0-6-2.7-6-6v-26h-26c-3.3 0-6-2.7-6-6v-20c0-3.3 2.7-6 6-6h26V86c0-3.3 2.7-6 6-6h20c3.3 0 6 2.7 6 6v26h26c3.3 0 6 2.7 6 6v20zm144 298c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z"]
            },
            faHospitalSymbol: {
                prefix: "fas",
                iconName: "hospital-symbol",
                icon: [512, 512, [], "f47e", "M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm112 376c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-88h-96v88c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V136c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v88h96v-88c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v240z"]
            },
            faHourglass: {
                prefix: "fas",
                iconName: "hourglass",
                icon: [384, 512, [], "f254", "M360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64z"]
            },
            faHourglassEnd: {
                prefix: "fas",
                iconName: "hourglass-end",
                icon: [384, 512, [], "f253", "M360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64zM192 208c-57.787 0-104-66.518-104-144h208c0 77.945-46.51 144-104 144z"]
            },
            faHourglassHalf: {
                prefix: "fas",
                iconName: "hourglass-half",
                icon: [384, 512, [], "f252", "M360 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24zm-75.078 384H99.08c17.059-46.797 52.096-80 92.92-80 40.821 0 75.862 33.196 92.922 80zm.019-256H99.078C91.988 108.548 88 86.748 88 64h208c0 22.805-3.987 44.587-11.059 64z"]
            },
            faHourglassStart: {
                prefix: "fas",
                iconName: "hourglass-start",
                icon: [384, 512, [], "f251", "M360 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24zm-64 448H88c0-77.458 46.204-144 104-144 57.786 0 104 66.517 104 144z"]
            },
            faICursor: {
                prefix: "fas",
                iconName: "i-cursor",
                icon: [256, 512, [], "f246", "M256 52.048V12.065C256 5.496 250.726.148 244.158.066 211.621-.344 166.469.011 128 37.959 90.266.736 46.979-.114 11.913.114 5.318.157 0 5.519 0 12.114v39.645c0 6.687 5.458 12.078 12.145 11.998C38.111 63.447 96 67.243 96 112.182V224H60c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h36v112c0 44.932-56.075 48.031-83.95 47.959C5.404 447.942 0 453.306 0 459.952v39.983c0 6.569 5.274 11.917 11.842 11.999 32.537.409 77.689.054 116.158-37.894 37.734 37.223 81.021 38.073 116.087 37.845 6.595-.043 11.913-5.405 11.913-12V460.24c0-6.687-5.458-12.078-12.145-11.998C217.889 448.553 160 444.939 160 400V288h36c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-36V112.182c0-44.932 56.075-48.213 83.95-48.142 6.646.018 12.05-5.346 12.05-11.992z"]
            },
            faIdBadge: {
                prefix: "fas",
                iconName: "id-badge",
                icon: [384, 512, [], "f2c1", "M336 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM144 32h96c8.8 0 16 7.2 16 16s-7.2 16-16 16h-96c-8.8 0-16-7.2-16-16s7.2-16 16-16zm48 128c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H102.4C90 416 80 407.4 80 396.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2z"]
            },
            faIdCard: {
                prefix: "fas",
                iconName: "id-card",
                icon: [576, 512, [], "f2c2", "M528 32H48C21.5 32 0 53.5 0 80v16h576V80c0-26.5-21.5-48-48-48zM0 432c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V128H0v304zm352-232c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16zm0 64c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16zm0 64c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16zM176 192c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zM67.1 396.2C75.5 370.5 99.6 352 128 352h8.2c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h8.2c28.4 0 52.5 18.5 60.9 44.2 3.2 9.9-5.2 19.8-15.6 19.8H82.7c-10.4 0-18.8-10-15.6-19.8z"]
            },
            faIdCardAlt: {
                prefix: "fas",
                iconName: "id-card-alt",
                icon: [576, 512, [], "f47f", "M528 64H384v96H192V64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM288 224c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm93.3 224H194.7c-10.4 0-18.8-10-15.6-19.8 8.3-25.6 32.4-44.2 60.9-44.2h8.2c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h8.2c28.4 0 52.5 18.5 60.9 44.2 3.2 9.8-5.2 19.8-15.6 19.8zM352 32c0-17.7-14.3-32-32-32h-64c-17.7 0-32 14.3-32 32v96h128V32z"]
            },
            faImage: {
                prefix: "fas",
                iconName: "image",
                icon: [512, 512, [], "f03e", "M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48z"]
            },
            faImages: {
                prefix: "fas",
                iconName: "images",
                icon: [576, 512, [], "f302", "M480 416v16c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V176c0-26.51 21.49-48 48-48h16v208c0 44.112 35.888 80 80 80h336zm96-80V80c0-26.51-21.49-48-48-48H144c-26.51 0-48 21.49-48 48v256c0 26.51 21.49 48 48 48h384c26.51 0 48-21.49 48-48zM256 128c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-96 144l55.515-55.515c4.686-4.686 12.284-4.686 16.971 0L272 256l135.515-135.515c4.686-4.686 12.284-4.686 16.971 0L512 208v112H160v-48z"]
            },
            faInbox: {
                prefix: "fas",
                iconName: "inbox",
                icon: [576, 512, [], "f01c", "M567.938 243.908L462.25 85.374A48.003 48.003 0 0 0 422.311 64H153.689a48 48 0 0 0-39.938 21.374L8.062 243.908A47.994 47.994 0 0 0 0 270.533V400c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V270.533a47.994 47.994 0 0 0-8.062-26.625zM162.252 128h251.497l85.333 128H376l-32 64H232l-32-64H76.918l85.334-128z"]
            },
            faIndent: {
                prefix: "fas",
                iconName: "indent",
                icon: [448, 512, [], "f03c", "M0 84V44c0-8.837 7.163-16 16-16h416c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16zm176 144h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H176c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM16 484h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm160-128h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H176c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm-52.687-111.313l-96-95.984C17.266 138.652 0 145.776 0 160.016v191.975c0 14.329 17.325 21.304 27.313 11.313l96-95.992c6.249-6.247 6.249-16.377 0-22.625z"]
            },
            faIndustry: {
                prefix: "fas",
                iconName: "industry",
                icon: [512, 512, [], "f275", "M475.115 163.781L336 252.309v-68.28c0-18.916-20.931-30.399-36.885-20.248L160 252.309V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56v400c0 13.255 10.745 24 24 24h464c13.255 0 24-10.745 24-24V184.029c0-18.917-20.931-30.399-36.885-20.248z"]
            },
            faInfinity: {
                prefix: "fas",
                iconName: "infinity",
                icon: [640, 512, [], "f534", "M471.1 96C405 96 353.3 137.3 320 174.6 286.7 137.3 235 96 168.9 96 75.8 96 0 167.8 0 256s75.8 160 168.9 160c66.1 0 117.8-41.3 151.1-78.6 33.3 37.3 85 78.6 151.1 78.6 93.1 0 168.9-71.8 168.9-160S564.2 96 471.1 96zM168.9 320c-40.2 0-72.9-28.7-72.9-64s32.7-64 72.9-64c38.2 0 73.4 36.1 94 64-20.4 27.6-55.9 64-94 64zm302.2 0c-38.2 0-73.4-36.1-94-64 20.4-27.6 55.9-64 94-64 40.2 0 72.9 28.7 72.9 64s-32.7 64-72.9 64z"]
            },
            faInfo: {
                prefix: "fas",
                iconName: "info",
                icon: [192, 512, [], "f129", "M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z"]
            },
            faInfoCircle: {
                prefix: "fas",
                iconName: "info-circle",
                icon: [512, 512, [], "f05a", "M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z"]
            },
            faItalic: {
                prefix: "fas",
                iconName: "italic",
                icon: [320, 512, [], "f033", "M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z"]
            },
            faKey: {
                prefix: "fas",
                iconName: "key",
                icon: [512, 512, [], "f084", "M512 176.001C512 273.203 433.202 352 336 352c-11.22 0-22.19-1.062-32.827-3.069l-24.012 27.014A23.999 23.999 0 0 1 261.223 384H224v40c0 13.255-10.745 24-24 24h-40v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24v-78.059c0-6.365 2.529-12.47 7.029-16.971l161.802-161.802C163.108 213.814 160 195.271 160 176 160 78.798 238.797.001 335.999 0 433.488-.001 512 78.511 512 176.001zM336 128c0 26.51 21.49 48 48 48s48-21.49 48-48-21.49-48-48-48-48 21.49-48 48z"]
            },
            faKeyboard: {
                prefix: "fas",
                iconName: "keyboard",
                icon: [576, 512, [], "f11c", "M528 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM128 180v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H172c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z"]
            },
            faKiwiBird: {
                prefix: "fas",
                iconName: "kiwi-bird",
                icon: [576, 512, [], "f535", "M575.81 217.98C572.64 157.41 518.28 112 457.63 112h-9.37c-52.82 0-104.25-16.25-147.74-46.24-41.99-28.96-96.04-41.62-153.21-28.7C129.3 41.12-.08 78.24 0 224c.04 70.95 38.68 132.8 95.99 166.01V464c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-54.26c15.36 3.96 31.4 6.26 48 6.26 5.44 0 10.68-.73 16-1.18V464c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-59.43c14.24-5.06 27.88-11.39 40.34-19.51C342.07 355.25 393.86 336 448.46 336c25.48 0 16.01-.31 23.05-.78l74.41 136.44c2.86 5.23 8.3 8.34 14.05 8.34 1.31 0 2.64-.16 3.95-.5 7.09-1.8 12.05-8.19 12.05-15.5 0 0 .14-240.24-.16-246.02zM463.97 248c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm80 153.25l-39.86-73.08c15.12-5.83 28.73-14.6 39.86-25.98v99.06z"]
            },
            faLanguage: {
                prefix: "fas",
                iconName: "language",
                icon: [640, 512, [], "f1ab", "M304 416H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h280v320zm-120.676-72.622A12 12 0 0 0 194.839 352h22.863c8.22 0 14.007-8.078 11.362-15.861L171.61 167.085a12 12 0 0 0-11.362-8.139h-32.489a12.001 12.001 0 0 0-11.362 8.139L58.942 336.139C56.297 343.922 62.084 352 70.304 352h22.805a12 12 0 0 0 11.535-8.693l9.118-31.807h60.211l9.351 31.878zm-39.051-140.42s4.32 21.061 7.83 33.21l10.8 37.531h-38.07l11.07-37.531c3.51-12.15 7.83-33.21 7.83-33.21h.54zM616 416H336V96h280c13.255 0 24 10.745 24 24v272c0 13.255-10.745 24-24 24zm-36-228h-64v-16c0-6.627-5.373-12-12-12h-16c-6.627 0-12 5.373-12 12v16h-64c-6.627 0-12 5.373-12 12v16c0 6.627 5.373 12 12 12h114.106c-6.263 14.299-16.518 28.972-30.023 43.206-6.56-6.898-12.397-13.91-17.365-20.933-3.639-5.144-10.585-6.675-15.995-3.446l-7.28 4.346-6.498 3.879c-5.956 3.556-7.693 11.421-3.735 17.117 6.065 8.729 13.098 17.336 20.984 25.726-8.122 6.226-16.841 12.244-26.103 17.964-5.521 3.41-7.381 10.556-4.162 16.19l7.941 13.896c3.362 5.883 10.935 7.826 16.706 4.276 12.732-7.831 24.571-16.175 35.443-24.891 10.917 8.761 22.766 17.102 35.396 24.881 5.774 3.556 13.353 1.618 16.717-4.27l7.944-13.903c3.213-5.623 1.37-12.76-4.135-16.171a312.737 312.737 0 0 1-26.06-18.019c21.024-22.425 35.768-46.289 42.713-69.85H580c6.627 0 12-5.373 12-12v-16c0-6.625-5.373-11.998-12-11.998z"]
            },
            faLaptop: {
                prefix: "fas",
                iconName: "laptop",
                icon: [640, 512, [], "f109", "M512 64v256H128V64h384m16-64H112C85.5 0 64 21.5 64 48v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm100 416H389.5c-3 0-5.5 2.1-5.9 5.1C381.2 436.3 368 448 352 448h-64c-16 0-29.2-11.7-31.6-26.9-.5-2.9-3-5.1-5.9-5.1H12c-6.6 0-12 5.4-12 12v36c0 26.5 21.5 48 48 48h544c26.5 0 48-21.5 48-48v-36c0-6.6-5.4-12-12-12z"]
            },
            faLeaf: {
                prefix: "fas",
                iconName: "leaf",
                icon: [576, 512, [], "f06c", "M546.2 9.7c-5.6-12.5-21.6-13-28.3-1.2C486.9 62.4 431.4 96 368 96h-80C182 96 96 182 96 288c0 7 .8 13.7 1.5 20.5C161.3 262.8 253.4 224 384 224c8.8 0 16 7.2 16 16s-7.2 16-16 16C132.6 256 26 410.1 2.4 468c-6.6 16.3 1.2 34.9 17.5 41.6 16.4 6.8 35-1.1 41.8-17.3 1.5-3.6 20.9-47.9 71.9-90.6 32.4 43.9 94 85.8 174.9 77.2C465.5 467.5 576 326.7 576 154.3c0-50.2-10.8-102.2-29.8-144.6z"]
            },
            faLemon: {
                prefix: "fas",
                iconName: "lemon",
                icon: [512, 512, [], "f094", "M489.038 22.963C465.944-.13 434.648-5.93 413.947 6.129c-58.906 34.312-181.25-53.077-321.073 86.746S40.441 355.041 6.129 413.945c-12.059 20.702-6.26 51.999 16.833 75.093 23.095 23.095 54.392 28.891 75.095 16.832 58.901-34.31 181.246 53.079 321.068-86.743S471.56 156.96 505.871 98.056c12.059-20.702 6.261-51.999-16.833-75.093zM243.881 95.522c-58.189 14.547-133.808 90.155-148.358 148.358-1.817 7.27-8.342 12.124-15.511 12.124-1.284 0-2.59-.156-3.893-.481-8.572-2.144-13.784-10.83-11.642-19.403C81.901 166.427 166.316 81.93 236.119 64.478c8.575-2.143 17.261 3.069 19.403 11.642s-3.069 17.259-11.641 19.402z"]
            },
            faLessThan: {
                prefix: "fas",
                iconName: "less-than",
                icon: [384, 512, [], "f536", "M365.46 357.74L147.04 255.89l218.47-101.88c16.02-7.47 22.95-26.51 15.48-42.53l-13.52-29C360 66.46 340.96 59.53 324.94 67L18.48 209.91a32.014 32.014 0 0 0-18.48 29v34.24c0 12.44 7.21 23.75 18.48 29l306.31 142.83c16.06 7.49 35.15.54 42.64-15.52l13.56-29.08c7.49-16.06.54-35.15-15.53-42.64z"]
            },
            faLessThanEqual: {
                prefix: "fas",
                iconName: "less-than-equal",
                icon: [448, 512, [], "f537", "M54.98 214.2l301.41 119.87c18.39 6.03 38.71-2.54 45.38-19.15l12.09-30.08c6.68-16.61-2.82-34.97-21.21-41l-175.44-68.05 175.56-68.09c18.29-6 27.74-24.27 21.1-40.79l-12.03-29.92c-6.64-16.53-26.86-25.06-45.15-19.06L54.98 137.89C41.21 142.41 32 154.5 32 168.07v15.96c0 13.56 9.21 25.65 22.98 30.17zM424 400H24c-13.25 0-24 10.74-24 24v48c0 13.25 10.75 24 24 24h400c13.25 0 24-10.75 24-24v-48c0-13.26-10.75-24-24-24z"]
            },
            faLevelDownAlt: {
                prefix: "fas",
                iconName: "level-down-alt",
                icon: [320, 512, [], "f3be", "M313.553 392.331L209.587 504.334c-9.485 10.214-25.676 10.229-35.174 0L70.438 392.331C56.232 377.031 67.062 352 88.025 352H152V80H68.024a11.996 11.996 0 0 1-8.485-3.515l-56-56C-4.021 12.926 1.333 0 12.024 0H208c13.255 0 24 10.745 24 24v328h63.966c20.878 0 31.851 24.969 17.587 40.331z"]
            },
            faLevelUpAlt: {
                prefix: "fas",
                iconName: "level-up-alt",
                icon: [320, 512, [], "f3bf", "M313.553 119.669L209.587 7.666c-9.485-10.214-25.676-10.229-35.174 0L70.438 119.669C56.232 134.969 67.062 160 88.025 160H152v272H68.024a11.996 11.996 0 0 0-8.485 3.515l-56 56C-4.021 499.074 1.333 512 12.024 512H208c13.255 0 24-10.745 24-24V160h63.966c20.878 0 31.851-24.969 17.587-40.331z"]
            },
            faLifeRing: {
                prefix: "fas",
                iconName: "life-ring",
                icon: [512, 512, [], "f1cd", "M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm173.696 119.559l-63.399 63.399c-10.987-18.559-26.67-34.252-45.255-45.255l63.399-63.399a218.396 218.396 0 0 1 45.255 45.255zM256 352c-53.019 0-96-42.981-96-96s42.981-96 96-96 96 42.981 96 96-42.981 96-96 96zM127.559 82.304l63.399 63.399c-18.559 10.987-34.252 26.67-45.255 45.255l-63.399-63.399a218.372 218.372 0 0 1 45.255-45.255zM82.304 384.441l63.399-63.399c10.987 18.559 26.67 34.252 45.255 45.255l-63.399 63.399a218.396 218.396 0 0 1-45.255-45.255zm302.137 45.255l-63.399-63.399c18.559-10.987 34.252-26.67 45.255-45.255l63.399 63.399a218.403 218.403 0 0 1-45.255 45.255z"]
            },
            faLightbulb: {
                prefix: "fas",
                iconName: "lightbulb",
                icon: [384, 512, [], "f0eb", "M272 428v28c0 10.449-6.68 19.334-16 22.629V488c0 13.255-10.745 24-24 24h-80c-13.255 0-24-10.745-24-24v-9.371c-9.32-3.295-16-12.18-16-22.629v-28c0-6.627 5.373-12 12-12h136c6.627 0 12 5.373 12 12zm-143.107-44c-9.907 0-18.826-6.078-22.376-15.327C67.697 267.541 16 277.731 16 176 16 78.803 94.805 0 192 0s176 78.803 176 176c0 101.731-51.697 91.541-90.516 192.673-3.55 9.249-12.47 15.327-22.376 15.327H128.893zM112 176c0-44.112 35.888-80 80-80 8.837 0 16-7.164 16-16s-7.163-16-16-16c-61.757 0-112 50.243-112 112 0 8.836 7.164 16 16 16s16-7.164 16-16z"]
            },
            faLink: {
                prefix: "fas",
                iconName: "link",
                icon: [512, 512, [], "f0c1", "M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"]
            },
            faLiraSign: {
                prefix: "fas",
                iconName: "lira-sign",
                icon: [384, 512, [], "f195", "M371.994 256h-48.019C317.64 256 312 260.912 312 267.246 312 368 230.179 416 144 416V256.781l134.603-29.912A12 12 0 0 0 288 215.155v-40.976c0-7.677-7.109-13.38-14.603-11.714L144 191.219V160.78l134.603-29.912A12 12 0 0 0 288 119.154V78.179c0-7.677-7.109-13.38-14.603-11.714L144 95.219V44c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v68.997L9.397 125.131A12 12 0 0 0 0 136.845v40.976c0 7.677 7.109 13.38 14.603 11.714L64 178.558v30.439L9.397 221.131A12 12 0 0 0 0 232.845v40.976c0 7.677 7.109 13.38 14.603 11.714L64 274.558V468c0 6.627 5.373 12 12 12h79.583c134.091 0 223.255-77.834 228.408-211.592.261-6.782-5.211-12.408-11.997-12.408z"]
            },
            faList: {
                prefix: "fas",
                iconName: "list",
                icon: [512, 512, [], "f03a", "M128 116V76c0-8.837 7.163-16 16-16h352c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H144c-8.837 0-16-7.163-16-16zm16 176h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM16 144h64c8.837 0 16-7.163 16-16V64c0-8.837-7.163-16-16-16H16C7.163 48 0 55.163 0 64v64c0 8.837 7.163 16 16 16zm0 160h64c8.837 0 16-7.163 16-16v-64c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v64c0 8.837 7.163 16 16 16zm0 160h64c8.837 0 16-7.163 16-16v-64c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v64c0 8.837 7.163 16 16 16z"]
            },
            faListAlt: {
                prefix: "fas",
                iconName: "list-alt",
                icon: [512, 512, [], "f022", "M464 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zM128 120c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm0 96c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm0 96c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm288-136v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12zm0 96v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12zm0 96v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12z"]
            },
            faListOl: {
                prefix: "fas",
                iconName: "list-ol",
                icon: [512, 512, [], "f0cb", "M3.263 139.527c0-7.477 3.917-11.572 11.573-11.572h15.131V88.078c0-5.163.534-10.503.534-10.503h-.356s-1.779 2.67-2.848 3.738c-4.451 4.273-10.504 4.451-15.666-1.068l-5.518-6.231c-5.342-5.341-4.984-11.216.534-16.379l21.72-19.938C32.815 33.602 36.732 32 42.785 32H54.89c7.656 0 11.749 3.916 11.749 11.572v84.384h15.488c7.655 0 11.572 4.094 11.572 11.572v8.901c0 7.477-3.917 11.572-11.572 11.572H14.836c-7.656 0-11.573-4.095-11.573-11.572v-8.902zM2.211 304.591c0-47.278 50.955-56.383 50.955-69.165 0-7.18-5.954-8.755-9.28-8.755-3.153 0-6.479 1.051-9.455 3.852-5.079 4.903-10.507 7.004-16.111 2.451l-8.579-6.829c-5.779-4.553-7.18-9.805-2.803-15.409C13.592 201.981 26.025 192 47.387 192c19.437 0 44.476 10.506 44.476 39.573 0 38.347-46.753 46.402-48.679 56.909h39.049c7.529 0 11.557 4.027 11.557 11.382v8.755c0 7.354-4.028 11.382-11.557 11.382h-67.94c-7.005 0-12.083-4.028-12.083-11.382v-4.028zM5.654 454.61l5.603-9.28c3.853-6.654 9.105-7.004 15.584-3.152 4.903 2.101 9.63 3.152 14.359 3.152 10.155 0 14.358-3.502 14.358-8.23 0-6.654-5.604-9.106-15.934-9.106h-4.728c-5.954 0-9.28-2.101-12.258-7.88l-1.05-1.926c-2.451-4.728-1.226-9.806 2.801-14.884l5.604-7.004c6.829-8.405 12.257-13.483 12.257-13.483v-.35s-4.203 1.051-12.608 1.051H16.685c-7.53 0-11.383-4.028-11.383-11.382v-8.755c0-7.53 3.853-11.382 11.383-11.382h58.484c7.529 0 11.382 4.027 11.382 11.382v3.327c0 5.778-1.401 9.806-5.079 14.183l-17.509 20.137c19.611 5.078 28.716 20.487 28.716 34.845 0 21.363-14.358 44.126-48.503 44.126-16.636 0-28.192-4.728-35.896-9.455-5.779-4.202-6.304-9.805-2.626-15.934zM144 132h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"]
            },
            faListUl: {
                prefix: "fas",
                iconName: "list-ul",
                icon: [512, 512, [], "f0ca", "M96 96c0 26.51-21.49 48-48 48S0 122.51 0 96s21.49-48 48-48 48 21.49 48 48zM48 208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm0 160c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm96-236h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"]
            },
            faLocationArrow: {
                prefix: "fas",
                iconName: "location-arrow",
                icon: [512, 512, [], "f124", "M443.683 4.529L27.818 196.418C-18.702 217.889-3.39 288 47.933 288H224v175.993c0 51.727 70.161 66.526 91.582 20.115L507.38 68.225c18.905-40.961-23.752-82.133-63.697-63.696z"]
            },
            faLock: {
                prefix: "fas",
                iconName: "lock",
                icon: [448, 512, [], "f023", "M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"]
            },
            faLockOpen: {
                prefix: "fas",
                iconName: "lock-open",
                icon: [576, 512, [], "f3c1", "M423.5 0C339.5.3 272 69.5 272 153.5V224H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48h-48v-71.1c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v80c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-80C576 68 507.5-.3 423.5 0z"]
            },
            faLongArrowAltDown: {
                prefix: "fas",
                iconName: "long-arrow-alt-down",
                icon: [256, 512, [], "f309", "M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z"]
            },
            faLongArrowAltLeft: {
                prefix: "fas",
                iconName: "long-arrow-alt-left",
                icon: [448, 512, [], "f30a", "M134.059 296H436c6.627 0 12-5.373 12-12v-56c0-6.627-5.373-12-12-12H134.059v-46.059c0-21.382-25.851-32.09-40.971-16.971L7.029 239.029c-9.373 9.373-9.373 24.569 0 33.941l86.059 86.059c15.119 15.119 40.971 4.411 40.971-16.971V296z"]
            },
            faLongArrowAltRight: {
                prefix: "fas",
                iconName: "long-arrow-alt-right",
                icon: [448, 512, [], "f30b", "M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z"]
            },
            faLongArrowAltUp: {
                prefix: "fas",
                iconName: "long-arrow-alt-up",
                icon: [256, 512, [], "f30c", "M88 166.059V468c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12V166.059h46.059c21.382 0 32.09-25.851 16.971-40.971l-86.059-86.059c-9.373-9.373-24.569-9.373-33.941 0l-86.059 86.059c-15.119 15.119-4.411 40.971 16.971 40.971H88z"]
            },
            faLowVision: {
                prefix: "fas",
                iconName: "low-vision",
                icon: [576, 512, [], "f2a8", "M569.344 231.631C512.96 135.949 407.81 72 288 72c-28.468 0-56.102 3.619-82.451 10.409L152.778 10.24c-7.601-10.858-22.564-13.5-33.423-5.9l-13.114 9.178c-10.86 7.601-13.502 22.566-5.9 33.426l43.131 58.395C89.449 131.73 40.228 174.683 6.682 231.581c-.01.017-.023.033-.034.05-8.765 14.875-8.964 33.528 0 48.739 38.5 65.332 99.742 115.862 172.859 141.349L55.316 244.302A272.194 272.194 0 0 1 83.61 208.39l119.4 170.58h.01l40.63 58.04a330.055 330.055 0 0 0 78.94 1.17l-189.98-271.4a277.628 277.628 0 0 1 38.777-21.563l251.836 356.544c7.601 10.858 22.564 13.499 33.423 5.9l13.114-9.178c10.86-7.601 13.502-22.567 5.9-33.426l-43.12-58.377-.007-.009c57.161-27.978 104.835-72.04 136.81-126.301a47.938 47.938 0 0 0 .001-48.739zM390.026 345.94l-19.066-27.23c24.682-32.567 27.711-76.353 8.8-111.68v.03c0 23.65-19.17 42.82-42.82 42.82-23.828 0-42.82-19.349-42.82-42.82 0-23.65 19.17-42.82 42.82-42.82h.03c-24.75-13.249-53.522-15.643-79.51-7.68l-19.068-27.237C253.758 123.306 270.488 120 288 120c75.162 0 136 60.826 136 136 0 34.504-12.833 65.975-33.974 89.94z"]
            },
            faMagic: {
                prefix: "fas",
                iconName: "magic",
                icon: [512, 512, [], "f0d0", "M101.1 505L7 410.9c-9.4-9.4-9.4-24.6 0-33.9L377 7c9.4-9.4 24.6-9.4 33.9 0l94.1 94.1c9.4 9.4 9.4 24.6 0 33.9L135 505c-9.3 9.3-24.5 9.3-33.9 0zM304 159.2l48.8 48.8 89.9-89.9-48.8-48.8-89.9 89.9zM138.9 39.3l-11.7 23.8-26.2 3.8c-4.7.7-6.6 6.5-3.2 9.8l19 18.5-4.5 26.1c-.8 4.7 4.1 8.3 8.3 6.1L144 115l23.4 12.3c4.2 2.2 9.1-1.4 8.3-6.1l-4.5-26.1 19-18.5c3.4-3.3 1.5-9.1-3.2-9.8L160.8 63l-11.7-23.8c-2-4.1-8.1-4.1-10.2.1zm97.7-20.7l-7.8 15.8-17.5 2.6c-3.1.5-4.4 4.3-2.1 6.5l12.6 12.3-3 17.4c-.5 3.1 2.8 5.5 5.6 4L240 69l15.6 8.2c2.8 1.5 6.1-.9 5.6-4l-3-17.4 12.6-12.3c2.3-2.2 1-6.1-2.1-6.5l-17.5-2.5-7.8-15.8c-1.4-3-5.4-3-6.8-.1zm-192 0l-7.8 15.8L19.3 37c-3.1.5-4.4 4.3-2.1 6.5l12.6 12.3-3 17.4c-.5 3.1 2.8 5.5 5.6 4L48 69l15.6 8.2c2.8 1.5 6.1-.9 5.6-4l-3-17.4 12.6-12.3c2.3-2.2 1-6.1-2.1-6.5l-17.5-2.5-7.8-15.8c-1.4-3-5.4-3-6.8-.1zm416 223.5l-7.8 15.8-17.5 2.5c-3.1.5-4.4 4.3-2.1 6.5l12.6 12.3-3 17.4c-.5 3.1 2.8 5.5 5.6 4l15.6-8.2 15.6 8.2c2.8 1.5 6.1-.9 5.6-4l-3-17.4 12.6-12.3c2.3-2.2 1-6.1-2.1-6.5l-17.5-2.5-7.8-15.8c-1.4-2.8-5.4-2.8-6.8 0z"]
            },
            faMagnet: {
                prefix: "fas",
                iconName: "magnet",
                icon: [512, 512, [], "f076", "M164.1 160H12c-6.6 0-12-5.4-12-12V68c0-19.9 16.1-36 36-36h104c19.9 0 36 16.1 36 36v80c.1 6.6-5.3 12-11.9 12zm348-12V67.9c0-19.9-16.1-36-36-36h-104c-19.9 0-36 16.1-36 36v80c0 6.6 5.4 12 12 12h152c6.6.1 12-5.3 12-11.9zm-164 44c-6.6 0-12 5.4-12 12v52c0 128.1-160 127.9-160 0v-52c0-6.6-5.4-12-12-12h-152c-6.7 0-12 5.4-12 12.1.1 21.4.6 40.3 0 53.3C.1 408 136.3 504 256.9 504 377.5 504 512 408 512 257.3c-.6-12.8-.2-33 0-53.2 0-6.7-5.3-12.1-12-12.1H348.1z"]
            },
            faMale: {
                prefix: "fas",
                iconName: "male",
                icon: [192, 512, [], "f183", "M96 0c35.346 0 64 28.654 64 64s-28.654 64-64 64-64-28.654-64-64S60.654 0 96 0m48 144h-11.36c-22.711 10.443-49.59 10.894-73.28 0H48c-26.51 0-48 21.49-48 48v136c0 13.255 10.745 24 24 24h16v136c0 13.255 10.745 24 24 24h64c13.255 0 24-10.745 24-24V352h16c13.255 0 24-10.745 24-24V192c0-26.51-21.49-48-48-48z"]
            },
            faMap: {
                prefix: "fas",
                iconName: "map",
                icon: [576, 512, [], "f279", "M576 56.015v335.97a23.998 23.998 0 0 1-13.267 21.466l-128 64C418.948 485.344 400 473.992 400 455.985v-335.97a23.998 23.998 0 0 1 13.267-21.466l128-64C557.052 26.656 576 38.008 576 56.015zm-206.253 42.07l-144-64c-15.751-7-33.747 4.461-33.747 21.932v335.967a24 24 0 0 0 14.253 21.931l144 64c15.751 7 33.747-4.461 33.747-21.931V120.017a24 24 0 0 0-14.253-21.932zm-228.48-63.536l-128 63.985A23.998 23.998 0 0 0 0 120v335.985c0 18.007 18.948 29.359 34.733 21.466l128-63.985A23.998 23.998 0 0 0 176 392V56.015c0-18.007-18.948-29.359-34.733-21.466z"]
            },
            faMapMarker: {
                prefix: "fas",
                iconName: "map-marker",
                icon: [384, 512, [], "f041", "M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0z"]
            },
            faMapMarkerAlt: {
                prefix: "fas",
                iconName: "map-marker-alt",
                icon: [384, 512, [], "f3c5", "M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"]
            },
            faMapPin: {
                prefix: "fas",
                iconName: "map-pin",
                icon: [320, 512, [], "f276", "M192 300.813v172.82l-22.015 33.023c-4.75 7.125-15.219 7.125-19.969 0L128 473.633v-172.82a162.221 162.221 0 0 0 64 0zM160 0c79.529 0 144 64.471 144 144s-64.471 144-144 144S16 223.529 16 144 80.471 0 160 0M80 136c0-39.701 32.299-72 72-72a8 8 0 0 0 0-16c-48.523 0-88 39.477-88 88a8 8 0 0 0 16 0z"]
            },
            faMapSigns: {
                prefix: "fas",
                iconName: "map-signs",
                icon: [512, 512, [], "f277", "M487.515 104.485L439.03 152.97a23.998 23.998 0 0 1-16.97 7.029H56c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24h160v-8c0-13.255 10.745-24 24-24h32c13.255 0 24 10.745 24 24v8h126.059a24 24 0 0 1 16.97 7.029l48.485 48.485c4.687 4.687 4.687 12.285.001 16.971zM216 368v120c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V368h-80zm240-144H296v-48h-80v48H89.941a24 24 0 0 0-16.97 7.029l-48.485 48.485c-4.686 4.686-4.686 12.284 0 16.971l48.485 48.485a23.998 23.998 0 0 0 16.97 7.029H456c13.255 0 24-10.745 24-24v-80C480 234.745 469.255 224 456 224z"]
            },
            faMars: {
                prefix: "fas",
                iconName: "mars",
                icon: [384, 512, [], "f222", "M372 64h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7c-22.2-14-48.5-22.1-76.7-22.1C64.5 160 0 224.5 0 304s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V76c0-6.6-5.4-12-12-12zM144 384c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z"]
            },
            faMarsDouble: {
                prefix: "fas",
                iconName: "mars-double",
                icon: [512, 512, [], "f227", "M340 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7C198.5 72.1 172.2 64 144 64 64.5 64 0 128.5 0 208s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.5 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12V12c0-6.6-5.4-12-12-12zM144 288c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80zm356-128.1h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7c-18.2-11.4-39-18.9-61.5-21.3-2.1 21.8-8.2 43.3-18.4 63.3 1.1 0 2.2-.1 3.2-.1 44.1 0 80 35.9 80 80s-35.9 80-80 80-80-35.9-80-80c0-1.1 0-2.2.1-3.2-20 10.2-41.5 16.4-63.3 18.4C168.4 455.6 229.6 512 304 512c79.5 0 144-64.5 144-144 0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.4 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12v-79c0-6.7-5.4-12.1-12-12.1z"]
            },
            faMarsStroke: {
                prefix: "fas",
                iconName: "mars-stroke",
                icon: [384, 512, [], "f229", "M372 64h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-17.5 17.5-14.1-14.1c-4.7-4.7-12.3-4.7-17 0L224.5 133c-4.7 4.7-4.7 12.3 0 17l14.1 14.1-18 18c-22.2-14-48.5-22.1-76.7-22.1C64.5 160 0 224.5 0 304s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l18-18 14.1 14.1c4.7 4.7 12.3 4.7 17 0l28.3-28.3c4.7-4.7 4.7-12.3 0-17L329.2 164l17.5-17.5 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V76c-.1-6.6-5.5-12-12.1-12zM144 384c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z"]
            },
            faMarsStrokeH: {
                prefix: "fas",
                iconName: "mars-stroke-h",
                icon: [480, 512, [], "f22b", "M476.2 247.5l-55.9-55.9c-7.6-7.6-20.5-2.2-20.5 8.5V224H376v-20c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v20h-27.6c-5.8-25.6-18.7-49.9-38.6-69.8C189.6 98 98.4 98 42.2 154.2c-56.2 56.2-56.2 147.4 0 203.6 56.2 56.2 147.4 56.2 203.6 0 19.9-19.9 32.8-44.2 38.6-69.8H312v20c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-20h23.9v23.9c0 10.7 12.9 16 20.5 8.5l55.9-55.9c4.6-4.7 4.6-12.3-.1-17zm-275.6 65.1c-31.2 31.2-81.9 31.2-113.1 0-31.2-31.2-31.2-81.9 0-113.1 31.2-31.2 81.9-31.2 113.1 0 31.2 31.1 31.2 81.9 0 113.1z"]
            },
            faMarsStrokeV: {
                prefix: "fas",
                iconName: "mars-stroke-v",
                icon: [288, 512, [], "f22a", "M245.8 234.2c-19.9-19.9-44.2-32.8-69.8-38.6v-25.4h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20V81.4h23.9c10.7 0 16-12.9 8.5-20.5L152.5 5.1c-4.7-4.7-12.3-4.7-17 0L79.6 61c-7.6 7.6-2.2 20.5 8.5 20.5H112v24.7H92c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h20v25.4c-25.6 5.8-49.9 18.7-69.8 38.6-56.2 56.2-56.2 147.4 0 203.6 56.2 56.2 147.4 56.2 203.6 0 56.3-56.2 56.3-147.4 0-203.6zm-45.2 158.4c-31.2 31.2-81.9 31.2-113.1 0-31.2-31.2-31.2-81.9 0-113.1 31.2-31.2 81.9-31.2 113.1 0 31.2 31.1 31.2 81.9 0 113.1z"]
            },
            faMedkit: {
                prefix: "fas",
                iconName: "medkit",
                icon: [512, 512, [], "f0fa", "M96 480h320V128h-32V80c0-26.51-21.49-48-48-48H176c-26.51 0-48 21.49-48 48v48H96v352zm96-384h128v32H192V96zm320 80v256c0 26.51-21.49 48-48 48h-16V128h16c26.51 0 48 21.49 48 48zM64 480H48c-26.51 0-48-21.49-48-48V176c0-26.51 21.49-48 48-48h16v352zm288-208v32c0 8.837-7.163 16-16 16h-48v48c0 8.837-7.163 16-16 16h-32c-8.837 0-16-7.163-16-16v-48h-48c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h48v-48c0-8.837 7.163-16 16-16h32c8.837 0 16 7.163 16 16v48h48c8.837 0 16 7.163 16 16z"]
            },
            faMeh: {
                prefix: "fas",
                iconName: "meh",
                icon: [496, 512, [], "f11a", "M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm176 192H152c-8.8 0-16-7.2-16-16s7.2-16 16-16h192c8.8 0 16 7.2 16 16s-7.2 16-16 16zm-16-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z"]
            },
            faMemory: {
                prefix: "fas",
                iconName: "memory",
                icon: [640, 512, [], "f538", "M640 130.94V96c0-17.67-14.33-32-32-32H32C14.33 64 0 78.33 0 96v34.94c18.6 6.61 32 24.19 32 45.06s-13.4 38.45-32 45.06V320h640v-98.94c-18.6-6.61-32-24.19-32-45.06s13.4-38.45 32-45.06zM224 256h-64V128h64v128zm128 0h-64V128h64v128zm128 0h-64V128h64v128zM0 448h64v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h128v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h128v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h128v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h64v-96H0v96z"]
            },
            faMercury: {
                prefix: "fas",
                iconName: "mercury",
                icon: [288, 512, [], "f223", "M288 208c0-44.2-19.9-83.7-51.2-110.1 2.5-1.8 4.9-3.8 7.2-5.8 24.7-21.2 39.8-48.8 43.2-78.8.9-7.1-4.7-13.3-11.9-13.3h-40.5C229 0 224.1 4.1 223 9.8c-2.4 12.5-9.6 24.3-20.7 33.8C187 56.8 166.3 64 144 64s-43-7.2-58.4-20.4C74.5 34.1 67.4 22.3 64.9 9.8 63.8 4.1 58.9 0 53.2 0H12.7C5.5 0-.1 6.2.8 13.3 4.2 43.4 19.2 71 44 92.2c2.3 2 4.7 3.9 7.2 5.8C19.9 124.3 0 163.8 0 208c0 68.5 47.9 125.9 112 140.4V400H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80z"]
            },
            faMicrochip: {
                prefix: "fas",
                iconName: "microchip",
                icon: [512, 512, [], "f2db", "M416 48v416c0 26.51-21.49 48-48 48H144c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h224c26.51 0 48 21.49 48 48zm96 58v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42V88h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zM30 376h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6z"]
            },
            faMicrophone: {
                prefix: "fas",
                iconName: "microphone",
                icon: [352, 512, [], "f130", "M176 352c53.02 0 96-42.98 96-96V96c0-53.02-42.98-96-96-96S80 42.98 80 96v160c0 53.02 42.98 96 96 96zm160-160h-16c-8.84 0-16 7.16-16 16v48c0 74.8-64.49 134.82-140.79 127.38C96.71 376.89 48 317.11 48 250.3V208c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v40.16c0 89.64 63.97 169.55 152 181.69V464H96c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16h-56v-33.77C285.71 418.47 352 344.9 352 256v-48c0-8.84-7.16-16-16-16z"]
            },
            faMicrophoneAlt: {
                prefix: "fas",
                iconName: "microphone-alt",
                icon: [352, 512, [], "f3c9", "M336 192h-16c-8.84 0-16 7.16-16 16v48c0 74.8-64.49 134.82-140.79 127.38C96.71 376.89 48 317.11 48 250.3V208c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v40.16c0 89.64 63.97 169.55 152 181.69V464H96c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16h-56v-33.77C285.71 418.47 352 344.9 352 256v-48c0-8.84-7.16-16-16-16zM176 352c53.02 0 96-42.98 96-96h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H272v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H272v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H272c0-53.02-42.98-96-96-96S80 42.98 80 96v160c0 53.02 42.98 96 96 96z"]
            },
            faMicrophoneAltSlash: {
                prefix: "fas",
                iconName: "microphone-alt-slash",
                icon: [640, 512, [], "f539", "M633.82 458.1L476.26 336.33C488.74 312.21 496 284.98 496 256v-48c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v48c0 17.92-3.96 34.8-10.72 50.2l-26.55-20.52c3.1-9.4 5.28-19.22 5.28-29.67h-43.67l-41.4-32H416v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H416v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H416c0-53.02-42.98-96-96-96s-96 42.98-96 96v45.36L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.36 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.41-6.97 4.16-17.02-2.82-22.45zM400 464h-56v-33.78c11.71-1.62 23.1-4.28 33.96-8.08l-50.4-38.96c-6.71.4-13.41.87-20.35.2-55.85-5.45-98.74-48.63-111.18-101.85L144 241.31v6.85c0 89.64 63.97 169.55 152 181.69V464h-56c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16z"]
            },
            faMicrophoneSlash: {
                prefix: "fas",
                iconName: "microphone-slash",
                icon: [640, 512, [], "f131", "M633.82 458.1l-157.8-121.96C488.61 312.13 496 285.01 496 256v-48c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v48c0 17.92-3.96 34.8-10.72 50.2l-26.55-20.52c3.1-9.4 5.28-19.22 5.28-29.67V96c0-53.02-42.98-96-96-96s-96 42.98-96 96v45.36L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.36 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.41-6.97 4.16-17.02-2.82-22.45zM400 464h-56v-33.77c11.66-1.6 22.85-4.54 33.67-8.31l-50.11-38.73c-6.71.4-13.41.87-20.35.2-55.85-5.45-98.74-48.63-111.18-101.85L144 241.31v6.85c0 89.64 63.97 169.55 152 181.69V464h-56c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16z"]
            },
            faMinus: {
                prefix: "fas",
                iconName: "minus",
                icon: [448, 512, [], "f068", "M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"]
            },
            faMinusCircle: {
                prefix: "fas",
                iconName: "minus-circle",
                icon: [512, 512, [], "f056", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zM124 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H124z"]
            },
            faMinusSquare: {
                prefix: "fas",
                iconName: "minus-square",
                icon: [448, 512, [], "f146", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z"]
            },
            faMobile: {
                prefix: "fas",
                iconName: "mobile",
                icon: [320, 512, [], "f10b", "M272 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h224c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM160 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z"]
            },
            faMobileAlt: {
                prefix: "fas",
                iconName: "mobile-alt",
                icon: [320, 512, [], "f3cd", "M272 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h224c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM160 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm112-108c0 6.6-5.4 12-12 12H60c-6.6 0-12-5.4-12-12V60c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v312z"]
            },
            faMoneyBill: {
                prefix: "fas",
                iconName: "money-bill",
                icon: [640, 512, [], "f0d6", "M608 64H32C14.33 64 0 78.33 0 96v320c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V96c0-17.67-14.33-32-32-32zM48 400v-64c35.35 0 64 28.65 64 64H48zm0-224v-64h64c0 35.35-28.65 64-64 64zm272 176c-44.19 0-80-42.99-80-96 0-53.02 35.82-96 80-96s80 42.98 80 96c0 53.03-35.83 96-80 96zm272 48h-64c0-35.35 28.65-64 64-64v64zm0-224c-35.35 0-64-28.65-64-64h64v64z"]
            },
            faMoneyBillAlt: {
                prefix: "fas",
                iconName: "money-bill-alt",
                icon: [640, 512, [], "f3d1", "M352 288h-16v-88c0-4.42-3.58-8-8-8h-13.58c-4.74 0-9.37 1.4-13.31 4.03l-15.33 10.22a7.994 7.994 0 0 0-2.22 11.09l8.88 13.31a7.994 7.994 0 0 0 11.09 2.22l.47-.31V288h-16c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8h64c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8zM608 64H32C14.33 64 0 78.33 0 96v320c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V96c0-17.67-14.33-32-32-32zM48 400v-64c35.35 0 64 28.65 64 64H48zm0-224v-64h64c0 35.35-28.65 64-64 64zm272 192c-53.02 0-96-50.15-96-112 0-61.86 42.98-112 96-112s96 50.14 96 112c0 61.87-43 112-96 112zm272 32h-64c0-35.35 28.65-64 64-64v64zm0-224c-35.35 0-64-28.65-64-64h64v64z"]
            },
            faMoneyBillWave: {
                prefix: "fas",
                iconName: "money-bill-wave",
                icon: [640, 512, [], "f53a", "M621.16 54.46C582.37 38.19 543.55 32 504.75 32c-123.17-.01-246.33 62.34-369.5 62.34-30.89 0-61.76-3.92-92.65-13.72-3.47-1.1-6.95-1.62-10.35-1.62C15.04 79 0 92.32 0 110.81v317.26c0 12.63 7.23 24.6 18.84 29.46C57.63 473.81 96.45 480 135.25 480c123.17 0 246.34-62.35 369.51-62.35 30.89 0 61.76 3.92 92.65 13.72 3.47 1.1 6.95 1.62 10.35 1.62 17.21 0 32.25-13.32 32.25-31.81V83.93c-.01-12.64-7.24-24.6-18.85-29.47zM48 132.22c20.12 5.04 41.12 7.57 62.72 8.93C104.84 170.54 79 192.69 48 192.69v-60.47zm0 285v-47.78c34.37 0 62.18 27.27 63.71 61.4-22.53-1.81-43.59-6.31-63.71-13.62zM320 352c-44.19 0-80-42.99-80-96 0-53.02 35.82-96 80-96s80 42.98 80 96c0 53.03-35.83 96-80 96zm272 27.78c-17.52-4.39-35.71-6.85-54.32-8.44 5.87-26.08 27.5-45.88 54.32-49.28v57.72zm0-236.11c-30.89-3.91-54.86-29.7-55.81-61.55 19.54 2.17 38.09 6.23 55.81 12.66v48.89z"]
            },
            faMoneyBillWaveAlt: {
                prefix: "fas",
                iconName: "money-bill-wave-alt",
                icon: [640, 512, [], "f53b", "M621.16 54.46C582.37 38.19 543.55 32 504.75 32c-123.17-.01-246.33 62.34-369.5 62.34-30.89 0-61.76-3.92-92.65-13.72-3.47-1.1-6.95-1.62-10.35-1.62C15.04 79 0 92.32 0 110.81v317.26c0 12.63 7.23 24.6 18.84 29.46C57.63 473.81 96.45 480 135.25 480c123.17 0 246.34-62.35 369.51-62.35 30.89 0 61.76 3.92 92.65 13.72 3.47 1.1 6.95 1.62 10.35 1.62 17.21 0 32.25-13.32 32.25-31.81V83.93c-.01-12.64-7.24-24.6-18.85-29.47zM320 352c-44.19 0-80-42.99-80-96 0-53.02 35.82-96 80-96s80 42.98 80 96c0 53.03-35.83 96-80 96z"]
            },
            faMoneyCheck: {
                prefix: "fas",
                iconName: "money-check",
                icon: [640, 512, [], "f53c", "M0 448c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V128H0v320zm448-208c0-8.84 7.16-16 16-16h96c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16h-96c-8.84 0-16-7.16-16-16v-32zm0 120c0-4.42 3.58-8 8-8h112c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H456c-4.42 0-8-3.58-8-8v-16zM64 264c0-4.42 3.58-8 8-8h304c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16zm0 96c0-4.42 3.58-8 8-8h176c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16zM624 32H16C7.16 32 0 39.16 0 48v48h640V48c0-8.84-7.16-16-16-16z"]
            },
            faMoneyCheckAlt: {
                prefix: "fas",
                iconName: "money-check-alt",
                icon: [640, 512, [], "f53d", "M608 32H32C14.33 32 0 46.33 0 64v384c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zM176 327.88V344c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-16.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V152c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07zM416 312c0 4.42-3.58 8-8 8H296c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h112c4.42 0 8 3.58 8 8v16zm160 0c0 4.42-3.58 8-8 8h-80c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16zm0-96c0 4.42-3.58 8-8 8H296c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h272c4.42 0 8 3.58 8 8v16z"]
            },
            faMoon: {
                prefix: "fas",
                iconName: "moon",
                icon: [512, 512, [], "f186", "M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z"]
            },
            faMotorcycle: {
                prefix: "fas",
                iconName: "motorcycle",
                icon: [640, 512, [], "f21c", "M512.949 192.003c-14.862-.108-29.14 2.322-42.434 6.874L437.589 144H520c13.255 0 24-10.745 24-24V88c0-13.255-10.745-24-24-24h-45.311a24 24 0 0 0-17.839 7.945l-37.496 41.663-22.774-37.956A24 24 0 0 0 376 64h-80c-8.837 0-16 7.163-16 16v16c0 8.837 7.163 16 16 16h66.411l19.2 32H227.904c-17.727-23.073-44.924-40-99.904-40H72.54c-13.455 0-24.791 11.011-24.536 24.464C48.252 141.505 58.9 152 72 152h56c24.504 0 38.686 10.919 47.787 24.769l-11.291 20.529c-13.006-3.865-26.871-5.736-41.251-5.21C55.857 194.549 1.565 249.605.034 317.021-1.603 389.076 56.317 448 128 448c59.642 0 109.744-40.794 123.953-96h84.236c13.673 0 24.589-11.421 23.976-25.077-2.118-47.12 17.522-93.665 56.185-125.026l12.485 20.808c-27.646 23.654-45.097 58.88-44.831 98.179.47 69.556 57.203 126.452 126.758 127.11 71.629.678 129.839-57.487 129.234-129.099-.588-69.591-57.455-126.386-127.047-126.892zM128 400c-44.112 0-80-35.888-80-80s35.888-80 80-80c4.242 0 8.405.341 12.469.982L98.97 316.434C90.187 332.407 101.762 352 120 352h81.297c-12.37 28.225-40.56 48-73.297 48zm388.351-.116C470.272 402.337 432 365.554 432 320c0-21.363 8.434-40.781 22.125-55.144l49.412 82.352c4.546 7.577 14.375 10.034 21.952 5.488l13.72-8.232c7.577-4.546 10.034-14.375 5.488-21.952l-48.556-80.927A80.005 80.005 0 0 1 512 240c45.554 0 82.338 38.273 79.884 84.352-2.16 40.558-34.974 73.372-75.533 75.532z"]
            },
            faMousePointer: {
                prefix: "fas",
                iconName: "mouse-pointer",
                icon: [320, 512, [], "f245", "M302.189 329.126H196.105l55.831 135.993c3.889 9.428-.555 19.999-9.444 23.999l-49.165 21.427c-9.165 4-19.443-.571-23.332-9.714l-53.053-129.136-86.664 89.138C18.729 472.71 0 463.554 0 447.977V18.299C0 1.899 19.921-6.096 30.277 5.443l284.412 292.542c11.472 11.179 3.007 31.141-12.5 31.141z"]
            },
            faMusic: {
                prefix: "fas",
                iconName: "music",
                icon: [512, 512, [], "f001", "M470.4 1.5l-304 96C153.1 101.7 144 114 144 128v264.6c-14.1-5.4-30.5-8.6-48-8.6-53 0-96 28.7-96 64s43 64 96 64 96-28.7 96-64V220.5l272-85.9v194c-14.1-5.4-30.5-8.6-48-8.6-53 0-96 28.7-96 64s43 64 96 64 96-28.7 96-64V32c0-21.7-21.1-37-41.6-30.5z"]
            },
            faNeuter: {
                prefix: "fas",
                iconName: "neuter",
                icon: [288, 512, [], "f22c", "M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V468c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V316.4c64.1-14.5 112-71.9 112-140.4zm-144 80c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z"]
            },
            faNewspaper: {
                prefix: "fas",
                iconName: "newspaper",
                icon: [576, 512, [], "f1ea", "M552 64H88c-13.255 0-24 10.745-24 24v8H24c-13.255 0-24 10.745-24 24v272c0 30.928 25.072 56 56 56h472c26.51 0 48-21.49 48-48V88c0-13.255-10.745-24-24-24zM56 400a8 8 0 0 1-8-8V144h16v248a8 8 0 0 1-8 8zm236-16H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm-208-96H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm0-96H140c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12z"]
            },
            faNotEqual: {
                prefix: "fas",
                iconName: "not-equal",
                icon: [448, 512, [], "f53e", "M416 208c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32h-23.88l51.87-66.81c5.37-7.02 4.04-17.06-2.97-22.43L415.61 3.3c-7.02-5.38-17.06-4.04-22.44 2.97L311.09 112H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h204.56l-74.53 96H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h55.49l-51.87 66.81c-5.37 7.01-4.04 17.05 2.97 22.43L64 508.7c7.02 5.38 17.06 4.04 22.43-2.97L168.52 400H416c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32H243.05l74.53-96H416z"]
            },
            faNotesMedical: {
                prefix: "fas",
                iconName: "notes-medical",
                icon: [384, 512, [], "f481", "M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm96 304c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48zm0-192c0 4.4-3.6 8-8 8H104c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h176c4.4 0 8 3.6 8 8v16z"]
            },
            faObjectGroup: {
                prefix: "fas",
                iconName: "object-group",
                icon: [512, 512, [], "f247", "M480 128V96h20c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v20H64V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v40c0 6.627 5.373 12 12 12h20v320H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-20h384v20c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-20V128zM96 276V140c0-6.627 5.373-12 12-12h168c6.627 0 12 5.373 12 12v136c0 6.627-5.373 12-12 12H108c-6.627 0-12-5.373-12-12zm320 96c0 6.627-5.373 12-12 12H236c-6.627 0-12-5.373-12-12v-52h72c13.255 0 24-10.745 24-24v-72h84c6.627 0 12 5.373 12 12v136z"]
            },
            faObjectUngroup: {
                prefix: "fas",
                iconName: "object-ungroup",
                icon: [576, 512, [], "f248", "M64 320v26a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6v-52a6 6 0 0 1 6-6h26V96H6a6 6 0 0 1-6-6V38a6 6 0 0 1 6-6h52a6 6 0 0 1 6 6v26h288V38a6 6 0 0 1 6-6h52a6 6 0 0 1 6 6v52a6 6 0 0 1-6 6h-26v192h26a6 6 0 0 1 6 6v52a6 6 0 0 1-6 6h-52a6 6 0 0 1-6-6v-26H64zm480-64v-32h26a6 6 0 0 0 6-6v-52a6 6 0 0 0-6-6h-52a6 6 0 0 0-6 6v26H408v72h8c13.255 0 24 10.745 24 24v64c0 13.255-10.745 24-24 24h-64c-13.255 0-24-10.745-24-24v-8H192v72h-26a6 6 0 0 0-6 6v52a6 6 0 0 0 6 6h52a6 6 0 0 0 6-6v-26h288v26a6 6 0 0 0 6 6h52a6 6 0 0 0 6-6v-52a6 6 0 0 0-6-6h-26V256z"]
            },
            faOutdent: {
                prefix: "fas",
                iconName: "outdent",
                icon: [448, 512, [], "f03b", "M0 84V44c0-8.837 7.163-16 16-16h416c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16zm208 144h224c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H208c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM16 484h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm192-128h224c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H208c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM4.687 267.313l96 95.984C110.734 373.348 128 366.224 128 351.984V160.008c0-14.329-17.325-21.304-27.313-11.313l-96 95.992c-6.249 6.248-6.249 16.378 0 22.626z"]
            },
            faPaintBrush: {
                prefix: "fas",
                iconName: "paint-brush",
                icon: [512, 512, [], "f1fc", "M269.9 364.6c1.4 6.4 2.1 13 2.1 19.7 0 81.2-54.2 127.7-134.8 127.7C41.5 512 0 435.1 0 347.6c10.4 7.1 46.9 36.5 58.7 36.5 7 0 13-4 15.5-10.6 23.6-62.2 66.5-76.5 112.9-77.4 15.6 33.8 46.1 59.6 82.8 68.5zM460.6 0c-14.4 0-27.9 6.4-38.2 15.7C228.2 190 208 194.1 208 245.4c0 48.8 40.5 90.6 90.2 90.6 59 0 93.2-43.4 200.6-244.8 7-13.7 13.2-28.5 13.2-43.9C512 19.7 487.3 0 460.6 0z"]
            },
            faPalette: {
                prefix: "fas",
                iconName: "palette",
                icon: [512, 512, [], "f53f", "M204.3 5C104.9 24.4 24.8 104.3 5.2 203.4c-37 187 131.7 326.4 258.8 306.7 41.2-6.4 61.4-54.6 42.5-91.7-23.1-45.4 9.9-98.4 60.9-98.4h79.7c35.8 0 64.8-29.6 64.9-65.3C511.5 97.1 368.1-26.9 204.3 5zM96 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm32-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128-64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z"]
            },
            faPallet: {
                prefix: "fas",
                iconName: "pallet",
                icon: [640, 512, [], "f482", "M144 256h352c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16H384v128l-64-32-64 32V0H144c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16zm480 128c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h48v64H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16h-48v-64h48zm-336 64H128v-64h160v64zm224 0H352v-64h160v64z"]
            },
            faPaperPlane: {
                prefix: "fas",
                iconName: "paper-plane",
                icon: [512, 512, [], "f1d8", "M476 3.2L12.5 270.6c-18.1 10.4-15.8 35.6 2.2 43.2L121 358.4l287.3-253.2c5.5-4.9 13.3 2.6 8.6 8.3L176 407v80.5c0 23.6 28.5 32.9 42.5 15.8L282 426l124.6 52.2c14.2 6 30.4-2.9 33-18.2l72-432C515 7.8 493.3-6.8 476 3.2z"]
            },
            faPaperclip: {
                prefix: "fas",
                iconName: "paperclip",
                icon: [448, 512, [], "f0c6", "M43.246 466.142c-58.43-60.289-57.341-157.511 1.386-217.581L254.392 34c44.316-45.332 116.351-45.336 160.671 0 43.89 44.894 43.943 117.329 0 162.276L232.214 383.128c-29.855 30.537-78.633 30.111-107.982-.998-28.275-29.97-27.368-77.473 1.452-106.953l143.743-146.835c6.182-6.314 16.312-6.422 22.626-.241l22.861 22.379c6.315 6.182 6.422 16.312.241 22.626L171.427 319.927c-4.932 5.045-5.236 13.428-.648 18.292 4.372 4.634 11.245 4.711 15.688.165l182.849-186.851c19.613-20.062 19.613-52.725-.011-72.798-19.189-19.627-49.957-19.637-69.154 0L90.39 293.295c-34.763 35.56-35.299 93.12-1.191 128.313 34.01 35.093 88.985 35.137 123.058.286l172.06-175.999c6.177-6.319 16.307-6.433 22.626-.256l22.877 22.364c6.319 6.177 6.434 16.307.256 22.626l-172.06 175.998c-59.576 60.938-155.943 60.216-214.77-.485z"]
            },
            faParachuteBox: {
                prefix: "fas",
                iconName: "parachute-box",
                icon: [512, 512, [], "f4cd", "M511.9 175c-9.1-75.6-78.4-132.4-158.3-158.7C390 55.7 416 116.9 416 192h28.1L327.5 321.5c-2.5-.6-4.8-1.5-7.5-1.5h-48V192h112C384 76.8 315.1 0 256 0S128 76.8 128 192h112v128h-48c-2.7 0-5 .9-7.5 1.5L67.9 192H96c0-75.1 26-136.3 62.4-175.7C78.5 42.7 9.2 99.5.1 175c-1.1 9.1 6.8 17 16 17h8.7l136.7 151.9c-.7 2.6-1.6 5.2-1.6 8.1v128c0 17.7 14.3 32 32 32h128c17.7 0 32-14.3 32-32V352c0-2.9-.9-5.4-1.6-8.1L487.1 192h8.7c9.3 0 17.2-7.8 16.1-17z"]
            },
            faParagraph: {
                prefix: "fas",
                iconName: "paragraph",
                icon: [448, 512, [], "f1dd", "M408 32H177.531C88.948 32 16.045 103.335 16 191.918 15.956 280.321 87.607 352 176 352v104c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V112h32v344c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V112h40c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24z"]
            },
            faParking: {
                prefix: "fas",
                iconName: "parking",
                icon: [448, 512, [], "f540", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM240 320h-48v48c0 8.8-7.2 16-16 16h-32c-8.8 0-16-7.2-16-16V144c0-8.8 7.2-16 16-16h96c52.9 0 96 43.1 96 96s-43.1 96-96 96zm0-128h-48v64h48c17.6 0 32-14.4 32-32s-14.4-32-32-32z"]
            },
            faPaste: {
                prefix: "fas",
                iconName: "paste",
                icon: [448, 512, [], "f0ea", "M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"]
            },
            faPause: {
                prefix: "fas",
                iconName: "pause",
                icon: [448, 512, [], "f04c", "M144 479H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zm304-48V79c0-26.5-21.5-48-48-48h-96c-26.5 0-48 21.5-48 48v352c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48z"]
            },
            faPauseCircle: {
                prefix: "fas",
                iconName: "pause-circle",
                icon: [512, 512, [], "f28b", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm-16 328c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v160zm112 0c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v160z"]
            },
            faPaw: {
                prefix: "fas",
                iconName: "paw",
                icon: [512, 512, [], "f1b0", "M85.231 330.958C36 330.958 0 273.792 0 231.5c0-28.292 16-58.042 49.538-58.042 49.231 0 85.231 57.458 85.231 99.75 0 28.292-15.692 57.75-49.538 57.75zm348 106.167c0 37.042-32 42.875-63.385 42.875-41.231 0-74.462-26.25-113.846-26.25-41.231 0-76.308 25.958-120.923 25.958-29.847 0-56.308-9.625-56.308-42.583C78.769 368 180.616 265.333 256 265.333s177.231 102.959 177.231 171.792zM182.462 203.792c-49.847 0-80-59.5-80-100.333C102.462 70.792 120.308 32 160 32c50.154 0 80 59.5 80 100.333 0 32.667-17.846 71.459-57.538 71.459zM272 132.333C272 91.5 301.846 32 352 32c39.692 0 57.539 38.792 57.539 71.458 0 40.833-30.154 100.333-80.001 100.333C289.846 203.792 272 165 272 132.333zM512 231.5c0 42.292-36 99.458-85.231 99.458-33.847 0-49.538-29.458-49.538-57.75 0-42.291 35.999-99.75 85.231-99.75C496 173.458 512 203.208 512 231.5z"]
            },
            faPenSquare: {
                prefix: "fas",
                iconName: "pen-square",
                icon: [448, 512, [], "f14b", "M400 480H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zM238.1 177.9L102.4 313.6l-6.3 57.1c-.8 7.6 5.6 14.1 13.3 13.3l57.1-6.3L302.2 242c2.3-2.3 2.3-6.1 0-8.5L246.7 178c-2.5-2.4-6.3-2.4-8.6-.1zM345 165.1L314.9 135c-9.4-9.4-24.6-9.4-33.9 0l-23.1 23.1c-2.3 2.3-2.3 6.1 0 8.5l55.5 55.5c2.3 2.3 6.1 2.3 8.5 0L345 199c9.3-9.3 9.3-24.5 0-33.9z"]
            },
            faPencilAlt: {
                prefix: "fas",
                iconName: "pencil-alt",
                icon: [512, 512, [], "f303", "M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z"]
            },
            faPeopleCarry: {
                prefix: "fas",
                iconName: "people-carry",
                icon: [640, 512, [], "f4ce", "M128 96c26.5 0 48-21.5 48-48S154.5 0 128 0 80 21.5 80 48s21.5 48 48 48zm384 0c26.5 0 48-21.5 48-48S538.5 0 512 0s-48 21.5-48 48 21.5 48 48 48zm125.7 372.1l-44-110-41.1 46.4-2 18.2 27.7 69.2c5 12.5 17 20.1 29.7 20.1 4 0 8-.7 11.9-2.3 16.4-6.6 24.4-25.2 17.8-41.6zm-34.2-209.8L585 178.1c-4.6-20-18.6-36.8-37.5-44.9-18.5-8-39-6.7-56.1 3.3-22.7 13.4-39.7 34.5-48.1 59.4L432 229.8 416 240v-96c0-8.8-7.2-16-16-16H240c-8.8 0-16 7.2-16 16v96l-16.1-10.2-11.3-33.9c-8.3-25-25.4-46-48.1-59.4-17.2-10-37.6-11.3-56.1-3.3-18.9 8.1-32.9 24.9-37.5 44.9l-18.4 80.2c-4.6 20 .7 41.2 14.4 56.7l67.2 75.9 10.1 92.6C130 499.8 143.8 512 160 512c1.2 0 2.3-.1 3.5-.2 17.6-1.9 30.2-17.7 28.3-35.3l-10.1-92.8c-1.5-13-6.9-25.1-15.6-35l-43.3-49 17.6-70.3 6.8 20.4c4.1 12.5 11.9 23.4 24.5 32.6l51.1 32.5c4.6 2.9 12.1 4.6 17.2 5h160c5.1-.4 12.6-2.1 17.2-5l51.1-32.5c12.6-9.2 20.4-20 24.5-32.6l6.8-20.4 17.6 70.3-43.3 49c-8.7 9.9-14.1 22-15.6 35l-10.1 92.8c-1.9 17.6 10.8 33.4 28.3 35.3 1.2.1 2.3.2 3.5.2 16.1 0 30-12.1 31.8-28.5l10.1-92.6 67.2-75.9c13.6-15.5 19-36.7 14.4-56.7zM46.3 358.1l-44 110c-6.6 16.4 1.4 35 17.8 41.6 16.8 6.6 35.1-1.7 41.6-17.8l27.7-69.2-2-18.2-41.1-46.4z"]
            },
            faPercent: {
                prefix: "fas",
                iconName: "percent",
                icon: [448, 512, [], "f295", "M112 224c61.9 0 112-50.1 112-112S173.9 0 112 0 0 50.1 0 112s50.1 112 112 112zm0-160c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48zm224 224c-61.9 0-112 50.1-112 112s50.1 112 112 112 112-50.1 112-112-50.1-112-112-112zm0 160c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zM392.3.2l31.6-.1c19.4-.1 30.9 21.8 19.7 37.8L77.4 501.6a23.95 23.95 0 0 1-19.6 10.2l-33.4.1c-19.5 0-30.9-21.9-19.7-37.8l368-463.7C377.2 4 384.5.2 392.3.2z"]
            },
            faPercentage: {
                prefix: "fas",
                iconName: "percentage",
                icon: [384, 512, [], "f541", "M109.25 173.25c24.99-24.99 24.99-65.52 0-90.51-24.99-24.99-65.52-24.99-90.51 0-24.99 24.99-24.99 65.52 0 90.51 25 25 65.52 25 90.51 0zm256 165.49c-24.99-24.99-65.52-24.99-90.51 0-24.99 24.99-24.99 65.52 0 90.51 24.99 24.99 65.52 24.99 90.51 0 25-24.99 25-65.51 0-90.51zm-1.94-231.43l-22.62-22.62c-12.5-12.5-32.76-12.5-45.25 0L20.69 359.44c-12.5 12.5-12.5 32.76 0 45.25l22.62 22.62c12.5 12.5 32.76 12.5 45.25 0l274.75-274.75c12.5-12.49 12.5-32.75 0-45.25z"]
            },
            faPhone: {
                prefix: "fas",
                iconName: "phone",
                icon: [512, 512, [], "f095", "M493.4 24.6l-104-24c-11.3-2.6-22.9 3.3-27.5 13.9l-48 112c-4.2 9.8-1.4 21.3 6.9 28l60.6 49.6c-36 76.7-98.9 140.5-177.2 177.2l-49.6-60.6c-6.8-8.3-18.2-11.1-28-6.9l-112 48C3.9 366.5-2 378.1.6 389.4l24 104C27.1 504.2 36.7 512 48 512c256.1 0 464-207.5 464-464 0-11.2-7.7-20.9-18.6-23.4z"]
            },
            faPhoneSlash: {
                prefix: "fas",
                iconName: "phone-slash",
                icon: [640, 512, [], "f3dd", "M268.2 381.4l-49.6-60.6c-6.8-8.3-18.2-11.1-28-6.9l-112 48c-10.7 4.6-16.5 16.1-13.9 27.5l24 104c2.5 10.8 12.1 18.6 23.4 18.6 100.7 0 193.7-32.4 269.7-86.9l-80-61.8c-10.9 6.5-22.1 12.7-33.6 18.1zm365.6 76.7L475.1 335.5C537.9 256.4 576 156.9 576 48c0-11.2-7.7-20.9-18.6-23.4l-104-24c-11.3-2.6-22.9 3.3-27.5 13.9l-48 112c-4.2 9.8-1.4 21.3 6.9 28l60.6 49.6c-12.2 26.1-27.9 50.3-46 72.8L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3z"]
            },
            faPhoneSquare: {
                prefix: "fas",
                iconName: "phone-square",
                icon: [448, 512, [], "f098", "M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM94 416c-7.033 0-13.057-4.873-14.616-11.627l-14.998-65a15 15 0 0 1 8.707-17.16l69.998-29.999a15 15 0 0 1 17.518 4.289l30.997 37.885c48.944-22.963 88.297-62.858 110.781-110.78l-37.886-30.997a15.001 15.001 0 0 1-4.289-17.518l30-69.998a15 15 0 0 1 17.16-8.707l65 14.998A14.997 14.997 0 0 1 384 126c0 160.292-129.945 290-290 290z"]
            },
            faPhoneVolume: {
                prefix: "fas",
                iconName: "phone-volume",
                icon: [384, 512, [], "f2a0", "M97.333 506.966c-129.874-129.874-129.681-340.252 0-469.933 5.698-5.698 14.527-6.632 21.263-2.422l64.817 40.513a17.187 17.187 0 0 1 6.849 20.958l-32.408 81.021a17.188 17.188 0 0 1-17.669 10.719l-55.81-5.58c-21.051 58.261-20.612 122.471 0 179.515l55.811-5.581a17.188 17.188 0 0 1 17.669 10.719l32.408 81.022a17.188 17.188 0 0 1-6.849 20.958l-64.817 40.513a17.19 17.19 0 0 1-21.264-2.422zM247.126 95.473c11.832 20.047 11.832 45.008 0 65.055-3.95 6.693-13.108 7.959-18.718 2.581l-5.975-5.726c-3.911-3.748-4.793-9.622-2.261-14.41a32.063 32.063 0 0 0 0-29.945c-2.533-4.788-1.65-10.662 2.261-14.41l5.975-5.726c5.61-5.378 14.768-4.112 18.718 2.581zm91.787-91.187c60.14 71.604 60.092 175.882 0 247.428-4.474 5.327-12.53 5.746-17.552.933l-5.798-5.557c-4.56-4.371-4.977-11.529-.93-16.379 49.687-59.538 49.646-145.933 0-205.422-4.047-4.85-3.631-12.008.93-16.379l5.798-5.557c5.022-4.813 13.078-4.394 17.552.933zm-45.972 44.941c36.05 46.322 36.108 111.149 0 157.546-4.39 5.641-12.697 6.251-17.856 1.304l-5.818-5.579c-4.4-4.219-4.998-11.095-1.285-15.931 26.536-34.564 26.534-82.572 0-117.134-3.713-4.836-3.115-11.711 1.285-15.931l5.818-5.579c5.159-4.947 13.466-4.337 17.856 1.304z"]
            },
            faPiggyBank: {
                prefix: "fas",
                iconName: "piggy-bank",
                icon: [576, 512, [], "f4d3", "M560 224h-29.5c-8.8-20-21.6-37.7-37.4-52.5L512 96h-32c-29.4 0-55.4 13.5-73 34.3-7.6-1.1-15.1-2.3-23-2.3H256c-77.4 0-141.9 55-156.8 128H56c-14.8 0-26.5-13.5-23.5-28.8C34.7 215.8 45.4 208 57 208h1c3.3 0 6-2.7 6-6v-20c0-3.3-2.7-6-6-6-28.5 0-53.9 20.4-57.5 48.6C-3.9 258.8 22.7 288 56 288h40c0 52.2 25.4 98.1 64 127.3V496c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-48h128v48c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-80.7c11.8-8.9 22.3-19.4 31.3-31.3H560c8.8 0 16-7.2 16-16V240c0-8.8-7.2-16-16-16zm-128 64c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zM256 96h128c5.4 0 10.7.4 15.9.8 0-.3.1-.5.1-.8 0-53-43-96-96-96s-96 43-96 96c0 2.1.5 4.1.6 6.2 15.2-3.9 31-6.2 47.4-6.2z"]
            },
            faPills: {
                prefix: "fas",
                iconName: "pills",
                icon: [576, 512, [], "f484", "M112 32C50.1 32 0 82.1 0 144v224c0 61.9 50.1 112 112 112s112-50.1 112-112V144c0-61.9-50.1-112-112-112zm48 224H64V144c0-26.5 21.5-48 48-48s48 21.5 48 48v112zm139.7-29.7c-3.5-3.5-9.4-3.1-12.3.8-45.3 62.5-40.4 150.1 15.9 206.4 56.3 56.3 143.9 61.2 206.4 15.9 4-2.9 4.3-8.8.8-12.3L299.7 226.3zm229.8-19c-56.3-56.3-143.9-61.2-206.4-15.9-4 2.9-4.3 8.8-.8 12.3l210.8 210.8c3.5 3.5 9.4 3.1 12.3-.8 45.3-62.6 40.5-150.1-15.9-206.4z"]
            },
            faPlane: {
                prefix: "fas",
                iconName: "plane",
                icon: [576, 512, [], "f072", "M480 192H365.71L260.61 8.06A16.014 16.014 0 0 0 246.71 0h-65.5c-10.63 0-18.3 10.17-15.38 20.39L214.86 192H112l-43.2-57.6c-3.02-4.03-7.77-6.4-12.8-6.4H16.01C5.6 128-2.04 137.78.49 147.88L32 256 .49 364.12C-2.04 374.22 5.6 384 16.01 384H56c5.04 0 9.78-2.37 12.8-6.4L112 320h102.86l-49.03 171.6c-2.92 10.22 4.75 20.4 15.38 20.4h65.5c5.74 0 11.04-3.08 13.89-8.06L365.71 320H480c35.35 0 96-28.65 96-64s-60.65-64-96-64z"]
            },
            faPlay: {
                prefix: "fas",
                iconName: "play",
                icon: [448, 512, [], "f04b", "M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z"]
            },
            faPlayCircle: {
                prefix: "fas",
                iconName: "play-circle",
                icon: [512, 512, [], "f144", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z"]
            },
            faPlug: {
                prefix: "fas",
                iconName: "plug",
                icon: [384, 512, [], "f1e6", "M256 144V32c0-17.673 14.327-32 32-32s32 14.327 32 32v112h-64zm112 16H16c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h16v32c0 77.406 54.969 141.971 128 156.796V512h64v-99.204c73.031-14.825 128-79.39 128-156.796v-32h16c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16zm-240-16V32c0-17.673-14.327-32-32-32S64 14.327 64 32v112h64z"]
            },
            faPlus: {
                prefix: "fas",
                iconName: "plus",
                icon: [448, 512, [], "f067", "M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"]
            },
            faPlusCircle: {
                prefix: "fas",
                iconName: "plus-circle",
                icon: [512, 512, [], "f055", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"]
            },
            faPlusSquare: {
                prefix: "fas",
                iconName: "plus-square",
                icon: [448, 512, [], "f0fe", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"]
            },
            faPodcast: {
                prefix: "fas",
                iconName: "podcast",
                icon: [448, 512, [], "f2ce", "M267.429 488.563C262.286 507.573 242.858 512 224 512c-18.857 0-38.286-4.427-43.428-23.437C172.927 460.134 160 388.898 160 355.75c0-35.156 31.142-43.75 64-43.75s64 8.594 64 43.75c0 32.949-12.871 104.179-20.571 132.813zM156.867 288.554c-18.693-18.308-29.958-44.173-28.784-72.599 2.054-49.724 42.395-89.956 92.124-91.881C274.862 121.958 320 165.807 320 220c0 26.827-11.064 51.116-28.866 68.552-2.675 2.62-2.401 6.986.628 9.187 9.312 6.765 16.46 15.343 21.234 25.363 1.741 3.654 6.497 4.66 9.449 1.891 28.826-27.043 46.553-65.783 45.511-108.565-1.855-76.206-63.595-138.208-139.793-140.369C146.869 73.753 80 139.215 80 220c0 41.361 17.532 78.7 45.55 104.989 2.953 2.771 7.711 1.77 9.453-1.887 4.774-10.021 11.923-18.598 21.235-25.363 3.029-2.2 3.304-6.566.629-9.185zM224 0C100.204 0 0 100.185 0 224c0 89.992 52.602 165.647 125.739 201.408 4.333 2.118 9.267-1.544 8.535-6.31-2.382-15.512-4.342-30.946-5.406-44.339-.146-1.836-1.149-3.486-2.678-4.512-47.4-31.806-78.564-86.016-78.187-147.347.592-96.237 79.29-174.648 175.529-174.899C320.793 47.747 400 126.797 400 224c0 61.932-32.158 116.49-80.65 147.867-.999 14.037-3.069 30.588-5.624 47.23-.732 4.767 4.203 8.429 8.535 6.31C395.227 389.727 448 314.187 448 224 448 100.205 347.815 0 224 0zm0 160c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64z"]
            },
            faPoo: {
                prefix: "fas",
                iconName: "poo",
                icon: [512, 512, [], "f2fe", "M451.4 369.1C468.7 356 480 335.4 480 312c0-39.8-32.2-72-72-72h-14.1c13.4-11.7 22.1-28.8 22.1-48 0-35.3-28.7-64-64-64h-5.9c3.6-10.1 5.9-20.7 5.9-32 0-53-43-96-96-96-5.2 0-10.2.7-15.1 1.5C250.3 14.6 256 30.6 256 48c0 44.2-35.8 80-80 80h-16c-35.3 0-64 28.7-64 64 0 19.2 8.7 36.3 22.1 48H104c-39.8 0-72 32.2-72 72 0 23.4 11.3 44 28.6 57.1C26.3 374.6 0 404.1 0 440c0 39.8 32.2 72 72 72h368c39.8 0 72-32.2 72-72 0-35.9-26.3-65.4-60.6-70.9zM192 256c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm159.5 139C341 422.9 293 448 256 448s-85-25.1-95.5-53c-2-5.3 2-11 7.8-11h175.4c5.8 0 9.8 5.7 7.8 11zM320 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z"]
            },
            faPortrait: {
                prefix: "fas",
                iconName: "portrait",
                icon: [384, 512, [], "f3e0", "M336 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM192 128c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H102.4C90 384 80 375.4 80 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2z"]
            },
            faPoundSign: {
                prefix: "fas",
                iconName: "pound-sign",
                icon: [320, 512, [], "f154", "M308 352h-45.495c-6.627 0-12 5.373-12 12v50.848H128V288h84c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-84v-63.556c0-32.266 24.562-57.086 61.792-57.086 23.658 0 45.878 11.505 57.652 18.849 5.151 3.213 11.888 2.051 15.688-2.685l28.493-35.513c4.233-5.276 3.279-13.005-2.119-17.081C273.124 54.56 236.576 32 187.931 32 106.026 32 48 84.742 48 157.961V224H20c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h28v128H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h296c6.627 0 12-5.373 12-12V364c0-6.627-5.373-12-12-12z"]
            },
            faPowerOff: {
                prefix: "fas",
                iconName: "power-off",
                icon: [512, 512, [], "f011", "M400 54.1c63 45 104 118.6 104 201.9 0 136.8-110.8 247.7-247.5 248C120 504.3 8.2 393 8 256.4 7.9 173.1 48.9 99.3 111.8 54.2c11.7-8.3 28-4.8 35 7.7L162.6 90c5.9 10.5 3.1 23.8-6.6 31-41.5 30.8-68 79.6-68 134.9-.1 92.3 74.5 168.1 168 168.1 91.6 0 168.6-74.2 168-169.1-.3-51.8-24.7-101.8-68.1-134-9.7-7.2-12.4-20.5-6.5-30.9l15.8-28.1c7-12.4 23.2-16.1 34.8-7.8zM296 264V24c0-13.3-10.7-24-24-24h-32c-13.3 0-24 10.7-24 24v240c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24z"]
            },
            faPrescriptionBottle: {
                prefix: "fas",
                iconName: "prescription-bottle",
                icon: [384, 512, [], "f485", "M32 192h120c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H32v64h120c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H32v64h120c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H32v64c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32V128H32v64zM360 0H24C10.8 0 0 10.8 0 24v48c0 13.2 10.8 24 24 24h336c13.2 0 24-10.8 24-24V24c0-13.2-10.8-24-24-24z"]
            },
            faPrescriptionBottleAlt: {
                prefix: "fas",
                iconName: "prescription-bottle-alt",
                icon: [384, 512, [], "f486", "M360 0H24C10.8 0 0 10.8 0 24v48c0 13.2 10.8 24 24 24h336c13.2 0 24-10.8 24-24V24c0-13.2-10.8-24-24-24zM32 480c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32V128H32v352zm64-184c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48z"]
            },
            faPrint: {
                prefix: "fas",
                iconName: "print",
                icon: [512, 512, [], "f02f", "M464 192h-16V81.941a24 24 0 0 0-7.029-16.97L383.029 7.029A24 24 0 0 0 366.059 0H88C74.745 0 64 10.745 64 24v168H48c-26.51 0-48 21.49-48 48v132c0 6.627 5.373 12 12 12h52v104c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V384h52c6.627 0 12-5.373 12-12V240c0-26.51-21.49-48-48-48zm-80 256H128v-96h256v96zM128 224V64h192v40c0 13.2 10.8 24 24 24h40v96H128zm304 72c-13.254 0-24-10.746-24-24s10.746-24 24-24 24 10.746 24 24-10.746 24-24 24z"]
            },
            faProcedures: {
                prefix: "fas",
                iconName: "procedures",
                icon: [640, 512, [], "f487", "M528 224H272c-8.8 0-16 7.2-16 16v144H64V144c0-8.8-7.2-16-16-16H16c-8.8 0-16 7.2-16 16v352c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48h512v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V336c0-61.9-50.1-112-112-112zM136 96h126.1l27.6 55.2c5.9 11.8 22.7 11.8 28.6 0L368 51.8 390.1 96H512c8.8 0 16-7.2 16-16s-7.2-16-16-16H409.9L382.3 8.8C376.4-3 359.6-3 353.7 8.8L304 108.2l-19.9-39.8c-1.4-2.7-4.1-4.4-7.2-4.4H136c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm24 256c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64z"]
            },
            faProjectDiagram: {
                prefix: "fas",
                iconName: "project-diagram",
                icon: [640, 512, [], "f542", "M384 320H256c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h128c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32zM192 32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v128c0 17.67 14.33 32 32 32h95.72l73.16 128.04C211.98 300.98 232.4 288 256 288h.28L192 175.51V128h224V64H192V32zM608 0H480c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h128c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32z"]
            },
            faPuzzlePiece: {
                prefix: "fas",
                iconName: "puzzle-piece",
                icon: [576, 512, [], "f12e", "M519.442 288.651c-41.519 0-59.5 31.593-82.058 31.593C377.409 320.244 432 144 432 144s-196.288 80-196.288-3.297c0-35.827 36.288-46.25 36.288-85.985C272 19.216 243.885 0 210.539 0c-34.654 0-66.366 18.891-66.366 56.346 0 41.364 31.711 59.277 31.711 81.75C175.885 207.719 0 166.758 0 166.758v333.237s178.635 41.047 178.635-28.662c0-22.473-40-40.107-40-81.471 0-37.456 29.25-56.346 63.577-56.346 33.673 0 61.788 19.216 61.788 54.717 0 39.735-36.288 50.158-36.288 85.985 0 60.803 129.675 25.73 181.23 25.73 0 0-34.725-120.101 25.827-120.101 35.962 0 46.423 36.152 86.308 36.152C556.712 416 576 387.99 576 354.443c0-34.199-18.962-65.792-56.558-65.792z"]
            },
            faQrcode: {
                prefix: "fas",
                iconName: "qrcode",
                icon: [448, 512, [], "f029", "M0 224h192V32H0v192zM64 96h64v64H64V96zm192-64v192h192V32H256zm128 128h-64V96h64v64zM0 480h192V288H0v192zm64-128h64v64H64v-64zm352-64h32v128h-96v-32h-32v96h-64V288h96v32h64v-32zm0 160h32v32h-32v-32zm-64 0h32v32h-32v-32z"]
            },
            faQuestion: {
                prefix: "fas",
                iconName: "question",
                icon: [384, 512, [], "f128", "M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z"]
            },
            faQuestionCircle: {
                prefix: "fas",
                iconName: "question-circle",
                icon: [512, 512, [], "f059", "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"]
            },
            faQuidditch: {
                prefix: "fas",
                iconName: "quidditch",
                icon: [640, 512, [], "f458", "M256.5 216.8L343.2 326s-16.6 102.4-76.6 150.1C206.7 523.8 0 510.2 0 510.2s3.8-23.1 11-55.4l94.6-112.2c4-4.7-.9-11.6-6.6-9.5l-60.4 22.1c14.4-41.7 32.7-80 54.6-97.5 59.9-47.8 163.3-40.9 163.3-40.9zm238 135c-44 0-79.8 35.8-79.8 79.9 0 44.1 35.7 79.9 79.8 79.9 44.1 0 79.8-35.8 79.8-79.9 0-44.2-35.8-79.9-79.8-79.9zM636.5 31L616.7 6c-5.5-6.9-15.5-8-22.4-2.6L361.8 181.3l-34.1-43c-5.1-6.4-15.1-5.2-18.6 2.2l-25.3 54.6 86.7 109.2 58.8-12.4c8-1.7 11.4-11.2 6.3-17.6l-34.1-42.9L634 53.5c6.9-5.5 8-15.6 2.5-22.5z"]
            },
            faQuoteLeft: {
                prefix: "fas",
                iconName: "quote-left",
                icon: [512, 512, [], "f10d", "M464 256h-80v-64c0-35.3 28.7-64 64-64h8c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24h-8c-88.4 0-160 71.6-160 160v240c0 26.5 21.5 48 48 48h128c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48zm-288 0H96v-64c0-35.3 28.7-64 64-64h8c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24h-8C71.6 32 0 103.6 0 192v240c0 26.5 21.5 48 48 48h128c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z"]
            },
            faQuoteRight: {
                prefix: "fas",
                iconName: "quote-right",
                icon: [512, 512, [], "f10e", "M464 32H336c-26.5 0-48 21.5-48 48v128c0 26.5 21.5 48 48 48h80v64c0 35.3-28.7 64-64 64h-8c-13.3 0-24 10.7-24 24v48c0 13.3 10.7 24 24 24h8c88.4 0 160-71.6 160-160V80c0-26.5-21.5-48-48-48zm-288 0H48C21.5 32 0 53.5 0 80v128c0 26.5 21.5 48 48 48h80v64c0 35.3-28.7 64-64 64h-8c-13.3 0-24 10.7-24 24v48c0 13.3 10.7 24 24 24h8c88.4 0 160-71.6 160-160V80c0-26.5-21.5-48-48-48z"]
            },
            faRandom: {
                prefix: "fas",
                iconName: "random",
                icon: [512, 512, [], "f074", "M504.971 359.029c9.373 9.373 9.373 24.569 0 33.941l-80 79.984c-15.01 15.01-40.971 4.49-40.971-16.971V416h-58.785a12.004 12.004 0 0 1-8.773-3.812l-70.556-75.596 53.333-57.143L352 336h32v-39.981c0-21.438 25.943-31.998 40.971-16.971l80 79.981zM12 176h84l52.781 56.551 53.333-57.143-70.556-75.596A11.999 11.999 0 0 0 122.785 96H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12zm372 0v39.984c0 21.46 25.961 31.98 40.971 16.971l80-79.984c9.373-9.373 9.373-24.569 0-33.941l-80-79.981C409.943 24.021 384 34.582 384 56.019V96h-58.785a12.004 12.004 0 0 0-8.773 3.812L96 336H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h110.785c3.326 0 6.503-1.381 8.773-3.812L352 176h32z"]
            },
            faReceipt: {
                prefix: "fas",
                iconName: "receipt",
                icon: [384, 512, [], "f543", "M358.4 3.2L320 48 265.6 3.2a15.9 15.9 0 0 0-19.2 0L192 48 137.6 3.2a15.9 15.9 0 0 0-19.2 0L64 48 25.6 3.2C15-4.7 0 2.8 0 16v480c0 13.2 15 20.7 25.6 12.8L64 464l54.4 44.8a15.9 15.9 0 0 0 19.2 0L192 464l54.4 44.8a15.9 15.9 0 0 0 19.2 0L320 464l38.4 44.8c10.5 7.9 25.6.4 25.6-12.8V16c0-13.2-15-20.7-25.6-12.8zM320 360c0 4.4-3.6 8-8 8H72c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h240c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H72c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h240c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H72c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h240c4.4 0 8 3.6 8 8v16z"]
            },
            faRecycle: {
                prefix: "fas",
                iconName: "recycle",
                icon: [512, 512, [], "f1b8", "M184.561 261.903c3.232 13.997-12.123 24.635-24.068 17.168l-40.736-25.455-50.867 81.402C55.606 356.273 70.96 384 96.012 384H148c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12H96.115c-75.334 0-121.302-83.048-81.408-146.88l50.822-81.388-40.725-25.448c-12.081-7.547-8.966-25.961 4.879-29.158l110.237-25.45c8.611-1.988 17.201 3.381 19.189 11.99l25.452 110.237zm98.561-182.915l41.289 66.076-40.74 25.457c-12.051 7.528-9 25.953 4.879 29.158l110.237 25.45c8.672 1.999 17.215-3.438 19.189-11.99l25.45-110.237c3.197-13.844-11.99-24.719-24.068-17.168l-40.687 25.424-41.263-66.082c-37.521-60.033-125.209-60.171-162.816 0l-17.963 28.766c-3.51 5.62-1.8 13.021 3.82 16.533l33.919 21.195c5.62 3.512 13.024 1.803 16.536-3.817l17.961-28.743c12.712-20.341 41.973-19.676 54.257-.022zM497.288 301.12l-27.515-44.065c-3.511-5.623-10.916-7.334-16.538-3.821l-33.861 21.159c-5.62 3.512-7.33 10.915-3.818 16.536l27.564 44.112c13.257 21.211-2.057 48.96-27.136 48.96H320V336.02c0-14.213-17.242-21.383-27.313-11.313l-80 79.981c-6.249 6.248-6.249 16.379 0 22.627l80 79.989C302.689 517.308 320 510.3 320 495.989V448h95.88c75.274 0 121.335-82.997 81.408-146.88z"]
            },
            faRedo: {
                prefix: "fas",
                iconName: "redo",
                icon: [512, 512, [], "f01e", "M500.333 0h-47.411c-6.853 0-12.314 5.729-11.986 12.574l3.966 82.759C399.416 41.899 331.672 8 256.001 8 119.34 8 7.899 119.526 8 256.187 8.101 393.068 119.096 504 256 504c63.926 0 122.202-24.187 166.178-63.908 5.113-4.618 5.354-12.561.482-17.433l-33.971-33.971c-4.466-4.466-11.64-4.717-16.38-.543C341.308 415.448 300.606 432 256 432c-97.267 0-176-78.716-176-176 0-97.267 78.716-176 176-176 60.892 0 114.506 30.858 146.099 77.8l-101.525-4.865c-6.845-.328-12.574 5.133-12.574 11.986v47.411c0 6.627 5.373 12 12 12h200.333c6.627 0 12-5.373 12-12V12c0-6.627-5.373-12-12-12z"]
            },
            faRedoAlt: {
                prefix: "fas",
                iconName: "redo-alt",
                icon: [512, 512, [], "f2f9", "M256.455 8c66.269.119 126.437 26.233 170.859 68.685l35.715-35.715C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.75c-30.864-28.899-70.801-44.907-113.23-45.273-92.398-.798-170.283 73.977-169.484 169.442C88.764 348.009 162.184 424 256 424c41.127 0 79.997-14.678 110.629-41.556 4.743-4.161 11.906-3.908 16.368.553l39.662 39.662c4.872 4.872 4.631 12.815-.482 17.433C378.202 479.813 319.926 504 256 504 119.034 504 8.001 392.967 8 256.002 7.999 119.193 119.646 7.755 256.455 8z"]
            },
            faRegistered: {
                prefix: "fas",
                iconName: "registered",
                icon: [512, 512, [], "f25d", "M285.363 207.475c0 18.6-9.831 28.431-28.431 28.431h-29.876v-56.14h23.378c28.668 0 34.929 8.773 34.929 27.709zM504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM363.411 360.414c-46.729-84.825-43.299-78.636-44.702-80.98 23.432-15.172 37.945-42.979 37.945-74.486 0-54.244-31.5-89.252-105.498-89.252h-70.667c-13.255 0-24 10.745-24 24V372c0 13.255 10.745 24 24 24h22.567c13.255 0 24-10.745 24-24v-71.663h25.556l44.129 82.937a24.001 24.001 0 0 0 21.188 12.727h24.464c18.261-.001 29.829-19.591 21.018-35.587z"]
            },
            faReply: {
                prefix: "fas",
                iconName: "reply",
                icon: [512, 512, [], "f3e5", "M8.309 189.836L184.313 37.851C199.719 24.546 224 35.347 224 56.015v80.053c160.629 1.839 288 34.032 288 186.258 0 61.441-39.581 122.309-83.333 154.132-13.653 9.931-33.111-2.533-28.077-18.631 45.344-145.012-21.507-183.51-176.59-185.742V360c0 20.7-24.3 31.453-39.687 18.164l-176.004-152c-11.071-9.562-11.086-26.753 0-36.328z"]
            },
            faReplyAll: {
                prefix: "fas",
                iconName: "reply-all",
                icon: [576, 512, [], "f122", "M136.309 189.836L312.313 37.851C327.72 24.546 352 35.348 352 56.015v82.763c129.182 10.231 224 52.212 224 183.548 0 61.441-39.582 122.309-83.333 154.132-13.653 9.931-33.111-2.533-28.077-18.631 38.512-123.162-3.922-169.482-112.59-182.015v84.175c0 20.701-24.3 31.453-39.687 18.164L136.309 226.164c-11.071-9.561-11.086-26.753 0-36.328zm-128 36.328L184.313 378.15C199.7 391.439 224 380.687 224 359.986v-15.818l-108.606-93.785A55.96 55.96 0 0 1 96 207.998a55.953 55.953 0 0 1 19.393-42.38L224 71.832V56.015c0-20.667-24.28-31.469-39.687-18.164L8.309 189.836c-11.086 9.575-11.071 26.767 0 36.328z"]
            },
            faRetweet: {
                prefix: "fas",
                iconName: "retweet",
                icon: [640, 512, [], "f079", "M629.657 343.598L528.971 444.284c-9.373 9.372-24.568 9.372-33.941 0L394.343 343.598c-9.373-9.373-9.373-24.569 0-33.941l10.823-10.823c9.562-9.562 25.133-9.34 34.419.492L480 342.118V160H292.451a24.005 24.005 0 0 1-16.971-7.029l-16-16C244.361 121.851 255.069 96 276.451 96H520c13.255 0 24 10.745 24 24v222.118l40.416-42.792c9.285-9.831 24.856-10.054 34.419-.492l10.823 10.823c9.372 9.372 9.372 24.569-.001 33.941zm-265.138 15.431A23.999 23.999 0 0 0 347.548 352H160V169.881l40.416 42.792c9.286 9.831 24.856 10.054 34.419.491l10.822-10.822c9.373-9.373 9.373-24.569 0-33.941L144.971 67.716c-9.373-9.373-24.569-9.373-33.941 0L10.343 168.402c-9.373 9.373-9.373 24.569 0 33.941l10.822 10.822c9.562 9.562 25.133 9.34 34.419-.491L96 169.881V392c0 13.255 10.745 24 24 24h243.549c21.382 0 32.09-25.851 16.971-40.971l-16.001-16z"]
            },
            faRibbon: {
                prefix: "fas",
                iconName: "ribbon",
                icon: [448, 512, [], "f4d6", "M6.1 444.3c-9.6 10.8-7.5 27.6 4.5 35.7l68.8 27.9c9.9 6.7 23.3 5 31.3-3.8l91.8-101.9-79.2-87.9-117.2 130zm435.8 0s-292-324.6-295.4-330.1c15.4-8.4 40.2-17.9 77.5-17.9s62.1 9.5 77.5 17.9c-3.3 5.6-56 64.6-56 64.6l79.1 87.7 34.2-38c28.7-31.9 33.3-78.6 11.4-115.5l-43.7-73.5c-4.3-7.2-9.9-13.3-16.8-18-40.7-27.6-127.4-29.7-171.4 0-6.9 4.7-12.5 10.8-16.8 18l-43.6 73.2c-1.5 2.5-37.1 62.2 11.5 116L337.5 504c8 8.9 21.4 10.5 31.3 3.8l68.8-27.9c11.9-8 14-24.8 4.3-35.6z"]
            },
            faRoad: {
                prefix: "fas",
                iconName: "road",
                icon: [576, 512, [], "f018", "M567.3 383.6L429.9 78.2C426 69.5 417.4 64 408 64h-96.1l1.9 18.8c.7 7.1-4.8 13.2-11.9 13.2H274c-7.1 0-12.7-6.2-11.9-13.2L264 64h-96c-9.4 0-18 5.5-21.9 14.2L8.7 383.6C3.2 395.8 0 409.6 0 424c0 13.3 10.7 24 24 24h213.6c-7.1 0-12.7-6.2-11.9-13.2l10.8-104c.6-6.1 5.8-10.8 11.9-10.8h79.2c6.1 0 11.3 4.6 11.9 10.8l10.8 104c.7 7.1-4.8 13.2-11.9 13.2H552c13.2 0 24-10.7 24-24 0-13.9-3-27.7-8.7-40.4zM254.7 154.8l3.3-32c.6-6.1 5.8-10.8 11.9-10.8h36.2c6.1 0 11.3 4.6 11.9 10.8l3.3 32c.7 7.1-4.8 13.2-11.9 13.2h-42.8c-7.1 0-12.7-6.2-11.9-13.2zM321.8 288h-67.6c-7.1 0-12.7-6.2-11.9-13.2l7.4-72c.6-6.1 5.8-10.8 11.9-10.8h52.7c6.1 0 11.3 4.6 11.9 10.8l7.4 72c.9 7-4.7 13.2-11.8 13.2z"]
            },
            faRobot: {
                prefix: "fas",
                iconName: "robot",
                icon: [640, 512, [], "f544", "M0 256v128c0 17.7 14.3 32 32 32h32V224H32c-17.7 0-32 14.3-32 32zM464 96H352V32c0-17.7-14.3-32-32-32s-32 14.3-32 32v64H176c-44.2 0-80 35.8-80 80v272c0 35.3 28.7 64 64 64h320c35.3 0 64-28.7 64-64V176c0-44.2-35.8-80-80-80zM256 416h-64v-32h64v32zm-32-120c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm128 120h-64v-32h64v32zm96 0h-64v-32h64v32zm-32-120c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm192-72h-32v192h32c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32z"]
            },
            faRocket: {
                prefix: "fas",
                iconName: "rocket",
                icon: [512, 512, [], "f135", "M505.1 19.1C503.8 13 499 8.2 492.9 6.9 460.7 0 435.5 0 410.4 0 307.2 0 245.3 55.2 199.1 128H94.9c-18.2 0-34.8 10.3-42.9 26.5L2.6 253.3c-8 16 3.6 34.7 21.5 34.7h95.1c-5.9 12.8-11.9 25.5-18 37.7-3.1 6.2-1.9 13.6 3 18.5l63.6 63.6c4.9 4.9 12.3 6.1 18.5 3 12.2-6.1 24.9-12 37.7-17.9V488c0 17.8 18.8 29.4 34.7 21.5l98.7-49.4c16.3-8.1 26.5-24.8 26.5-42.9V312.8c72.6-46.3 128-108.4 128-211.1.1-25.2.1-50.4-6.8-82.6zM400 160c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z"]
            },
            faRss: {
                prefix: "fas",
                iconName: "rss",
                icon: [448, 512, [], "f09e", "M128.081 415.959c0 35.369-28.672 64.041-64.041 64.041S0 451.328 0 415.959s28.672-64.041 64.041-64.041 64.04 28.673 64.04 64.041zm175.66 47.25c-8.354-154.6-132.185-278.587-286.95-286.95C7.656 175.765 0 183.105 0 192.253v48.069c0 8.415 6.49 15.472 14.887 16.018 111.832 7.284 201.473 96.702 208.772 208.772.547 8.397 7.604 14.887 16.018 14.887h48.069c9.149.001 16.489-7.655 15.995-16.79zm144.249.288C439.596 229.677 251.465 40.445 16.503 32.01 7.473 31.686 0 38.981 0 48.016v48.068c0 8.625 6.835 15.645 15.453 15.999 191.179 7.839 344.627 161.316 352.465 352.465.353 8.618 7.373 15.453 15.999 15.453h48.068c9.034-.001 16.329-7.474 16.005-16.504z"]
            },
            faRssSquare: {
                prefix: "fas",
                iconName: "rss-square",
                icon: [448, 512, [], "f143", "M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM112 416c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm157.533 0h-34.335c-6.011 0-11.051-4.636-11.442-10.634-5.214-80.05-69.243-143.92-149.123-149.123-5.997-.39-10.633-5.431-10.633-11.441v-34.335c0-6.535 5.468-11.777 11.994-11.425 110.546 5.974 198.997 94.536 204.964 204.964.352 6.526-4.89 11.994-11.425 11.994zm103.027 0h-34.334c-6.161 0-11.175-4.882-11.427-11.038-5.598-136.535-115.204-246.161-251.76-251.76C68.882 152.949 64 147.935 64 141.774V107.44c0-6.454 5.338-11.664 11.787-11.432 167.83 6.025 302.21 141.191 308.205 308.205.232 6.449-4.978 11.787-11.432 11.787z"]
            },
            faRubleSign: {
                prefix: "fas",
                iconName: "ruble-sign",
                icon: [384, 512, [], "f158", "M239.36 320C324.48 320 384 260.542 384 175.071S324.48 32 239.36 32H76c-6.627 0-12 5.373-12 12v206.632H12c-6.627 0-12 5.373-12 12V308c0 6.627 5.373 12 12 12h52v32H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h52v52c0 6.627 5.373 12 12 12h58.56c6.627 0 12-5.373 12-12v-52H308c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12H146.56v-32h92.8zm-92.8-219.252h78.72c46.72 0 74.88 29.11 74.88 74.323 0 45.832-28.16 75.561-76.16 75.561h-77.44V100.748z"]
            },
            faRuler: {
                prefix: "fas",
                iconName: "ruler",
                icon: [640, 512, [], "f545", "M635.7 167.2L556.1 31.7c-8.8-15-28.3-20.1-43.5-11.5l-69 39.1L503.3 161c2.2 3.8.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9L416 75l-55.2 31.3 27.9 47.4c2.2 3.8.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9L333.2 122 278 153.3 337.8 255c2.2 3.7.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9l-59.7-101.7-55.2 31.3 27.9 47.4c2.2 3.8.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9l-27.9-47.5-55.2 31.3 59.7 101.7c2.2 3.7.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9L84.9 262.9l-69 39.1C.7 310.7-4.6 329.8 4.2 344.8l79.6 135.6c8.8 15 28.3 20.1 43.5 11.5L624.1 210c15.2-8.6 20.4-27.8 11.6-42.8z"]
            },
            faRulerCombined: {
                prefix: "fas",
                iconName: "ruler-combined",
                icon: [512, 512, [], "f546", "M160 288h-56c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h56v-64h-56c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h56V96h-56c-4.42 0-8-3.58-8-8V72c0-4.42 3.58-8 8-8h56V32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v448c0 2.77.91 5.24 1.57 7.8L160 329.38V288zm320 64h-32v56c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-56h-64v56c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-56h-64v56c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-56h-41.37L24.2 510.43c2.56.66 5.04 1.57 7.8 1.57h448c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32z"]
            },
            faRulerHorizontal: {
                prefix: "fas",
                iconName: "ruler-horizontal",
                icon: [576, 512, [], "f547", "M544 128h-48v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8H88c-4.42 0-8-3.58-8-8v-88H32c-17.67 0-32 14.33-32 32v192c0 17.67 14.33 32 32 32h512c17.67 0 32-14.33 32-32V160c0-17.67-14.33-32-32-32z"]
            },
            faRulerVertical: {
                prefix: "fas",
                iconName: "ruler-vertical",
                icon: [256, 512, [], "f548", "M168 416c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88v-64h-88c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88v-64h-88c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88v-64h-88c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88V32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v448c0 17.67 14.33 32 32 32h192c17.67 0 32-14.33 32-32v-64h-88z"]
            },
            faRupeeSign: {
                prefix: "fas",
                iconName: "rupee-sign",
                icon: [320, 512, [], "f156", "M308 96c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v44.748c0 6.627 5.373 12 12 12h85.28c27.308 0 48.261 9.958 60.97 27.252H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h158.757c-6.217 36.086-32.961 58.632-74.757 58.632H12c-6.627 0-12 5.373-12 12v53.012c0 3.349 1.4 6.546 3.861 8.818l165.052 152.356a12.001 12.001 0 0 0 8.139 3.182h82.562c10.924 0 16.166-13.408 8.139-20.818L116.871 319.906c76.499-2.34 131.144-53.395 138.318-127.906H308c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-58.69c-3.486-11.541-8.28-22.246-14.252-32H308z"]
            },
            faSave: {
                prefix: "fas",
                iconName: "save",
                icon: [448, 512, [], "f0c7", "M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z"]
            },
            faSchool: {
                prefix: "fas",
                iconName: "school",
                icon: [640, 512, [], "f549", "M0 224v272c0 8.84 7.16 16 16 16h80V192H32c-17.67 0-32 14.33-32 32zm360-48h-24v-40c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v64c0 4.42 3.58 8 8 8h48c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8zm137.75-63.96l-160-106.67a32.02 32.02 0 0 0-35.5 0l-160 106.67A32.002 32.002 0 0 0 128 138.66V512h128V368c0-8.84 7.16-16 16-16h96c8.84 0 16 7.16 16 16v144h128V138.67c0-10.7-5.35-20.7-14.25-26.63zM320 256c-44.18 0-80-35.82-80-80s35.82-80 80-80 80 35.82 80 80-35.82 80-80 80zm288-64h-64v320h80c8.84 0 16-7.16 16-16V224c0-17.67-14.33-32-32-32z"]
            },
            faScrewdriver: {
                prefix: "fas",
                iconName: "screwdriver",
                icon: [512, 512, [], "f54a", "M448 0L320 96v62.06l-83.03 83.03c6.79 4.25 13.27 9.06 19.07 14.87 5.8 5.8 10.62 12.28 14.87 19.07L353.94 192H416l96-128-64-64zM128 278.59L10.92 395.67c-14.55 14.55-14.55 38.15 0 52.71l52.7 52.7c14.56 14.56 38.15 14.56 52.71 0L233.41 384c29.11-29.11 29.11-76.3 0-105.41s-76.3-29.11-105.41 0z"]
            },
            faSearch: {
                prefix: "fas",
                iconName: "search",
                icon: [512, 512, [], "f002", "M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"]
            },
            faSearchMinus: {
                prefix: "fas",
                iconName: "search-minus",
                icon: [512, 512, [], "f010", "M304 192v32c0 6.6-5.4 12-12 12H124c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm201 284.7L476.7 505c-9.4 9.4-24.6 9.4-33.9 0L343 405.3c-4.5-4.5-7-10.6-7-17V372c-35.3 27.6-79.7 44-128 44C93.1 416 0 322.9 0 208S93.1 0 208 0s208 93.1 208 208c0 48.3-16.4 92.7-44 128h16.3c6.4 0 12.5 2.5 17 7l99.7 99.7c9.3 9.4 9.3 24.6 0 34zM344 208c0-75.2-60.8-136-136-136S72 132.8 72 208s60.8 136 136 136 136-60.8 136-136z"]
            },
            faSearchPlus: {
                prefix: "fas",
                iconName: "search-plus",
                icon: [512, 512, [], "f00e", "M304 192v32c0 6.6-5.4 12-12 12h-56v56c0 6.6-5.4 12-12 12h-32c-6.6 0-12-5.4-12-12v-56h-56c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h56v-56c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v56h56c6.6 0 12 5.4 12 12zm201 284.7L476.7 505c-9.4 9.4-24.6 9.4-33.9 0L343 405.3c-4.5-4.5-7-10.6-7-17V372c-35.3 27.6-79.7 44-128 44C93.1 416 0 322.9 0 208S93.1 0 208 0s208 93.1 208 208c0 48.3-16.4 92.7-44 128h16.3c6.4 0 12.5 2.5 17 7l99.7 99.7c9.3 9.4 9.3 24.6 0 34zM344 208c0-75.2-60.8-136-136-136S72 132.8 72 208s60.8 136 136 136 136-60.8 136-136z"]
            },
            faSeedling: {
                prefix: "fas",
                iconName: "seedling",
                icon: [512, 512, [], "f4d8", "M64 96H0c0 123.7 100.3 224 224 224v144c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320C288 196.3 187.7 96 64 96zm384-64c-84.2 0-157.4 46.5-195.7 115.2 27.7 30.2 48.2 66.9 59 107.6C424 243.1 512 147.9 512 32h-64z"]
            },
            faServer: {
                prefix: "fas",
                iconName: "server",
                icon: [512, 512, [], "f233", "M480 160H32c-17.673 0-32-14.327-32-32V64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24z"]
            },
            faShare: {
                prefix: "fas",
                iconName: "share",
                icon: [512, 512, [], "f064", "M503.691 189.836L327.687 37.851C312.281 24.546 288 35.347 288 56.015v80.053C127.371 137.907 0 170.1 0 322.326c0 61.441 39.581 122.309 83.333 154.132 13.653 9.931 33.111-2.533 28.077-18.631C66.066 312.814 132.917 274.316 288 272.085V360c0 20.7 24.3 31.453 39.687 18.164l176.004-152c11.071-9.562 11.086-26.753 0-36.328z"]
            },
            faShareAlt: {
                prefix: "fas",
                iconName: "share-alt",
                icon: [448, 512, [], "f1e0", "M352 320c-22.608 0-43.387 7.819-59.79 20.895l-102.486-64.054a96.551 96.551 0 0 0 0-41.683l102.486-64.054C308.613 184.181 329.392 192 352 192c53.019 0 96-42.981 96-96S405.019 0 352 0s-96 42.981-96 96c0 7.158.79 14.13 2.276 20.841L155.79 180.895C139.387 167.819 118.608 160 96 160c-53.019 0-96 42.981-96 96s42.981 96 96 96c22.608 0 43.387-7.819 59.79-20.895l102.486 64.054A96.301 96.301 0 0 0 256 416c0 53.019 42.981 96 96 96s96-42.981 96-96-42.981-96-96-96z"]
            },
            faShareAltSquare: {
                prefix: "fas",
                iconName: "share-alt-square",
                icon: [448, 512, [], "f1e1", "M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zM304 296c-14.562 0-27.823 5.561-37.783 14.671l-67.958-40.775a56.339 56.339 0 0 0 0-27.793l67.958-40.775C276.177 210.439 289.438 216 304 216c30.928 0 56-25.072 56-56s-25.072-56-56-56-56 25.072-56 56c0 4.797.605 9.453 1.74 13.897l-67.958 40.775C171.823 205.561 158.562 200 144 200c-30.928 0-56 25.072-56 56s25.072 56 56 56c14.562 0 27.823-5.561 37.783-14.671l67.958 40.775a56.088 56.088 0 0 0-1.74 13.897c0 30.928 25.072 56 56 56s56-25.072 56-56C360 321.072 334.928 296 304 296z"]
            },
            faShareSquare: {
                prefix: "fas",
                iconName: "share-square",
                icon: [576, 512, [], "f14d", "M568.482 177.448L424.479 313.433C409.3 327.768 384 317.14 384 295.985v-71.963c-144.575.97-205.566 35.113-164.775 171.353 4.483 14.973-12.846 26.567-25.006 17.33C155.252 383.105 120 326.488 120 269.339c0-143.937 117.599-172.5 264-173.312V24.012c0-21.174 25.317-31.768 40.479-17.448l144.003 135.988c10.02 9.463 10.028 25.425 0 34.896zM384 379.128V448H64V128h50.916a11.99 11.99 0 0 0 8.648-3.693c14.953-15.568 32.237-27.89 51.014-37.676C185.708 80.83 181.584 64 169.033 64H48C21.49 64 0 85.49 0 112v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48v-88.806c0-8.288-8.197-14.066-16.011-11.302a71.83 71.83 0 0 1-34.189 3.377c-7.27-1.046-13.8 4.514-13.8 11.859z"]
            },
            faShekelSign: {
                prefix: "fas",
                iconName: "shekel-sign",
                icon: [448, 512, [], "f20b", "M248 168v168c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V168c0-75.11-60.89-136-136-136H24C10.75 32 0 42.74 0 56v408c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V112h112c30.93 0 56 25.07 56 56zM432 32h-48c-8.84 0-16 7.16-16 16v296c0 30.93-25.07 56-56 56H200V176c0-8.84-7.16-16-16-16h-48c-8.84 0-16 7.16-16 16v280c0 13.25 10.75 24 24 24h168c75.11 0 136-60.89 136-136V48c0-8.84-7.16-16-16-16z"]
            },
            faShieldAlt: {
                prefix: "fas",
                iconName: "shield-alt",
                icon: [512, 512, [], "f3ed", "M496 128c0 221.282-135.934 344.645-221.539 380.308a48 48 0 0 1-36.923 0C130.495 463.713 16 326.487 16 128a48 48 0 0 1 29.539-44.308l192-80a48 48 0 0 1 36.923 0l192 80A48 48 0 0 1 496 128zM256 446.313l.066.034c93.735-46.689 172.497-156.308 175.817-307.729L256 65.333v380.98z"]
            },
            faShip: {
                prefix: "fas",
                iconName: "ship",
                icon: [640, 512, [], "f21a", "M496.616 372.639l70.012-70.012c16.899-16.9 9.942-45.771-12.836-53.092L512 236.102V96c0-17.673-14.327-32-32-32h-64V24c0-13.255-10.745-24-24-24H248c-13.255 0-24 10.745-24 24v40h-64c-17.673 0-32 14.327-32 32v140.102l-41.792 13.433c-22.753 7.313-29.754 36.173-12.836 53.092l70.012 70.012C125.828 416.287 85.587 448 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24 61.023 0 107.499-20.61 143.258-59.396C181.677 487.432 216.021 512 256 512h128c39.979 0 74.323-24.568 88.742-59.396C508.495 491.384 554.968 512 616 512c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24-60.817 0-101.542-31.001-119.384-75.361zM192 128h256v87.531l-118.208-37.995a31.995 31.995 0 0 0-19.584 0L192 215.531V128z"]
            },
            faShippingFast: {
                prefix: "fas",
                iconName: "shipping-fast",
                icon: [640, 512, [], "f48b", "M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H112C85.5 0 64 21.5 64 48v48H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h272c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H40c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h208c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h208c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H64v128c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm320 0c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z"]
            },
            faShoePrints: {
                prefix: "fas",
                iconName: "shoe-prints",
                icon: [640, 512, [], "f54b", "M192 160h32V32h-32c-35.35 0-64 28.65-64 64s28.65 64 64 64zM0 416c0 35.35 28.65 64 64 64h32V352H64c-35.35 0-64 28.65-64 64zm337.46-128c-34.91 0-76.16 13.12-104.73 32-24.79 16.38-44.52 32-104.73 32v128l57.53 15.97c26.21 7.28 53.01 13.12 80.31 15.05 32.69 2.31 65.6.67 97.58-6.2C472.9 481.3 512 429.22 512 384c0-64-84.18-96-174.54-96zM491.42 7.19C459.44.32 426.53-1.33 393.84.99c-27.3 1.93-54.1 7.77-80.31 15.04L256 32v128c60.2 0 79.94 15.62 104.73 32 28.57 18.88 69.82 32 104.73 32C555.82 224 640 192 640 128c0-45.22-39.1-97.3-148.58-120.81z"]
            },
            faShoppingBag: {
                prefix: "fas",
                iconName: "shopping-bag",
                icon: [448, 512, [], "f290", "M352 160v-32C352 57.42 294.579 0 224 0 153.42 0 96 57.42 96 128v32H0v272c0 44.183 35.817 80 80 80h288c44.183 0 80-35.817 80-80V160h-96zm-192-32c0-35.29 28.71-64 64-64s64 28.71 64 64v32H160v-32zm160 120c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zm-192 0c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24z"]
            },
            faShoppingBasket: {
                prefix: "fas",
                iconName: "shopping-basket",
                icon: [576, 512, [], "f291", "M576 216v16c0 13.255-10.745 24-24 24h-8l-26.113 182.788C514.509 462.435 494.257 480 470.37 480H105.63c-23.887 0-44.139-17.565-47.518-41.212L32 256h-8c-13.255 0-24-10.745-24-24v-16c0-13.255 10.745-24 24-24h67.341l106.78-146.821c10.395-14.292 30.407-17.453 44.701-7.058 14.293 10.395 17.453 30.408 7.058 44.701L170.477 192h235.046L326.12 82.821c-10.395-14.292-7.234-34.306 7.059-44.701 14.291-10.395 34.306-7.235 44.701 7.058L484.659 192H552c13.255 0 24 10.745 24 24zM312 392V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24zm112 0V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24zm-224 0V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24z"]
            },
            faShoppingCart: {
                prefix: "fas",
                iconName: "shopping-cart",
                icon: [576, 512, [], "f07a", "M528.12 301.319l47.273-208C578.806 78.301 567.391 64 551.99 64H159.208l-9.166-44.81C147.758 8.021 137.93 0 126.529 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24h69.883l70.248 343.435C147.325 417.1 136 435.222 136 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-15.674-6.447-29.835-16.824-40h209.647C430.447 426.165 424 440.326 424 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-22.172-12.888-41.332-31.579-50.405l5.517-24.276c3.413-15.018-8.002-29.319-23.403-29.319H218.117l-6.545-32h293.145c11.206 0 20.92-7.754 23.403-18.681z"]
            },
            faShower: {
                prefix: "fas",
                iconName: "shower",
                icon: [512, 512, [], "f2cc", "M389.66 135.6L231.6 293.66c-9.37 9.37-24.57 9.37-33.94 0l-11.32-11.32c-9.37-9.37-9.37-24.57 0-33.94l.11-.11c-34.03-40.21-35.16-98.94-3.39-140.38-11.97-7.55-26.14-11.91-41.3-11.91C98.88 96 64 130.88 64 173.76V480H0V173.76C0 95.59 63.59 32 141.76 32c36.93 0 70.61 14.2 95.86 37.42 35.9-11.51 76.5-4.5 106.67 21.03l.11-.11c9.37-9.37 24.57-9.37 33.94 0l11.32 11.32c9.37 9.37 9.37 24.57 0 33.94zM384 208c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm32 0c0-8.837 7.163-16 16-16s16 7.163 16 16-7.163 16-16 16-16-7.163-16-16zm96 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-160 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm48-16c8.837 0 16 7.163 16 16s-7.163 16-16 16-16-7.163-16-16 7.163-16 16-16zm80 16c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-160 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm32 0c0-8.837 7.163-16 16-16s16 7.163 16 16-7.163 16-16 16-16-7.163-16-16zm96 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-128 32c0-8.837 7.163-16 16-16s16 7.163 16 16-7.163 16-16 16-16-7.163-16-16zm96 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-96 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm64 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-32 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-32 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16z"]
            },
            faSign: {
                prefix: "fas",
                iconName: "sign",
                icon: [512, 512, [], "f4d9", "M496 64H128V16c0-8.8-7.2-16-16-16H80c-8.8 0-16 7.2-16 16v48H16C7.2 64 0 71.2 0 80v32c0 8.8 7.2 16 16 16h48v368c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V128h368c8.8 0 16-7.2 16-16V80c0-8.8-7.2-16-16-16zM160 384h320V160H160v224z"]
            },
            faSignInAlt: {
                prefix: "fas",
                iconName: "sign-in-alt",
                icon: [512, 512, [], "f2f6", "M416 448h-84c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h84c17.7 0 32-14.3 32-32V160c0-17.7-14.3-32-32-32h-84c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h84c53 0 96 43 96 96v192c0 53-43 96-96 96zm-47-201L201 79c-15-15-41-4.5-41 17v96H24c-13.3 0-24 10.7-24 24v96c0 13.3 10.7 24 24 24h136v96c0 21.5 26 32 41 17l168-168c9.3-9.4 9.3-24.6 0-34z"]
            },
            faSignLanguage: {
                prefix: "fas",
                iconName: "sign-language",
                icon: [448, 512, [], "f2a7", "M91.434 483.987c-.307-16.018 13.109-29.129 29.13-29.129h62.293v-5.714H56.993c-16.021 0-29.437-13.111-29.13-29.129C28.16 404.491 40.835 392 56.428 392h126.429v-5.714H29.136c-16.021 0-29.437-13.111-29.13-29.129.297-15.522 12.973-28.013 28.566-28.013h154.286v-5.714H57.707c-16.021 0-29.437-13.111-29.13-29.129.297-15.522 12.973-28.013 28.566-28.013h168.566l-31.085-22.606c-12.762-9.281-15.583-27.149-6.302-39.912 9.281-12.761 27.15-15.582 39.912-6.302l123.361 89.715a34.287 34.287 0 0 1 14.12 27.728v141.136c0 15.91-10.946 29.73-26.433 33.374l-80.471 18.934a137.16 137.16 0 0 1-31.411 3.646H120c-15.593-.001-28.269-12.492-28.566-28.014zm73.249-225.701h36.423l-11.187-8.136c-18.579-13.511-20.313-40.887-3.17-56.536l-13.004-16.7c-9.843-12.641-28.43-15.171-40.88-5.088-12.065 9.771-14.133 27.447-4.553 39.75l36.371 46.71zm283.298-2.103l-5.003-152.452c-.518-15.771-13.722-28.136-29.493-27.619-15.773.518-28.137 13.722-27.619 29.493l1.262 38.415L283.565 11.019c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l76.889 98.745-4.509 3.511-94.79-121.734c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l94.443 121.288-4.509 3.511-77.675-99.754c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l52.053 66.849c12.497-8.257 29.055-8.285 41.69.904l123.36 89.714c10.904 7.93 17.415 20.715 17.415 34.198v16.999l61.064-47.549a34.285 34.285 0 0 0 13.202-28.177z"]
            },
            faSignOutAlt: {
                prefix: "fas",
                iconName: "sign-out-alt",
                icon: [512, 512, [], "f2f5", "M497 273L329 441c-15 15-41 4.5-41-17v-96H152c-13.3 0-24-10.7-24-24v-96c0-13.3 10.7-24 24-24h136V88c0-21.4 25.9-32 41-17l168 168c9.3 9.4 9.3 24.6 0 34zM192 436v-40c0-6.6-5.4-12-12-12H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h84c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12H96c-53 0-96 43-96 96v192c0 53 43 96 96 96h84c6.6 0 12-5.4 12-12z"]
            },
            faSignal: {
                prefix: "fas",
                iconName: "signal",
                icon: [640, 512, [], "f012", "M36 384h56c6.6 0 12 5.4 12 12v104c0 6.6-5.4 12-12 12H36c-6.6 0-12-5.4-12-12V396c0-6.6 5.4-12 12-12zm116-36v152c0 6.6 5.4 12 12 12h56c6.6 0 12-5.4 12-12V348c0-6.6-5.4-12-12-12h-56c-6.6 0-12 5.4-12 12zm128-80v232c0 6.6 5.4 12 12 12h56c6.6 0 12-5.4 12-12V268c0-6.6-5.4-12-12-12h-56c-6.6 0-12 5.4-12 12zm128-112v344c0 6.6 5.4 12 12 12h56c6.6 0 12-5.4 12-12V156c0-6.6-5.4-12-12-12h-56c-6.6 0-12 5.4-12 12zM536 12v488c0 6.6 5.4 12 12 12h56c6.6 0 12-5.4 12-12V12c0-6.6-5.4-12-12-12h-56c-6.6 0-12 5.4-12 12z"]
            },
            faSitemap: {
                prefix: "fas",
                iconName: "sitemap",
                icon: [640, 512, [], "f0e8", "M128 352H32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zm-24-80h192v48h48v-48h192v48h48v-57.59c0-21.17-17.23-38.41-38.41-38.41H344v-64h40c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32H256c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h40v64H94.41C73.23 224 56 241.23 56 262.41V320h48v-48zm264 80h-96c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zm240 0h-96c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32z"]
            },
            faSkull: {
                prefix: "fas",
                iconName: "skull",
                icon: [512, 512, [], "f54c", "M256 0C114.6 0 0 100.3 0 224c0 70.1 36.9 132.6 94.5 173.7 9.6 6.9 15.2 18.1 13.5 29.9l-9.4 66.2c-1.4 9.6 6 18.2 15.7 18.2H192v-56c0-4.4 3.6-8 8-8h16c4.4 0 8 3.6 8 8v56h64v-56c0-4.4 3.6-8 8-8h16c4.4 0 8 3.6 8 8v56h77.7c9.7 0 17.1-8.6 15.7-18.2l-9.4-66.2c-1.7-11.7 3.8-23 13.5-29.9C475.1 356.6 512 294.1 512 224 512 100.3 397.4 0 256 0zm-96 320c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64zm192 0c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64z"]
            },
            faSlidersH: {
                prefix: "fas",
                iconName: "sliders-h",
                icon: [512, 512, [], "f1de", "M496 384H160v-16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v16H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h80v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h336c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm0-160h-80v-16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v16H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h336v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h80c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm0-160H288V48c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v16H16C7.2 64 0 71.2 0 80v32c0 8.8 7.2 16 16 16h208v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h208c8.8 0 16-7.2 16-16V80c0-8.8-7.2-16-16-16z"]
            },
            faSmile: {
                prefix: "fas",
                iconName: "smile",
                icon: [496, 512, [], "f118", "M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm194.8 170.2C334.3 380.4 292.5 400 248 400s-86.3-19.6-114.8-53.8c-5.7-6.8-4.7-16.9 2-22.5 6.8-5.7 16.9-4.7 22.5 2 22.4 26.9 55.2 42.2 90.2 42.2s67.8-15.4 90.2-42.2c5.7-6.8 15.7-7.7 22.5-2 6.9 5.7 7.8 15.8 2.2 22.5z"]
            },
            faSmoking: {
                prefix: "fas",
                iconName: "smoking",
                icon: [640, 512, [], "f48d", "M632 352h-48c-4.4 0-8 3.6-8 8v144c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V360c0-4.4-3.6-8-8-8zM553.3 87.1c-5.7-3.8-9.3-10-9.3-16.8V8c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v62.3c0 22 10.2 43.4 28.6 55.4 42.2 27.3 67.4 73.8 67.4 124V280c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-30.3c0-65.5-32.4-126.2-86.7-162.6zM432 352H48c-26.5 0-48 21.5-48 48v64c0 26.5 21.5 48 48 48h384c8.8 0 16-7.2 16-16V368c0-8.8-7.2-16-16-16zm-32 112H224v-64h176v64zm87.7-322.4C463.8 125 448 99.3 448 70.3V8c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v66.4c0 43.7 24.6 81.6 60.3 106.7 22.4 15.7 35.7 41.2 35.7 68.6V280c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-30.3c0-43.3-21-83.4-56.3-108.1zM536 352h-48c-4.4 0-8 3.6-8 8v144c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V360c0-4.4-3.6-8-8-8z"]
            },
            faSmokingBan: {
                prefix: "fas",
                iconName: "smoking-ban",
                icon: [512, 512, [], "f54d", "M96 304c0 8.8 7.2 16 16 16h117.5l-96-96H112c-8.8 0-16 7.2-16 16v64zM256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm0 448c-105.9 0-192-86.1-192-192 0-41.4 13.3-79.7 35.7-111.1l267.4 267.4C335.7 434.7 297.4 448 256 448zm45.2-192H384v32h-50.8l-32-32zm111.1 111.1L365.2 320H400c8.8 0 16-7.2 16-16v-64c0-8.8-7.2-16-16-16H269.2L144.9 99.7C176.3 77.3 214.6 64 256 64c105.9 0 192 86.1 192 192 0 41.4-13.3 79.7-35.7 111.1zM320.6 128c-15.6 0-28.6-11.2-31.4-25.9-.7-3.6-4-6.1-7.7-6.1h-16.2c-5 0-8.7 4.5-8 9.4 4.6 30.9 31.2 54.6 63.3 54.6 15.6 0 28.6 11.2 31.4 25.9.7 3.6 4 6.1 7.7 6.1h16.2c5 0 8.7-4.5 8-9.4-4.6-30.9-31.2-54.6-63.3-54.6z"]
            },
            faSnowflake: {
                prefix: "fas",
                iconName: "snowflake",
                icon: [448, 512, [], "f2dc", "M444.816 301.639a24.12 24.12 0 0 0 2.661-16.978c-2.725-12.966-15.339-21.245-28.174-18.492l-87.407 25.046L264 256l67.896-35.215 87.407 25.046c12.835 2.753 25.449-5.526 28.174-18.492 2.725-12.966-5.471-25.708-18.305-28.461l-47.477-7.137 53.077-30.956c11.363-6.627 15.257-21.306 8.696-32.785-6.561-11.479-21.091-15.412-32.454-8.785l-53.077 30.956 17.621-45.104c4.057-12.606-2.768-26.146-15.247-30.245-12.478-4.099-25.883 2.797-29.94 15.402l-22.232 88.99-60.38 35.215V144l65.175-63.945c8.778-9.852 7.987-25.027-1.766-33.894-9.753-8.867-24.775-8.068-33.552 1.784l-29.857 37.967V24c0-13.255-10.637-24-23.758-24s-23.758 10.745-23.758 24v61.912l-29.857-37.967c-8.779-9.852-23.799-10.652-33.552-1.784-9.753 8.867-10.543 24.042-1.766 33.894L200.242 144v70.431l-60.38-35.215-22.232-88.99c-4.057-12.605-17.462-19.501-29.94-15.402-12.478 4.099-19.304 17.64-15.247 30.245l17.62 45.104-53.077-30.956c-11.363-6.627-25.893-2.694-32.454 8.785s-2.667 26.157 8.696 32.785l53.077 30.956-47.477 7.137C5.993 201.634-2.203 214.375.523 227.341c2.725 12.965 15.339 21.245 28.174 18.492l87.407-25.046L184 256l-67.896 35.215-87.406-25.045c-12.835-2.753-25.449 5.526-28.174 18.492-2.725 12.967 5.47 25.708 18.305 28.461l47.477 7.137-53.077 30.956C1.866 357.843-2.027 372.521 4.533 384s21.091 15.412 32.454 8.785l53.077-30.956-17.62 45.104a24.157 24.157 0 0 0 2.022 19.428c2.831 4.953 7.416 8.909 13.224 10.816 12.478 4.099 25.883-2.797 29.94-15.402l22.232-88.99 60.38-35.215V368l-65.175 63.945c-8.778 9.852-7.987 25.027 1.766 33.894 9.754 8.868 24.774 8.068 33.552-1.784l29.857-37.967V488c0 13.255 10.637 24 23.758 24s23.758-10.745 23.758-24v-61.912l29.857 37.967A23.59 23.59 0 0 0 295.282 472a23.534 23.534 0 0 0 15.885-6.161c9.753-8.867 10.544-24.042 1.766-33.894L247.758 368v-70.431l60.38 35.215 22.232 88.99c4.057 12.605 17.462 19.501 29.94 15.402 12.479-4.099 19.304-17.64 15.247-30.245l-17.621-45.104 53.077 30.956c11.363 6.627 25.893 2.694 32.454-8.785s2.667-26.157-8.696-32.785l-53.077-30.956 47.477-7.137c6.86-1.469 12.394-5.793 15.645-11.481z"]
            },
            faSort: {
                prefix: "fas",
                iconName: "sort",
                icon: [320, 512, [], "f0dc", "M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"]
            },
            faSortAlphaDown: {
                prefix: "fas",
                iconName: "sort-alpha-down",
                icon: [448, 512, [], "f15d", "M187.298 395.314l-79.984 80.002c-6.248 6.247-16.383 6.245-22.627 0L4.705 395.314C-5.365 385.244 1.807 368 16.019 368H64V48c0-8.837 7.163-16 16-16h32c8.837 0 16 7.163 16 16v320h47.984c14.241 0 21.363 17.264 11.314 27.314zm119.075-180.007A12 12 0 0 1 294.838 224h-35.717c-8.22 0-14.007-8.078-11.362-15.861l57.096-168A12 12 0 0 1 316.217 32h39.566c5.139 0 9.708 3.273 11.362 8.139l57.096 168C426.886 215.922 421.1 224 412.879 224h-35.735a12 12 0 0 1-11.515-8.622l-8.301-28.299h-42.863l-8.092 28.228zm22.857-78.697h13.367l-6.6-22.937-6.767 22.937zm12.575 287.323l67.451-95.698a12 12 0 0 0 2.192-6.913V300c0-6.627-5.373-12-12-12H274.522c-6.627 0-12 5.373-12 12v28.93c0 6.627 5.373 12 12 12h56.469c-.739.991-1.497 2.036-2.27 3.133l-67.203 95.205a12.001 12.001 0 0 0-2.196 6.92V468c0 6.627 5.373 12 12 12h129.355c6.627 0 12-5.373 12-12v-28.93c0-6.627-5.373-12-12-12h-61.146c.74-.993 1.5-2.039 2.274-3.137z"]
            },
            faSortAlphaUp: {
                prefix: "fas",
                iconName: "sort-alpha-up",
                icon: [448, 512, [], "f15e", "M4.702 116.686l79.984-80.002c6.248-6.247 16.383-6.245 22.627 0l79.981 80.002c10.07 10.07 2.899 27.314-11.314 27.314H128v320c0 8.837-7.163 16-16 16H80c-8.837 0-16-7.163-16-16V144H16.016c-14.241 0-21.363-17.264-11.314-27.314zm301.671 98.621A12 12 0 0 1 294.838 224h-35.717c-8.22 0-14.007-8.078-11.362-15.861l57.096-168A12 12 0 0 1 316.217 32h39.566c5.139 0 9.708 3.273 11.362 8.139l57.096 168C426.886 215.922 421.1 224 412.879 224h-35.735a12 12 0 0 1-11.515-8.622l-8.301-28.299h-42.863l-8.092 28.228zm22.857-78.697h13.367l-6.6-22.937-6.767 22.937zm12.575 287.323l67.451-95.698a12 12 0 0 0 2.192-6.913V300c0-6.627-5.373-12-12-12H274.522c-6.627 0-12 5.373-12 12v28.93c0 6.627 5.373 12 12 12h56.469c-.739.991-1.497 2.036-2.27 3.133l-67.203 95.205a12.001 12.001 0 0 0-2.196 6.92V468c0 6.627 5.373 12 12 12h129.355c6.627 0 12-5.373 12-12v-28.93c0-6.627-5.373-12-12-12h-61.146c.74-.993 1.5-2.039 2.274-3.137z"]
            },
            faSortAmountDown: {
                prefix: "fas",
                iconName: "sort-amount-down",
                icon: [512, 512, [], "f160", "M187.298 395.314l-79.984 80.002c-6.248 6.247-16.383 6.245-22.627 0L4.705 395.314C-5.365 385.244 1.807 368 16.019 368H64V48c0-8.837 7.163-16 16-16h32c8.837 0 16 7.163 16 16v320h47.984c14.241 0 21.363 17.264 11.314 27.314zM240 96h256c8.837 0 16-7.163 16-16V48c0-8.837-7.163-16-16-16H240c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16zm-16 112v-32c0-8.837 7.163-16 16-16h192c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16zm0 256v-32c0-8.837 7.163-16 16-16h64c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-64c-8.837 0-16-7.163-16-16zm0-128v-32c0-8.837 7.163-16 16-16h128c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16z"]
            },
            faSortAmountUp: {
                prefix: "fas",
                iconName: "sort-amount-up",
                icon: [512, 512, [], "f161", "M4.702 116.686l79.984-80.002c6.248-6.247 16.383-6.245 22.627 0l79.981 80.002c10.07 10.07 2.899 27.314-11.314 27.314H128v320c0 8.837-7.163 16-16 16H80c-8.837 0-16-7.163-16-16V144H16.016c-14.241 0-21.363-17.264-11.314-27.314zM240 96h256c8.837 0 16-7.163 16-16V48c0-8.837-7.163-16-16-16H240c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16zm-16 112v-32c0-8.837 7.163-16 16-16h192c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16zm0 256v-32c0-8.837 7.163-16 16-16h64c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-64c-8.837 0-16-7.163-16-16zm0-128v-32c0-8.837 7.163-16 16-16h128c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16z"]
            },
            faSortDown: {
                prefix: "fas",
                iconName: "sort-down",
                icon: [320, 512, [], "f0dd", "M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41z"]
            },
            faSortNumericDown: {
                prefix: "fas",
                iconName: "sort-numeric-down",
                icon: [448, 512, [], "f162", "M308.811 113.787l-19.448-20.795c-4.522-4.836-4.274-12.421.556-16.95l43.443-40.741a11.999 11.999 0 0 1 8.209-3.247h31.591c6.627 0 12 5.373 12 12v127.07h25.66c6.627 0 12 5.373 12 12v28.93c0 6.627-5.373 12-12 12H301.649c-6.627 0-12-5.373-12-12v-28.93c0-6.627 5.373-12 12-12h25.414v-57.938c-7.254 6.58-14.211 4.921-18.252.601zm-30.57 238.569c0-32.653 23.865-67.356 68.094-67.356 38.253 0 79.424 28.861 79.424 92.228 0 51.276-32.237 105.772-91.983 105.772-17.836 0-30.546-3.557-38.548-6.781-5.79-2.333-8.789-8.746-6.922-14.703l9.237-29.48c2.035-6.496 9.049-9.983 15.467-7.716 13.029 4.602 27.878 5.275 38.103-4.138-38.742 5.072-72.872-25.36-72.872-67.826zm92.273 19.338c0-22.285-15.302-36.505-25.835-36.505-8.642 0-13.164 7.965-13.164 15.832 0 5.669 1.815 24.168 25.168 24.168 9.973 0 13.377-2.154 13.744-2.731.021-.046.087-.291.087-.764zM175.984 368H128V48c0-8.837-7.163-16-16-16H80c-8.837 0-16 7.163-16 16v320H16.019c-14.212 0-21.384 17.244-11.314 27.314l79.981 80.002c6.245 6.245 16.38 6.247 22.627 0l79.984-80.002c10.05-10.05 2.928-27.314-11.313-27.314z"]
            },
            faSortNumericUp: {
                prefix: "fas",
                iconName: "sort-numeric-up",
                icon: [448, 512, [], "f163", "M308.811 113.787l-19.448-20.795c-4.522-4.836-4.274-12.421.556-16.95l43.443-40.741a11.999 11.999 0 0 1 8.209-3.247h31.591c6.627 0 12 5.373 12 12v127.07h25.66c6.627 0 12 5.373 12 12v28.93c0 6.627-5.373 12-12 12H301.649c-6.627 0-12-5.373-12-12v-28.93c0-6.627 5.373-12 12-12h25.414v-57.938c-7.254 6.58-14.211 4.921-18.252.601zm-30.57 238.569c0-32.653 23.865-67.356 68.094-67.356 38.253 0 79.424 28.861 79.424 92.228 0 51.276-32.237 105.772-91.983 105.772-17.836 0-30.546-3.557-38.548-6.781-5.79-2.333-8.789-8.746-6.922-14.703l9.237-29.48c2.035-6.496 9.049-9.983 15.467-7.716 13.029 4.602 27.878 5.275 38.103-4.138-38.742 5.072-72.872-25.36-72.872-67.826zm92.273 19.338c0-22.285-15.302-36.505-25.835-36.505-8.642 0-13.164 7.965-13.164 15.832 0 5.669 1.815 24.168 25.168 24.168 9.973 0 13.377-2.154 13.744-2.731.021-.046.087-.291.087-.764zM16.016 144H64v320c0 8.837 7.163 16 16 16h32c8.837 0 16-7.163 16-16V144h47.981c14.212 0 21.384-17.244 11.314-27.314l-79.981-80.002c-6.245-6.245-16.38-6.247-22.627 0L4.702 116.686C-5.347 126.736 1.775 144 16.016 144z"]
            },
            faSortUp: {
                prefix: "fas",
                iconName: "sort-up",
                icon: [320, 512, [], "f0de", "M279 224H41c-21.4 0-32.1-25.9-17-41L143 64c9.4-9.4 24.6-9.4 33.9 0l119 119c15.2 15.1 4.5 41-16.9 41z"]
            },
            faSpaceShuttle: {
                prefix: "fas",
                iconName: "space-shuttle",
                icon: [640, 512, [], "f197", "M592.604 208.244C559.735 192.836 515.777 184 472 184H186.327c-4.952-6.555-10.585-11.978-16.72-16H376C229.157 137.747 219.403 32 96.003 32H96v128H80V32c-26.51 0-48 28.654-48 64v64c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v16c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v64c0 35.346 21.49 64 48 64V352h16v128h.003c123.4 0 133.154-105.747 279.997-136H169.606c6.135-4.022 11.768-9.445 16.72-16H472c43.777 0 87.735-8.836 120.604-24.244C622.282 289.845 640 271.992 640 256s-17.718-33.845-47.396-47.756zM488 296a8 8 0 0 1-8-8v-64a8 8 0 0 1 8-8c31.909 0 31.942 80 0 80z"]
            },
            faSpinner: {
                prefix: "fas",
                iconName: "spinner",
                icon: [512, 512, [], "f110", "M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z"]
            },
            faSquare: {
                prefix: "fas",
                iconName: "square",
                icon: [448, 512, [], "f0c8", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z"]
            },
            faSquareFull: {
                prefix: "fas",
                iconName: "square-full",
                icon: [512, 512, [], "f45c", "M512 512H0V0h512v512z"]
            },
            faStar: {
                prefix: "fas",
                iconName: "star",
                icon: [576, 512, [], "f005", "M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z"]
            },
            faStarHalf: {
                prefix: "fas",
                iconName: "star-half",
                icon: [576, 512, [], "f089", "M288 0c-11.4 0-22.8 5.9-28.7 17.8L194 150.2 47.9 171.4c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.1 23 46 46.4 33.7L288 439.6V0z"]
            },
            faStepBackward: {
                prefix: "fas",
                iconName: "step-backward",
                icon: [448, 512, [], "f048", "M64 468V44c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12v176.4l195.5-181C352.1 22.3 384 36.6 384 64v384c0 27.4-31.9 41.7-52.5 24.6L136 292.7V468c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12z"]
            },
            faStepForward: {
                prefix: "fas",
                iconName: "step-forward",
                icon: [448, 512, [], "f051", "M384 44v424c0 6.6-5.4 12-12 12h-48c-6.6 0-12-5.4-12-12V291.6l-195.5 181C95.9 489.7 64 475.4 64 448V64c0-27.4 31.9-41.7 52.5-24.6L312 219.3V44c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12z"]
            },
            faStethoscope: {
                prefix: "fas",
                iconName: "stethoscope",
                icon: [512, 512, [], "f0f1", "M447.1 112c-34.2.5-62.3 28.4-63 62.6-.5 24.3 12.5 45.6 32 56.8V344c0 57.3-50.2 104-112 104-60 0-109.2-44.1-111.9-99.2C265 333.8 320 269.2 320 192V36.6c0-11.4-8.1-21.3-19.3-23.5L237.8.5c-13-2.6-25.6 5.8-28.2 18.8L206.4 35c-2.6 13 5.8 25.6 18.8 28.2l30.7 6.1v121.4c0 52.9-42.2 96.7-95.1 97.2-53.4.5-96.9-42.7-96.9-96V69.4l30.7-6.1c13-2.6 21.4-15.2 18.8-28.2l-3.1-15.7C107.7 6.4 95.1-2 82.1.6L19.3 13C8.1 15.3 0 25.1 0 36.6V192c0 77.3 55.1 142 128.1 156.8C130.7 439.2 208.6 512 304 512c97 0 176-75.4 176-168V231.4c19.1-11.1 32-31.7 32-55.4 0-35.7-29.2-64.5-64.9-64zm.9 80c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z"]
            },
            faStickyNote: {
                prefix: "fas",
                iconName: "sticky-note",
                icon: [448, 512, [], "f249", "M312 320h136V56c0-13.3-10.7-24-24-24H24C10.7 32 0 42.7 0 56v400c0 13.3 10.7 24 24 24h264V344c0-13.2 10.8-24 24-24zm129 55l-98 98c-4.5 4.5-10.6 7-17 7h-6V352h128v6.1c0 6.3-2.5 12.4-7 16.9z"]
            },
            faStop: {
                prefix: "fas",
                iconName: "stop",
                icon: [448, 512, [], "f04d", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z"]
            },
            faStopCircle: {
                prefix: "fas",
                iconName: "stop-circle",
                icon: [512, 512, [], "f28d", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm96 328c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16v160z"]
            },
            faStopwatch: {
                prefix: "fas",
                iconName: "stopwatch",
                icon: [448, 512, [], "f2f2", "M432 304c0 114.9-93.1 208-208 208S16 418.9 16 304c0-104 76.3-190.2 176-205.5V64h-28c-6.6 0-12-5.4-12-12V12c0-6.6 5.4-12 12-12h120c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-28v34.5c37.5 5.8 71.7 21.6 99.7 44.6l27.5-27.5c4.7-4.7 12.3-4.7 17 0l28.3 28.3c4.7 4.7 4.7 12.3 0 17l-29.4 29.4-.6.6C419.7 223.3 432 262.2 432 304zm-176 36V188.5c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12V340c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z"]
            },
            faStore: {
                prefix: "fas",
                iconName: "store",
                icon: [616, 512, [], "f54e", "M602 118.6L537.1 15C531.3 5.7 521 0 510 0H106C95 0 84.7 5.7 78.9 15L14 118.6c-33.5 53.5-3.8 127.9 58.8 136.4 4.5.6 9.1.9 13.7.9 29.6 0 55.8-13 73.8-33.1 18 20.1 44.3 33.1 73.8 33.1 29.6 0 55.8-13 73.8-33.1 18 20.1 44.3 33.1 73.8 33.1 29.6 0 55.8-13 73.8-33.1 18.1 20.1 44.3 33.1 73.8 33.1 4.7 0 9.2-.3 13.7-.9 62.8-8.4 92.6-82.8 59-136.4zM529.5 288c-10 0-19.9-1.5-29.5-3.8V384H116v-99.8c-9.6 2.2-19.5 3.8-29.5 3.8-6 0-12.1-.4-18-1.2-5.6-.8-11.1-2.1-16.4-3.6V480c0 17.7 14.3 32 32 32h448c17.7 0 32-14.3 32-32V283.2c-5.4 1.6-10.8 2.9-16.4 3.6-6.1.8-12.1 1.2-18.2 1.2z"]
            },
            faStoreAlt: {
                prefix: "fas",
                iconName: "store-alt",
                icon: [640, 512, [], "f54f", "M320 384H128V224H64v256c0 17.7 14.3 32 32 32h256c17.7 0 32-14.3 32-32V224h-64v160zm314.6-241.8l-85.3-128c-6-8.9-16-14.2-26.7-14.2H117.4c-10.7 0-20.7 5.3-26.6 14.2l-85.3 128c-14.2 21.3 1 49.8 26.6 49.8H608c25.5 0 40.7-28.5 26.6-49.8zM512 496c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V224h-64v272z"]
            },
            faStream: {
                prefix: "fas",
                iconName: "stream",
                icon: [512, 512, [], "f550", "M16 128h416c8.84 0 16-7.16 16-16V48c0-8.84-7.16-16-16-16H16C7.16 32 0 39.16 0 48v64c0 8.84 7.16 16 16 16zm480 80H80c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm-64 176H16c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16z"]
            },
            faStreetView: {
                prefix: "fas",
                iconName: "street-view",
                icon: [512, 512, [], "f21d", "M192 64c0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64s-64-28.654-64-64zm112 80h-11.36c-22.711 10.443-49.59 10.894-73.28 0H208c-26.51 0-48 21.49-48 48v104c0 13.255 10.745 24 24 24h16v104c0 13.255 10.745 24 24 24h64c13.255 0 24-10.745 24-24V320h16c13.255 0 24-10.745 24-24V192c0-26.51-21.49-48-48-48zm85.642 189.152a72.503 72.503 0 0 1-29.01 27.009C391.133 365.251 480 385.854 480 416c0 46.304-167.656 64-224 64-70.303 0-224-20.859-224-64 0-30.123 88.361-50.665 119.367-55.839a72.516 72.516 0 0 1-29.01-27.009C74.959 343.395 0 367.599 0 416c0 77.111 178.658 96 256 96 77.249 0 256-18.865 256-96 0-48.403-74.967-72.606-122.358-82.848z"]
            },
            faStrikethrough: {
                prefix: "fas",
                iconName: "strikethrough",
                icon: [512, 512, [], "f0cc", "M496 288H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h480c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16zm-214.666 16c27.258 12.937 46.524 28.683 46.524 56.243 0 33.108-28.977 53.676-75.621 53.676-32.325 0-76.874-12.08-76.874-44.271V368c0-8.837-7.164-16-16-16H113.75c-8.836 0-16 7.163-16 16v19.204c0 66.845 77.717 101.82 154.487 101.82 88.578 0 162.013-45.438 162.013-134.424 0-19.815-3.618-36.417-10.143-50.6H281.334zm-30.952-96c-32.422-13.505-56.836-28.946-56.836-59.683 0-33.92 30.901-47.406 64.962-47.406 42.647 0 64.962 16.593 64.962 32.985V136c0 8.837 7.164 16 16 16h45.613c8.836 0 16-7.163 16-16v-30.318c0-52.438-71.725-79.875-142.575-79.875-85.203 0-150.726 40.972-150.726 125.646 0 22.71 4.665 41.176 12.777 56.547h129.823z"]
            },
            faStroopwafel: {
                prefix: "fas",
                iconName: "stroopwafel",
                icon: [512, 512, [], "f551", "M188.12 210.74L142.86 256l45.25 45.25L233.37 256l-45.25-45.26zm113.13-22.62L256 142.86l-45.25 45.25L256 233.37l45.25-45.25zm-90.5 135.76L256 369.14l45.26-45.26L256 278.63l-45.25 45.25zM256 0C114.62 0 0 114.62 0 256s114.62 256 256 256 256-114.62 256-256S397.38 0 256 0zm186.68 295.6l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-28.29-28.29-45.25 45.25 33.94 33.94 16.97-16.97c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-16.97 16.97 16.97 16.97c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-16.97-16.97-16.97 16.97c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l16.97-16.97-33.94-33.94-45.26 45.26 28.29 28.29c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0L256 414.39l-28.29 28.29c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l28.29-28.29-45.25-45.26-33.94 33.94 16.97 16.97c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-16.97-16.97-16.97 16.97c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l16.97-16.97-16.97-16.97c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l16.97 16.97 33.94-33.94-45.25-45.25-28.29 28.29c-3.12 3.12-8.19 3.12-11.31 0L69.32 295.6c-3.12-3.12-3.12-8.19 0-11.31L97.61 256l-28.29-28.29c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l28.29 28.29 45.25-45.26-33.94-33.94-16.97 16.97c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l16.97-16.97-16.97-16.97c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l16.97 16.97 16.97-16.97c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-16.97 16.97 33.94 33.94 45.26-45.25-28.29-28.29c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0L256 97.61l28.29-28.29c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-28.29 28.29 45.26 45.25 33.94-33.94-16.97-16.97c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l16.97 16.97 16.97-16.97c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-16.97 16.97 16.97 16.97c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-16.97-16.97-33.94 33.94 45.25 45.26 28.29-28.29c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31L414.39 256l28.29 28.28a8.015 8.015 0 0 1 0 11.32zM278.63 256l45.26 45.25L369.14 256l-45.25-45.26L278.63 256z"]
            },
            faSubscript: {
                prefix: "fas",
                iconName: "subscript",
                icon: [512, 512, [], "f12c", "M395.198 416c3.461-10.526 18.796-21.28 36.265-32.425 16.625-10.605 35.467-22.626 50.341-38.862 17.458-19.054 25.944-40.175 25.944-64.567 0-60.562-50.702-88.146-97.81-88.146-42.491 0-76.378 22.016-94.432 50.447-4.654 7.329-2.592 17.036 4.623 21.865l30.328 20.296c7.032 4.706 16.46 3.084 21.63-3.614 8.022-10.394 18.818-18.225 31.667-18.225 19.387 0 26.266 12.901 26.266 23.948 0 36.159-119.437 57.023-119.437 160.024 0 6.654.561 13.014 1.415 19.331 1.076 7.964 7.834 13.928 15.87 13.928H496c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16H395.198zM272 256c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-62.399a16 16 0 0 1-13.541-7.478l-45.701-72.615c-2.297-3.352-4.422-6.969-6.195-10.209-1.65 3.244-3.647 6.937-5.874 10.582l-44.712 72.147a15.999 15.999 0 0 1-13.6 7.572H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h26.325l56.552-82.709L46.111 96H16C7.163 96 0 88.837 0 80V48c0-8.837 7.163-16 16-16h68.806a16 16 0 0 1 13.645 7.644l39.882 65.126c2.072 3.523 4.053 7.171 5.727 10.37 1.777-3.244 3.92-6.954 6.237-10.537l40.332-65.035A15.999 15.999 0 0 1 204.226 32H272c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-27.979l-52.69 75.671L249.974 256H272z"]
            },
            faSubway: {
                prefix: "fas",
                iconName: "subway",
                icon: [448, 512, [], "f239", "M448 96v256c0 51.815-61.624 96-130.022 96l62.98 49.721C386.905 502.417 383.562 512 376 512H72c-7.578 0-10.892-9.594-4.957-14.279L130.022 448C61.82 448 0 403.954 0 352V96C0 42.981 64 0 128 0h192c65 0 128 42.981 128 96zM200 232V120c0-13.255-10.745-24-24-24H72c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h104c13.255 0 24-10.745 24-24zm200 0V120c0-13.255-10.745-24-24-24H272c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h104c13.255 0 24-10.745 24-24zm-48 56c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm-256 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z"]
            },
            faSuitcase: {
                prefix: "fas",
                iconName: "suitcase",
                icon: [512, 512, [], "f0f2", "M128 480h256V80c0-26.5-21.5-48-48-48H176c-26.5 0-48 21.5-48 48v400zm64-384h128v32H192V96zm320 80v256c0 26.5-21.5 48-48 48h-48V128h48c26.5 0 48 21.5 48 48zM96 480H48c-26.5 0-48-21.5-48-48V176c0-26.5 21.5-48 48-48h48v352z"]
            },
            faSun: {
                prefix: "fas",
                iconName: "sun",
                icon: [512, 512, [], "f185", "M274.835 12.646l25.516 62.393c4.213 10.301 16.671 14.349 26.134 8.492l57.316-35.479c15.49-9.588 34.808 4.447 30.475 22.142l-16.03 65.475c-2.647 10.81 5.053 21.408 16.152 22.231l67.224 4.987c18.167 1.348 25.546 24.057 11.641 35.826L441.81 242.26c-8.495 7.19-8.495 20.289 0 27.479l51.454 43.548c13.906 11.769 6.527 34.478-11.641 35.826l-67.224 4.987c-11.099.823-18.799 11.421-16.152 22.231l16.03 65.475c4.332 17.695-14.986 31.73-30.475 22.142l-57.316-35.479c-9.463-5.858-21.922-1.81-26.134 8.492l-25.516 62.393c-6.896 16.862-30.774 16.862-37.67 0l-25.516-62.393c-4.213-10.301-16.671-14.349-26.134-8.492l-57.317 35.479c-15.49 9.588-34.808-4.447-30.475-22.142l16.03-65.475c2.647-10.81-5.053-21.408-16.152-22.231l-67.224-4.987c-18.167-1.348-25.546-24.057-11.641-35.826L70.19 269.74c8.495-7.19 8.495-20.289 0-27.479l-51.454-43.548c-13.906-11.769-6.527-34.478 11.641-35.826l67.224-4.987c11.099-.823 18.799-11.421 16.152-22.231l-16.03-65.475c-4.332-17.695 14.986-31.73 30.475-22.142l57.317 35.479c9.463 5.858 21.921 1.81 26.134-8.492l25.516-62.393c6.896-16.861 30.774-16.861 37.67 0zM392 256c0-74.991-61.01-136-136-136-74.991 0-136 61.009-136 136s61.009 136 136 136c74.99 0 136-61.009 136-136zm-32 0c0 57.346-46.654 104-104 104s-104-46.654-104-104 46.654-104 104-104 104 46.654 104 104z"]
            },
            faSuperscript: {
                prefix: "fas",
                iconName: "superscript",
                icon: [512, 512, [], "f12b", "M395.198 256c3.461-10.526 18.796-21.28 36.265-32.425 16.625-10.605 35.467-22.626 50.341-38.862 17.458-19.054 25.944-40.175 25.944-64.567 0-60.562-50.702-88.146-97.81-88.146-42.491 0-76.378 22.016-94.432 50.447-4.654 7.329-2.592 17.036 4.623 21.865l30.328 20.296c7.032 4.706 16.46 3.084 21.63-3.614 8.022-10.394 18.818-18.225 31.667-18.225 19.387 0 26.266 12.901 26.266 23.948 0 36.159-119.437 57.023-119.437 160.024 0 6.654.561 13.014 1.415 19.331 1.076 7.964 7.834 13.928 15.87 13.928H496c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16H395.198zM272 416c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-62.399a16 16 0 0 1-13.541-7.478l-45.701-72.615c-2.297-3.352-4.422-6.969-6.195-10.209-1.65 3.244-3.647 6.937-5.874 10.582l-44.712 72.147a15.999 15.999 0 0 1-13.6 7.572H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h26.325l56.552-82.709L46.111 256H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h68.806a16 16 0 0 1 13.645 7.644l39.882 65.126c2.072 3.523 4.053 7.171 5.727 10.37 1.777-3.244 3.92-6.954 6.237-10.537l40.332-65.035a16 16 0 0 1 13.598-7.567H272c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-27.979l-52.69 75.671L249.974 416H272z"]
            },
            faSync: {
                prefix: "fas",
                iconName: "sync",
                icon: [512, 512, [], "f021", "M440.935 12.574l3.966 82.766C399.416 41.904 331.674 8 256 8 134.813 8 33.933 94.924 12.296 209.824 10.908 217.193 16.604 224 24.103 224h49.084c5.57 0 10.377-3.842 11.676-9.259C103.407 137.408 172.931 80 256 80c60.893 0 114.512 30.856 146.104 77.801l-101.53-4.865c-6.845-.328-12.574 5.133-12.574 11.986v47.411c0 6.627 5.373 12 12 12h200.333c6.627 0 12-5.373 12-12V12c0-6.627-5.373-12-12-12h-47.411c-6.853 0-12.315 5.729-11.987 12.574zM256 432c-60.895 0-114.517-30.858-146.109-77.805l101.868 4.871c6.845.327 12.573-5.134 12.573-11.986v-47.412c0-6.627-5.373-12-12-12H12c-6.627 0-12 5.373-12 12V500c0 6.627 5.373 12 12 12h47.385c6.863 0 12.328-5.745 11.985-12.599l-4.129-82.575C112.725 470.166 180.405 504 256 504c121.187 0 222.067-86.924 243.704-201.824 1.388-7.369-4.308-14.176-11.807-14.176h-49.084c-5.57 0-10.377 3.842-11.676 9.259C408.593 374.592 339.069 432 256 432z"]
            },
            faSyncAlt: {
                prefix: "fas",
                iconName: "sync-alt",
                icon: [512, 512, [], "f2f1", "M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z"]
            },
            faSyringe: {
                prefix: "fas",
                iconName: "syringe",
                icon: [512, 512, [], "f48e", "M201.5 174.8l55.7 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-55.7-55.8-45.3 45.3 55.8 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L111 265.2l-26.4 26.4c-17.3 17.3-25.6 41.1-23 65.4l7.1 63.6L2.3 487c-3.1 3.1-3.1 8.2 0 11.3l11.3 11.3c3.1 3.1 8.2 3.1 11.3 0l66.3-66.3 63.6 7.1c23.9 2.6 47.9-5.4 65.4-23l181.9-181.9-135.7-135.7-64.9 65zm308.2-93.3L430.5 2.3c-3.1-3.1-8.2-3.1-11.3 0l-11.3 11.3c-3.1 3.1-3.1 8.2 0 11.3l28.3 28.3-45.3 45.3-56.6-56.6-17-17c-3.1-3.1-8.2-3.1-11.3 0l-33.9 33.9c-3.1 3.1-3.1 8.2 0 11.3l17 17L424.8 223l17 17c3.1 3.1 8.2 3.1 11.3 0l33.9-34c3.1-3.1 3.1-8.2 0-11.3l-73.5-73.5 45.3-45.3 28.3 28.3c3.1 3.1 8.2 3.1 11.3 0l11.3-11.3c3.1-3.2 3.1-8.2 0-11.4z"]
            },
            faTable: {
                prefix: "fas",
                iconName: "table",
                icon: [512, 512, [], "f0ce", "M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64v-96h160v96zm0-160H64v-96h160v96zm224 160H288v-96h160v96zm0-160H288v-96h160v96z"]
            },
            faTableTennis: {
                prefix: "fas",
                iconName: "table-tennis",
                icon: [512, 512, [], "f45d", "M496.2 296.5C527.7 218.7 512 126.2 449 63.1 365.1-21 229-21 145.1 63.1l-56 56.1 211.5 211.5c46.1-62.1 131.5-77.4 195.6-34.2zm-217.9 79.7L57.9 155.9c-27.3 45.3-21.7 105 17.3 144.1l34.5 34.6L6.7 424c-8.6 7.5-9.1 20.7-1 28.8l53.4 53.5c8 8.1 21.2 7.6 28.7-1L177.1 402l35.7 35.7c19.7 19.7 44.6 30.5 70.3 33.3-7.1-17-11-35.6-11-55.1-.1-13.8 2.5-27 6.2-39.7zM416 320c-53 0-96 43-96 96s43 96 96 96 96-43 96-96-43-96-96-96z"]
            },
            faTablet: {
                prefix: "fas",
                iconName: "tablet",
                icon: [448, 512, [], "f10a", "M400 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM224 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z"]
            },
            faTabletAlt: {
                prefix: "fas",
                iconName: "tablet-alt",
                icon: [448, 512, [], "f3fa", "M400 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM224 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm176-108c0 6.6-5.4 12-12 12H60c-6.6 0-12-5.4-12-12V60c0-6.6 5.4-12 12-12h328c6.6 0 12 5.4 12 12v312z"]
            },
            faTablets: {
                prefix: "fas",
                iconName: "tablets",
                icon: [640, 512, [], "f490", "M160 192C78.9 192 12.5 250.5.1 326.7c-.8 4.8 3.3 9.3 8.3 9.3h303.3c5 0 9.1-4.5 8.3-9.3C307.5 250.5 241.1 192 160 192zm151.6 176H8.4c-5 0-9.1 4.5-8.3 9.3C12.5 453.5 78.9 512 160 512s147.5-58.5 159.9-134.7c.8-4.8-3.3-9.3-8.3-9.3zM593.4 46.6c-56.5-56.5-144.2-61.4-206.9-16-4 2.9-4.3 8.9-.8 12.3L597 254.3c3.5 3.5 9.5 3.2 12.3-.8 45.5-62.7 40.6-150.4-15.9-206.9zM363 65.7c-3.5-3.5-9.5-3.2-12.3.8-45.4 62.7-40.5 150.4 15.9 206.9 56.5 56.5 144.2 61.4 206.9 15.9 4-2.9 4.3-8.9.8-12.3L363 65.7z"]
            },
            faTachometerAlt: {
                prefix: "fas",
                iconName: "tachometer-alt",
                icon: [576, 512, [], "f3fd", "M75.694 480a48.02 48.02 0 0 1-42.448-25.571C12.023 414.3 0 368.556 0 320 0 160.942 128.942 32 288 32s288 128.942 288 288c0 48.556-12.023 94.3-33.246 134.429A48.018 48.018 0 0 1 500.306 480H75.694zM512 288c-17.673 0-32 14.327-32 32 0 17.673 14.327 32 32 32s32-14.327 32-32c0-17.673-14.327-32-32-32zM288 128c17.673 0 32-14.327 32-32 0-17.673-14.327-32-32-32s-32 14.327-32 32c0 17.673 14.327 32 32 32zM64 288c-17.673 0-32 14.327-32 32 0 17.673 14.327 32 32 32s32-14.327 32-32c0-17.673-14.327-32-32-32zm65.608-158.392c-17.673 0-32 14.327-32 32 0 17.673 14.327 32 32 32s32-14.327 32-32c0-17.673-14.327-32-32-32zm316.784 0c-17.673 0-32 14.327-32 32 0 17.673 14.327 32 32 32s32-14.327 32-32c0-17.673-14.327-32-32-32zm-87.078 31.534c-12.627-4.04-26.133 2.92-30.173 15.544l-45.923 143.511C250.108 322.645 224 350.264 224 384c0 35.346 28.654 64 64 64 35.346 0 64-28.654 64-64 0-19.773-8.971-37.447-23.061-49.187l45.919-143.498c4.039-12.625-2.92-26.133-15.544-30.173z"]
            },
            faTag: {
                prefix: "fas",
                iconName: "tag",
                icon: [512, 512, [], "f02b", "M0 252.118V48C0 21.49 21.49 0 48 0h204.118a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882L293.823 497.941c-18.745 18.745-49.137 18.745-67.882 0L14.059 286.059A48 48 0 0 1 0 252.118zM112 64c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z"]
            },
            faTags: {
                prefix: "fas",
                iconName: "tags",
                icon: [640, 512, [], "f02c", "M497.941 225.941L286.059 14.059A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v204.118a48 48 0 0 0 14.059 33.941l211.882 211.882c18.744 18.745 49.136 18.746 67.882 0l204.118-204.118c18.745-18.745 18.745-49.137 0-67.882zM112 160c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm513.941 133.823L421.823 497.941c-18.745 18.745-49.137 18.745-67.882 0l-.36-.36L527.64 323.522c16.999-16.999 26.36-39.6 26.36-63.64s-9.362-46.641-26.36-63.64L331.397 0h48.721a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882z"]
            },
            faTape: {
                prefix: "fas",
                iconName: "tape",
                icon: [640, 512, [], "f4db", "M224 192c-35.3 0-64 28.7-64 64s28.7 64 64 64 64-28.7 64-64-28.7-64-64-64zm400 224H380.6c41.5-40.7 67.4-97.3 67.4-160 0-123.7-100.3-224-224-224S0 132.3 0 256s100.3 224 224 224h400c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400-64c-53 0-96-43-96-96s43-96 96-96 96 43 96 96-43 96-96 96z"]
            },
            faTasks: {
                prefix: "fas",
                iconName: "tasks",
                icon: [512, 512, [], "f0ae", "M208 132h288c8.8 0 16-7.2 16-16V76c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zM64 368c-26.5 0-48.6 21.5-48.6 48s22.1 48 48.6 48 48-21.5 48-48-21.5-48-48-48zm92.5-299l-72.2 72.2-15.6 15.6c-4.7 4.7-12.9 4.7-17.6 0L3.5 109.4c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.3c4.7-4.7 12.3-4.7 17 0l17 16.5c4.6 4.7 4.6 12.3-.1 17zm0 159.6l-72.2 72.2-15.7 15.7c-4.7 4.7-12.9 4.7-17.6 0L3.5 269c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.7c4.7-4.7 12.3-4.7 17 0l17 17c4.6 4.6 4.6 12.2-.1 16.9z"]
            },
            faTaxi: {
                prefix: "fas",
                iconName: "taxi",
                icon: [512, 512, [], "f1ba", "M461.951 243.865l-21.816-87.268A79.885 79.885 0 0 0 362.522 96H352V56c0-13.255-10.745-24-24-24H184c-13.255 0-24 10.745-24 24v40h-10.522a79.885 79.885 0 0 0-77.612 60.597L50.05 243.865C25.515 252.823 8 276.366 8 304v48c0 20.207 9.374 38.214 24 49.943V456c0 13.255 10.745 24 24 24h48c13.255 0 24-10.745 24-24v-40h256v40c0 13.255 10.745 24 24 24h48c13.255 0 24-10.745 24-24v-54.057c14.626-11.729 24-29.737 24-49.943v-48c0-27.634-17.515-51.177-42.049-60.135zM149.478 160h213.045a15.975 15.975 0 0 1 15.522 12.12l16.97 67.88h-278.03l16.97-67.881A15.976 15.976 0 0 1 149.478 160zM132 336c0 19.882-16.118 36-36 36s-36-16.118-36-36 16.118-36 36-36 36 16.118 36 36zm320 0c0 19.882-16.118 36-36 36s-36-16.118-36-36 16.118-36 36-36 36 16.118 36 36z"]
            },
            faTerminal: {
                prefix: "fas",
                iconName: "terminal",
                icon: [640, 512, [], "f120", "M257.981 272.971L63.638 467.314c-9.373 9.373-24.569 9.373-33.941 0L7.029 444.647c-9.357-9.357-9.375-24.522-.04-33.901L161.011 256 6.99 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L257.981 239.03c9.373 9.372 9.373 24.568 0 33.941zM640 456v-32c0-13.255-10.745-24-24-24H312c-13.255 0-24 10.745-24 24v32c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24z"]
            },
            faTextHeight: {
                prefix: "fas",
                iconName: "text-height",
                icon: [576, 512, [], "f034", "M16 32h288c8.837 0 16 7.163 16 16v96c0 8.837-7.163 16-16 16h-35.496c-8.837 0-16-7.163-16-16V96h-54.761v320H232c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H88c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h34.257V96H67.496v48c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16V48c0-8.837 7.163-16 16-16zm475.308 4.685l79.995 80.001C581.309 126.693 574.297 144 559.99 144H512v224h48c15.639 0 20.635 17.991 11.313 27.314l-79.995 80.001c-6.247 6.247-16.381 6.245-22.626 0l-79.995-80.001C378.691 385.307 385.703 368 400.01 368H448V144h-48c-15.639 0-20.635-17.991-11.313-27.314l79.995-80.001c6.247-6.248 16.381-6.245 22.626 0z"]
            },
            faTextWidth: {
                prefix: "fas",
                iconName: "text-width",
                icon: [448, 512, [], "f035", "M16 32h416c8.837 0 16 7.163 16 16v96c0 8.837-7.163 16-16 16h-35.496c-8.837 0-16-7.163-16-16V96H261.743v128H296c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H152c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h34.257V96H67.496v48c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16V48c0-8.837 7.163-16 16-16zm427.315 340.682l-80.001-79.995C353.991 283.365 336 288.362 336 304v48H112v-47.99c0-14.307-17.307-21.319-27.314-11.313L4.685 372.692c-6.245 6.245-6.247 16.379 0 22.626l80.001 79.995C94.009 484.635 112 479.638 112 464v-48h224v47.99c0 14.307 17.307 21.319 27.314 11.313l80.001-79.995c6.245-6.245 6.248-16.379 0-22.626z"]
            },
            faTh: {
                prefix: "fas",
                iconName: "th",
                icon: [512, 512, [], "f00a", "M149.333 56v80c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24h101.333c13.255 0 24 10.745 24 24zm181.334 240v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.256 0 24.001-10.745 24.001-24zm32-240v80c0 13.255 10.745 24 24 24H488c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24zm-32 80V56c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.256 0 24.001-10.745 24.001-24zm-205.334 56H24c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24zM0 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zm386.667-56H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zm0 160H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zM181.333 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24z"]
            },
            faThLarge: {
                prefix: "fas",
                iconName: "th-large",
                icon: [512, 512, [], "f009", "M296 32h192c13.255 0 24 10.745 24 24v160c0 13.255-10.745 24-24 24H296c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24zm-80 0H24C10.745 32 0 42.745 0 56v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24zM0 296v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zm296 184h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H296c-13.255 0-24 10.745-24 24v160c0 13.255 10.745 24 24 24z"]
            },
            faThList: {
                prefix: "fas",
                iconName: "th-list",
                icon: [512, 512, [], "f00b", "M149.333 216v80c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24v-80c0-13.255 10.745-24 24-24h101.333c13.255 0 24 10.745 24 24zM0 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zM125.333 32H24C10.745 32 0 42.745 0 56v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24zm80 448H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zm-24-424v80c0 13.255 10.745 24 24 24H488c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24zm24 264H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24z"]
            },
            faThermometer: {
                prefix: "fas",
                iconName: "thermometer",
                icon: [512, 512, [], "f491", "M476.8 20.4c-37.5-30.7-95.5-26.3-131.9 10.2l-45.7 46 50.5 50.5c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-50.4-50.5-45.1 45.4 50.3 50.4c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L209 167.4l-45.1 45.4L214 263c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-50.1-50.2L96 281.1V382L7 471c-9.4 9.4-9.4 24.6 0 33.9 9.4 9.4 24.6 9.4 33.9 0l89-89h99.9L484 162.6c34.9-34.9 42.2-101.5-7.2-142.2z"]
            },
            faThermometerEmpty: {
                prefix: "fas",
                iconName: "thermometer-empty",
                icon: [256, 512, [], "f2cb", "M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-35.346 28.654-64 64-64s64 28.654 64 64zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z"]
            },
            faThermometerFull: {
                prefix: "fas",
                iconName: "thermometer-full",
                icon: [256, 512, [], "f2c7", "M224 96c0-53.019-42.981-96-96-96S32 42.981 32 96v203.347C12.225 321.756.166 351.136.002 383.333c-.359 70.303 56.787 128.176 127.089 128.664.299.002.61.003.909.003 70.698 0 128-57.304 128-128 0-32.459-12.088-62.09-32-84.653V96zm-96 368l-.576-.002c-43.86-.304-79.647-36.544-79.423-80.42.173-33.98 19.266-51.652 31.999-66.08V96c0-26.467 21.533-48 48-48s48 21.533 48 48v221.498c12.63 14.312 32 32.164 32 66.502 0 44.112-35.888 80-80 80zm64-80c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V96c0-17.673 14.327-32 32-32s32 14.327 32 32v232.583c19.124 11.068 32 31.732 32 55.417z"]
            },
            faThermometerHalf: {
                prefix: "fas",
                iconName: "thermometer-half",
                icon: [256, 512, [], "f2c9", "M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V224c0-17.673 14.327-32 32-32s32 14.327 32 32v104.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z"]
            },
            faThermometerQuarter: {
                prefix: "fas",
                iconName: "thermometer-quarter",
                icon: [256, 512, [], "f2ca", "M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V288c0-17.673 14.327-32 32-32s32 14.327 32 32v40.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z"]
            },
            faThermometerThreeQuarters: {
                prefix: "fas",
                iconName: "thermometer-three-quarters",
                icon: [256, 512, [], "f2c8", "M192 384c0 35.346-28.654 64-64 64-35.346 0-64-28.654-64-64 0-23.685 12.876-44.349 32-55.417V160c0-17.673 14.327-32 32-32s32 14.327 32 32v168.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z"]
            },
            faThumbsDown: {
                prefix: "fas",
                iconName: "thumbs-down",
                icon: [512, 512, [], "f165", "M0 56v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56zm40 200c0-13.255 10.745-24 24-24s24 10.745 24 24-10.745 24-24 24-24-10.745-24-24zm272 256c-20.183 0-29.485-39.293-33.931-57.795-5.206-21.666-10.589-44.07-25.393-58.902-32.469-32.524-49.503-73.967-89.117-113.111a11.98 11.98 0 0 1-3.558-8.521V59.901c0-6.541 5.243-11.878 11.783-11.998 15.831-.29 36.694-9.079 52.651-16.178C256.189 17.598 295.709.017 343.995 0h2.844c42.777 0 93.363.413 113.774 29.737 8.392 12.057 10.446 27.034 6.148 44.632 16.312 17.053 25.063 48.863 16.382 74.757 17.544 23.432 19.143 56.132 9.308 79.469l.11.11c11.893 11.949 19.523 31.259 19.439 49.197-.156 30.352-26.157 58.098-59.553 58.098H350.723C358.03 364.34 384 388.132 384 430.548 384 504 336 512 312 512z"]
            },
            faThumbsUp: {
                prefix: "fas",
                iconName: "thumbs-up",
                icon: [512, 512, [], "f164", "M104 224H24c-13.255 0-24 10.745-24 24v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V248c0-13.255-10.745-24-24-24zM64 472c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zM384 81.452c0 42.416-25.97 66.208-33.277 94.548h101.723c33.397 0 59.397 27.746 59.553 58.098.084 17.938-7.546 37.249-19.439 49.197l-.11.11c9.836 23.337 8.237 56.037-9.308 79.469 8.681 25.895-.069 57.704-16.382 74.757 4.298 17.598 2.244 32.575-6.148 44.632C440.202 511.587 389.616 512 346.839 512l-2.845-.001c-48.287-.017-87.806-17.598-119.56-31.725-15.957-7.099-36.821-15.887-52.651-16.178-6.54-.12-11.783-5.457-11.783-11.998v-213.77c0-3.2 1.282-6.271 3.558-8.521 39.614-39.144 56.648-80.587 89.117-113.111 14.804-14.832 20.188-37.236 25.393-58.902C282.515 39.293 291.817 0 312 0c24 0 72 8 72 81.452z"]
            },
            faThumbtack: {
                prefix: "fas",
                iconName: "thumbtack",
                icon: [384, 512, [], "f08d", "M298.028 214.267L285.793 96H328c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v48c0 13.255 10.745 24 24 24h42.207L85.972 214.267C37.465 236.82 0 277.261 0 328c0 13.255 10.745 24 24 24h136v104.007c0 1.242.289 2.467.845 3.578l24 48c2.941 5.882 11.364 5.893 14.311 0l24-48a8.008 8.008 0 0 0 .845-3.578V352h136c13.255 0 24-10.745 24-24-.001-51.183-37.983-91.42-85.973-113.733z"]
            },
            faTicketAlt: {
                prefix: "fas",
                iconName: "ticket-alt",
                icon: [576, 512, [], "f3ff", "M128 160h320v192H128V160zm400 96c0 26.51 21.49 48 48 48v96c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48v-96c26.51 0 48-21.49 48-48s-21.49-48-48-48v-96c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v96c-26.51 0-48 21.49-48 48zm-48-104c0-13.255-10.745-24-24-24H120c-13.255 0-24 10.745-24 24v208c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V152z"]
            },
            faTimes: {
                prefix: "fas",
                iconName: "times",
                icon: [352, 512, [], "f00d", "M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"]
            },
            faTimesCircle: {
                prefix: "fas",
                iconName: "times-circle",
                icon: [512, 512, [], "f057", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"]
            },
            faTint: {
                prefix: "fas",
                iconName: "tint",
                icon: [384, 512, [], "f043", "M192 512c-98.435 0-178.087-79.652-178.087-178.087 0-111.196 101.194-154.065 148.522-311.825 9.104-30.116 51.099-28.778 59.13 0 47.546 158.486 148.522 200.069 148.522 311.825C370.087 432.348 290.435 512 192 512zm-42.522-171.826c-1.509-5.533-9.447-5.532-10.956 0-9.223 29.425-27.913 37.645-27.913 58.435C110.609 417.13 125.478 432 144 432s33.391-14.87 33.391-33.391c0-20.839-18.673-28.956-27.913-58.435z"]
            },
            faToggleOff: {
                prefix: "fas",
                iconName: "toggle-off",
                icon: [576, 512, [], "f204", "M384 64H192C85.961 64 0 149.961 0 256s85.961 192 192 192h192c106.039 0 192-85.961 192-192S490.039 64 384 64zM64 256c0-70.741 57.249-128 128-128 70.741 0 128 57.249 128 128 0 70.741-57.249 128-128 128-70.741 0-128-57.249-128-128zm320 128h-48.905c65.217-72.858 65.236-183.12 0-256H384c70.741 0 128 57.249 128 128 0 70.74-57.249 128-128 128z"]
            },
            faToggleOn: {
                prefix: "fas",
                iconName: "toggle-on",
                icon: [576, 512, [], "f205", "M576 256c0 106.039-85.961 192-192 192H192C85.961 448 0 362.039 0 256S85.961 64 192 64h192c106.039 0 192 85.961 192 192zM384 128c-70.741 0-128 57.249-128 128 0 70.741 57.249 128 128 128 70.741 0 128-57.249 128-128 0-70.741-57.249-128-128-128"]
            },
            faToolbox: {
                prefix: "fas",
                iconName: "toolbox",
                icon: [512, 512, [], "f552", "M502.63 214.63l-45.25-45.25c-6-6-14.14-9.37-22.63-9.37H384V80c0-26.51-21.49-48-48-48H176c-26.51 0-48 21.49-48 48v80H77.25c-8.49 0-16.62 3.37-22.63 9.37L9.37 214.63c-6 6-9.37 14.14-9.37 22.63V320h128v-16c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v16h128v-16c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v16h128v-82.75c0-8.48-3.37-16.62-9.37-22.62zM320 160H192V96h128v64zm64 208c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-16H192v16c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-16H0v96c0 17.67 14.33 32 32 32h448c17.67 0 32-14.33 32-32v-96H384v16z"]
            },
            faTrademark: {
                prefix: "fas",
                iconName: "trademark",
                icon: [640, 512, [], "f25c", "M97.119 163.133H12c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h248.559c6.627 0 12 5.373 12 12v43.133c0 6.627-5.373 12-12 12H175.44V404c0 6.627-5.373 12-12 12h-54.322c-6.627 0-12-5.373-12-12V163.133zM329.825 96h65.425a12 12 0 0 1 11.346 8.093l43.759 127.068c7.161 20.588 16.111 52.812 16.111 52.812h.896s8.95-32.224 16.111-52.812l43.758-127.068A12 12 0 0 1 538.577 96h65.41a12 12 0 0 1 11.961 11.03l24.012 296c.567 6.987-4.951 12.97-11.961 12.97h-54.101a12 12 0 0 1-11.972-11.182l-9.082-132.93c-1.79-24.168 0-53.706 0-53.706h-.896s-10.741 33.566-17.902 53.706l-30.7 84.731a12 12 0 0 1-11.282 7.912h-50.302a12 12 0 0 1-11.282-7.912l-30.7-84.731c-7.161-20.14-17.903-53.706-17.903-53.706h-.895s1.79 29.538 0 53.706l-9.082 132.93c-.428 6.295-5.66 11.182-11.97 11.182H305.4c-7.017 0-12.536-5.994-11.959-12.987l24.425-296A11.999 11.999 0 0 1 329.825 96z"]
            },
            faTrain: {
                prefix: "fas",
                iconName: "train",
                icon: [448, 512, [], "f238", "M448 96v256c0 51.815-61.624 96-130.022 96l62.98 49.721C386.905 502.417 383.562 512 376 512H72c-7.578 0-10.892-9.594-4.957-14.279L130.022 448C61.82 448 0 403.954 0 352V96C0 42.981 64 0 128 0h192c65 0 128 42.981 128 96zm-48 136V120c0-13.255-10.745-24-24-24H72c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24zm-176 64c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56z"]
            },
            faTransgender: {
                prefix: "fas",
                iconName: "transgender",
                icon: [384, 512, [], "f224", "M372 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7C198.5 104.1 172.2 96 144 96 64.5 96 0 160.5 0 240c0 68.5 47.9 125.9 112 140.4V408H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v28c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-28h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-27.6c64.1-14.6 112-71.9 112-140.4 0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V12c0-6.6-5.4-12-12-12zM144 320c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z"]
            },
            faTransgenderAlt: {
                prefix: "fas",
                iconName: "transgender-alt",
                icon: [480, 512, [], "f225", "M468 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7C294.5 104.1 268.2 96 240 96c-28.2 0-54.5 8.1-76.7 22.1l-16.5-16.5 19.8-19.8c4.7-4.7 4.7-12.3 0-17l-28.3-28.3c-4.7-4.7-12.3-4.7-17 0l-19.8 19.8-19-19 16.9-16.9C107.1 12.9 101.7 0 91 0H12C5.4 0 0 5.4 0 12v79c0 10.7 12.9 16 20.5 8.5l16.9-16.9 19 19-19.8 19.8c-4.7 4.7-4.7 12.3 0 17l28.3 28.3c4.7 4.7 12.3 4.7 17 0l19.8-19.8 16.5 16.5C104.1 185.5 96 211.8 96 240c0 68.5 47.9 125.9 112 140.4V408h-36c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v28c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-28h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-27.6c64.1-14.6 112-71.9 112-140.4 0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V12c0-6.6-5.4-12-12-12zM240 320c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z"]
            },
            faTrash: {
                prefix: "fas",
                iconName: "trash",
                icon: [448, 512, [], "f1f8", "M0 84V56c0-13.3 10.7-24 24-24h112l9.4-18.7c4-8.2 12.3-13.3 21.4-13.3h114.3c9.1 0 17.4 5.1 21.5 13.3L312 32h112c13.3 0 24 10.7 24 24v28c0 6.6-5.4 12-12 12H12C5.4 96 0 90.6 0 84zm415.2 56.7L394.8 467c-1.6 25.3-22.6 45-47.9 45H101.1c-25.3 0-46.3-19.7-47.9-45L32.8 140.7c-.4-6.9 5.1-12.7 12-12.7h358.5c6.8 0 12.3 5.8 11.9 12.7z"]
            },
            faTrashAlt: {
                prefix: "fas",
                iconName: "trash-alt",
                icon: [448, 512, [], "f2ed", "M0 84V56c0-13.3 10.7-24 24-24h112l9.4-18.7c4-8.2 12.3-13.3 21.4-13.3h114.3c9.1 0 17.4 5.1 21.5 13.3L312 32h112c13.3 0 24 10.7 24 24v28c0 6.6-5.4 12-12 12H12C5.4 96 0 90.6 0 84zm416 56v324c0 26.5-21.5 48-48 48H80c-26.5 0-48-21.5-48-48V140c0-6.6 5.4-12 12-12h360c6.6 0 12 5.4 12 12zm-272 68c0-8.8-7.2-16-16-16s-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208zm96 0c0-8.8-7.2-16-16-16s-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208zm96 0c0-8.8-7.2-16-16-16s-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208z"]
            },
            faTree: {
                prefix: "fas",
                iconName: "tree",
                icon: [384, 512, [], "f1bb", "M377.33 375.429L293.906 288H328c21.017 0 31.872-25.207 17.448-40.479L262.79 160H296c20.878 0 31.851-24.969 17.587-40.331l-104-112.003c-9.485-10.214-25.676-10.229-35.174 0l-104 112.003C56.206 134.969 67.037 160 88 160h33.21l-82.659 87.521C24.121 262.801 34.993 288 56 288h34.094L6.665 375.429C-7.869 390.655 2.925 416 24.025 416H144c0 32.781-11.188 49.26-33.995 67.506C98.225 492.93 104.914 512 120 512h144c15.086 0 21.776-19.069 9.995-28.494-19.768-15.814-33.992-31.665-33.995-67.496V416h119.97c21.05 0 31.929-25.309 17.36-40.571z"]
            },
            faTrophy: {
                prefix: "fas",
                iconName: "trophy",
                icon: [576, 512, [], "f091", "M552 64H448V24c0-13.3-10.7-24-24-24H152c-13.3 0-24 10.7-24 24v40H24C10.7 64 0 74.7 0 88v56c0 35.7 22.5 72.4 61.9 100.7 31.5 22.7 69.8 37.1 110 41.7C203.3 338.5 240 360 240 360v72h-48c-35.3 0-64 20.7-64 56v12c0 6.6 5.4 12 12 12h296c6.6 0 12-5.4 12-12v-12c0-35.3-28.7-56-64-56h-48v-72s36.7-21.5 68.1-73.6c40.3-4.6 78.6-19 110-41.7 39.3-28.3 61.9-65 61.9-100.7V88c0-13.3-10.7-24-24-24zM99.3 192.8C74.9 175.2 64 155.6 64 144v-16h64.2c1 32.6 5.8 61.2 12.8 86.2-15.1-5.2-29.2-12.4-41.7-21.4zM512 144c0 16.1-17.7 36.1-35.3 48.8-12.5 9-26.7 16.2-41.8 21.4 7-25 11.8-53.6 12.8-86.2H512v16z"]
            },
            faTruck: {
                prefix: "fas",
                iconName: "truck",
                icon: [640, 512, [], "f0d1", "M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h16c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm320 0c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z"]
            },
            faTruckLoading: {
                prefix: "fas",
                iconName: "truck-loading",
                icon: [640, 512, [], "f4de", "M50.2 375.6c2.3 8.5 11.1 13.6 19.6 11.3l216.4-58c8.5-2.3 13.6-11.1 11.3-19.6l-49.7-185.5c-2.3-8.5-11.1-13.6-19.6-11.3L151 133.3l24.8 92.7-61.8 16.5-24.8-92.7-77.3 20.7C3.4 172.8-1.7 181.6.6 190.1l49.6 185.5zM384 0c-17.7 0-32 14.3-32 32v323.6L5.9 450c-4.3 1.2-6.8 5.6-5.6 9.8l12.6 46.3c1.2 4.3 5.6 6.8 9.8 5.6l393.7-107.4C418.8 464.1 467.6 512 528 512c61.9 0 112-50.1 112-112V0H384zm144 448c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z"]
            },
            faTruckMoving: {
                prefix: "fas",
                iconName: "truck-moving",
                icon: [640, 512, [], "f4df", "M621.3 237.3l-58.5-58.5c-12-12-28.3-18.7-45.3-18.7H480V64c0-17.7-14.3-32-32-32H32C14.3 32 0 46.3 0 64v336c0 44.2 35.8 80 80 80 26.3 0 49.4-12.9 64-32.4 14.6 19.6 37.7 32.4 64 32.4 44.2 0 80-35.8 80-80 0-5.5-.6-10.8-1.6-16h163.2c-1.1 5.2-1.6 10.5-1.6 16 0 44.2 35.8 80 80 80s80-35.8 80-80c0-5.5-.6-10.8-1.6-16H624c8.8 0 16-7.2 16-16v-85.5c0-17-6.7-33.2-18.7-45.2zM80 432c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32zm128 0c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32zm272-224h37.5c4.3 0 8.3 1.7 11.3 4.7l43.3 43.3H480v-48zm48 224c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z"]
            },
            faTshirt: {
                prefix: "fas",
                iconName: "tshirt",
                icon: [640, 512, [], "f553", "M631.2 96.5L436.5 0C416.4 27.8 371.9 47.2 320 47.2S223.6 27.8 203.5 0L8.8 96.5c-7.9 4-11.1 13.6-7.2 21.5l57.2 114.5c4 7.9 13.6 11.1 21.5 7.2l56.6-27.7c10.6-5.2 23 2.5 23 14.4V480c0 17.7 14.3 32 32 32h256c17.7 0 32-14.3 32-32V226.3c0-11.8 12.4-19.6 23-14.4l56.6 27.7c7.9 4 17.5.8 21.5-7.2L638.3 118c4-7.9.8-17.6-7.1-21.5z"]
            },
            faTty: {
                prefix: "fas",
                iconName: "tty",
                icon: [512, 512, [], "f1e4", "M5.37 103.822c138.532-138.532 362.936-138.326 501.262 0 6.078 6.078 7.074 15.496 2.583 22.681l-43.214 69.138a18.332 18.332 0 0 1-22.356 7.305l-86.422-34.569a18.335 18.335 0 0 1-11.434-18.846L351.741 90c-62.145-22.454-130.636-21.986-191.483 0l5.953 59.532a18.331 18.331 0 0 1-11.434 18.846l-86.423 34.568a18.334 18.334 0 0 1-22.356-7.305L2.787 126.502a18.333 18.333 0 0 1 2.583-22.68zM96 308v-40c0-6.627-5.373-12-12-12H44c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H92c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zM96 500v-40c0-6.627-5.373-12-12-12H44c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H140c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z"]
            },
            faTv: {
                prefix: "fas",
                iconName: "tv",
                icon: [640, 512, [], "f26c", "M592 0H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h245.1v32h-160c-17.7 0-32 14.3-32 32s14.3 32 32 32h384c17.7 0 32-14.3 32-32s-14.3-32-32-32h-160v-32H592c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-16 352H64V64h512v288z"]
            },
            faUmbrella: {
                prefix: "fas",
                iconName: "umbrella",
                icon: [576, 512, [], "f0e9", "M557.011 267.631c-51.432-45.217-107.572-43.698-158.567 30.731-5.298 7.861-14.906 7.165-19.736 0-2.483-3.624-32.218-60.808-90.708-60.808-45.766 0-70.542 31.378-90.709 60.808-4.829 7.165-14.436 7.861-19.734 0-50.904-74.285-106.613-76.406-158.567-30.731-10.21 8.264-20.912-1.109-18.696-9.481C32.146 134.573 158.516 64.612 288.001 64.612c128.793 0 256.546 69.961 287.706 193.538 2.206 8.322-8.426 17.793-18.696 9.481zM256 261.001V416c0 17.645-14.355 32-32 32s-32-14.355-32-32c0-17.673-14.327-32-32-32s-32 14.327-32 32c0 52.935 43.065 96 96 96s96-43.065 96-96V261.288c-21.836-10.806-45.425-9.737-64-.287zm64-211.007V32c0-17.673-14.327-32-32-32s-32 14.327-32 32v17.987a372.105 372.105 0 0 1 64 .007z"]
            },
            faUnderline: {
                prefix: "fas",
                iconName: "underline",
                icon: [448, 512, [], "f0cd", "M224.264 388.24c-91.669 0-156.603-51.165-156.603-151.392V64H39.37c-8.837 0-16-7.163-16-16V16c0-8.837 7.163-16 16-16h137.39c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-28.813v172.848c0 53.699 28.314 79.444 76.317 79.444 46.966 0 75.796-25.434 75.796-79.965V64h-28.291c-8.837 0-16-7.163-16-16V16c0-8.837 7.163-16 16-16h136.868c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-28.291v172.848c0 99.405-64.881 151.392-156.082 151.392zM16 448h416c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16z"]
            },
            faUndo: {
                prefix: "fas",
                iconName: "undo",
                icon: [512, 512, [], "f0e2", "M212.333 224.333H12c-6.627 0-12-5.373-12-12V12C0 5.373 5.373 0 12 0h48c6.627 0 12 5.373 12 12v78.112C117.773 39.279 184.26 7.47 258.175 8.007c136.906.994 246.448 111.623 246.157 248.532C504.041 393.258 393.12 504 256.333 504c-64.089 0-122.496-24.313-166.51-64.215-5.099-4.622-5.334-12.554-.467-17.42l33.967-33.967c4.474-4.474 11.662-4.717 16.401-.525C170.76 415.336 211.58 432 256.333 432c97.268 0 176-78.716 176-176 0-97.267-78.716-176-176-176-58.496 0-110.28 28.476-142.274 72.333h98.274c6.627 0 12 5.373 12 12v48c0 6.627-5.373 12-12 12z"]
            },
            faUndoAlt: {
                prefix: "fas",
                iconName: "undo-alt",
                icon: [512, 512, [], "f2ea", "M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z"]
            },
            faUniversalAccess: {
                prefix: "fas",
                iconName: "universal-access",
                icon: [512, 512, [], "f29a", "M256 48c114.953 0 208 93.029 208 208 0 114.953-93.029 208-208 208-114.953 0-208-93.029-208-208 0-114.953 93.029-208 208-208m0-40C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 56C149.961 64 64 149.961 64 256s85.961 192 192 192 192-85.961 192-192S362.039 64 256 64zm0 44c19.882 0 36 16.118 36 36s-16.118 36-36 36-36-16.118-36-36 16.118-36 36-36zm117.741 98.023c-28.712 6.779-55.511 12.748-82.14 15.807.851 101.023 12.306 123.052 25.037 155.621 3.617 9.26-.957 19.698-10.217 23.315-9.261 3.617-19.699-.957-23.316-10.217-8.705-22.308-17.086-40.636-22.261-78.549h-9.686c-5.167 37.851-13.534 56.208-22.262 78.549-3.615 9.255-14.05 13.836-23.315 10.217-9.26-3.617-13.834-14.056-10.217-23.315 12.713-32.541 24.185-54.541 25.037-155.621-26.629-3.058-53.428-9.027-82.141-15.807-8.6-2.031-13.926-10.648-11.895-19.249s10.647-13.926 19.249-11.895c96.686 22.829 124.283 22.783 220.775 0 8.599-2.03 17.218 3.294 19.249 11.895 2.029 8.601-3.297 17.219-11.897 19.249z"]
            },
            faUniversity: {
                prefix: "fas",
                iconName: "university",
                icon: [512, 512, [], "f19c", "M496 128v16a8 8 0 0 1-8 8h-24v12c0 6.627-5.373 12-12 12H60c-6.627 0-12-5.373-12-12v-12H24a8 8 0 0 1-8-8v-16a8 8 0 0 1 4.941-7.392l232-88a7.996 7.996 0 0 1 6.118 0l232 88A8 8 0 0 1 496 128zm-24 304H40c-13.255 0-24 10.745-24 24v16a8 8 0 0 0 8 8h464a8 8 0 0 0 8-8v-16c0-13.255-10.745-24-24-24zM96 192v192H60c-6.627 0-12 5.373-12 12v20h416v-20c0-6.627-5.373-12-12-12h-36V192h-64v192h-64V192h-64v192h-64V192H96z"]
            },
            faUnlink: {
                prefix: "fas",
                iconName: "unlink",
                icon: [512, 512, [], "f127", "M304.083 405.907c4.686 4.686 4.686 12.284 0 16.971l-44.674 44.674c-59.263 59.262-155.693 59.266-214.961 0-59.264-59.265-59.264-155.696 0-214.96l44.675-44.675c4.686-4.686 12.284-4.686 16.971 0l39.598 39.598c4.686 4.686 4.686 12.284 0 16.971l-44.675 44.674c-28.072 28.073-28.072 73.75 0 101.823 28.072 28.072 73.75 28.073 101.824 0l44.674-44.674c4.686-4.686 12.284-4.686 16.971 0l39.597 39.598zm-56.568-260.216c4.686 4.686 12.284 4.686 16.971 0l44.674-44.674c28.072-28.075 73.75-28.073 101.824 0 28.072 28.073 28.072 73.75 0 101.823l-44.675 44.674c-4.686 4.686-4.686 12.284 0 16.971l39.598 39.598c4.686 4.686 12.284 4.686 16.971 0l44.675-44.675c59.265-59.265 59.265-155.695 0-214.96-59.266-59.264-155.695-59.264-214.961 0l-44.674 44.674c-4.686 4.686-4.686 12.284 0 16.971l39.597 39.598zm234.828 359.28l22.627-22.627c9.373-9.373 9.373-24.569 0-33.941L63.598 7.029c-9.373-9.373-24.569-9.373-33.941 0L7.029 29.657c-9.373 9.373-9.373 24.569 0 33.941l441.373 441.373c9.373 9.372 24.569 9.372 33.941 0z"]
            },
            faUnlock: {
                prefix: "fas",
                iconName: "unlock",
                icon: [448, 512, [], "f09c", "M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z"]
            },
            faUnlockAlt: {
                prefix: "fas",
                iconName: "unlock-alt",
                icon: [448, 512, [], "f13e", "M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48zM264 408c0 22.1-17.9 40-40 40s-40-17.9-40-40v-48c0-22.1 17.9-40 40-40s40 17.9 40 40v48z"]
            },
            faUpload: {
                prefix: "fas",
                iconName: "upload",
                icon: [512, 512, [], "f093", "M296 384h-80c-13.3 0-24-10.7-24-24V192h-87.7c-17.8 0-26.7-21.5-14.1-34.1L242.3 5.7c7.5-7.5 19.8-7.5 27.3 0l152.2 152.2c12.6 12.6 3.7 34.1-14.1 34.1H320v168c0 13.3-10.7 24-24 24zm216-8v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h136v8c0 30.9 25.1 56 56 56h80c30.9 0 56-25.1 56-56v-8h136c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z"]
            },
            faUser: {
                prefix: "fas",
                iconName: "user",
                icon: [448, 512, [], "f007", "M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z"]
            },
            faUserAlt: {
                prefix: "fas",
                iconName: "user-alt",
                icon: [512, 512, [], "f406", "M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z"]
            },
            faUserAltSlash: {
                prefix: "fas",
                iconName: "user-alt-slash",
                icon: [640, 512, [], "f4fa", "M633.8 458.1L389.6 269.3C433.8 244.7 464 198.1 464 144 464 64.5 399.5 0 320 0c-67.1 0-123 46.1-139 108.2L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3zM198.4 320C124.2 320 64 380.2 64 454.4v9.6c0 26.5 21.5 48 48 48h382.2L245.8 320h-47.4z"]
            },
            faUserAstronaut: {
                prefix: "fas",
                iconName: "user-astronaut",
                icon: [448, 512, [], "f4fb", "M64 224h13.5c24.7 56.5 80.9 96 146.5 96s121.8-39.5 146.5-96H384c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-13.5C345.8 39.5 289.6 0 224 0S102.2 39.5 77.5 96H64c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zm40-88c0-22.1 21.5-40 48-40h144c26.5 0 48 17.9 48 40v24c0 53-43 96-96 96h-48c-53 0-96-43-96-96v-24zm72 72l12-36 36-12-36-12-12-36-12 36-36 12 36 12 12 36zm151.6 113.4C297.7 340.7 262.2 352 224 352s-73.7-11.3-103.6-30.6C52.9 328.5 0 385 0 454.4v9.6c0 26.5 21.5 48 48 48h80v-64c0-17.7 14.3-32 32-32h128c17.7 0 32 14.3 32 32v64h80c26.5 0 48-21.5 48-48v-9.6c0-69.4-52.9-125.9-120.4-133zM272 448c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm-96 0c-8.8 0-16 7.2-16 16v48h32v-48c0-8.8-7.2-16-16-16z"]
            },
            faUserCheck: {
                prefix: "fas",
                iconName: "user-check",
                icon: [640, 512, [], "f4fc", "M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4zm323-128.4l-27.8-28.1c-4.6-4.7-12.1-4.7-16.8-.1l-104.8 104-45.5-45.8c-4.6-4.7-12.1-4.7-16.8-.1l-28.1 27.9c-4.7 4.6-4.7 12.1-.1 16.8l81.7 82.3c4.6 4.7 12.1 4.7 16.8.1l141.3-140.2c4.6-4.7 4.7-12.2.1-16.8z"]
            },
            faUserCircle: {
                prefix: "fas",
                iconName: "user-circle",
                icon: [496, 512, [], "f2bd", "M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 96c48.6 0 88 39.4 88 88s-39.4 88-88 88-88-39.4-88-88 39.4-88 88-88zm0 344c-58.7 0-111.3-26.6-146.5-68.2 18.8-35.4 55.6-59.8 98.5-59.8 2.4 0 4.8.4 7.1 1.1 13 4.2 26.6 6.9 40.9 6.9 14.3 0 28-2.7 40.9-6.9 2.3-.7 4.7-1.1 7.1-1.1 42.9 0 79.7 24.4 98.5 59.8C359.3 421.4 306.7 448 248 448z"]
            },
            faUserClock: {
                prefix: "fas",
                iconName: "user-clock",
                icon: [640, 512, [], "f4fd", "M496 224c-79.6 0-144 64.4-144 144s64.4 144 144 144 144-64.4 144-144-64.4-144-144-144zm64 150.3c0 5.3-4.4 9.7-9.7 9.7h-60.6c-5.3 0-9.7-4.4-9.7-9.7v-76.6c0-5.3 4.4-9.7 9.7-9.7h12.6c5.3 0 9.7 4.4 9.7 9.7V352h38.3c5.3 0 9.7 4.4 9.7 9.7v12.6zM320 368c0-27.8 6.7-54.1 18.2-77.5-8-1.5-16.2-2.5-24.6-2.5h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h347.1c-45.3-31.9-75.1-84.5-75.1-144zm-96-112c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128z"]
            },
            faUserCog: {
                prefix: "fas",
                iconName: "user-cog",
                icon: [640, 512, [], "f4fe", "M610.5 373.3c2.6-14.1 2.6-28.5 0-42.6l25.8-14.9c3-1.7 4.3-5.2 3.3-8.5-6.7-21.6-18.2-41.2-33.2-57.4-2.3-2.5-6-3.1-9-1.4l-25.8 14.9c-10.9-9.3-23.4-16.5-36.9-21.3v-29.8c0-3.4-2.4-6.4-5.7-7.1-22.3-5-45-4.8-66.2 0-3.3.7-5.7 3.7-5.7 7.1v29.8c-13.5 4.8-26 12-36.9 21.3l-25.8-14.9c-2.9-1.7-6.7-1.1-9 1.4-15 16.2-26.5 35.8-33.2 57.4-1 3.3.4 6.8 3.3 8.5l25.8 14.9c-2.6 14.1-2.6 28.5 0 42.6l-25.8 14.9c-3 1.7-4.3 5.2-3.3 8.5 6.7 21.6 18.2 41.1 33.2 57.4 2.3 2.5 6 3.1 9 1.4l25.8-14.9c10.9 9.3 23.4 16.5 36.9 21.3v29.8c0 3.4 2.4 6.4 5.7 7.1 22.3 5 45 4.8 66.2 0 3.3-.7 5.7-3.7 5.7-7.1v-29.8c13.5-4.8 26-12 36.9-21.3l25.8 14.9c2.9 1.7 6.7 1.1 9-1.4 15-16.2 26.5-35.8 33.2-57.4 1-3.3-.4-6.8-3.3-8.5l-25.8-14.9zM496 400.5c-26.8 0-48.5-21.8-48.5-48.5s21.8-48.5 48.5-48.5 48.5 21.8 48.5 48.5-21.7 48.5-48.5 48.5zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm201.2 226.5c-2.3-1.2-4.6-2.6-6.8-3.9l-7.9 4.6c-6 3.4-12.8 5.3-19.6 5.3-10.9 0-21.4-4.6-28.9-12.6-18.3-19.8-32.3-43.9-40.2-69.6-5.5-17.7 1.9-36.4 17.9-45.7l7.9-4.6c-.1-2.6-.1-5.2 0-7.8l-7.9-4.6c-16-9.2-23.4-28-17.9-45.7.9-2.9 2.2-5.8 3.2-8.7-3.8-.3-7.5-1.2-11.4-1.2h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c10.1 0 19.5-3.2 27.2-8.5-1.2-3.8-2-7.7-2-11.8v-9.2z"]
            },
            faUserEdit: {
                prefix: "fas",
                iconName: "user-edit",
                icon: [640, 512, [], "f4ff", "M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h274.9c-2.4-6.8-3.4-14-2.6-21.3l6.8-60.9 1.2-11.1 7.9-7.9 77.3-77.3c-24.5-27.7-60-45.5-99.9-45.5zm45.3 145.3l-6.8 61c-1.1 10.2 7.5 18.8 17.6 17.6l60.9-6.8 137.9-137.9-71.7-71.7-137.9 137.8zM633 268.9L595.1 231c-9.3-9.3-24.5-9.3-33.8 0l-37.8 37.8-4.1 4.1 71.8 71.7 41.8-41.8c9.3-9.4 9.3-24.5 0-33.9z"]
            },
            faUserFriends: {
                prefix: "fas",
                iconName: "user-friends",
                icon: [640, 512, [], "f500", "M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z"]
            },
            faUserGraduate: {
                prefix: "fas",
                iconName: "user-graduate",
                icon: [448, 512, [], "f501", "M319.4 320.6L224 416l-95.4-95.4C57.1 323.7 0 382.2 0 454.4v9.6c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-9.6c0-72.2-57.1-130.7-128.6-133.8zM13.6 79.8l6.4 1.5v58.4c-7 4.2-12 11.5-12 20.3 0 8.4 4.6 15.4 11.1 19.7L3.5 242c-1.7 6.9 2.1 14 7.6 14h41.8c5.5 0 9.3-7.1 7.6-14l-15.6-62.3C51.4 175.4 56 168.4 56 160c0-8.8-5-16.1-12-20.3V87.1l66 15.9c-8.6 17.2-14 36.4-14 57 0 70.7 57.3 128 128 128s128-57.3 128-128c0-20.6-5.3-39.8-14-57l96.3-23.2c18.2-4.4 18.2-27.1 0-31.5l-190.4-46c-13-3.1-26.7-3.1-39.7 0L13.6 48.2c-18.1 4.4-18.1 27.2 0 31.6z"]
            },
            faUserLock: {
                prefix: "fas",
                iconName: "user-lock",
                icon: [640, 512, [], "f502", "M320 320c0-11.1 3.1-21.4 8.1-30.5-4.8-.5-9.5-1.5-14.5-1.5h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h280.9c-5.5-9.5-8.9-20.3-8.9-32V320zm-96-64c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm384 32h-32v-48c0-44.2-35.8-80-80-80s-80 35.8-80 80v48h-32c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h224c17.7 0 32-14.3 32-32V320c0-17.7-14.3-32-32-32zm-80 0h-64v-48c0-17.6 14.4-32 32-32s32 14.4 32 32v48z"]
            },
            faUserMd: {
                prefix: "fas",
                iconName: "user-md",
                icon: [448, 512, [], "f0f0", "M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zM104 424c0 13.3 10.7 24 24 24s24-10.7 24-24-10.7-24-24-24-24 10.7-24 24zm216-135.4v49c36.5 7.4 64 39.8 64 78.4v41.7c0 7.6-5.4 14.2-12.9 15.7l-32.2 6.4c-4.3.9-8.5-1.9-9.4-6.3l-3.1-15.7c-.9-4.3 1.9-8.6 6.3-9.4l19.3-3.9V416c0-62.8-96-65.1-96 1.9v26.7l19.3 3.9c4.3.9 7.1 5.1 6.3 9.4l-3.1 15.7c-.9 4.3-5.1 7.1-9.4 6.3l-31.2-4.2c-7.9-1.1-13.8-7.8-13.8-15.9V416c0-38.6 27.5-70.9 64-78.4v-45.2c-2.2.7-4.4 1.1-6.6 1.9-18 6.3-37.3 9.8-57.4 9.8s-39.4-3.5-57.4-9.8c-7.4-2.6-14.9-4.2-22.6-5.2v81.6c23.1 6.9 40 28.1 40 53.4 0 30.9-25.1 56-56 56s-56-25.1-56-56c0-25.3 16.9-46.5 40-53.4v-80.4C48.5 301 0 355.8 0 422.4v44.8C0 491.9 20.1 512 44.8 512h358.4c24.7 0 44.8-20.1 44.8-44.8v-44.8c0-72-56.8-130.3-128-133.8z"]
            },
            faUserMinus: {
                prefix: "fas",
                iconName: "user-minus",
                icon: [640, 512, [], "f503", "M624 208H432c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h192c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400 48c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z"]
            },
            faUserNinja: {
                prefix: "fas",
                iconName: "user-ninja",
                icon: [448, 512, [], "f504", "M325.4 289.2L224 390.6 122.6 289.2C54 295.3 0 352.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-70.2-54-127.1-122.6-133.2zM32 192c27.3 0 51.8-11.5 69.2-29.7 15.1 53.9 64 93.7 122.8 93.7 70.7 0 128-57.3 128-128S294.7 0 224 0c-50.4 0-93.6 29.4-114.5 71.8C92.1 47.8 64 32 32 32c0 33.4 17.1 62.8 43.1 80-26 17.2-43.1 46.6-43.1 80zm144-96h96c17.7 0 32 14.3 32 32H144c0-17.7 14.3-32 32-32z"]
            },
            faUserPlus: {
                prefix: "fas",
                iconName: "user-plus",
                icon: [640, 512, [], "f234", "M624 208h-64v-64c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v64h-64c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h64v64c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-64h64c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400 48c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z"]
            },
            faUserSecret: {
                prefix: "fas",
                iconName: "user-secret",
                icon: [448, 512, [], "f21b", "M383.9 308.3l23.9-62.6c4-10.5-3.7-21.7-15-21.7h-58.5c11-18.9 17.8-40.6 17.8-64v-.3c39.2-7.8 64-19.1 64-31.7 0-13.3-27.3-25.1-70.1-33-9.2-32.8-27-65.8-40.6-82.8-9.5-11.9-25.9-15.6-39.5-8.8l-27.6 13.8c-9 4.5-19.6 4.5-28.6 0L182.1 3.4c-13.6-6.8-30-3.1-39.5 8.8-13.5 17-31.4 50-40.6 82.8-42.7 7.9-70 19.7-70 33 0 12.6 24.8 23.9 64 31.7v.3c0 23.4 6.8 45.1 17.8 64H56.3c-11.5 0-19.2 11.7-14.7 22.3l25.8 60.2C27.3 329.8 0 372.7 0 422.4v44.8C0 491.9 20.1 512 44.8 512h358.4c24.7 0 44.8-20.1 44.8-44.8v-44.8c0-48.4-25.8-90.4-64.1-114.1zM176 480l-41.6-192 49.6 32 24 40-32 120zm96 0l-32-120 24-40 49.6-32L272 480zm41.7-298.5c-3.9 11.9-7 24.6-16.5 33.4-10.1 9.3-48 22.4-64-25-2.8-8.4-15.4-8.4-18.3 0-17 50.2-56 32.4-64 25-9.5-8.8-12.7-21.5-16.5-33.4-.8-2.5-6.3-5.7-6.3-5.8v-10.8c28.3 3.6 61 5.8 96 5.8s67.7-2.1 96-5.8v10.8c-.1.1-5.6 3.2-6.4 5.8z"]
            },
            faUserShield: {
                prefix: "fas",
                iconName: "user-shield",
                icon: [640, 512, [], "f505", "M622.3 271.1l-115.2-45c-4.1-1.6-12.6-3.7-22.2 0l-115.2 45c-10.7 4.2-17.7 14-17.7 24.9 0 111.6 68.7 188.8 132.9 213.9 9.6 3.7 18 1.6 22.2 0C558.4 489.9 640 420.5 640 296c0-10.9-7-20.7-17.7-24.9zM496 462.4V273.3l95.5 37.3c-5.6 87.1-60.9 135.4-95.5 151.8zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm96 40c0-2.5.8-4.8 1.1-7.2-2.5-.1-4.9-.8-7.5-.8h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c6.8 0 13.3-1.5 19.2-4-54-42.9-99.2-116.7-99.2-212z"]
            },
            faUserSlash: {
                prefix: "fas",
                iconName: "user-slash",
                icon: [640, 512, [], "f506", "M633.8 458.1L362.3 248.3C412.1 230.7 448 183.8 448 128 448 57.3 390.7 0 320 0c-67.1 0-121.5 51.8-126.9 117.4L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3zM96 422.4V464c0 26.5 21.5 48 48 48h350.2L207.4 290.3C144.2 301.3 96 356 96 422.4z"]
            },
            faUserTag: {
                prefix: "fas",
                iconName: "user-tag",
                icon: [640, 512, [], "f507", "M630.6 364.9l-90.3-90.2c-12-12-28.3-18.7-45.3-18.7h-79.3c-17.7 0-32 14.3-32 32v79.2c0 17 6.7 33.2 18.7 45.2l90.3 90.2c12.5 12.5 32.8 12.5 45.3 0l92.5-92.5c12.6-12.5 12.6-32.7.1-45.2zm-182.8-21c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24c0 13.2-10.7 24-24 24zm-223.8-88c70.7 0 128-57.3 128-128C352 57.3 294.7 0 224 0S96 57.3 96 128c0 70.6 57.3 127.9 128 127.9zm127.8 111.2V294c-12.2-3.6-24.9-6.2-38.2-6.2h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 287.9 0 348.1 0 422.3v41.6c0 26.5 21.5 48 48 48h352c15.5 0 29.1-7.5 37.9-18.9l-58-58c-18.1-18.1-28.1-42.2-28.1-67.9z"]
            },
            faUserTie: {
                prefix: "fas",
                iconName: "user-tie",
                icon: [448, 512, [], "f508", "M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm95.8 32.6L272 480l-32-136 32-56h-96l32 56-32 136-47.8-191.4C56.9 292 0 350.3 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-72.1-56.9-130.4-128.2-133.8z"]
            },
            faUserTimes: {
                prefix: "fas",
                iconName: "user-times",
                icon: [640, 512, [], "f235", "M589.6 240l45.6-45.6c6.3-6.3 6.3-16.5 0-22.8l-22.8-22.8c-6.3-6.3-16.5-6.3-22.8 0L544 194.4l-45.6-45.6c-6.3-6.3-16.5-6.3-22.8 0l-22.8 22.8c-6.3 6.3-6.3 16.5 0 22.8l45.6 45.6-45.6 45.6c-6.3 6.3-6.3 16.5 0 22.8l22.8 22.8c6.3 6.3 16.5 6.3 22.8 0l45.6-45.6 45.6 45.6c6.3 6.3 16.5 6.3 22.8 0l22.8-22.8c6.3-6.3 6.3-16.5 0-22.8L589.6 240zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z"]
            },
            faUsers: {
                prefix: "fas",
                iconName: "users",
                icon: [640, 512, [], "f0c0", "M96 224c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm448 0c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm32 32h-64c-17.6 0-33.5 7.1-45.1 18.6 40.3 22.1 68.9 62 75.1 109.4h66c17.7 0 32-14.3 32-32v-32c0-35.3-28.7-64-64-64zm-256 0c61.9 0 112-50.1 112-112S381.9 32 320 32 208 82.1 208 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C179.6 288 128 339.6 128 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zm-223.7-13.4C161.5 263.1 145.6 256 128 256H64c-35.3 0-64 28.7-64 64v32c0 17.7 14.3 32 32 32h65.9c6.3-47.4 34.9-87.3 75.2-109.4z"]
            },
            faUsersCog: {
                prefix: "fas",
                iconName: "users-cog",
                icon: [640, 512, [], "f509", "M610.5 341.3c2.6-14.1 2.6-28.5 0-42.6l25.8-14.9c3-1.7 4.3-5.2 3.3-8.5-6.7-21.6-18.2-41.2-33.2-57.4-2.3-2.5-6-3.1-9-1.4l-25.8 14.9c-10.9-9.3-23.4-16.5-36.9-21.3v-29.8c0-3.4-2.4-6.4-5.7-7.1-22.3-5-45-4.8-66.2 0-3.3.7-5.7 3.7-5.7 7.1v29.8c-13.5 4.8-26 12-36.9 21.3l-25.8-14.9c-2.9-1.7-6.7-1.1-9 1.4-15 16.2-26.5 35.8-33.2 57.4-1 3.3.4 6.8 3.3 8.5l25.8 14.9c-2.6 14.1-2.6 28.5 0 42.6l-25.8 14.9c-3 1.7-4.3 5.2-3.3 8.5 6.7 21.6 18.2 41.1 33.2 57.4 2.3 2.5 6 3.1 9 1.4l25.8-14.9c10.9 9.3 23.4 16.5 36.9 21.3v29.8c0 3.4 2.4 6.4 5.7 7.1 22.3 5 45 4.8 66.2 0 3.3-.7 5.7-3.7 5.7-7.1v-29.8c13.5-4.8 26-12 36.9-21.3l25.8 14.9c2.9 1.7 6.7 1.1 9-1.4 15-16.2 26.5-35.8 33.2-57.4 1-3.3-.4-6.8-3.3-8.5l-25.8-14.9zM496 368.5c-26.8 0-48.5-21.8-48.5-48.5s21.8-48.5 48.5-48.5 48.5 21.8 48.5 48.5-21.7 48.5-48.5 48.5zM96 224c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm224 32c1.9 0 3.7-.5 5.6-.6 8.3-21.7 20.5-42.1 36.3-59.2 7.4-8 17.9-12.6 28.9-12.6 6.9 0 13.7 1.8 19.6 5.3l7.9 4.6c.8-.5 1.6-.9 2.4-1.4 7-14.6 11.2-30.8 11.2-48 0-61.9-50.1-112-112-112S208 82.1 208 144c0 61.9 50.1 112 112 112zm105.2 194.5c-2.3-1.2-4.6-2.6-6.8-3.9-8.2 4.8-15.3 9.8-27.5 9.8-10.9 0-21.4-4.6-28.9-12.6-18.3-19.8-32.3-43.9-40.2-69.6-10.7-34.5 24.9-49.7 25.8-50.3-.1-2.6-.1-5.2 0-7.8l-7.9-4.6c-3.8-2.2-7-5-9.8-8.1-3.3.2-6.5.6-9.8.6-24.6 0-47.6-6-68.5-16h-8.3C179.6 288 128 339.6 128 403.2V432c0 26.5 21.5 48 48 48h255.4c-3.7-6-6.2-12.8-6.2-20.3v-9.2zM173.1 274.6C161.5 263.1 145.6 256 128 256H64c-35.3 0-64 28.7-64 64v32c0 17.7 14.3 32 32 32h65.9c6.3-47.4 34.9-87.3 75.2-109.4z"]
            },
            faUtensilSpoon: {
                prefix: "fas",
                iconName: "utensil-spoon",
                icon: [512, 512, [], "f2e5", "M480.1 31.9c-55-55.1-164.9-34.5-227.8 28.5-49.3 49.3-55.1 110-28.8 160.4L9 413.2c-11.6 10.5-12.1 28.5-1 39.5L59.3 504c11 11 29.1 10.5 39.5-1.1l192.4-214.4c50.4 26.3 111.1 20.5 160.4-28.8 63-62.9 83.6-172.8 28.5-227.8z"]
            },
            faUtensils: {
                prefix: "fas",
                iconName: "utensils",
                icon: [416, 512, [], "f2e7", "M207.9 15.2c.8 4.7 16.1 94.5 16.1 128.8 0 52.3-27.8 89.6-68.9 104.6L168 486.7c.7 13.7-10.2 25.3-24 25.3H80c-13.7 0-24.7-11.5-24-25.3l12.9-238.1C27.7 233.6 0 196.2 0 144 0 109.6 15.3 19.9 16.1 15.2 19.3-5.1 61.4-5.4 64 16.3v141.2c1.3 3.4 15.1 3.2 16 0 1.4-25.3 7.9-139.2 8-141.8 3.3-20.8 44.7-20.8 47.9 0 .2 2.7 6.6 116.5 8 141.8.9 3.2 14.8 3.4 16 0V16.3c2.6-21.6 44.8-21.4 48-1.1zm119.2 285.7l-15 185.1c-1.2 14 9.9 26 23.9 26h56c13.3 0 24-10.7 24-24V24c0-13.2-10.7-24-24-24-82.5 0-221.4 178.5-64.9 300.9z"]
            },
            faVenus: {
                prefix: "fas",
                iconName: "venus",
                icon: [288, 512, [], "f221", "M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V368H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80z"]
            },
            faVenusDouble: {
                prefix: "fas",
                iconName: "venus-double",
                icon: [512, 512, [], "f226", "M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V368H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80zm336 140.4V368h36c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-36v36c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-36h-36c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h36v-51.6c-21.2-4.8-40.6-14.3-57.2-27.3 14-16.7 25-36 32.1-57.1 14.5 14.8 34.7 24 57.1 24 44.1 0 80-35.9 80-80s-35.9-80-80-80c-22.3 0-42.6 9.2-57.1 24-7.1-21.1-18-40.4-32.1-57.1C303.4 43.6 334.3 32 368 32c79.5 0 144 64.5 144 144 0 68.5-47.9 125.9-112 140.4z"]
            },
            faVenusMars: {
                prefix: "fas",
                iconName: "venus-mars",
                icon: [576, 512, [], "f228", "M564 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7C422.5 72.1 396.2 64 368 64c-33.7 0-64.6 11.6-89.2 30.9 14 16.7 25 36 32.1 57.1 14.5-14.8 34.7-24 57.1-24 44.1 0 80 35.9 80 80s-35.9 80-80 80c-22.3 0-42.6-9.2-57.1-24-7.1 21.1-18 40.4-32.1 57.1 24.5 19.4 55.5 30.9 89.2 30.9 79.5 0 144-64.5 144-144 0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.4 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12V12c0-6.6-5.4-12-12-12zM144 64C64.5 64 0 128.5 0 208c0 68.5 47.9 125.9 112 140.4V400H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.6 112-71.9 112-140.4 0-79.5-64.5-144-144-144zm0 224c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z"]
            },
            faVial: {
                prefix: "fas",
                iconName: "vial",
                icon: [480, 512, [], "f492", "M477.7 186.1L309.5 18.3c-3.1-3.1-8.2-3.1-11.3 0l-34 33.9c-3.1 3.1-3.1 8.2 0 11.3l11.2 11.1L33 316.5c-38.8 38.7-45.1 102-9.4 143.5 20.6 24 49.5 36 78.4 35.9 26.4 0 52.8-10 72.9-30.1l246.3-245.7 11.2 11.1c3.1 3.1 8.2 3.1 11.3 0l34-33.9c3.1-3 3.1-8.1 0-11.2zM318 256H161l148-147.7 78.5 78.3L318 256z"]
            },
            faVials: {
                prefix: "fas",
                iconName: "vials",
                icon: [640, 512, [], "f493", "M72 64h24v240c0 44.1 35.9 80 80 80s80-35.9 80-80V64h24c4.4 0 8-3.6 8-8V8c0-4.4-3.6-8-8-8H72c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm72 0h64v96h-64V64zm480 384H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM360 64h24v240c0 44.1 35.9 80 80 80s80-35.9 80-80V64h24c4.4 0 8-3.6 8-8V8c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm72 0h64v96h-64V64z"]
            },
            faVideo: {
                prefix: "fas",
                iconName: "video",
                icon: [576, 512, [], "f03d", "M336.2 64H47.8C21.4 64 0 85.4 0 111.8v288.4C0 426.6 21.4 448 47.8 448h288.4c26.4 0 47.8-21.4 47.8-47.8V111.8c0-26.4-21.4-47.8-47.8-47.8zm189.4 37.7L416 177.3v157.4l109.6 75.5c21.2 14.6 50.4-.3 50.4-25.8V127.5c0-25.4-29.1-40.4-50.4-25.8z"]
            },
            faVideoSlash: {
                prefix: "fas",
                iconName: "video-slash",
                icon: [640, 512, [], "f4e2", "M633.8 458.1l-55-42.5c15.4-1.4 29.2-13.7 29.2-31.1v-257c0-25.5-29.1-40.4-50.4-25.8L448 177.3v137.2l-32-24.7v-178c0-26.4-21.4-47.8-47.8-47.8H123.9L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4L42.7 82 416 370.6l178.5 138c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.5-6.9 4.2-17-2.8-22.4zM32 400.2c0 26.4 21.4 47.8 47.8 47.8h288.4c11.2 0 21.4-4 29.6-10.5L32 154.7v245.5z"]
            },
            faVolleyballBall: {
                prefix: "fas",
                iconName: "volleyball-ball",
                icon: [495, 512, [], "f45f", "M223.3 243.4c-.9-37-8.6-72.8-22.7-105.7-90.8 42.4-157.5 122.4-180.3 216.8 13.4 30.8 32.9 58.3 56.9 81.1 22.7-79.2 74.2-147.8 146.1-192.2zM186.4 109c-15-26.4-34.5-50.1-57.4-70.7C38 88.1-15.8 191.2 4 300.5c33.4-83.1 98.4-152 182.4-191.5zM374 274.1c8.6-99.8-27.3-197.5-97.5-264.4-14.7-1.7-51.6-5.5-98.9 8.5 57.3 59.3 91 138.2 93.5 222.7 32.5 17.7 67.3 29 102.9 33.2zm-124.7 9.5c-31.6 19.3-58.7 43.9-80.2 72.6 82 57.3 184.5 75.1 277.5 47.8 19.7-26.4 34.2-56.8 42.2-89.9-26.6 6.6-53.7 10.4-80.9 10.4-54.6-.1-108.9-14.1-158.6-40.9zM151 383.3c-15.2 26-25.7 54.4-32.1 84.2 37.6 23 81.7 36.5 129.1 36.5 61 0 116.7-22.1 159.9-58.6C295 461.5 204.6 420.6 151 383.3zM331.3 22.7c55.3 70.4 82.5 161.2 74.6 253.6 30.3.2 60.5-4.8 89.7-14.2 0-2 .3-4 .3-6 0-107.8-68.7-199.1-164.6-233.4z"]
            },
            faVolumeDown: {
                prefix: "fas",
                iconName: "volume-down",
                icon: [384, 512, [], "f027", "M256 88.017v335.964c0 21.438-25.943 31.998-40.971 16.971L126.059 352H24c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h102.059l88.971-88.954c15.01-15.01 40.97-4.49 40.97 16.971zM384 256c0-33.717-17.186-64.35-45.972-81.944-15.079-9.214-34.775-4.463-43.992 10.616s-4.464 34.775 10.615 43.992C314.263 234.538 320 244.757 320 256a32.056 32.056 0 0 1-13.802 26.332c-14.524 10.069-18.136 30.006-8.067 44.53 10.07 14.525 30.008 18.136 44.53 8.067C368.546 316.983 384 287.478 384 256z"]
            },
            faVolumeOff: {
                prefix: "fas",
                iconName: "volume-off",
                icon: [256, 512, [], "f026", "M256 88.017v335.964c0 21.438-25.943 31.998-40.971 16.971L126.059 352H24c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h102.059l88.971-88.954c15.01-15.01 40.97-4.49 40.97 16.971z"]
            },
            faVolumeUp: {
                prefix: "fas",
                iconName: "volume-up",
                icon: [576, 512, [], "f028", "M256 88.017v335.964c0 21.438-25.943 31.998-40.971 16.971L126.059 352H24c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h102.059l88.971-88.954c15.01-15.01 40.97-4.49 40.97 16.971zm182.056-77.876C422.982.92 403.283 5.668 394.061 20.745c-9.221 15.077-4.473 34.774 10.604 43.995C468.967 104.063 512 174.983 512 256c0 73.431-36.077 142.292-96.507 184.206-14.522 10.072-18.129 30.01-8.057 44.532 10.076 14.528 30.016 18.126 44.531 8.057C529.633 438.927 576 350.406 576 256c0-103.244-54.579-194.877-137.944-245.859zM480 256c0-68.547-36.15-129.777-91.957-163.901-15.076-9.22-34.774-4.471-43.994 10.607-9.22 15.078-4.471 34.774 10.607 43.994C393.067 170.188 416 211.048 416 256c0 41.964-20.62 81.319-55.158 105.276-14.521 10.073-18.128 30.01-8.056 44.532 6.216 8.96 16.185 13.765 26.322 13.765a31.862 31.862 0 0 0 18.21-5.709C449.091 377.953 480 318.938 480 256zm-96 0c0-33.717-17.186-64.35-45.972-81.944-15.079-9.214-34.775-4.463-43.992 10.616s-4.464 34.775 10.615 43.992C314.263 234.538 320 244.757 320 256a32.056 32.056 0 0 1-13.802 26.332c-14.524 10.069-18.136 30.006-8.067 44.53 10.07 14.525 30.008 18.136 44.53 8.067C368.546 316.983 384 287.478 384 256z"]
            },
            faWalking: {
                prefix: "fas",
                iconName: "walking",
                icon: [320, 512, [], "f554", "M208 96c26.5 0 48-21.5 48-48S234.5 0 208 0s-48 21.5-48 48 21.5 48 48 48zm94.5 149.1l-23.3-11.8-9.7-29.4c-14.7-44.6-55.7-75.8-102.2-75.9-36-.1-55.9 10.1-93.3 25.2-21.6 8.7-39.3 25.2-49.7 46.2L17.6 213c-7.8 15.8-1.5 35 14.2 42.9 15.6 7.9 34.6 1.5 42.5-14.3L81 228c3.5-7 9.3-12.5 16.5-15.4l26.8-10.8-15.2 60.7c-5.2 20.8.4 42.9 14.9 58.8l59.9 65.4c7.2 7.9 12.3 17.4 14.9 27.7l18.3 73.3c4.3 17.1 21.7 27.6 38.8 23.3 17.1-4.3 27.6-21.7 23.3-38.8l-22.2-89c-2.6-10.3-7.7-19.9-14.9-27.7l-45.5-49.7 17.2-68.7 5.5 16.5c5.3 16.1 16.7 29.4 31.7 37l23.3 11.8c15.6 7.9 34.6 1.5 42.5-14.3 7.7-15.7 1.4-35.1-14.3-43zM73.6 385.8c-3.2 8.1-8 15.4-14.2 21.5l-50 50.1c-12.5 12.5-12.5 32.8 0 45.3s32.7 12.5 45.2 0l59.4-59.4c6.1-6.1 10.9-13.4 14.2-21.5l13.5-33.8c-55.3-60.3-38.7-41.8-47.4-53.7l-20.7 51.5z"]
            },
            faWallet: {
                prefix: "fas",
                iconName: "wallet",
                icon: [512, 512, [], "f555", "M461.2 128H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h384c8.84 0 16-7.16 16-16 0-26.51-21.49-48-48-48H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h397.2c28.02 0 50.8-21.53 50.8-48V176c0-26.47-22.78-48-50.8-48zM416 336c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z"]
            },
            faWarehouse: {
                prefix: "fas",
                iconName: "warehouse",
                icon: [640, 512, [], "f494", "M504 352H136.4c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8H504c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm0 96H136.1c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm0-192H136.6c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8H504c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm106.5-139L338.4 3.7a48.15 48.15 0 0 0-36.9 0L29.5 117C11.7 124.5 0 141.9 0 161.3V504c0 4.4 3.6 8 8 8h80c4.4 0 8-3.6 8-8V256c0-17.6 14.6-32 32.6-32h382.8c18 0 32.6 14.4 32.6 32v248c0 4.4 3.6 8 8 8h80c4.4 0 8-3.6 8-8V161.3c0-19.4-11.7-36.8-29.5-44.3z"]
            },
            faWeight: {
                prefix: "fas",
                iconName: "weight",
                icon: [512, 512, [], "f496", "M448 64h-26c16.4 28.3 26 61 26 96 0 105.9-86.1 192-192 192S64 265.9 64 160c0-35 9.6-67.7 26-96H64C28.7 64 0 92.7 0 128v320c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V128c0-35.3-28.7-64-64-64zM256 320c88.4 0 160-71.6 160-160S344.4 0 256 0 96 71.6 96 160s71.6 160 160 160zm-.3-151.9l33.6-78.4c3.5-8.2 12.9-11.9 21-8.4s11.9 12.9 8.4 21L285 180.9c6.7 7.1 10.9 16.6 10.9 27.1 0 22.1-17.9 40-40 40s-40-17.9-40-40c.1-22 17.9-39.8 39.8-39.9z"]
            },
            faWheelchair: {
                prefix: "fas",
                iconName: "wheelchair",
                icon: [512, 512, [], "f193", "M496.101 385.669l14.227 28.663c3.929 7.915.697 17.516-7.218 21.445l-65.465 32.886c-16.049 7.967-35.556 1.194-43.189-15.055L331.679 320H192c-15.925 0-29.426-11.71-31.679-27.475C126.433 55.308 128.38 70.044 128 64c0-36.358 30.318-65.635 67.052-63.929 33.271 1.545 60.048 28.905 60.925 62.201.868 32.933-23.152 60.423-54.608 65.039l4.67 32.69H336c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H215.182l4.572 32H352a32 32 0 0 1 28.962 18.392L438.477 396.8l36.178-18.349c7.915-3.929 17.517-.697 21.446 7.218zM311.358 352h-24.506c-7.788 54.204-54.528 96-110.852 96-61.757 0-112-50.243-112-112 0-41.505 22.694-77.809 56.324-97.156-3.712-25.965-6.844-47.86-9.488-66.333C45.956 198.464 0 261.963 0 336c0 97.047 78.953 176 176 176 71.87 0 133.806-43.308 161.11-105.192L311.358 352z"]
            },
            faWifi: {
                prefix: "fas",
                iconName: "wifi",
                icon: [640, 512, [], "f1eb", "M384 416c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-35.346 28.654-64 64-64s64 28.654 64 64zm136.659-124.443c6.465-6.465 6.245-17.065-.564-23.167-113.793-101.985-286.526-101.869-400.19 0-6.809 6.102-7.029 16.702-.564 23.167l34.006 34.006c5.927 5.927 15.464 6.32 21.769.796 82.88-72.609 207.074-72.447 289.768 0 6.305 5.524 15.842 5.132 21.769-.796l34.006-34.006zm112.11-113.718c6.385-6.385 6.254-16.816-.35-22.973-175.768-163.86-449.134-163.8-624.837 0-6.604 6.157-6.735 16.589-.35 22.973l33.966 33.966c6.095 6.095 15.891 6.231 22.224.383 144.763-133.668 368.356-133.702 513.156 0 6.333 5.848 16.129 5.712 22.224-.383l33.967-33.966z"]
            },
            faWindowClose: {
                prefix: "fas",
                iconName: "window-close",
                icon: [512, 512, [], "f410", "M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-83.6 290.5c4.8 4.8 4.8 12.6 0 17.4l-40.5 40.5c-4.8 4.8-12.6 4.8-17.4 0L256 313.3l-66.5 67.1c-4.8 4.8-12.6 4.8-17.4 0l-40.5-40.5c-4.8-4.8-4.8-12.6 0-17.4l67.1-66.5-67.1-66.5c-4.8-4.8-4.8-12.6 0-17.4l40.5-40.5c4.8-4.8 12.6-4.8 17.4 0l66.5 67.1 66.5-67.1c4.8-4.8 12.6-4.8 17.4 0l40.5 40.5c4.8 4.8 4.8 12.6 0 17.4L313.3 256l67.1 66.5z"]
            },
            faWindowMaximize: {
                prefix: "fas",
                iconName: "window-maximize",
                icon: [512, 512, [], "f2d0", "M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-16 160H64v-84c0-6.6 5.4-12 12-12h360c6.6 0 12 5.4 12 12v84z"]
            },
            faWindowMinimize: {
                prefix: "fas",
                iconName: "window-minimize",
                icon: [512, 512, [], "f2d1", "M464 352H48c-26.5 0-48 21.5-48 48v32c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-32c0-26.5-21.5-48-48-48z"]
            },
            faWindowRestore: {
                prefix: "fas",
                iconName: "window-restore",
                icon: [512, 512, [], "f2d2", "M512 48v288c0 26.5-21.5 48-48 48h-48V176c0-44.1-35.9-80-80-80H128V48c0-26.5 21.5-48 48-48h288c26.5 0 48 21.5 48 48zM384 176v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V176c0-26.5 21.5-48 48-48h288c26.5 0 48 21.5 48 48zm-68 28c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v52h252v-52z"]
            },
            faWineGlass: {
                prefix: "fas",
                iconName: "wine-glass",
                icon: [288, 512, [], "f4e3", "M287.4 192.7l-16-178.1C270.7 6.3 263.9 0 255.7 0H32.3c-8.2 0-15 6.3-15.7 14.6L.6 192.7c-7.2 80 50.7 148.9 127.4 157.6V480H74.1c-24.5 0-33.2 32-20 32h179.8c13.1 0 4.5-32-20-32H160V350.3c76.7-8.8 134.6-77.6 127.4-157.6zM226.2 48l7.2 80H54.6l7.2-80h164.4z"]
            },
            faWonSign: {
                prefix: "fas",
                iconName: "won-sign",
                icon: [576, 512, [], "f159", "M564 192c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-48.028l18.572-80.61c1.732-7.518-3.978-14.694-11.693-14.694h-46.107a11.998 11.998 0 0 0-11.736 9.5L450.73 128H340.839l-19.725-85.987a12 12 0 0 0-11.696-9.317H265.43a12 12 0 0 0-11.687 9.277L233.696 128H124.975L107.5 42.299a12 12 0 0 0-11.758-9.602H53.628c-7.686 0-13.39 7.124-11.709 14.624L60 128H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h62.342l7.171 32H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h83.856l40.927 182.624A12 12 0 0 0 148.492 480h56.767c5.583 0 10.428-3.85 11.689-9.288L259.335 288h55.086l42.386 182.712A12 12 0 0 0 368.496 480h56.826a12 12 0 0 0 11.694-9.306L479.108 288H564c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-70.146l7.373-32H564zm-425.976 0h80.757l-7.457 32h-66.776l-6.524-32zm45.796 150.029c-6.194 25.831-6.758 47.25-7.321 47.25h-1.126s-1.689-22.05-6.758-47.25L157.599 288h38.812l-12.591 54.029zM274.182 224l1.996-8.602c1.856-7.962 3.457-15.968 4.803-23.398h11.794c1.347 7.43 2.947 15.436 4.803 23.398l1.996 8.602h-25.392zm130.959 118.029c-5.068 25.2-6.758 47.25-6.758 47.25h-1.126c-.563 0-1.126-21.42-7.321-47.25L377.542 288h39.107l-11.508 54.029zM430.281 224h-67.42l-7.34-32h81.577l-6.817 32z"]
            },
            faWrench: {
                prefix: "fas",
                iconName: "wrench",
                icon: [512, 512, [], "f0ad", "M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z"]
            },
            faXRay: {
                prefix: "fas",
                iconName: "x-ray",
                icon: [640, 512, [], "f497", "M240 384c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm160 32c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zM624 0H16C7.2 0 0 7.2 0 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16zm0 448h-48V96H64v352H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM480 248c0 4.4-3.6 8-8 8H336v32h104c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H336v32h64c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48v-16h-64v16c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48h64v-32H200c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h104v-32H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h136v-32H200c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h104v-24c0-4.4 3.6-8 8-8h16c4.4 0 8 3.6 8 8v24h104c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H336v32h136c4.4 0 8 3.6 8 8v16z"]
            },
            faYenSign: {
                prefix: "fas",
                iconName: "yen-sign",
                icon: [384, 512, [], "f157", "M351.208 32h-65.277a12 12 0 0 0-10.778 6.724l-55.39 113.163c-14.513 34.704-27.133 71.932-27.133 71.932h-1.262s-12.62-37.228-27.133-71.932l-55.39-113.163A11.997 11.997 0 0 0 98.068 32H32.792c-9.057 0-14.85 9.65-10.59 17.643L102.322 200H44c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h88.162L152 293.228V320H44c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h108v92c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-92h108c6.627 0 12-5.373 12-12v-32c0-6.627-5.373-12-12-12H232v-26.772L251.838 256H340c6.627 0 12-5.373 12-12v-32c0-6.627-5.373-12-12-12h-58.322l80.12-150.357C366.058 41.65 360.266 32 351.208 32z"]
            }
        };
        !function (e) {
            try {
                Ot("fas", Dt)
            } catch (e) {
                if (!Nt)
                    throw e
            }
        }
        ();
        const Ut = {
            "/": "home",
            "/about": "about",
            "/works": "works",
            "/lab": "lab",
            "/contact": "contact"
        },
        Bt = e => {
            window.history.pushState({}, e, window.location.origin + e),
            window.currentSection = Ut[window.location.pathname],
            window.checkCurrentSection()
        };
        window.onpopstate = () => {
            window.currentSection = Ut[window.location.pathname],
            window.checkCurrentSection()
        };
        var kt = n(212),
        Gt = function () {
            var e = 0,
            t = document.createElement("div");
            function n(e) {
                return t.appendChild(e.dom),
                e
            }
            function i(n) {
                for (var i = 0; i < t.children.length; i++)
                    t.children[i].style.display = i === n ? "block" : "none";
                e = n
            }
            t.style.cssText = "position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",
            t.addEventListener("click", (function (n) {
                    n.preventDefault(),
                    i(++e % t.children.length)
                }), !1);
            var a = (performance || Date).now(),
            r = a,
            o = 0,
            s = n(new Gt.Panel("FPS", "#0ff", "#002")),
            c = n(new Gt.Panel("MS", "#0f0", "#020"));
            if (self.performance && self.performance.memory)
                var l = n(new Gt.Panel("MB", "#f08", "#201"));
            return i(0), {
                REVISION: 16,
                dom: t,
                addPanel: n,
                showPanel: i,
                begin: function () {
                    a = (performance || Date).now()
                },
                end: function () {
                    o++;
                    var e = (performance || Date).now();
                    if (c.update(e - a, 200), e >= r + 1e3 && (s.update(1e3 * o / (e - r), 100), r = e, o = 0, l)) {
                        var t = performance.memory;
                        l.update(t.usedJSHeapSize / 1048576, t.jsHeapSizeLimit / 1048576)
                    }
                    return e
                },
                update: function () {
                    a = this.end()
                },
                domElement: t,
                setMode: i
            }
        };
        Gt.Panel = function (e, t, n) {
            var i = 1 / 0,
            a = 0,
            r = Math.round,
            o = r(window.devicePixelRatio || 1),
            s = 80 * o,
            c = 48 * o,
            l = 3 * o,
            h = 2 * o,
            u = 3 * o,
            f = 15 * o,
            d = 74 * o,
            p = 30 * o,
            m = document.createElement("canvas");
            m.width = s,
            m.height = c,
            m.style.cssText = "width:80px;height:48px";
            var v = m.getContext("2d");
            return v.font = "bold " + 9 * o + "px Helvetica,Arial,sans-serif",
            v.textBaseline = "top",
            v.fillStyle = n,
            v.fillRect(0, 0, s, c),
            v.fillStyle = t,
            v.fillText(e, l, h),
            v.fillRect(u, f, d, p),
            v.fillStyle = n,
            v.globalAlpha = .9,
            v.fillRect(u, f, d, p), {
                dom: m,
                update: function (c, g) {
                    i = Math.min(i, c),
                    a = Math.max(a, c),
                    v.fillStyle = n,
                    v.globalAlpha = 1,
                    v.fillRect(0, 0, s, f),
                    v.fillStyle = t,
                    v.fillText(r(c) + " " + e + " (" + r(i) + "-" + r(a) + ")", l, h),
                    v.drawImage(m, u + o, f, d - o, p, u, f, d - o, p),
                    v.fillRect(u + d - o, f, o, p),
                    v.fillStyle = n,
                    v.globalAlpha = .9,
                    v.fillRect(u + d - o, f, o, r((1 - c / g) * p))
                }
            }
        };
        var jt = function (e, t) {
            var n,
            i,
            a,
            r,
            o,
            s;
            void 0 === t && console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),
            t === document && console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),
            this.object = e,
            this.domElement = t,
            this.enabled = !0,
            this.target = new kt.Vector3,
            this.minDistance = 0,
            this.maxDistance = 1 / 0,
            this.minZoom = 0,
            this.maxZoom = 1 / 0,
            this.minPolarAngle = 0,
            this.maxPolarAngle = Math.PI,
            this.minAzimuthAngle = -1 / 0,
            this.maxAzimuthAngle = 1 / 0,
            this.enableDamping = !1,
            this.dampingFactor = .05,
            this.enableZoom = !0,
            this.zoomSpeed = 1,
            this.enableRotate = !0,
            this.rotateSpeed = 1,
            this.enablePan = !0,
            this.panSpeed = 1,
            this.screenSpacePanning = !0,
            this.keyPanSpeed = 7,
            this.autoRotate = !1,
            this.autoRotateSpeed = 2,
            this.enableKeys = !0,
            this.keys = {
                LEFT: 37,
                UP: 38,
                RIGHT: 39,
                BOTTOM: 40
            },
            this.mouseButtons = {
                LEFT: kt.MOUSE.ROTATE,
                MIDDLE: kt.MOUSE.DOLLY,
                RIGHT: kt.MOUSE.PAN
            },
            this.touches = {
                ONE: kt.TOUCH.ROTATE,
                TWO: kt.TOUCH.DOLLY_PAN
            },
            this.target0 = this.target.clone(),
            this.position0 = this.object.position.clone(),
            this.zoom0 = this.object.zoom,
            this.getPolarAngle = function () {
                return m.phi
            },
            this.getAzimuthalAngle = function () {
                return m.theta
            },
            this.saveState = function () {
                c.target0.copy(c.target),
                c.position0.copy(c.object.position),
                c.zoom0 = c.object.zoom
            },
            this.reset = function () {
                c.target.copy(c.target0),
                c.object.position.copy(c.position0),
                c.object.zoom = c.zoom0,
                c.object.updateProjectionMatrix(),
                c.dispatchEvent(l),
                c.update(),
                d = f.NONE
            },
            this.update = (n = new kt.Vector3, i = (new kt.Quaternion).setFromUnitVectors(e.up, new kt.Vector3(0, 1, 0)), a = i.clone().inverse(), r = new kt.Vector3, o = new kt.Quaternion, s = 2 * Math.PI, function () {
            var e = c.object.position;
            n.copy(e).sub(c.target),
            n.applyQuaternion(i),
            m.setFromVector3(n),
            c.autoRotate && d === f.NONE && E(2 * Math.PI / 60 / 60 * c.autoRotateSpeed),
            c.enableDamping ? (m.theta += v.theta * c.dampingFactor, m.phi += v.phi * c.dampingFactor) : (m.theta += v.theta, m.phi += v.phi);
            var t = c.minAzimuthAngle,
            h = c.maxAzimuthAngle;
            return isFinite(t) && isFinite(h) && (t < -Math.PI ? t += s : t > Math.PI && (t -= s), h < -Math.PI ? h += s : h > Math.PI && (h -= s), m.theta = t < h ? Math.max(t, Math.min(h, m.theta)) : m.theta > (t + h) / 2 ? Math.max(t, m.theta) : Math.min(h, m.theta)),
            m.phi = Math.max(c.minPolarAngle, Math.min(c.maxPolarAngle, m.phi)),
            m.makeSafe(),
            m.radius *= g,
            m.radius = Math.max(c.minDistance, Math.min(c.maxDistance, m.radius)),
            !0 === c.enableDamping ? c.target.addScaledVector(x, c.dampingFactor) : c.target.add(x),
            n.setFromSpherical(m),
            n.applyQuaternion(a),
            e.copy(c.target).add(n),
            c.object.lookAt(c.target),
            !0 === c.enableDamping ? (v.theta *= 1 - c.dampingFactor, v.phi *= 1 - c.dampingFactor, x.multiplyScalar(1 - c.dampingFactor)) : (v.set(0, 0, 0), x.set(0, 0, 0)),
            g = 1,
            !!(y || r.distanceToSquared(c.object.position) > p || 8 * (1 - o.dot(c.object.quaternion)) > p) && (c.dispatchEvent(l), r.copy(c.object.position), o.copy(c.object.quaternion), y = !1, !0)
        }),
            this.dispose = function () {
                c.domElement.removeEventListener("contextmenu", ee, !1),
                c.domElement.removeEventListener("pointerdown", X, !1),
                c.domElement.removeEventListener("wheel", Z, !1),
                c.domElement.removeEventListener("touchstart", J, !1),
                c.domElement.removeEventListener("touchend", $, !1),
                c.domElement.removeEventListener("touchmove", K, !1),
                c.domElement.ownerDocument.removeEventListener("pointermove", q, !1),
                c.domElement.ownerDocument.removeEventListener("pointerup", Y, !1),
                c.domElement.removeEventListener("keydown", Q, !1)
            };
            var c = this,
            l = {
                type: "change"
            },
            h = {
                type: "start"
            },
            u = {
                type: "end"
            },
            f = {
                NONE: -1,
                ROTATE: 0,
                DOLLY: 1,
                PAN: 2,
                TOUCH_ROTATE: 3,
                TOUCH_PAN: 4,
                TOUCH_DOLLY_PAN: 5,
                TOUCH_DOLLY_ROTATE: 6
            },
            d = f.NONE,
            p = 1e-6,
            m = new kt.Spherical,
            v = new kt.Spherical,
            g = 1,
            x = new kt.Vector3,
            y = !1,
            b = new kt.Vector2,
            M = new kt.Vector2,
            z = new kt.Vector2,
            w = new kt.Vector2,
            _ = new kt.Vector2,
            S = new kt.Vector2,
            L = new kt.Vector2,
            A = new kt.Vector2,
            T = new kt.Vector2;
            function C() {
                return Math.pow(.95, c.zoomSpeed)
            }
            function E(e) {
                v.theta -= e
            }
            function H(e) {
                v.phi -= e
            }
            var N,
            P = (N = new kt.Vector3, function (e, t) {
            N.setFromMatrixColumn(t, 0),
            N.multiplyScalar(-e),
            x.add(N)
        }),
            V = function () {
                var e = new kt.Vector3;
                return function (t, n) {
                    !0 === c.screenSpacePanning ? e.setFromMatrixColumn(n, 1) : (e.setFromMatrixColumn(n, 0), e.crossVectors(c.object.up, e)),
                    e.multiplyScalar(t),
                    x.add(e)
                }
            }
            (),
            R = function () {
                var e = new kt.Vector3;
                return function (t, n) {
                    var i = c.domElement;
                    if (c.object.isPerspectiveCamera) {
                        var a = c.object.position;
                        e.copy(a).sub(c.target);
                        var r = e.length();
                        r *= Math.tan(c.object.fov / 2 * Math.PI / 180),
                        P(2 * t * r / i.clientHeight, c.object.matrix),
                        V(2 * n * r / i.clientHeight, c.object.matrix)
                    } else
                        c.object.isOrthographicCamera ? (P(t * (c.object.right - c.object.left) / c.object.zoom / i.clientWidth, c.object.matrix), V(n * (c.object.top - c.object.bottom) / c.object.zoom / i.clientHeight, c.object.matrix)) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."), c.enablePan = !1)
                }
            }
            ();
            function F(e) {
                c.object.isPerspectiveCamera ? g /= e : c.object.isOrthographicCamera ? (c.object.zoom = Math.max(c.minZoom, Math.min(c.maxZoom, c.object.zoom * e)), c.object.updateProjectionMatrix(), y = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), c.enableZoom = !1)
            }
            function I(e) {
                c.object.isPerspectiveCamera ? g *= e : c.object.isOrthographicCamera ? (c.object.zoom = Math.max(c.minZoom, Math.min(c.maxZoom, c.object.zoom / e)), c.object.updateProjectionMatrix(), y = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), c.enableZoom = !1)
            }
            function O(e) {
                b.set(e.clientX, e.clientY)
            }
            function D(e) {
                w.set(e.clientX, e.clientY)
            }
            function U(e) {
                if (1 == e.touches.length)
                    b.set(e.touches[0].pageX, e.touches[0].pageY);
                else {
                    var t = .5 * (e.touches[0].pageX + e.touches[1].pageX),
                    n = .5 * (e.touches[0].pageY + e.touches[1].pageY);
                    b.set(t, n)
                }
            }
            function B(e) {
                if (1 == e.touches.length)
                    w.set(e.touches[0].pageX, e.touches[0].pageY);
                else {
                    var t = .5 * (e.touches[0].pageX + e.touches[1].pageX),
                    n = .5 * (e.touches[0].pageY + e.touches[1].pageY);
                    w.set(t, n)
                }
            }
            function k(e) {
                var t = e.touches[0].pageX - e.touches[1].pageX,
                n = e.touches[0].pageY - e.touches[1].pageY,
                i = Math.sqrt(t * t + n * n);
                L.set(0, i)
            }
            function G(e) {
                if (1 == e.touches.length)
                    M.set(e.touches[0].pageX, e.touches[0].pageY);
                else {
                    var t = .5 * (e.touches[0].pageX + e.touches[1].pageX),
                    n = .5 * (e.touches[0].pageY + e.touches[1].pageY);
                    M.set(t, n)
                }
                z.subVectors(M, b).multiplyScalar(c.rotateSpeed);
                var i = c.domElement;
                E(2 * Math.PI * z.x / i.clientHeight),
                H(2 * Math.PI * z.y / i.clientHeight),
                b.copy(M)
            }
            function j(e) {
                if (1 == e.touches.length)
                    _.set(e.touches[0].pageX, e.touches[0].pageY);
                else {
                    var t = .5 * (e.touches[0].pageX + e.touches[1].pageX),
                    n = .5 * (e.touches[0].pageY + e.touches[1].pageY);
                    _.set(t, n)
                }
                S.subVectors(_, w).multiplyScalar(c.panSpeed),
                R(S.x, S.y),
                w.copy(_)
            }
            function W(e) {
                var t = e.touches[0].pageX - e.touches[1].pageX,
                n = e.touches[0].pageY - e.touches[1].pageY,
                i = Math.sqrt(t * t + n * n);
                A.set(0, i),
                T.set(0, Math.pow(A.y / L.y, c.zoomSpeed)),
                F(T.y),
                L.copy(A)
            }
            function X(e) {
                if (!1 !== c.enabled)
                    switch (e.pointerType) {
                    case "mouse":
                    case "pen":
                        !function (e) {
                            var t;
                            switch (e.preventDefault(), c.domElement.focus ? c.domElement.focus() : window.focus(), e.button) {
                            case 0:
                                t = c.mouseButtons.LEFT;
                                break;
                            case 1:
                                t = c.mouseButtons.MIDDLE;
                                break;
                            case 2:
                                t = c.mouseButtons.RIGHT;
                                break;
                            default:
                                t = -1
                            }
                            switch (t) {
                            case kt.MOUSE.DOLLY:
                                if (!1 === c.enableZoom)
                                    return;
                                !function (e) {
                                    L.set(e.clientX, e.clientY)
                                }
                                (e),
                                d = f.DOLLY;
                                break;
                            case kt.MOUSE.ROTATE:
                                if (e.ctrlKey || e.metaKey || e.shiftKey) {
                                    if (!1 === c.enablePan)
                                        return;
                                    D(e),
                                    d = f.PAN
                                } else {
                                    if (!1 === c.enableRotate)
                                        return;
                                    O(e),
                                    d = f.ROTATE
                                }
                                break;
                            case kt.MOUSE.PAN:
                                if (e.ctrlKey || e.metaKey || e.shiftKey) {
                                    if (!1 === c.enableRotate)
                                        return;
                                    O(e),
                                    d = f.ROTATE
                                } else {
                                    if (!1 === c.enablePan)
                                        return;
                                    D(e),
                                    d = f.PAN
                                }
                                break;
                            default:
                                d = f.NONE
                            }
                            d !== f.NONE && (c.domElement.ownerDocument.addEventListener("pointermove", q, !1), c.domElement.ownerDocument.addEventListener("pointerup", Y, !1), c.dispatchEvent(h))
                        }
                        (e)
                    }
            }
            function q(e) {
                if (!1 !== c.enabled)
                    switch (e.pointerType) {
                    case "mouse":
                    case "pen":
                        !function (e) {
                            if (!1 !== c.enabled)
                                switch (e.preventDefault(), d) {
                                case f.ROTATE:
                                    if (!1 === c.enableRotate)
                                        return;
                                    !function (e) {
                                        M.set(e.clientX, e.clientY),
                                        z.subVectors(M, b).multiplyScalar(c.rotateSpeed);
                                        var t = c.domElement;
                                        E(2 * Math.PI * z.x / t.clientHeight),
                                        H(2 * Math.PI * z.y / t.clientHeight),
                                        b.copy(M),
                                        c.update()
                                    }
                                    (e);
                                    break;
                                case f.DOLLY:
                                    if (!1 === c.enableZoom)
                                        return;
                                    !function (e) {
                                        A.set(e.clientX, e.clientY),
                                        T.subVectors(A, L),
                                        T.y > 0 ? F(C()) : T.y < 0 && I(C()),
                                        L.copy(A),
                                        c.update()
                                    }
                                    (e);
                                    break;
                                case f.PAN:
                                    if (!1 === c.enablePan)
                                        return;
                                    !function (e) {
                                        _.set(e.clientX, e.clientY),
                                        S.subVectors(_, w).multiplyScalar(c.panSpeed),
                                        R(S.x, S.y),
                                        w.copy(_),
                                        c.update()
                                    }
                                    (e)
                                }
                        }
                        (e)
                    }
            }
            function Y(e) {
                if (!1 !== c.enabled)
                    switch (e.pointerType) {
                    case "mouse":
                    case "pen":
                        !1 !== c.enabled && (c.domElement.ownerDocument.removeEventListener("pointermove", q, !1), c.domElement.ownerDocument.removeEventListener("pointerup", Y, !1), c.dispatchEvent(u), d = f.NONE)
                    }
            }
            function Z(e) {
                !1 === c.enabled || !1 === c.enableZoom || d !== f.NONE && d !== f.ROTATE || (e.preventDefault(), e.stopPropagation(), c.dispatchEvent(h), function (e) {
                    e.deltaY < 0 ? I(C()) : e.deltaY > 0 && F(C()),
                    c.update()
                }
                    (e), c.dispatchEvent(u))
            }
            function Q(e) {
                !1 !== c.enabled && !1 !== c.enableKeys && !1 !== c.enablePan && function (e) {
                    var t = !1;
                    switch (e.keyCode) {
                    case c.keys.UP:
                        R(0, c.keyPanSpeed),
                        t = !0;
                        break;
                    case c.keys.BOTTOM:
                        R(0, -c.keyPanSpeed),
                        t = !0;
                        break;
                    case c.keys.LEFT:
                        R(c.keyPanSpeed, 0),
                        t = !0;
                        break;
                    case c.keys.RIGHT:
                        R(-c.keyPanSpeed, 0),
                        t = !0
                    }
                    t && (e.preventDefault(), c.update())
                }
                (e)
            }
            function J(e) {
                if (!1 !== c.enabled) {
                    switch (e.preventDefault(), e.touches.length) {
                    case 1:
                        switch (c.touches.ONE) {
                        case kt.TOUCH.ROTATE:
                            if (!1 === c.enableRotate)
                                return;
                            U(e),
                            d = f.TOUCH_ROTATE;
                            break;
                        case kt.TOUCH.PAN:
                            if (!1 === c.enablePan)
                                return;
                            B(e),
                            d = f.TOUCH_PAN;
                            break;
                        default:
                            d = f.NONE
                        }
                        break;
                    case 2:
                        switch (c.touches.TWO) {
                        case kt.TOUCH.DOLLY_PAN:
                            if (!1 === c.enableZoom && !1 === c.enablePan)
                                return;
                            !function (e) {
                                c.enableZoom && k(e),
                                c.enablePan && B(e)
                            }
                            (e),
                            d = f.TOUCH_DOLLY_PAN;
                            break;
                        case kt.TOUCH.DOLLY_ROTATE:
                            if (!1 === c.enableZoom && !1 === c.enableRotate)
                                return;
                            !function (e) {
                                c.enableZoom && k(e),
                                c.enableRotate && U(e)
                            }
                            (e),
                            d = f.TOUCH_DOLLY_ROTATE;
                            break;
                        default:
                            d = f.NONE
                        }
                        break;
                    default:
                        d = f.NONE
                    }
                    d !== f.NONE && c.dispatchEvent(h)
                }
            }
            function K(e) {
                if (!1 !== c.enabled)
                    switch (e.preventDefault(), e.stopPropagation(), d) {
                    case f.TOUCH_ROTATE:
                        if (!1 === c.enableRotate)
                            return;
                        G(e),
                        c.update();
                        break;
                    case f.TOUCH_PAN:
                        if (!1 === c.enablePan)
                            return;
                        j(e),
                        c.update();
                        break;
                    case f.TOUCH_DOLLY_PAN:
                        if (!1 === c.enableZoom && !1 === c.enablePan)
                            return;
                        !function (e) {
                            c.enableZoom && W(e),
                            c.enablePan && j(e)
                        }
                        (e),
                        c.update();
                        break;
                    case f.TOUCH_DOLLY_ROTATE:
                        if (!1 === c.enableZoom && !1 === c.enableRotate)
                            return;
                        !function (e) {
                            c.enableZoom && W(e),
                            c.enableRotate && G(e)
                        }
                        (e),
                        c.update();
                        break;
                    default:
                        d = f.NONE
                    }
            }
            function $(e) {
                !1 !== c.enabled && (c.dispatchEvent(u), d = f.NONE)
            }
            function ee(e) {
                !1 !== c.enabled && e.preventDefault()
            }
            c.domElement.addEventListener("contextmenu", ee, !1),
            c.domElement.addEventListener("pointerdown", X, !1),
            c.domElement.addEventListener("wheel", Z, !1),
            c.domElement.addEventListener("touchstart", J, !1),
            c.domElement.addEventListener("touchend", $, !1),
            c.domElement.addEventListener("touchmove", K, !1),
            c.domElement.addEventListener("keydown", Q, !1),
            -1 === c.domElement.tabIndex && (c.domElement.tabIndex = 0),
            this.update()
        };
        (jt.prototype = Object.create(kt.EventDispatcher.prototype)).constructor = jt;
        var Wt = function (e, t) {
            jt.call(this, e, t),
            this.screenSpacePanning = !1,
            this.mouseButtons.LEFT = kt.MOUSE.PAN,
            this.mouseButtons.RIGHT = kt.MOUSE.ROTATE,
            this.touches.ONE = kt.TOUCH.PAN,
            this.touches.TWO = kt.TOUCH.DOLLY_ROTATE
        };
        let Xt,
        qt,
        Yt,
        Zt,
        Qt,
        Jt,
        Kt;
        (Wt.prototype = Object.create(kt.EventDispatcher.prototype)).constructor = Wt;
        let $t = !0;
        Jt = new kt.Vector3(-20, 0, 0),
        Qt = new kt.Vector3(0, 0, 10),
        Kt = new kt.Vector2(.1, 0),
        Xt = new kt.PerspectiveCamera(45, window.innerWidth / window.innerHeight, .1, 1e6),
        qt = new kt.Scene; {
            const e = 1,
            t = 140,
            n = "#000015";
            qt.fog = new kt.Fog(n, e, t),
            qt.background = new kt.Color(n)
        }
        qt.add(Xt),
        Yt = new kt.WebGLRenderer({
            antialias: !0,
            alpha: !0
        }),
        Yt.autoClear = !1,
        Yt.setPixelRatio(window.devicePixelRatio),
        Yt.setSize(window.innerWidth, window.innerHeight),
        Yt.domElement.id = "stage",
        document.body.appendChild(Yt.domElement);
        let en = document.querySelector("canvas");
        function tn(e, t, n) {
            return (1 - n) * e + n * t
        }
        Zt = new jt(Xt, Yt.domElement),
        Zt.enablePan = !1,
        Zt.enableZoom = !1,
        Zt.enableDamping = !0,
        Zt.minPolarAngle = .8,
        Zt.maxPolarAngle = 1.65,
        Zt.dampingFactor = .07,
        Zt.rotateSpeed = .17,
        Zt.addEventListener("start", ((e, t) => {
                en.style.cursor = "move",
                $t = !1
            }), !1),
        Zt.addEventListener("end", ((e, t) => {
                en.style.cursor = "grab",
                $t = !0
            }), !1);
        var nn,
        an,
        rn,
        on = {
            uniforms: {
                tDiffuse: {
                    value: null
                },
                opacity: {
                    value: 1
                }
            },
            vertexShader: ["varying vec2 vUv;", "void main() {", "\tvUv = uv;", "\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
            fragmentShader: ["uniform float opacity;", "uniform sampler2D tDiffuse;", "varying vec2 vUv;", "void main() {", "\tvec4 texel = texture2D( tDiffuse, vUv );", "\tgl_FragColor = opacity * texel;", "}"].join("\n")
        };
        function sn() {
            this.enabled = !0,
            this.needsSwap = !0,
            this.clear = !1,
            this.renderToScreen = !1
        }
        Object.assign(sn.prototype, {
            setSize: function () {},
            render: function () {
                console.error("THREE.Pass: .render() must be implemented in derived pass.")
            }
        }),
        sn.FullScreenQuad = (nn = new kt.OrthographicCamera(-1, 1, 1, -1, 0, 1), an = new kt.PlaneBufferGeometry(2, 2), rn = function (e) {
            this._mesh = new kt.Mesh(an, e)
        }, Object.defineProperty(rn.prototype, "material", {
                get: function () {
                    return this._mesh.material
                },
                set: function (e) {
                    this._mesh.material = e
                }
            }), Object.assign(rn.prototype, {
                dispose: function () {
                    this._mesh.geometry.dispose()
                },
                render: function (e) {
                    e.render(this._mesh, nn)
                }
            }), rn);
        var cn = function (e, t) {
            sn.call(this),
            this.textureID = void 0 !== t ? t : "tDiffuse",
            e instanceof kt.ShaderMaterial ? (this.uniforms = e.uniforms, this.material = e) : e && (this.uniforms = kt.UniformsUtils.clone(e.uniforms), this.material = new kt.ShaderMaterial({
                    defines: Object.assign({}, e.defines),
                    uniforms: this.uniforms,
                    vertexShader: e.vertexShader,
                    fragmentShader: e.fragmentShader
                })),
            this.fsQuad = new sn.FullScreenQuad(this.material)
        };
        cn.prototype = Object.assign(Object.create(sn.prototype), {
            constructor: cn,
            render: function (e, t, n) {
                this.uniforms[this.textureID] && (this.uniforms[this.textureID].value = n.texture),
                this.fsQuad.material = this.material,
                this.renderToScreen ? (e.setRenderTarget(null), this.fsQuad.render(e)) : (e.setRenderTarget(t), this.clear && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil), this.fsQuad.render(e))
            }
        });
        var ln = function (e, t) {
            sn.call(this),
            this.scene = e,
            this.camera = t,
            this.clear = !0,
            this.needsSwap = !1,
            this.inverse = !1
        };
        ln.prototype = Object.assign(Object.create(sn.prototype), {
            constructor: ln,
            render: function (e, t, n) {
                var i,
                a,
                r = e.getContext(),
                o = e.state;
                o.buffers.color.setMask(!1),
                o.buffers.depth.setMask(!1),
                o.buffers.color.setLocked(!0),
                o.buffers.depth.setLocked(!0),
                this.inverse ? (i = 0, a = 1) : (i = 1, a = 0),
                o.buffers.stencil.setTest(!0),
                o.buffers.stencil.setOp(r.REPLACE, r.REPLACE, r.REPLACE),
                o.buffers.stencil.setFunc(r.ALWAYS, i, 4294967295),
                o.buffers.stencil.setClear(a),
                o.buffers.stencil.setLocked(!0),
                e.setRenderTarget(n),
                this.clear && e.clear(),
                e.render(this.scene, this.camera),
                e.setRenderTarget(t),
                this.clear && e.clear(),
                e.render(this.scene, this.camera),
                o.buffers.color.setLocked(!1),
                o.buffers.depth.setLocked(!1),
                o.buffers.stencil.setLocked(!1),
                o.buffers.stencil.setFunc(r.EQUAL, 1, 4294967295),
                o.buffers.stencil.setOp(r.KEEP, r.KEEP, r.KEEP),
                o.buffers.stencil.setLocked(!0)
            }
        });
        var hn = function () {
            sn.call(this),
            this.needsSwap = !1
        };
        hn.prototype = Object.create(sn.prototype),
        Object.assign(hn.prototype, {
            render: function (e) {
                e.state.buffers.stencil.setLocked(!1),
                e.state.buffers.stencil.setTest(!1)
            }
        });
        var un = function (e, t) {
            if (this.renderer = e, void 0 === t) {
                var n = {
                    minFilter: kt.LinearFilter,
                    magFilter: kt.LinearFilter,
                    format: kt.RGBAFormat
                },
                i = e.getSize(new kt.Vector2);
                this._pixelRatio = e.getPixelRatio(),
                this._width = i.width,
                this._height = i.height,
                (t = new kt.WebGLRenderTarget(this._width * this._pixelRatio, this._height * this._pixelRatio, n)).texture.name = "EffectComposer.rt1"
            } else
                this._pixelRatio = 1, this._width = t.width, this._height = t.height;
            this.renderTarget1 = t,
            this.renderTarget2 = t.clone(),
            this.renderTarget2.texture.name = "EffectComposer.rt2",
            this.writeBuffer = this.renderTarget1,
            this.readBuffer = this.renderTarget2,
            this.renderToScreen = !0,
            this.passes = [],
            void 0 === on && console.error("THREE.EffectComposer relies on CopyShader"),
            void 0 === cn && console.error("THREE.EffectComposer relies on ShaderPass"),
            this.copyPass = new cn(on),
            this.clock = new kt.Clock
        };
        Object.assign(un.prototype, {
            swapBuffers: function () {
                var e = this.readBuffer;
                this.readBuffer = this.writeBuffer,
                this.writeBuffer = e
            },
            addPass: function (e) {
                this.passes.push(e),
                e.setSize(this._width * this._pixelRatio, this._height * this._pixelRatio)
            },
            insertPass: function (e, t) {
                this.passes.splice(t, 0, e),
                e.setSize(this._width * this._pixelRatio, this._height * this._pixelRatio)
            },
            isLastEnabledPass: function (e) {
                for (var t = e + 1; t < this.passes.length; t++)
                    if (this.passes[t].enabled)
                        return !1;
                return !0
            },
            render: function (e) {
                void 0 === e && (e = this.clock.getDelta());
                var t,
                n,
                i = this.renderer.getRenderTarget(),
                a = !1,
                r = this.passes.length;
                for (n = 0; n < r; n++)
                    if (!1 !== (t = this.passes[n]).enabled) {
                        if (t.renderToScreen = this.renderToScreen && this.isLastEnabledPass(n), t.render(this.renderer, this.writeBuffer, this.readBuffer, e, a), t.needsSwap) {
                            if (a) {
                                var o = this.renderer.getContext(),
                                s = this.renderer.state.buffers.stencil;
                                s.setFunc(o.NOTEQUAL, 1, 4294967295),
                                this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, e),
                                s.setFunc(o.EQUAL, 1, 4294967295)
                            }
                            this.swapBuffers()
                        }
                        void 0 !== ln && (t instanceof ln ? a = !0 : t instanceof hn && (a = !1))
                    }
                this.renderer.setRenderTarget(i)
            },
            reset: function (e) {
                if (void 0 === e) {
                    var t = this.renderer.getSize(new kt.Vector2);
                    this._pixelRatio = this.renderer.getPixelRatio(),
                    this._width = t.width,
                    this._height = t.height,
                    (e = this.renderTarget1.clone()).setSize(this._width * this._pixelRatio, this._height * this._pixelRatio)
                }
                this.renderTarget1.dispose(),
                this.renderTarget2.dispose(),
                this.renderTarget1 = e,
                this.renderTarget2 = e.clone(),
                this.writeBuffer = this.renderTarget1,
                this.readBuffer = this.renderTarget2
            },
            setSize: function (e, t) {
                this._width = e,
                this._height = t;
                var n = this._width * this._pixelRatio,
                i = this._height * this._pixelRatio;
                this.renderTarget1.setSize(n, i),
                this.renderTarget2.setSize(n, i);
                for (var a = 0; a < this.passes.length; a++)
                    this.passes[a].setSize(n, i)
            },
            setPixelRatio: function (e) {
                this._pixelRatio = e,
                this.setSize(this._width, this._height)
            }
        });
        var fn = function () {
            this.enabled = !0,
            this.needsSwap = !0,
            this.clear = !1,
            this.renderToScreen = !1
        };
        Object.assign(fn.prototype, {
            setSize: function () {},
            render: function () {
                console.error("THREE.Pass: .render() must be implemented in derived pass.")
            }
        }),
        fn.FullScreenQuad = function () {
            var e = new kt.OrthographicCamera(-1, 1, 1, -1, 0, 1),
            t = new kt.PlaneBufferGeometry(2, 2),
            n = function (e) {
                this._mesh = new kt.Mesh(t, e)
            };
            return Object.defineProperty(n.prototype, "material", {
                get: function () {
                    return this._mesh.material
                },
                set: function (e) {
                    this._mesh.material = e
                }
            }),
            Object.assign(n.prototype, {
                dispose: function () {
                    this._mesh.geometry.dispose()
                },
                render: function (t) {
                    t.render(this._mesh, e)
                }
            }),
            n
        }
        ();
        var dn = function (e, t, n, i, a) {
            sn.call(this),
            this.scene = e,
            this.camera = t,
            this.overrideMaterial = n,
            this.clearColor = i,
            this.clearAlpha = void 0 !== a ? a : 0,
            this.clear = !0,
            this.clearDepth = !1,
            this.needsSwap = !1
        };
        dn.prototype = Object.assign(Object.create(sn.prototype), {
            constructor: dn,
            render: function (e, t, n) {
                var i,
                a,
                r,
                o = e.autoClear;
                e.autoClear = !1,
                void 0 !== this.overrideMaterial && (r = this.scene.overrideMaterial, this.scene.overrideMaterial = this.overrideMaterial),
                this.clearColor && (i = e.getClearColor().getHex(), a = e.getClearAlpha(), e.setClearColor(this.clearColor, this.clearAlpha)),
                this.clearDepth && e.clearDepth(),
                e.setRenderTarget(this.renderToScreen ? null : n),
                this.clear && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
                e.render(this.scene, this.camera),
                this.clearColor && e.setClearColor(i, a),
                void 0 !== this.overrideMaterial && (this.scene.overrideMaterial = r),
                e.autoClear = o
            }
        });
        var pn = {
            shaderID: "luminosityHighPass",
            uniforms: {
                tDiffuse: {
                    value: null
                },
                luminosityThreshold: {
                    value: 1
                },
                smoothWidth: {
                    value: 1
                },
                defaultColor: {
                    value: new kt.Color(0)
                },
                defaultOpacity: {
                    value: 0
                }
            },
            vertexShader: ["varying vec2 vUv;", "void main() {", "\tvUv = uv;", "\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
            fragmentShader: ["uniform sampler2D tDiffuse;", "uniform vec3 defaultColor;", "uniform float defaultOpacity;", "uniform float luminosityThreshold;", "uniform float smoothWidth;", "varying vec2 vUv;", "void main() {", "\tvec4 texel = texture2D( tDiffuse, vUv );", "\tvec3 luma = vec3( 0.299, 0.587, 0.114 );", "\tfloat v = dot( texel.xyz, luma );", "\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );", "\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );", "\tgl_FragColor = mix( outputColor, texel, alpha );", "}"].join("\n")
        },
        mn = function (e, t, n, i) {
            sn.call(this),
            this.strength = void 0 !== t ? t : 1,
            this.radius = n,
            this.threshold = i,
            this.resolution = void 0 !== e ? new kt.Vector2(e.x, e.y) : new kt.Vector2(256, 256),
            this.clearColor = new kt.Color(0, 0, 0);
            var a = {
                minFilter: kt.LinearFilter,
                magFilter: kt.LinearFilter,
                format: kt.RGBAFormat
            };
            this.renderTargetsHorizontal = [],
            this.renderTargetsVertical = [],
            this.nMips = 5;
            var r = Math.round(this.resolution.x / 2),
            o = Math.round(this.resolution.y / 2);
            this.renderTargetBright = new kt.WebGLRenderTarget(r, o, a),
            this.renderTargetBright.texture.name = "UnrealBloomPass.bright",
            this.renderTargetBright.texture.generateMipmaps = !1;
            for (var s = 0; s < this.nMips; s++) {
                var c = new kt.WebGLRenderTarget(r, o, a);
                c.texture.name = "UnrealBloomPass.h" + s,
                c.texture.generateMipmaps = !1,
                this.renderTargetsHorizontal.push(c);
                var l = new kt.WebGLRenderTarget(r, o, a);
                l.texture.name = "UnrealBloomPass.v" + s,
                l.texture.generateMipmaps = !1,
                this.renderTargetsVertical.push(l),
                r = Math.round(r / 2),
                o = Math.round(o / 2)
            }
            void 0 === pn && console.error("UnrealBloomPass relies on LuminosityHighPassShader");
            var h = pn;
            this.highPassUniforms = kt.UniformsUtils.clone(h.uniforms),
            this.highPassUniforms.luminosityThreshold.value = i,
            this.highPassUniforms.smoothWidth.value = .01,
            this.materialHighPassFilter = new kt.ShaderMaterial({
                uniforms: this.highPassUniforms,
                vertexShader: h.vertexShader,
                fragmentShader: h.fragmentShader,
                defines: {}
            }),
            this.separableBlurMaterials = [];
            var u = [3, 5, 7, 9, 11];
            for (r = Math.round(this.resolution.x / 2), o = Math.round(this.resolution.y / 2), s = 0; s < this.nMips; s++)
                this.separableBlurMaterials.push(this.getSeperableBlurMaterial(u[s])), this.separableBlurMaterials[s].uniforms.texSize.value = new kt.Vector2(r, o), r = Math.round(r / 2), o = Math.round(o / 2);
            this.compositeMaterial = this.getCompositeMaterial(this.nMips),
            this.compositeMaterial.uniforms.blurTexture1.value = this.renderTargetsVertical[0].texture,
            this.compositeMaterial.uniforms.blurTexture2.value = this.renderTargetsVertical[1].texture,
            this.compositeMaterial.uniforms.blurTexture3.value = this.renderTargetsVertical[2].texture,
            this.compositeMaterial.uniforms.blurTexture4.value = this.renderTargetsVertical[3].texture,
            this.compositeMaterial.uniforms.blurTexture5.value = this.renderTargetsVertical[4].texture,
            this.compositeMaterial.uniforms.bloomStrength.value = t,
            this.compositeMaterial.uniforms.bloomRadius.value = .1,
            this.compositeMaterial.needsUpdate = !0,
            this.compositeMaterial.uniforms.bloomFactors.value = [1, .8, .6, .4, .2],
            this.bloomTintColors = [new kt.Vector3(1, 1, 1), new kt.Vector3(1, 1, 1), new kt.Vector3(1, 1, 1), new kt.Vector3(1, 1, 1), new kt.Vector3(1, 1, 1)],
            this.compositeMaterial.uniforms.bloomTintColors.value = this.bloomTintColors,
            void 0 === on && console.error("UnrealBloomPass relies on CopyShader");
            var f = on;
            this.copyUniforms = kt.UniformsUtils.clone(f.uniforms),
            this.copyUniforms.opacity.value = 1,
            this.materialCopy = new kt.ShaderMaterial({
                uniforms: this.copyUniforms,
                vertexShader: f.vertexShader,
                fragmentShader: f.fragmentShader,
                blending: kt.AdditiveBlending,
                depthTest: !1,
                depthWrite: !1,
                transparent: !0
            }),
            this.enabled = !0,
            this.needsSwap = !1,
            this.oldClearColor = new kt.Color,
            this.oldClearAlpha = 1,
            this.basic = new kt.MeshBasicMaterial,
            this.fsQuad = new sn.FullScreenQuad(null)
        };
        mn.prototype = Object.assign(Object.create(sn.prototype), {
            constructor: mn,
            dispose: function () {
                for (var e = 0; e < this.renderTargetsHorizontal.length; e++)
                    this.renderTargetsHorizontal[e].dispose();
                for (e = 0; e < this.renderTargetsVertical.length; e++)
                    this.renderTargetsVertical[e].dispose();
                this.renderTargetBright.dispose()
            },
            setSize: function (e, t) {
                var n = Math.round(e / 2),
                i = Math.round(t / 2);
                this.renderTargetBright.setSize(n, i);
                for (var a = 0; a < this.nMips; a++)
                    this.renderTargetsHorizontal[a].setSize(n, i), this.renderTargetsVertical[a].setSize(n, i), this.separableBlurMaterials[a].uniforms.texSize.value = new kt.Vector2(n, i), n = Math.round(n / 2), i = Math.round(i / 2)
            },
            render: function (e, t, n, i, a) {
                this.oldClearColor.copy(e.getClearColor()),
                this.oldClearAlpha = e.getClearAlpha();
                var r = e.autoClear;
                e.autoClear = !1,
                e.setClearColor(this.clearColor, 0),
                a && e.state.buffers.stencil.setTest(!1),
                this.renderToScreen && (this.fsQuad.material = this.basic, this.basic.map = n.texture, e.setRenderTarget(null), e.clear(), this.fsQuad.render(e)),
                this.highPassUniforms.tDiffuse.value = n.texture,
                this.highPassUniforms.luminosityThreshold.value = this.threshold,
                this.fsQuad.material = this.materialHighPassFilter,
                e.setRenderTarget(this.renderTargetBright),
                e.clear(),
                this.fsQuad.render(e);
                for (var o = this.renderTargetBright, s = 0; s < this.nMips; s++)
                    this.fsQuad.material = this.separableBlurMaterials[s], this.separableBlurMaterials[s].uniforms.colorTexture.value = o.texture, this.separableBlurMaterials[s].uniforms.direction.value = mn.BlurDirectionX, e.setRenderTarget(this.renderTargetsHorizontal[s]), e.clear(), this.fsQuad.render(e), this.separableBlurMaterials[s].uniforms.colorTexture.value = this.renderTargetsHorizontal[s].texture, this.separableBlurMaterials[s].uniforms.direction.value = mn.BlurDirectionY, e.setRenderTarget(this.renderTargetsVertical[s]), e.clear(), this.fsQuad.render(e), o = this.renderTargetsVertical[s];
                this.fsQuad.material = this.compositeMaterial,
                this.compositeMaterial.uniforms.bloomStrength.value = this.strength,
                this.compositeMaterial.uniforms.bloomRadius.value = this.radius,
                this.compositeMaterial.uniforms.bloomTintColors.value = this.bloomTintColors,
                e.setRenderTarget(this.renderTargetsHorizontal[0]),
                e.clear(),
                this.fsQuad.render(e),
                this.fsQuad.material = this.materialCopy,
                this.copyUniforms.tDiffuse.value = this.renderTargetsHorizontal[0].texture,
                a && e.state.buffers.stencil.setTest(!0),
                this.renderToScreen ? (e.setRenderTarget(null), this.fsQuad.render(e)) : (e.setRenderTarget(n), this.fsQuad.render(e)),
                e.setClearColor(this.oldClearColor, this.oldClearAlpha),
                e.autoClear = r
            },
            getSeperableBlurMaterial: function (e) {
                return new kt.ShaderMaterial({
                    defines: {
                        KERNEL_RADIUS: e,
                        SIGMA: e
                    },
                    uniforms: {
                        colorTexture: {
                            value: null
                        },
                        texSize: {
                            value: new kt.Vector2(.5, .5)
                        },
                        direction: {
                            value: new kt.Vector2(.5, .5)
                        }
                    },
                    vertexShader: "varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",
                    fragmentShader: "#include <common>\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat fSigma = float(SIGMA);\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\t\t\t\t\t\tfloat x = float(i);\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\t\t\t\t\t\tweightSum += 2.0 * w;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"
                })
            },
            getCompositeMaterial: function (e) {
                return new kt.ShaderMaterial({
                    defines: {
                        NUM_MIPS: e
                    },
                    uniforms: {
                        blurTexture1: {
                            value: null
                        },
                        blurTexture2: {
                            value: null
                        },
                        blurTexture3: {
                            value: null
                        },
                        blurTexture4: {
                            value: null
                        },
                        blurTexture5: {
                            value: null
                        },
                        dirtTexture: {
                            value: null
                        },
                        bloomStrength: {
                            value: 1
                        },
                        bloomFactors: {
                            value: null
                        },
                        bloomTintColors: {
                            value: null
                        },
                        bloomRadius: {
                            value: 0
                        }
                    },
                    vertexShader: "varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",
                    fragmentShader: "varying vec2 vUv;\t\t\t\tuniform sampler2D blurTexture1;\t\t\t\tuniform sampler2D blurTexture2;\t\t\t\tuniform sampler2D blurTexture3;\t\t\t\tuniform sampler2D blurTexture4;\t\t\t\tuniform sampler2D blurTexture5;\t\t\t\tuniform sampler2D dirtTexture;\t\t\t\tuniform float bloomStrength;\t\t\t\tuniform float bloomRadius;\t\t\t\tuniform float bloomFactors[NUM_MIPS];\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\t\t\t\t\t\t\t\tfloat lerpBloomFactor(const in float factor) { \t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\t\t\t\t}\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\t\t\t\t}"
                })
            }
        }),
        mn.BlurDirectionX = new kt.Vector2(1, 0),
        mn.BlurDirectionY = new kt.Vector2(0, 1);
        var vn = {
            uniforms: {
                tDiffuse: {
                    value: null
                },
                tDisp: {
                    value: null
                },
                byp: {
                    value: 0
                },
                amount: {
                    value: .08
                },
                angle: {
                    value: .02
                },
                seed: {
                    value: .02
                },
                seed_x: {
                    value: .02
                },
                seed_y: {
                    value: .02
                },
                distortion_x: {
                    value: .5
                },
                distortion_y: {
                    value: .6
                },
                col_s: {
                    value: .05
                }
            },
            vertexShader: ["varying vec2 vUv;", "void main() {", "\tvUv = uv;", "\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
            fragmentShader: ["uniform int byp;", "uniform sampler2D tDiffuse;", "uniform sampler2D tDisp;", "uniform float amount;", "uniform float angle;", "uniform float seed;", "uniform float seed_x;", "uniform float seed_y;", "uniform float distortion_x;", "uniform float distortion_y;", "uniform float col_s;", "varying vec2 vUv;", "float rand(vec2 co){", "\treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);", "}", "void main() {", "\tif(byp<1) {", "\t\tvec2 p = vUv;", "\t\tfloat xs = floor(gl_FragCoord.x / 0.5);", "\t\tfloat ys = floor(gl_FragCoord.y / 0.5);", "\t\tvec4 normal = texture2D (tDisp, p*seed*seed);", "\t\tif(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {", "\t\t\tif(seed_x>0.){", "\t\t\t\tp.y = 1. - (p.y + distortion_y);", "\t\t\t}", "\t\t\telse {", "\t\t\t\tp.y = distortion_y;", "\t\t\t}", "\t\t}", "\t\tif(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {", "\t\t\tif(seed_y>0.){", "\t\t\t\tp.x=distortion_x;", "\t\t\t}", "\t\t\telse {", "\t\t\t\tp.x = 1. - (p.x + distortion_x);", "\t\t\t}", "\t\t}", "\t\tp.x+=normal.x*seed_x*(seed/5.);", "\t\tp.y+=normal.y*seed_y*(seed/5.);", "\t\tvec2 offset = amount * vec2( cos(angle), sin(angle));", "\t\tvec4 cr = texture2D(tDiffuse, p + offset);", "\t\tvec4 cga = texture2D(tDiffuse, p);", "\t\tvec4 cb = texture2D(tDiffuse, p - offset);", "\t\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);", "\t\tvec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);", "\t\tgl_FragColor = gl_FragColor+ snow;", "\t}", "\telse {", "\t\tgl_FragColor=texture2D (tDiffuse, vUv);", "\t}", "}"].join("\n")
        },
        gn = function (e) {
            sn.call(this),
            void 0 === vn && console.error("GlitchPass relies on DigitalGlitch");
            var t = vn;
            this.uniforms = kt.UniformsUtils.clone(t.uniforms),
            null == e && (e = 64),
            this.uniforms.tDisp.value = this.generateHeightmap(e),
            this.material = new kt.ShaderMaterial({
                uniforms: this.uniforms,
                vertexShader: t.vertexShader,
                fragmentShader: t.fragmentShader
            }),
            this.fsQuad = new sn.FullScreenQuad(this.material),
            this.goWild = !1,
            this.curF = 0,
            this.generateTrigger()
        };
        gn.prototype = Object.assign(Object.create(sn.prototype), {
            constructor: gn,
            render: function (e, t, n) {
                this.uniforms.tDiffuse.value = n.texture,
                this.uniforms.seed.value = Math.random(),
                this.uniforms.byp.value = 0,
                this.curF % this.randX == 0 || 1 == this.goWild ? (this.uniforms.amount.value = Math.random() / 30, this.uniforms.angle.value = kt.MathUtils.randFloat(-Math.PI, Math.PI), this.uniforms.seed_x.value = kt.MathUtils.randFloat(-1, 1), this.uniforms.seed_y.value = kt.MathUtils.randFloat(-1, 1), this.uniforms.distortion_x.value = kt.MathUtils.randFloat(0, 1), this.uniforms.distortion_y.value = kt.MathUtils.randFloat(0, 1), this.curF = 0, this.generateTrigger(), this.curF++) : this.curF % this.randX < this.randX / 5 ? (this.uniforms.amount.value = Math.random() / 90, this.uniforms.angle.value = kt.MathUtils.randFloat(-Math.PI, Math.PI), this.uniforms.distortion_x.value = kt.MathUtils.randFloat(0, 1), this.uniforms.distortion_y.value = kt.MathUtils.randFloat(0, 1), this.uniforms.seed_x.value = kt.MathUtils.randFloat( - .3, .3), this.uniforms.seed_y.value = kt.MathUtils.randFloat( - .3, .3), this.curF++) : 0 == this.goWild && (this.uniforms.byp.value = 1, this.curF += .2),
                this.renderToScreen ? (e.setRenderTarget(null), this.fsQuad.render(e)) : (e.setRenderTarget(t), this.clear && e.clear(), this.fsQuad.render(e))
            },
            generateTrigger: function () {
                this.randX = kt.MathUtils.randInt(120, 240)
            },
            generateHeightmap: function (e) {
                for (var t = new Float32Array(e * e * 3), n = e * e, i = 0; i < n; i++) {
                    var a = kt.MathUtils.randFloat(0, 1);
                    t[3 * i + 0] = a,
                    t[3 * i + 1] = a,
                    t[3 * i + 2] = a
                }
                return new kt.DataTexture(t, e, e, kt.RGBFormat, kt.FloatType)
            }
        });
        var xn = {
            uniforms: {
                damp: {
                    value: .96
                },
                tOld: {
                    value: null
                },
                tNew: {
                    value: null
                }
            },
            vertexShader: ["varying vec2 vUv;", "void main() {", "\tvUv = uv;", "\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
            fragmentShader: ["uniform float damp;", "uniform sampler2D tOld;", "uniform sampler2D tNew;", "varying vec2 vUv;", "vec4 when_gt( vec4 x, float y ) {", "\treturn max( sign( x - y ), 0.0 );", "}", "void main() {", "\tvec4 texelOld = texture2D( tOld, vUv );", "\tvec4 texelNew = texture2D( tNew, vUv );", "\ttexelOld *= damp * when_gt( texelOld, 0.1 );", "\tgl_FragColor = max(texelNew, texelOld);", "}"].join("\n")
        },
        yn = function (e) {
            sn.call(this),
            void 0 === xn && console.error("AfterimagePass relies on AfterimageShader"),
            this.shader = xn,
            this.uniforms = kt.UniformsUtils.clone(this.shader.uniforms),
            this.uniforms.damp.value = void 0 !== e ? e : .96,
            this.textureComp = new kt.WebGLRenderTarget(window.innerWidth, window.innerHeight, {
                minFilter: kt.LinearFilter,
                magFilter: kt.NearestFilter,
                format: kt.RGBAFormat
            }),
            this.textureOld = new kt.WebGLRenderTarget(window.innerWidth, window.innerHeight, {
                minFilter: kt.LinearFilter,
                magFilter: kt.NearestFilter,
                format: kt.RGBAFormat
            }),
            this.shaderMaterial = new kt.ShaderMaterial({
                uniforms: this.uniforms,
                vertexShader: this.shader.vertexShader,
                fragmentShader: this.shader.fragmentShader
            }),
            this.compFsQuad = new sn.FullScreenQuad(this.shaderMaterial);
            var t = new kt.MeshBasicMaterial;
            this.copyFsQuad = new sn.FullScreenQuad(t)
        };
        yn.prototype = Object.assign(Object.create(sn.prototype), {
            constructor: yn,
            render: function (e, t, n) {
                this.uniforms.tOld.value = this.textureOld.texture,
                this.uniforms.tNew.value = n.texture,
                e.setRenderTarget(this.textureComp),
                this.compFsQuad.render(e),
                this.copyFsQuad.material.map = this.textureComp.texture,
                this.renderToScreen ? (e.setRenderTarget(null), this.copyFsQuad.render(e)) : (e.setRenderTarget(t), this.clear && e.clear(), this.copyFsQuad.render(e));
                var i = this.textureOld;
                this.textureOld = this.textureComp,
                this.textureComp = i
            },
            setSize: function (e, t) {
                this.textureComp.setSize(e, t),
                this.textureOld.setSize(e, t)
            }
        });
        var bn = {
            uniforms: {
                tDiffuse: {
                    value: null
                },
                resolution: {
                    value: new kt.Vector2(1 / 1024, 1 / 512)
                }
            },
            vertexShader: ["varying vec2 vUv;", "void main() {", "\tvUv = uv;", "\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
            fragmentShader: ["precision highp float;", "", "uniform sampler2D tDiffuse;", "", "uniform vec2 resolution;", "", "varying vec2 vUv;", "", "// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)", "", "//----------------------------------------------------------------------------------", "// File:        es3-keplerFXAAassetsshaders/FXAA_DefaultES.frag", "// SDK Version: v3.00", "// Email:       gameworks@nvidia.com", "// Site:        http://developer.nvidia.com/", "//", "// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.", "//", "// Redistribution and use in source and binary forms, with or without", "// modification, are permitted provided that the following conditions", "// are met:", "//  * Redistributions of source code must retain the above copyright", "//    notice, this list of conditions and the following disclaimer.", "//  * Redistributions in binary form must reproduce the above copyright", "//    notice, this list of conditions and the following disclaimer in the", "//    documentation and/or other materials provided with the distribution.", "//  * Neither the name of NVIDIA CORPORATION nor the names of its", "//    contributors may be used to endorse or promote products derived", "//    from this software without specific prior written permission.", "//", "// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY", "// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE", "// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR", "// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR", "// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,", "// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,", "// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR", "// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY", "// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT", "// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE", "// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", "//", "//----------------------------------------------------------------------------------", "", "#define FXAA_PC 1", "#define FXAA_GLSL_100 1", "#define FXAA_QUALITY_PRESET 12", "", "#define FXAA_GREEN_AS_LUMA 1", "", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_PC_CONSOLE", "    //", "    // The console algorithm for PC is included", "    // for developers targeting really low spec machines.", "    // Likely better to just run FXAA_PC, and use a really low preset.", "    //", "    #define FXAA_PC_CONSOLE 0", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_GLSL_120", "    #define FXAA_GLSL_120 0", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_GLSL_130", "    #define FXAA_GLSL_130 0", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_HLSL_3", "    #define FXAA_HLSL_3 0", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_HLSL_4", "    #define FXAA_HLSL_4 0", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_HLSL_5", "    #define FXAA_HLSL_5 0", "#endif", "/*==========================================================================*/", "#ifndef FXAA_GREEN_AS_LUMA", "    //", "    // For those using non-linear color,", "    // and either not able to get luma in alpha, or not wanting to,", "    // this enables FXAA to run using green as a proxy for luma.", "    // So with this enabled, no need to pack luma in alpha.", "    //", "    // This will turn off AA on anything which lacks some amount of green.", "    // Pure red and blue or combination of only R and B, will get no AA.", "    //", "    // Might want to lower the settings for both,", "    //    fxaaConsoleEdgeThresholdMin", "    //    fxaaQualityEdgeThresholdMin", "    // In order to insure AA does not get turned off on colors", "    // which contain a minor amount of green.", "    //", "    // 1 = On.", "    // 0 = Off.", "    //", "    #define FXAA_GREEN_AS_LUMA 0", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_EARLY_EXIT", "    //", "    // Controls algorithm's early exit path.", "    // On PS3 turning this ON adds 2 cycles to the shader.", "    // On 360 turning this OFF adds 10ths of a millisecond to the shader.", "    // Turning this off on console will result in a more blurry image.", "    // So this defaults to on.", "    //", "    // 1 = On.", "    // 0 = Off.", "    //", "    #define FXAA_EARLY_EXIT 1", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_DISCARD", "    //", "    // Only valid for PC OpenGL currently.", "    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.", "    //", "    // 1 = Use discard on pixels which don't need AA.", "    //     For APIs which enable concurrent TEX+ROP from same surface.", "    // 0 = Return unchanged color on pixels which don't need AA.", "    //", "    #define FXAA_DISCARD 0", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_FAST_PIXEL_OFFSET", "    //", "    // Used for GLSL 120 only.", "    //", "    // 1 = GL API supports fast pixel offsets", "    // 0 = do not use fast pixel offsets", "    //", "    #ifdef GL_EXT_gpu_shader4", "        #define FXAA_FAST_PIXEL_OFFSET 1", "    #endif", "    #ifdef GL_NV_gpu_shader5", "        #define FXAA_FAST_PIXEL_OFFSET 1", "    #endif", "    #ifdef GL_ARB_gpu_shader5", "        #define FXAA_FAST_PIXEL_OFFSET 1", "    #endif", "    #ifndef FXAA_FAST_PIXEL_OFFSET", "        #define FXAA_FAST_PIXEL_OFFSET 0", "    #endif", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_GATHER4_ALPHA", "    //", "    // 1 = API supports gather4 on alpha channel.", "    // 0 = API does not support gather4 on alpha channel.", "    //", "    #if (FXAA_HLSL_5 == 1)", "        #define FXAA_GATHER4_ALPHA 1", "    #endif", "    #ifdef GL_ARB_gpu_shader5", "        #define FXAA_GATHER4_ALPHA 1", "    #endif", "    #ifdef GL_NV_gpu_shader5", "        #define FXAA_GATHER4_ALPHA 1", "    #endif", "    #ifndef FXAA_GATHER4_ALPHA", "        #define FXAA_GATHER4_ALPHA 0", "    #endif", "#endif", "", "", "/*============================================================================", "                        FXAA QUALITY - TUNING KNOBS", "------------------------------------------------------------------------------", "NOTE the other tuning knobs are now in the shader function inputs!", "============================================================================*/", "#ifndef FXAA_QUALITY_PRESET", "    //", "    // Choose the quality preset.", "    // This needs to be compiled into the shader as it effects code.", "    // Best option to include multiple presets is to", "    // in each shader define the preset, then include this file.", "    //", "    // OPTIONS", "    // -----------------------------------------------------------------------", "    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)", "    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)", "    // 39       - no dither, very expensive", "    //", "    // NOTES", "    // -----------------------------------------------------------------------", "    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)", "    // 13 = about same speed as FXAA 3.9 and better than 12", "    // 23 = closest to FXAA 3.9 visually and performance wise", "    //  _ = the lowest digit is directly related to performance", "    // _  = the highest digit is directly related to style", "    //", "    #define FXAA_QUALITY_PRESET 12", "#endif", "", "", "/*============================================================================", "", "                           FXAA QUALITY - PRESETS", "", "============================================================================*/", "", "/*============================================================================", "                     FXAA QUALITY - MEDIUM DITHER PRESETS", "============================================================================*/", "#if (FXAA_QUALITY_PRESET == 10)", "    #define FXAA_QUALITY_PS 3", "    #define FXAA_QUALITY_P0 1.5", "    #define FXAA_QUALITY_P1 3.0", "    #define FXAA_QUALITY_P2 12.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 11)", "    #define FXAA_QUALITY_PS 4", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 3.0", "    #define FXAA_QUALITY_P3 12.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 12)", "    #define FXAA_QUALITY_PS 5", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 4.0", "    #define FXAA_QUALITY_P4 12.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 13)", "    #define FXAA_QUALITY_PS 6", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 4.0", "    #define FXAA_QUALITY_P5 12.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 14)", "    #define FXAA_QUALITY_PS 7", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 4.0", "    #define FXAA_QUALITY_P6 12.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 15)", "    #define FXAA_QUALITY_PS 8", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 2.0", "    #define FXAA_QUALITY_P6 4.0", "    #define FXAA_QUALITY_P7 12.0", "#endif", "", "/*============================================================================", "                     FXAA QUALITY - LOW DITHER PRESETS", "============================================================================*/", "#if (FXAA_QUALITY_PRESET == 20)", "    #define FXAA_QUALITY_PS 3", "    #define FXAA_QUALITY_P0 1.5", "    #define FXAA_QUALITY_P1 2.0", "    #define FXAA_QUALITY_P2 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 21)", "    #define FXAA_QUALITY_PS 4", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 22)", "    #define FXAA_QUALITY_PS 5", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 23)", "    #define FXAA_QUALITY_PS 6", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 24)", "    #define FXAA_QUALITY_PS 7", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 3.0", "    #define FXAA_QUALITY_P6 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 25)", "    #define FXAA_QUALITY_PS 8", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 2.0", "    #define FXAA_QUALITY_P6 4.0", "    #define FXAA_QUALITY_P7 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 26)", "    #define FXAA_QUALITY_PS 9", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 2.0", "    #define FXAA_QUALITY_P6 2.0", "    #define FXAA_QUALITY_P7 4.0", "    #define FXAA_QUALITY_P8 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 27)", "    #define FXAA_QUALITY_PS 10", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 2.0", "    #define FXAA_QUALITY_P6 2.0", "    #define FXAA_QUALITY_P7 2.0", "    #define FXAA_QUALITY_P8 4.0", "    #define FXAA_QUALITY_P9 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 28)", "    #define FXAA_QUALITY_PS 11", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 2.0", "    #define FXAA_QUALITY_P6 2.0", "    #define FXAA_QUALITY_P7 2.0", "    #define FXAA_QUALITY_P8 2.0", "    #define FXAA_QUALITY_P9 4.0", "    #define FXAA_QUALITY_P10 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 29)", "    #define FXAA_QUALITY_PS 12", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 2.0", "    #define FXAA_QUALITY_P6 2.0", "    #define FXAA_QUALITY_P7 2.0", "    #define FXAA_QUALITY_P8 2.0", "    #define FXAA_QUALITY_P9 2.0", "    #define FXAA_QUALITY_P10 4.0", "    #define FXAA_QUALITY_P11 8.0", "#endif", "", "/*============================================================================", "                     FXAA QUALITY - EXTREME QUALITY", "============================================================================*/", "#if (FXAA_QUALITY_PRESET == 39)", "    #define FXAA_QUALITY_PS 12", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.0", "    #define FXAA_QUALITY_P2 1.0", "    #define FXAA_QUALITY_P3 1.0", "    #define FXAA_QUALITY_P4 1.0", "    #define FXAA_QUALITY_P5 1.5", "    #define FXAA_QUALITY_P6 2.0", "    #define FXAA_QUALITY_P7 2.0", "    #define FXAA_QUALITY_P8 2.0", "    #define FXAA_QUALITY_P9 2.0", "    #define FXAA_QUALITY_P10 4.0", "    #define FXAA_QUALITY_P11 8.0", "#endif", "", "", "", "/*============================================================================", "", "                                API PORTING", "", "============================================================================*/", "#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)", "    #define FxaaBool bool", "    #define FxaaDiscard discard", "    #define FxaaFloat float", "    #define FxaaFloat2 vec2", "    #define FxaaFloat3 vec3", "    #define FxaaFloat4 vec4", "    #define FxaaHalf float", "    #define FxaaHalf2 vec2", "    #define FxaaHalf3 vec3", "    #define FxaaHalf4 vec4", "    #define FxaaInt2 ivec2", "    #define FxaaSat(x) clamp(x, 0.0, 1.0)", "    #define FxaaTex sampler2D", "#else", "    #define FxaaBool bool", "    #define FxaaDiscard clip(-1)", "    #define FxaaFloat float", "    #define FxaaFloat2 float2", "    #define FxaaFloat3 float3", "    #define FxaaFloat4 float4", "    #define FxaaHalf half", "    #define FxaaHalf2 half2", "    #define FxaaHalf3 half3", "    #define FxaaHalf4 half4", "    #define FxaaSat(x) saturate(x)", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_GLSL_100 == 1)", "  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)", "  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_GLSL_120 == 1)", "    // Requires,", "    //  #version 120", "    // And at least,", "    //  #extension GL_EXT_gpu_shader4 : enable", "    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)", "    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)", "    #if (FXAA_FAST_PIXEL_OFFSET == 1)", "        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)", "    #else", "        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)", "    #endif", "    #if (FXAA_GATHER4_ALPHA == 1)", "        // use #extension GL_ARB_gpu_shader5 : enable", "        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)", "        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)", "        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)", "        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)", "    #endif", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_GLSL_130 == 1)", '    // Requires "#version 130" or better', "    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)", "    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)", "    #if (FXAA_GATHER4_ALPHA == 1)", "        // use #extension GL_ARB_gpu_shader5 : enable", "        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)", "        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)", "        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)", "        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)", "    #endif", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_HLSL_3 == 1)", "    #define FxaaInt2 float2", "    #define FxaaTex sampler2D", "    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))", "    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_HLSL_4 == 1)", "    #define FxaaInt2 int2", "    struct FxaaTex { SamplerState smpl; Texture2D tex; };", "    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)", "    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_HLSL_5 == 1)", "    #define FxaaInt2 int2", "    struct FxaaTex { SamplerState smpl; Texture2D tex; };", "    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)", "    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)", "    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)", "    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)", "    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)", "    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)", "#endif", "", "", "/*============================================================================", "                   GREEN AS LUMA OPTION SUPPORT FUNCTION", "============================================================================*/", "#if (FXAA_GREEN_AS_LUMA == 0)", "    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }", "#else", "    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }", "#endif", "", "", "", "", "/*============================================================================", "", "                             FXAA3 QUALITY - PC", "", "============================================================================*/", "#if (FXAA_PC == 1)", "/*--------------------------------------------------------------------------*/", "FxaaFloat4 FxaaPixelShader(", "    //", "    // Use noperspective interpolation here (turn off perspective interpolation).", "    // {xy} = center of pixel", "    FxaaFloat2 pos,", "    //", "    // Used only for FXAA Console, and not used on the 360 version.", "    // Use noperspective interpolation here (turn off perspective interpolation).", "    // {xy_} = upper left of pixel", "    // {_zw} = lower right of pixel", "    FxaaFloat4 fxaaConsolePosPos,", "    //", "    // Input color texture.", "    // {rgb_} = color in linear or perceptual color space", "    // if (FXAA_GREEN_AS_LUMA == 0)", "    //     {__a} = luma in perceptual color space (not linear)", "    FxaaTex tex,", "    //", "    // Only used on the optimized 360 version of FXAA Console.", '    // For everything but 360, just use the same input here as for "tex".', "    // For 360, same texture, just alias with a 2nd sampler.", "    // This sampler needs to have an exponent bias of -1.", "    FxaaTex fxaaConsole360TexExpBiasNegOne,", "    //", "    // Only used on the optimized 360 version of FXAA Console.", '    // For everything but 360, just use the same input here as for "tex".', "    // For 360, same texture, just alias with a 3nd sampler.", "    // This sampler needs to have an exponent bias of -2.", "    FxaaTex fxaaConsole360TexExpBiasNegTwo,", "    //", "    // Only used on FXAA Quality.", "    // This must be from a constant/uniform.", "    // {x_} = 1.0/screenWidthInPixels", "    // {_y} = 1.0/screenHeightInPixels", "    FxaaFloat2 fxaaQualityRcpFrame,", "    //", "    // Only used on FXAA Console.", "    // This must be from a constant/uniform.", "    // This effects sub-pixel AA quality and inversely sharpness.", "    //   Where N ranges between,", "    //     N = 0.50 (default)", "    //     N = 0.33 (sharper)", "    // {x__} = -N/screenWidthInPixels", "    // {_y_} = -N/screenHeightInPixels", "    // {_z_} =  N/screenWidthInPixels", "    // {__w} =  N/screenHeightInPixels", "    FxaaFloat4 fxaaConsoleRcpFrameOpt,", "    //", "    // Only used on FXAA Console.", "    // Not used on 360, but used on PS3 and PC.", "    // This must be from a constant/uniform.", "    // {x__} = -2.0/screenWidthInPixels", "    // {_y_} = -2.0/screenHeightInPixels", "    // {_z_} =  2.0/screenWidthInPixels", "    // {__w} =  2.0/screenHeightInPixels", "    FxaaFloat4 fxaaConsoleRcpFrameOpt2,", "    //", "    // Only used on FXAA Console.", "    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.", "    // This must be from a constant/uniform.", "    // {x__} =  8.0/screenWidthInPixels", "    // {_y_} =  8.0/screenHeightInPixels", "    // {_z_} = -4.0/screenWidthInPixels", "    // {__w} = -4.0/screenHeightInPixels", "    FxaaFloat4 fxaaConsole360RcpFrameOpt2,", "    //", "    // Only used on FXAA Quality.", "    // This used to be the FXAA_QUALITY_SUBPIX define.", "    // It is here now to allow easier tuning.", "    // Choose the amount of sub-pixel aliasing removal.", "    // This can effect sharpness.", "    //   1.00 - upper limit (softer)", "    //   0.75 - default amount of filtering", "    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)", "    //   0.25 - almost off", "    //   0.00 - completely off", "    FxaaFloat fxaaQualitySubpix,", "    //", "    // Only used on FXAA Quality.", "    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.", "    // It is here now to allow easier tuning.", "    // The minimum amount of local contrast required to apply algorithm.", "    //   0.333 - too little (faster)", "    //   0.250 - low quality", "    //   0.166 - default", "    //   0.125 - high quality", "    //   0.063 - overkill (slower)", "    FxaaFloat fxaaQualityEdgeThreshold,", "    //", "    // Only used on FXAA Quality.", "    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.", "    // It is here now to allow easier tuning.", "    // Trims the algorithm from processing darks.", "    //   0.0833 - upper limit (default, the start of visible unfiltered edges)", "    //   0.0625 - high quality (faster)", "    //   0.0312 - visible limit (slower)", "    // Special notes when using FXAA_GREEN_AS_LUMA,", "    //   Likely want to set this to zero.", "    //   As colors that are mostly not-green", "    //   will appear very dark in the green channel!", "    //   Tune by looking at mostly non-green content,", "    //   then start at zero and increase until aliasing is a problem.", "    FxaaFloat fxaaQualityEdgeThresholdMin,", "    //", "    // Only used on FXAA Console.", "    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.", "    // It is here now to allow easier tuning.", "    // This does not effect PS3, as this needs to be compiled in.", "    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.", "    //   Due to the PS3 being ALU bound,", "    //   there are only three safe values here: 2 and 4 and 8.", "    //   These options use the shaders ability to a free *|/ by 2|4|8.", "    // For all other platforms can be a non-power of two.", "    //   8.0 is sharper (default!!!)", "    //   4.0 is softer", "    //   2.0 is really soft (good only for vector graphics inputs)", "    FxaaFloat fxaaConsoleEdgeSharpness,", "    //", "    // Only used on FXAA Console.", "    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.", "    // It is here now to allow easier tuning.", "    // This does not effect PS3, as this needs to be compiled in.", "    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.", "    //   Due to the PS3 being ALU bound,", "    //   there are only two safe values here: 1/4 and 1/8.", "    //   These options use the shaders ability to a free *|/ by 2|4|8.", "    // The console setting has a different mapping than the quality setting.", "    // Other platforms can use other values.", "    //   0.125 leaves less aliasing, but is softer (default!!!)", "    //   0.25 leaves more aliasing, and is sharper", "    FxaaFloat fxaaConsoleEdgeThreshold,", "    //", "    // Only used on FXAA Console.", "    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.", "    // It is here now to allow easier tuning.", "    // Trims the algorithm from processing darks.", "    // The console setting has a different mapping than the quality setting.", "    // This only applies when FXAA_EARLY_EXIT is 1.", "    // This does not apply to PS3,", "    // PS3 was simplified to avoid more shader instructions.", "    //   0.06 - faster but more aliasing in darks", "    //   0.05 - default", "    //   0.04 - slower and less aliasing in darks", "    // Special notes when using FXAA_GREEN_AS_LUMA,", "    //   Likely want to set this to zero.", "    //   As colors that are mostly not-green", "    //   will appear very dark in the green channel!", "    //   Tune by looking at mostly non-green content,", "    //   then start at zero and increase until aliasing is a problem.", "    FxaaFloat fxaaConsoleEdgeThresholdMin,", "    //", "    // Extra constants for 360 FXAA Console only.", "    // Use zeros or anything else for other platforms.", "    // These must be in physical constant registers and NOT immediates.", "    // Immediates will result in compiler un-optimizing.", "    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)", "    FxaaFloat4 fxaaConsole360ConstDir", ") {", "/*--------------------------------------------------------------------------*/", "    FxaaFloat2 posM;", "    posM.x = pos.x;", "    posM.y = pos.y;", "    #if (FXAA_GATHER4_ALPHA == 1)", "        #if (FXAA_DISCARD == 0)", "            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);", "            #if (FXAA_GREEN_AS_LUMA == 0)", "                #define lumaM rgbyM.w", "            #else", "                #define lumaM rgbyM.y", "            #endif", "        #endif", "        #if (FXAA_GREEN_AS_LUMA == 0)", "            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);", "            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));", "        #else", "            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);", "            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));", "        #endif", "        #if (FXAA_DISCARD == 1)", "            #define lumaM luma4A.w", "        #endif", "        #define lumaE luma4A.z", "        #define lumaS luma4A.x", "        #define lumaSE luma4A.y", "        #define lumaNW luma4B.w", "        #define lumaN luma4B.z", "        #define lumaW luma4B.x", "    #else", "        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);", "        #if (FXAA_GREEN_AS_LUMA == 0)", "            #define lumaM rgbyM.w", "        #else", "            #define lumaM rgbyM.y", "        #endif", "        #if (FXAA_GLSL_100 == 1)", "          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));", "        #else", "          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));", "        #endif", "    #endif", "/*--------------------------------------------------------------------------*/", "    FxaaFloat maxSM = max(lumaS, lumaM);", "    FxaaFloat minSM = min(lumaS, lumaM);", "    FxaaFloat maxESM = max(lumaE, maxSM);", "    FxaaFloat minESM = min(lumaE, minSM);", "    FxaaFloat maxWN = max(lumaN, lumaW);", "    FxaaFloat minWN = min(lumaN, lumaW);", "    FxaaFloat rangeMax = max(maxWN, maxESM);", "    FxaaFloat rangeMin = min(minWN, minESM);", "    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;", "    FxaaFloat range = rangeMax - rangeMin;", "    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);", "    FxaaBool earlyExit = range < rangeMaxClamped;", "/*--------------------------------------------------------------------------*/", "    if(earlyExit)", "        #if (FXAA_DISCARD == 1)", "            FxaaDiscard;", "        #else", "            return rgbyM;", "        #endif", "/*--------------------------------------------------------------------------*/", "    #if (FXAA_GATHER4_ALPHA == 0)", "        #if (FXAA_GLSL_100 == 1)", "          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));", "        #else", "          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));", "        #endif", "    #else", "        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));", "        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));", "    #endif", "/*--------------------------------------------------------------------------*/", "    FxaaFloat lumaNS = lumaN + lumaS;", "    FxaaFloat lumaWE = lumaW + lumaE;", "    FxaaFloat subpixRcpRange = 1.0/range;", "    FxaaFloat subpixNSWE = lumaNS + lumaWE;", "    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;", "    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;", "/*--------------------------------------------------------------------------*/", "    FxaaFloat lumaNESE = lumaNE + lumaSE;", "    FxaaFloat lumaNWNE = lumaNW + lumaNE;", "    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;", "    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;", "/*--------------------------------------------------------------------------*/", "    FxaaFloat lumaNWSW = lumaNW + lumaSW;", "    FxaaFloat lumaSWSE = lumaSW + lumaSE;", "    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);", "    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);", "    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;", "    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;", "    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;", "    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;", "/*--------------------------------------------------------------------------*/", "    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;", "    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;", "    FxaaBool horzSpan = edgeHorz >= edgeVert;", "    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;", "/*--------------------------------------------------------------------------*/", "    if(!horzSpan) lumaN = lumaW;", "    if(!horzSpan) lumaS = lumaE;", "    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;", "    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;", "/*--------------------------------------------------------------------------*/", "    FxaaFloat gradientN = lumaN - lumaM;", "    FxaaFloat gradientS = lumaS - lumaM;", "    FxaaFloat lumaNN = lumaN + lumaM;", "    FxaaFloat lumaSS = lumaS + lumaM;", "    FxaaBool pairN = abs(gradientN) >= abs(gradientS);", "    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));", "    if(pairN) lengthSign = -lengthSign;", "    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);", "/*--------------------------------------------------------------------------*/", "    FxaaFloat2 posB;", "    posB.x = posM.x;", "    posB.y = posM.y;", "    FxaaFloat2 offNP;", "    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;", "    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;", "    if(!horzSpan) posB.x += lengthSign * 0.5;", "    if( horzSpan) posB.y += lengthSign * 0.5;", "/*--------------------------------------------------------------------------*/", "    FxaaFloat2 posN;", "    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;", "    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;", "    FxaaFloat2 posP;", "    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;", "    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;", "    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;", "    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));", "    FxaaFloat subpixE = subpixC * subpixC;", "    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));", "/*--------------------------------------------------------------------------*/", "    if(!pairN) lumaNN = lumaSS;", "    FxaaFloat gradientScaled = gradient * 1.0/4.0;", "    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;", "    FxaaFloat subpixF = subpixD * subpixE;", "    FxaaBool lumaMLTZero = lumaMM < 0.0;", "/*--------------------------------------------------------------------------*/", "    lumaEndN -= lumaNN * 0.5;", "    lumaEndP -= lumaNN * 0.5;", "    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;", "    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;", "    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;", "    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;", "    FxaaBool doneNP = (!doneN) || (!doneP);", "    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;", "    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;", "/*--------------------------------------------------------------------------*/", "    if(doneNP) {", "        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "        doneN = abs(lumaEndN) >= gradientScaled;", "        doneP = abs(lumaEndP) >= gradientScaled;", "        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;", "        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;", "        doneNP = (!doneN) || (!doneP);", "        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;", "        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;", "/*--------------------------------------------------------------------------*/", "        #if (FXAA_QUALITY_PS > 3)", "        if(doneNP) {", "            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "            doneN = abs(lumaEndN) >= gradientScaled;", "            doneP = abs(lumaEndP) >= gradientScaled;", "            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;", "            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;", "            doneNP = (!doneN) || (!doneP);", "            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;", "            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;", "/*--------------------------------------------------------------------------*/", "            #if (FXAA_QUALITY_PS > 4)", "            if(doneNP) {", "                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "                doneN = abs(lumaEndN) >= gradientScaled;", "                doneP = abs(lumaEndP) >= gradientScaled;", "                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;", "                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;", "                doneNP = (!doneN) || (!doneP);", "                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;", "                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;", "/*--------------------------------------------------------------------------*/", "                #if (FXAA_QUALITY_PS > 5)", "                if(doneNP) {", "                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "                    doneN = abs(lumaEndN) >= gradientScaled;", "                    doneP = abs(lumaEndP) >= gradientScaled;", "                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;", "                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;", "                    doneNP = (!doneN) || (!doneP);", "                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;", "                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;", "/*--------------------------------------------------------------------------*/", "                    #if (FXAA_QUALITY_PS > 6)", "                    if(doneNP) {", "                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "                        doneN = abs(lumaEndN) >= gradientScaled;", "                        doneP = abs(lumaEndP) >= gradientScaled;", "                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;", "                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;", "                        doneNP = (!doneN) || (!doneP);", "                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;", "                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;", "/*--------------------------------------------------------------------------*/", "                        #if (FXAA_QUALITY_PS > 7)", "                        if(doneNP) {", "                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "                            doneN = abs(lumaEndN) >= gradientScaled;", "                            doneP = abs(lumaEndP) >= gradientScaled;", "                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;", "                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;", "                            doneNP = (!doneN) || (!doneP);", "                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;", "                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;", "/*--------------------------------------------------------------------------*/", "    #if (FXAA_QUALITY_PS > 8)", "    if(doneNP) {", "        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "        doneN = abs(lumaEndN) >= gradientScaled;", "        doneP = abs(lumaEndP) >= gradientScaled;", "        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;", "        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;", "        doneNP = (!doneN) || (!doneP);", "        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;", "        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;", "/*--------------------------------------------------------------------------*/", "        #if (FXAA_QUALITY_PS > 9)", "        if(doneNP) {", "            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "            doneN = abs(lumaEndN) >= gradientScaled;", "            doneP = abs(lumaEndP) >= gradientScaled;", "            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;", "            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;", "            doneNP = (!doneN) || (!doneP);", "            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;", "            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;", "/*--------------------------------------------------------------------------*/", "            #if (FXAA_QUALITY_PS > 10)", "            if(doneNP) {", "                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "                doneN = abs(lumaEndN) >= gradientScaled;", "                doneP = abs(lumaEndP) >= gradientScaled;", "                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;", "                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;", "                doneNP = (!doneN) || (!doneP);", "                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;", "                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;", "/*--------------------------------------------------------------------------*/", "                #if (FXAA_QUALITY_PS > 11)", "                if(doneNP) {", "                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "                    doneN = abs(lumaEndN) >= gradientScaled;", "                    doneP = abs(lumaEndP) >= gradientScaled;", "                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;", "                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;", "                    doneNP = (!doneN) || (!doneP);", "                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;", "                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;", "/*--------------------------------------------------------------------------*/", "                    #if (FXAA_QUALITY_PS > 12)", "                    if(doneNP) {", "                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "                        doneN = abs(lumaEndN) >= gradientScaled;", "                        doneP = abs(lumaEndP) >= gradientScaled;", "                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;", "                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;", "                        doneNP = (!doneN) || (!doneP);", "                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;", "                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;", "/*--------------------------------------------------------------------------*/", "                    }", "                    #endif", "/*--------------------------------------------------------------------------*/", "                }", "                #endif", "/*--------------------------------------------------------------------------*/", "            }", "            #endif", "/*--------------------------------------------------------------------------*/", "        }", "        #endif", "/*--------------------------------------------------------------------------*/", "    }", "    #endif", "/*--------------------------------------------------------------------------*/", "                        }", "                        #endif", "/*--------------------------------------------------------------------------*/", "                    }", "                    #endif", "/*--------------------------------------------------------------------------*/", "                }", "                #endif", "/*--------------------------------------------------------------------------*/", "            }", "            #endif", "/*--------------------------------------------------------------------------*/", "        }", "        #endif", "/*--------------------------------------------------------------------------*/", "    }", "/*--------------------------------------------------------------------------*/", "    FxaaFloat dstN = posM.x - posN.x;", "    FxaaFloat dstP = posP.x - posM.x;", "    if(!horzSpan) dstN = posM.y - posN.y;", "    if(!horzSpan) dstP = posP.y - posM.y;", "/*--------------------------------------------------------------------------*/", "    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;", "    FxaaFloat spanLength = (dstP + dstN);", "    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;", "    FxaaFloat spanLengthRcp = 1.0/spanLength;", "/*--------------------------------------------------------------------------*/", "    FxaaBool directionN = dstN < dstP;", "    FxaaFloat dst = min(dstN, dstP);", "    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;", "    FxaaFloat subpixG = subpixF * subpixF;", "    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;", "    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;", "/*--------------------------------------------------------------------------*/", "    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;", "    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);", "    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;", "    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;", "    #if (FXAA_DISCARD == 1)", "        return FxaaTexTop(tex, posM);", "    #else", "        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);", "    #endif", "}", "/*==========================================================================*/", "#endif", "", "void main() {", "  gl_FragColor = FxaaPixelShader(", "    vUv,", "    vec4(0.0),", "    tDiffuse,", "    tDiffuse,", "    tDiffuse,", "    resolution,", "    vec4(0.0),", "    vec4(0.0),", "    vec4(0.0),", "    0.75,", "    0.166,", "    0.0833,", "    0.0,", "    0.0,", "    0.0,", "    vec4(0.0)", "  );", "", "  // TODO avoid querying texture twice for same texel", "  gl_FragColor.a = texture2D(tDiffuse, vUv).a;", "}"].join("\n")
        };
        const Mn = "https://z-z-m.github.io/webpage/images/particle.png"; //n.p + "https://z-z-m.github.io/webpage/images/particle.png";
        const zn = new kt.DirectionalLight("lightblue", .1);
        zn.position.set(-1, 20, 4),
        qt.add(zn);
        const wn = new kt.AmbientLight(16777215);
        qt.add(wn),
        kt.PointLight.prototype.addSphere = function () {
            this.sphere = new kt.Mesh(new kt.SphereGeometry(.05, 16, 16), new kt.MeshBasicMaterial({
                        color: this.color
                    })),
            this.add(this.sphere)
        };
        const _n = new kt.PointLight(16711680, .4, 3, 2);
        _n.addSphere(),
        _n.position.set(1, 0, 1);
        const Sn = new kt.PointLight(65280, .4, 3, 2);
        Sn.addSphere(),
        Sn.position.set(0, 1, 1);
        var Ln = n(277),
        An = n.n(Ln),
        Tn = (new kt.Vector3, new kt.Quaternion, new kt.Vector3, new kt.Matrix4, new kt.Matrix4, new kt.Matrix4, new kt.Vector3, new kt.Vector3, new kt.Vector3, new kt.Vector3, new kt.Vector2, new kt.Vector2, function (e) {
            var t = new Map,
            n = new Map,
            i = e.clone();
            return Cn(e, i, (function (e, i) {
                    t.set(i, e),
                    n.set(e, i)
                })),
            i.traverse((function (e) {
                    if (e.isSkinnedMesh) {
                        var i = e,
                        a = t.get(e),
                        r = a.skeleton.bones;
                        i.skeleton = a.skeleton.clone(),
                        i.bindMatrix.copy(a.bindMatrix),
                        i.skeleton.bones = r.map((function (e) {
                                    return n.get(e)
                                })),
                        i.bind(i.skeleton, i.bindMatrix)
                    }
                })),
            i
        });
        function Cn(e, t, n) {
            n(e, t);
            for (var i = 0; i < e.children.length; i++)
                Cn(e.children[i], t.children[i], n)
        }
        let En = 0,
        Hn = 0;
        class Nn {
            constructor() {}
            static instanceAdded() {
                En++
            }
            static instancesCount() {
                return En
            }
            static instanceLoaded() {
                Hn++
            }
            static instancesLoaded() {
                let e;
                for (; void 0 === e; )
                    e = document.querySelector("h1");
                e.innerHTML = `${Hn} / ${this.instancesCount()}<br/><div style="font-size:10px; margin-top:5px;"> OBJECTS LOADED</div>`,
                Hn == this.instancesCount() && (document.querySelector("body").style.pointerEvents = "all", document.getElementById("title").style.pointerEvents = "all", document.getElementById("title").innerHTML = "START HERE")
            }
        }
        class Pn {
            constructor(e, t, n, i, a, r, o, s, c, l, h, u, f, d = !1) {
                Nn.instanceAdded(),
                this.scene = t,
                this.camera = n,
                this.resolution = new kt.Vector2(window.innerWidth, window.innerHeight),
                this.limitPositionAnimals = c,
                this.clock = new kt.Clock,
                this.loaderAnimal = new(An()),
                this.mixer,
                this.scale = i,
                this.velocity = a,
                this.zPos = h,
                this.velocityMoviment = r,
                this.initialPosition = o,
                this.verticalPos = s,
                this.container = new kt.Object3D,
                this.mouse = new kt.Vector2(0, 0),
                this.model,
                this.modelTrail = new Array(8),
                this.mixerTrail = new Array(8),
                this.pointsMaterialTrail = new Array(8),
                this.newMaterialTrail = new Array(8),
                this.indice = [0, 0, 0, 0, 0, 0, 0, 0],
                this.durationTrail,
                this.childPoints,
                this.distortion = l,
                this.yRotationInverted = u,
                this.inverted = f,
                this.oceanCreature = d,
                this.mesh,
                this.pointsMaterial,
                this.disabled = !1,
                this.points2,
                this.loaderAnimal.load(e, (e => {
                        this.durationTrail = this.randomIntFromInterval(60, 90),
                        this.model = e;
                        for (let e = 0; e < this.modelTrail.length; e++)
                            this.modelTrail[e] = Tn(this.model.scene);
                        var t = new kt.MeshStandardMaterial({
                            color: new kt.Color(11141375),
                            skinning: !0,
                            morphTargets: !0,
                            wireframeLinewidth: 1,
                            wireframe: !0,
                            transparent: !0,
                            opacity: 1
                        });
                        for (let e = 0; e < this.newMaterialTrail.length; e++)
                            this.newMaterialTrail[e] = new kt.MeshStandardMaterial({
                                color: new kt.Color(16742144),
                                skinning: !0,
                                morphTargets: !0,
                                wireframeLinewidth: 1,
                                wireframe: !0,
                                transparent: !0,
                                opacity: 1
                            });
                        this.pointsMaterial = new kt.PointsMaterial({
                            color: new kt.Color(20, 50, 80),
                            size: .099,
                            sizeAttenuation: !0,
                            morphTargets: !0,
                            transparent: !0
                        });
                        for (let e = 0; e < this.pointsMaterialTrail.length; e++)
                            this.pointsMaterialTrail[e] = new kt.PointsMaterial({
                                color: new kt.Color(20, 50, 80),
                                size: .099,
                                sizeAttenuation: !0,
                                morphTargets: !0,
                                transparent: !0
                            });
                        this.model.scene.traverse((e => {
                                if (e.isMesh) {
                                    var n = new kt.Points(e.geometry, this.pointsMaterial);
                                    n.morphTargetInfluences = e.morphTargetInfluences,
                                    n.morphTargetDictionary = e.morphTargetDictionary,
                                    e.material = t,
                                    e.add(n)
                                }
                            })),
                        this.model.scene.scale.multiplyScalar(i),
                        this.model.scene.position.x = o,
                        this.model.scene.position.y =  - .2 - this.zPos / 5 + s,
                        this.model.scene.position.z = 2 + this.zPos,
                        this.model.scene.rotation.y = u ? 1.5 : -1.5;
                        for (let e = 0; e < this.modelTrail.length; e++)
                            this.modelTrail[e].traverse((t => {
                                    if (t.isMesh) {
                                        var n = new kt.Points(t.geometry, this.pointsMaterialTrail[e]);
                                        n.morphTargetInfluences = t.morphTargetInfluences,
                                        n.morphTargetDictionary = t.morphTargetDictionary,
                                        t.material = this.newMaterialTrail[e],
                                        t.add(n)
                                    }
                                })), this.modelTrail[e].scale.multiplyScalar(i), this.modelTrail[e].position.x = o - 100, this.modelTrail[e].position.y =  - .2 - this.zPos / 5 + s, this.modelTrail[e].position.z = 2 + this.zPos, this.modelTrail[e].rotation.y = u ? 1.5 : -1.5, this.container.add(this.model.scene), this.container.add(this.modelTrail[e]);
                        this.scene.add(this.container),
                        this.mixer = new kt.AnimationMixer(this.model.scene);
                        for (let e = 0; e < this.mixerTrail.length; e++)
                            this.mixerTrail[e] = new kt.AnimationMixer(this.modelTrail[e]);
                        for (let e = 0; e < this.model.animations.length; e++) {
                            this.mixer.clipAction(this.model.animations[0]).play();
                            for (let e = 0; e < this.mixerTrail.length; e++)
                                this.mixerTrail[e].clipAction(this.model.animations[0]).play()
                        }
                        Nn.instanceLoaded(),
                        Nn.instancesLoaded()
                    }), (e => {
                        Math.floor(e.loaded / e.total * 100)
                    }), (e => {
                        console.error("An error happened", e)
                    }))
            }
            updateAnimal() {
                if (this.delta = this.clock.getDelta() * this.velocityMoviment, void 0 === this.mixer);
                else {
                    for (let e = 0; e < this.mixerTrail.length; e++)
                        if (this.indice[this.mixerTrail.length - 1] > this.durationTrail * this.mixerTrail.length - 1) {
                            for (let e = 0; e < this.indice.length; e++)
                                this.indice[e] = 0;
                            this.durationTrail = this.randomIntFromInterval(60, 90)
                        } else
                            this.indice[e] > 21 * e && this.indice[e] <= this.durationTrail * e ? (this.indice[e] += .5, this.mixerTrail[e].setTime(this.mixerTrail[e].time + .002), this.modelTrail[e].traverse((t => {
                                        t.isMesh && (t.children[0].material.opacity -= .0025, t.material.opacity -= .0025, t.children[0].material.opacity <= 0 ? (t.visible = !1, this.modelTrail[e].position.x = this.model.scene.position.x) : this.modelTrail[e].position.x = this.modelTrail[e].position.x + this.delta * this.velocity / 15)
                                    }))) : this.indice[e] > 20 * e && this.indice[e] <= 21 * e ? (this.indice[e] += .5, this.mixerTrail[e].setTime(this.mixer.time), this.modelTrail[e].position.x = this.model.scene.position.x, this.modelTrail[e].traverse((e => {
                                        e.isMesh && (e.visible = !0, e.children[0].material.opacity = 1, e.material.opacity = 1)
                                    }))) : (this.indice[e] += .5, this.modelTrail[e].traverse((e => {
                                        e.isMesh && (e.visible = !1, e.children[0].material.opacity = 0, e.material.opacity = 0)
                                    })));
                    if (this.mixer.update(this.delta), this.model.scene.position.x < this.limitPositionAnimals)
                        this.model.scene.position.x += this.delta * this.velocity;
                    else if (this.model.scene.position.x = -this.limitPositionAnimals, this.oceanCreature) {
                        let e = this.randomIntFromInterval(-40, 10);
                        this.model.scene.position.z = e;
                        let t = this.randomIntFromInterval(-80, -20);
                        this.model.scene.position.y = t;
                        for (let n = 0; n < this.modelTrail.length; n++)
                            this.modelTrail[n].position.y = t, this.modelTrail[n].position.z = e
                    } else {
                        let e = this.randomIntFromInterval(-21, 0);
                        this.model.scene.position.z = e;
                        for (let t = 0; t < this.modelTrail.length; t++)
                            this.modelTrail[t].position.z = e
                    }
                }
            }
            randomIntFromInterval(e, t) {
                return Math.floor(Math.random() * (t - e + 1) + e)
            }
        }
        kt.Vector2.prototype.roundToZero = function (e) {
            var t = Math.pow(10, e || 0);
            return this.x = this.x < 0 ? Math.ceil(this.x * t) / t : Math.floor(this.x * t) / t,
            this.y = this.y < 0 ? Math.ceil(this.y * t) / t : Math.floor(this.y * t) / t,
            this
        };
        var Vn = function (e, t) {
            kt.Mesh.call(this, e),
            this.type = "Reflector";
            var n = this,
            i = void 0 !== (t = t || {}).color ? new kt.Color(t.color) : new kt.Color(8355711),
            a = t.textureWidth || 512,
            r = t.textureHeight || 512,
            o = t.clipBias || 0,
            s = t.shader || Vn.ReflectorShader,
            c = new kt.Plane,
            l = new kt.Vector3,
            h = new kt.Vector3,
            u = new kt.Vector3,
            f = new kt.Matrix4,
            d = new kt.Vector3(0, 0, -1),
            p = new kt.Vector4,
            m = new kt.Vector3,
            v = new kt.Vector3,
            g = new kt.Vector4,
            x = new kt.Matrix4,
            y = new kt.PerspectiveCamera,
            b = {
                minFilter: kt.LinearFilter,
                magFilter: kt.LinearFilter,
                format: kt.RGBFormat
            },
            M = new kt.WebGLRenderTarget(a, r, b);
            kt.MathUtils.isPowerOfTwo(a) && kt.MathUtils.isPowerOfTwo(r) || (M.texture.generateMipmaps = !1);
            var z = new kt.ShaderMaterial({
                uniforms: kt.UniformsUtils.clone(s.uniforms),
                fragmentShader: s.fragmentShader,
                vertexShader: s.vertexShader
            });
            z.uniforms.tDiffuse.value = M.texture,
            z.uniforms.color.value = i,
            z.uniforms.textureMatrix.value = x,
            this.material = z,
            this.onBeforeRender = function (e, t, i) {
                if (h.setFromMatrixPosition(n.matrixWorld), u.setFromMatrixPosition(i.matrixWorld), f.extractRotation(n.matrixWorld), l.set(0, 0, 1), l.applyMatrix4(f), m.subVectors(h, u), !(m.dot(l) > 0)) {
                    m.reflect(l).negate(),
                    m.add(h),
                    f.extractRotation(i.matrixWorld),
                    d.set(0, 0, -1),
                    d.applyMatrix4(f),
                    d.add(u),
                    v.subVectors(h, d),
                    v.reflect(l).negate(),
                    v.add(h),
                    y.position.copy(m),
                    y.up.set(0, 1, 0),
                    y.up.applyMatrix4(f),
                    y.up.reflect(l),
                    y.lookAt(v),
                    y.far = i.far,
                    y.updateMatrixWorld(),
                    y.projectionMatrix.copy(i.projectionMatrix),
                    x.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                    x.multiply(y.projectionMatrix),
                    x.multiply(y.matrixWorldInverse),
                    x.multiply(n.matrixWorld),
                    c.setFromNormalAndCoplanarPoint(l, h),
                    c.applyMatrix4(y.matrixWorldInverse),
                    p.set(c.normal.x, c.normal.y, c.normal.z, c.constant);
                    var a = y.projectionMatrix;
                    g.x = (Math.sign(p.x) + a.elements[8]) / a.elements[0],
                    g.y = (Math.sign(p.y) + a.elements[9]) / a.elements[5],
                    g.z = -1,
                    g.w = (1 + a.elements[10]) / a.elements[14],
                    p.multiplyScalar(2 / p.dot(g)),
                    a.elements[2] = p.x,
                    a.elements[6] = p.y,
                    a.elements[10] = p.z + 1 - o,
                    a.elements[14] = p.w,
                    M.texture.encoding = e.outputEncoding,
                    n.visible = !1;
                    var r = e.getRenderTarget(),
                    s = e.xr.enabled,
                    b = e.shadowMap.autoUpdate;
                    e.xr.enabled = !1,
                    e.shadowMap.autoUpdate = !1,
                    e.setRenderTarget(M),
                    e.state.buffers.depth.setMask(!0),
                    !1 === e.autoClear && e.clear(),
                    e.render(t, y),
                    e.xr.enabled = s,
                    e.shadowMap.autoUpdate = b,
                    e.setRenderTarget(r);
                    var z = i.viewport;
                    void 0 !== z && e.state.viewport(z),
                    n.visible = !0
                }
            },
            this.getRenderTarget = function () {
                return M
            }
        };
        Vn.prototype = Object.create(kt.Mesh.prototype),
        Vn.prototype.constructor = Vn,
        Vn.ReflectorShader = {
            uniforms: {
                color: {
                    value: null
                },
                tDiffuse: {
                    value: null
                },
                textureMatrix: {
                    value: null
                }
            },
            vertexShader: ["uniform mat4 textureMatrix;", "varying vec4 vUv;", "void main() {", "\tvUv = textureMatrix * vec4( position, 1.0 );", "\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
            fragmentShader: ["uniform vec3 color;", "uniform sampler2D tDiffuse;", "varying vec4 vUv;", "float blendOverlay( float base, float blend ) {", "\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );", "}", "vec3 blendOverlay( vec3 base, vec3 blend ) {", "\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );", "}", "void main() {", "\tvec4 base = texture2DProj( tDiffuse, vUv );", "\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );", "}"].join("\n")
        };
        var Rn = n(633);
        const Fn = n.p + "models/life_soup/quadruped_horse.gltf",
        In = n.p + "models/life_soup/quadruped_fox.gltf",
        On = n.p + "models/black_soup/quadruped_panther.gltf",
        Dn = n.p + "models/black_soup/quadruped_wolf.gltf",
        Un = n.p + "models/life_soup/quadruped_bear.gltf",
        Bn = n.p + "models/life_soup/birdsA_eagle.gltf",
        kn = n.p + "models/black_soup/birds_vulture.gltf",
        Gn = n.p + "models/black_soup/alligator.gltf",
        jn = n.p + "models/shark.gltf",
        Wn = n.p + "models/whale.gltf",
        Xn = n.p + "models/octopus.gltf",
        qn = n.p + "sounds/Daft-Punk-Recognizer.mp3";
        class Yn {
            constructor(e, t, n) {
                this.audioCtx = new(window.AudioContext || window.webkitAudioContext),
                this.listener = new kt.AudioListener,
                this.sound = new kt.Audio(this.listener),
                this.audioLoader = new kt.AudioLoader,
                this.biquadFilter = this.sound.context.createBiquadFilter(),
                this.convolver = this.sound.context.createConvolver(),
                this.biquadFilter.connect(this.convolver),
                this.convolver.connect(this.sound.context.destination),
                this.biquadFilter.type = "lowpass",
                this.lowpass = 2e3,
                this.Q = 0,
                this.biquadFilter.frequency.value = this.lowpass,
                this.biquadFilter.Q.value = 0,
                this.sound.filters.push(this.biquadFilter),
                this.sound.setFilter(this.sound.filters[0]),
                e.add(this.listener),
                this.audioLoader.load(n, (e => {
                        this.sound.setBuffer(e),
                        this.sound.setLoop(!0),
                        this.sound.setVolume(.5),
                        this.sound.isPlaying || this.sound.play()
                    }), (e => {
                        Math.floor(e.loaded / e.total * 100)
                    }), (e => {
                        console.log("An error happened")
                    }))
            }
            playSound() {
                this.sound.isPlaying || this.sound.play()
            }
            pauseSound() {
                this.sound.isPlaying && this.sound.pause()
            }
            lerp(e, t, n) {
                return (1 - n) * e + n * t
            }
            changeVolume(e) {
                this.sound.getVolume() < e ? this.sound.setVolume(this.sound.getVolume() + .004) : this.sound.setVolume(this.sound.getVolume() - .004)
            }
            changeLowpass(e, t, n) {
                Math.round(Number(this.biquadFilter.frequency.value.toFixed(1))) != Math.round(e) && (this.biquadFilter.frequency.value = this.lerp(this.biquadFilter.frequency.value, e, .01), this.biquadFilter.Q.value = this.lerp(this.biquadFilter.Q.value, t, .01), this.sound.setVolume(this.lerp(this.sound.getVolume(), n, .01)))
            }
        }
        n.p;
        let Zn = [{
                id: 0,
                cardType: "tallWide",
                title: "O Parque Gamaro",
                client: "Gamaro | VZLAB",
                description: '<span>TUNNEL EXPERIENCE</span>: Interactive tunnel that reacts to people\'s position. In the "Waterfall" mode, the watercourse moves influenced by visitors, on the floor and on the wall. In "Forest" mode, flowers and plants bloom as the user walks through the tunnel, forming a trail of blooming flowers and on the wall, the butterflies move to the user\'s region.\n    <br/><span>ELEVATOR EXPERIENCE</span>: An interactive panoramic elevator designed with video wall, elevator doors, floor with vibration engine, animation and spatial sound synchronized and automated, bringing a complete sensory experience.',
                category: ["Software Development", "Creative Coding", "Electronic Engeneering"],
                technology: ["Arduino", "Hardware Hacking", "Processing", "Resolume", "Ableton Live", "Kinect"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/gamaro-new.jpg",
                content: {
                    type: "video",
                    videoID: "RwetO_Sl1Wg"
                }
            }, {
                id: 1,
                cardType: "normal",
                title: "Color Sense",
                client: "Color Sense | Umantech | Empathy",
                description: '<span>COLORSENSE®</span> is the platform that thinks color compliance in real time, generating business intelligence and predictability in production. <a href="http://colorsense.com.br" target="_blank"><span>Access now.</span></a>.',
                category: ["Front-end", "Creative Coding"],
                technology: ["Javascript", "HTML/CSS", "ReactJS", "ThreeJS"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/colorsense3.jpg",
                content: {
                    type: "video",
                    videoID: "wMSeb3H3nNg"
                }
            }, {
                id: 2,
                cardType: "wide",
                title: "Salão do Automóvel 2018",
                client: "Volkswagen | VZLAB",
                description: "Salão do Automóvel São Paulo 2018 - Volkswagen",
                category: ["Software Development", "Creative Coding", "Electronic Engeneering"],
                technology: ["Arduino", "Hardware Hacking", "Touch Screen", "Openframeworks"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/salao2018.jpg",
                content: {
                    type: "video",
                    videoID: "WoDzHbUP81U"
                }
            }, {
                id: 3,
                cardType: "tall",
                title: "GS1 Brasília",
                client: "GS1 Brasil | Venosa",
                description: "The <span>GS1 Brasil</span> innovation and technology center in Brasilia offers visitors a comprehensive view of the solutions offered by GS1 to its associates and the community.\n    Responsible for the creation of the <span>São Paulo CIT</span>, we were invited to think together with <span>GS1 Brasil</span> about this new center, following the same identity, but with the freedom to create new ways of telling about the company's solutions.",
                category: ["Software Development", "Creative Coding", "Electronic Engeneering"],
                technology: ["Arduino", "Hardware Hacking", "Robotic Engineering", "Processing", "Javascript", "RFID"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/gs1-brasilia.jpg",
                content: {
                    type: "video",
                    videoID: "KQIHMwVNLAg"
                }
            }, {
                id: 4,
                cardType: "tallWide",
                title: "GS1 São Paulo",
                client: "GS1 Brasil | Venosa",
                description: "The <span>Innovation and Technology Center (CIT)</span> demonstrates how GS1 standards are present in people's daily lives, with the exhibition of innovative automation technologies and solutions to help companies learn the most appropriate tools for their operation.\n    The <span>Espaço do Conhecimento</span> is a place dedicated to presenting the history of global standards and the performance of GS1 Brasil. All stages of visiting this exhibition are designed to tell the story in an interactive way, mixing technology and design.",
                category: ["Software Development", "Creative Coding", "Electronic Engeneering"],
                technology: ["Arduino", "Hardware Hacking", "Processing", "RFID", "Leap Motion", "IR Touch", "IR Sensor"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/gs1-sextoandar.jpg",
                content: {
                    type: "video",
                    videoID: "6PXd2gDEJbg"
                }
            }, {
                id: 5,
                cardType: "normal",
                title: "XP Window Expert Talks Floripa 2019",
                client: "XP Investimentos | VZLAB",
                description: "At the <span>Experts Talks Floripa 2019</span> event, we created an interactive gesture-controlled screen. Using the concept of a magic window, we placed 2 screens with their backs to each other, in order for the user to navigate on the other side of the wall.",
                category: ["Software Development", "Creative Coding", "Electronic Engeneering"],
                technology: ["Arduino", "Hardware Hacking", "Touchdesigner", "Unity", "IR Sensor", "Kinect", "Webcam"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/xp-investimentos.jpg",
                content: {
                    type: "video",
                    videoID: "fwjAltz-nDc"
                }
            }, {
                id: 6,
                cardType: "wide",
                title: "DDX Digital Dealer Experience",
                client: "Volkswagen | VZLAB",
                description: "<span>DDX— Digital Dealer Experience</span> Have you ever imagined knowing everything about your new car without having to get inside it? Although the cars are still there, at Volkswagen dealerships, you can already experience new experiences with our models using virtual reality and you can even assemble your new Volkswagen using a touch screen.",
                category: ["Software Development", "Creative Coding", "Prototyping", "VR"],
                technology: ["Oculus", "Gear VR", "Touch Screen", "Javascript"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/ddx.jpg",
                content: {
                    type: "video",
                    videoID: "dadjK2-L-VM"
                }
            }, {
                id: 7,
                cardType: "normal",
                title: "McDonalds Jurassic World",
                client: "McDonalds | Human",
                description: "In this campaign, <span>McDonalds</span> trays had the theme of the movie <span>Jurassic World</span>, with 5 illustrated dinosaurs. The idea was to be able to recognize each of the dinosaurs and provide information about each of them. The biggest challenge was to be able to recognize the animal in different camera angles, at the moment when the user fired the button to recognize the animal. It was a success.",
                category: ["Web Development", "Creative Coding"],
                technology: ["Javascript", "HTML/CSS", "Computer Vision"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/mcdonalds.jpg",
                content: {
                    type: "video",
                    videoID: "9qGq81kjaj0"
                }
            }, {
                id: 8,
                cardType: "wide",
                title: "MQB Volksvagen",
                client: "Volkswagen | VZLAB",
                description: "<span>MQB</span> stands for <span>Modularer Querbaukasten</span>, or modular transversal toolkit. It lays down a series of hard points for a huge range of cars and powertrains. These hard points determine the common design of production line. To present it to the public, we created an interactive video wall, where the user can initially choose the color of the car model and then walk back and forth to move forward and backward through the production steps with the MQB platform.",
                category: ["Software Development", "Creative Coding", "Electronic Engeneering"],
                technology: ["Arduino", "Hardware Hacking", "IR Sensor", "Face Tracking", "Openframeworks"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/mqb.jpg",
                content: {
                    type: "video",
                    videoID: "e--9c-wMz-M"
                }
            }, {
                id: 9,
                cardType: "tallWide",
                title: "Toyota Visitor Center",
                client: "Toyota | Venosa",
                description: "<span>Toyota do Brasil</span>, a pioneer company and a reference in the automotive industry. It began its history in Brazil in 1960 and in 2016 it set as a goal the creation of the Toyota Visitor Center: creation of an interactive space that would offer visitors a memorable experience in relation to the Toyota brand.",
                category: ["Software Development", "Creative Coding", "Electronic Engeneering"],
                technology: ["Arduino", "Hardware Hacking", "Processing", "Unity", "RFID", "Logitech G27", "LIDAR Touch", "Capacitive Sensor"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/toyota.jpg",
                content: {
                    type: "video",
                    videoID: "-CI7KdeTt4g"
                }
            }, {
                id: 10,
                cardType: "normal",
                title: "Beauty Factory",
                client: "O Boticário",
                description: 'Animation project for the Beauty Factory space, created by O Boticário. The animation had an interconnected video wall and video floor, building an immersive environment, through computer graphics and sound production. *The video is a representation of the local installation of the content. Áudio Production by <a href="http://koitty.com.br/" target="_blank"><span>KOITTY</span></a>',
                category: ["Creative Coding", "Animation", "Video Production"],
                technology: ["Arduino", "Hardware Hacking", "Processing", "Unity", "RFID", "Logitech G27", "LIDAR Touch", "Capacitive Sensor"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/boticario.jpg",
                content: {
                    type: "video",
                    videoID: "MZZfhYSD0Ew"
                }
            }, {
                id: 11,
                cardType: "tall",
                title: "Metworking App",
                client: "Metworking | Startup One",
                description: "<span>Metworking</span> App coming soon.",
                category: ["Software Development", "Front-end Engineering"],
                technology: ["React Native", "Javascript", "HTML/CSS"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/metworking.jpg",
                content: {
                    type: "video",
                    videoID: "grUoNV7GcH4"
                }
            }
        ],
        Qn = [{
                id: 0,
                cardType: "tallWide",
                title: "Web 3D Mustang",
                client: "Umantech",
                description: 'A POC to test the capabilities of rendering WebGL to create a car configurator. Access: <a href="https://z-z-m.github.io/mustang/" target="_blank"><span>Web 3D Mustang</span></a>',
                category: ["Software Development", "Creative Coding"],
                technology: ["Javascript", "Three.js", "WebGL"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/mustang.jpg",
                content: {
                    type: "video",
                    videoID: "s4n2v-vQ7uc"
                }
            }, {
                id: 1,
                cardType: "tallWide",
                title: "Projection Game",
                client: "VZLAB",
                description: "To test an idea of <span>merging the Point Cloud</span> of multiple Kinects for a job we were producing, I created a test game to receive the blob data generated by the tracked physical scene. Both, <span>Merged Kinect Point Cloud App and Game App</span> were developed using Processing.",
                category: ["Software Development", "Creative Coding"],
                technology: ["Hardware Hacking", "Processing"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/projection-game.jpg",
                content: {
                    type: "video",
                    videoID: "PZ4ovB9frE0"
                }
            }, {
                id: 2,
                cardType: "wide",
                title: "Space Invaders Web VR",
                client: "Me, myself",
                description: "Well, I wanted to test programming <span>VR for the Web</span>. For that, I chose the classic game <span>Space Invaders</span> as the theme of my prototype. I was impressed with the ability of VR for the Web, I was able to use the 2 controls on my Oculus Quest and processed a good amount of simultaneous objects well. Nice!",
                category: ["Software Development", "Creative Coding"],
                technology: ["Three.js", "Javascript", "Oculus Quest", "WEB VR"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/space-invaders.jpg",
                content: {
                    type: "video",
                    videoID: "m9uLKM1Xwe4"
                }
            }, {
                id: 3,
                cardType: "normal",
                title: "Portuguese Word Clock",
                client: "Me, myself",
                description: "Inspired by the various Word Clock made in the world, I built a mini version in Portuguese (Brazil). I wanted a version that could be small enough to be a cube that would fit in the palm of my hand. Done.",
                category: ["Software Development", "Creative Coding"],
                technology: ["Arduino", "Hardware Hacking"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/wordclock.jpg",
                content: {
                    type: "video",
                    videoID: "p68IIw4nnYA"
                }
            }, {
                id: 4,
                cardType: "wide",
                title: "3D RGB LED Matrix [RAIN]",
                client: "VZLAB",
                description: "There are many led cubes (8x8x8 leds) on the internet, but few have a triple dimension <span>(8x8x24 leds)</span> and even less have the animation data outside the microcontroller. The challenge in this project was to be able to control this <span>amount (1,536) of RGB LEDs</span> in an orderly way and receiving the <span>data in Real-time</span> through the Serial port.",
                category: ["Software Development", "Creative Coding", "Electronic Engeneering"],
                technology: ["Arduino", "Hardware Hacking", "Openframeworks", "Processing"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/3drgb-led3.jpg",
                content: {
                    type: "video",
                    videoID: "MriWF8PfE9w"
                }
            }, {
                id: 5,
                cardType: "tall",
                title: "3D RGB LED Matrix [TWO]",
                client: "VZLAB",
                description: "There are many led cubes (8x8x8 leds) on the internet, but few have a triple dimension <span>(8x8x24 leds)</span> and even less have the animation data outside the microcontroller. The challenge in this project was to be able to control this <span>amount (1,536) of RGB LEDs</span> in an orderly way and receiving the <span>data in Real-time</span> through the Serial port.",
                category: ["Software Development", "Creative Coding", "Electronic Engeneering"],
                technology: ["Arduino", "Hardware Hacking", "Openframeworks", "Processing"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/3drgb-led2.jpg",
                content: {
                    type: "video",
                    videoID: "BhIAUhGeKFU"
                }
            }, {
                id: 6,
                cardType: "tall",
                title: "3D RGB LED Matrix [ONE]",
                client: "VZLAB",
                description: "There are many led cubes (8x8x8 leds) on the internet, but few have a triple dimension <span>(8x8x24 leds)</span> and even less have the animation data outside the microcontroller. The challenge in this project was to be able to control this <span>amount (1,536) of RGB LEDs</span> in an orderly way and receiving the <span>data in Real-time</span> through the Serial port.",
                category: ["Software Development", "Creative Coding", "Electronic Engeneering"],
                technology: ["Arduino", "Hardware Hacking", "Openframeworks", "Processing"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/3drgb-led.jpg",
                content: {
                    type: "video",
                    videoID: "gsy3l7-ZZdM"
                }
            }, {
                id: 7,
                cardType: "tallWide",
                title: "DISCOVID 19.2",
                client: "Me, myself",
                description: "I wanted to build this self-balanced robot representing my votes so that we can win this <span>fight against COVID 19</span>. May <span>science, technology and people</span> be allies in this journey.",
                category: ["Software Development", "Creative Coding", "Electronic Engeneering"],
                technology: ["Arduino", "Hardware Hacking", "Processing"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/discovid.jpg",
                content: {
                    type: "video",
                    videoID: "mUK1I-rE91k"
                }
            }, {
                id: 8,
                cardType: "normal",
                title: "Interactive Projection",
                client: "Me, myself",
                description: "Interactive Projection at home",
                category: ["Software Development", "Creative Coding"],
                technology: ["Hardware Hacking", "Processing"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/interactive-projection.jpg",
                content: {
                    type: "video",
                    videoID: "I1_9fhqK4Oo"
                }
            }, {
                id: 9,
                cardType: "wide",
                title: "Pulley sensing",
                client: "ArchiMotu",
                description: "Sensing prototype with optical encoder",
                category: ["Software Development", "Electronic Engeneering"],
                technology: ["Arduino", "Hardware Hacking", "IoT", "Cloud"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/sensor-pulley.jpg",
                content: {
                    type: "video",
                    videoID: "tA_C9yJnTzw"
                }
            }, {
                id: 10,
                cardType: "normal",
                title: "Mobile Camera Tracking",
                client: "Me, myself",
                description: "The idea was to track the camera of the <span>mobile device</span>, so that the objects captured in the physical space were positioned in the virtual 3D scene.\n    For this, I attached the <span>Intel Realsense T265</span> to the mobile device, thus making it possible to track the position and rotation of the camera.",
                category: ["Software Development", "Creative Coding"],
                technology: ["Hardware Hacking", "Processing", "Intel Realsense", "Camera tracking"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/camera-tracking.jpg",
                content: {
                    type: "video",
                    videoID: "RYjvAsAw_-E"
                }
            }, {
                id: 11,
                cardType: "tallWide",
                title: "Quarantined Tech Mind",
                client: "Me, myself",
                description: 'A piece to try to relieve the mind during quarantine. It was not easy. Technically, I wanted to explore the WebGL rendering for web, space sound and light. That\'s it. Access: <a href="https://z-z-m.github.io/" target="_blank"><span>Quarantined Tech Mind</span></a>',
                category: ["Software Development", "Creative Coding"],
                technology: ["Javascript", "Three.js", "WebGL"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/quarantined.jpg",
                content: {
                    type: "video",
                    videoID: "7qtz1px-sh0"
                }
            }, {
                id: 12,
                cardType: "normal",
                title: "Haptics Wearable",
                client: "Me, myself",
                description: "A prototype of a wearable to be used in conjunction with the <span>HTC VIVE VR</span>. This wearable has a microcontroller, battery and haptic attached. In the test, I made an integration with a Unity application, so that when the user steps on something in the virtual world, this haptics is activated at the configured intensity, for example, it can be used in kicking or walking movements. In the final version it is used together with a <span>Vive Tracker</span>.",
                category: ["Software Development", "Electronic Engeneering"],
                technology: ["Arduino", "Hardware Hacking", "Haptics", "HTC Vive VR", "HTC Vive Tracker"],
                backgroundImage: "https://z-z-m.github.io/webpage/images/haptics-wearable.jpg",
                content: {
                    type: "video",
                    videoID: "eNOmqNyoCmU"
                }
            }
        ];
        wt.add({
            fa500px: {
                prefix: "fab",
                iconName: "500px",
                icon: [448, 512, [], "f26e", "M103.3 344.3c-6.5-14.2-6.9-18.3 7.4-23.1 25.6-8 8 9.2 43.2 49.2h.3v-93.9c1.2-50.2 44-92.2 97.7-92.2 53.9 0 97.7 43.5 97.7 96.8 0 63.4-60.8 113.2-128.5 93.3-10.5-4.2-2.1-31.7 8.5-28.6 53 0 89.4-10.1 89.4-64.4 0-61-77.1-89.6-116.9-44.6-23.5 26.4-17.6 42.1-17.6 157.6 50.7 31 118.3 22 160.4-20.1 24.8-24.8 38.5-58 38.5-93 0-35.2-13.8-68.2-38.8-93.3-24.8-24.8-57.8-38.5-93.3-38.5s-68.8 13.8-93.5 38.5c-.3.3-16 16.5-21.2 23.9l-.5.6c-3.3 4.7-6.3 9.1-20.1 6.1-6.9-1.7-14.3-5.8-14.3-11.8V20c0-5 3.9-10.5 10.5-10.5h241.3c8.3 0 8.3 11.6 8.3 15.1 0 3.9 0 15.1-8.3 15.1H130.3v132.9h.3c104.2-109.8 282.8-36 282.8 108.9 0 178.1-244.8 220.3-310.1 62.8zm63.3-260.8c-.5 4.2 4.6 24.5 14.6 20.6C306 56.6 384 144.5 390.6 144.5c4.8 0 22.8-15.3 14.3-22.8-93.2-89-234.5-57-238.3-38.2zM393 414.7C283 524.6 94 475.5 61 310.5c0-12.2-30.4-7.4-28.9 3.3 24 173.4 246 256.9 381.6 121.3 6.9-7.8-12.6-28.4-20.7-20.4zM213.6 306.6c0 4 4.3 7.3 5.5 8.5 3 3 6.1 4.4 8.5 4.4 3.8 0 2.6.2 22.3-19.5 19.6 19.3 19.1 19.5 22.3 19.5 5.4 0 18.5-10.4 10.7-18.2L265.6 284l18.2-18.2c6.3-6.8-10.1-21.8-16.2-15.7L249.7 268c-18.6-18.8-18.4-19.5-21.5-19.5-5 0-18 11.7-12.4 17.3L234 284c-18.1 17.9-20.4 19.2-20.4 22.6z"]
            },
            faAccessibleIcon: {
                prefix: "fab",
                iconName: "accessible-icon",
                icon: [448, 512, [], "f368", "M423.9 255.8L411 413.1c-3.3 40.7-63.9 35.1-60.6-4.9l10-122.5-41.1 2.3c10.1 20.7 15.8 43.9 15.8 68.5 0 41.2-16.1 78.7-42.3 106.5l-39.3-39.3c57.9-63.7 13.1-167.2-74-167.2-25.9 0-49.5 9.9-67.2 26L73 243.2c22-20.7 50.1-35.1 81.4-40.2l75.3-85.7-42.6-24.8-51.6 46c-30 26.8-70.6-18.5-40.5-45.4l68-60.7c9.8-8.8 24.1-10.2 35.5-3.6 0 0 139.3 80.9 139.5 81.1 16.2 10.1 20.7 36 6.1 52.6L285.7 229l106.1-5.9c18.5-1.1 33.6 14.4 32.1 32.7zm-64.9-154c28.1 0 50.9-22.8 50.9-50.9C409.9 22.8 387.1 0 359 0c-28.1 0-50.9 22.8-50.9 50.9 0 28.1 22.8 50.9 50.9 50.9zM179.6 456.5c-80.6 0-127.4-90.6-82.7-156.1l-39.7-39.7C36.4 287 24 320.3 24 356.4c0 130.7 150.7 201.4 251.4 122.5l-39.7-39.7c-16 10.9-35.3 17.3-56.1 17.3z"]
            },
            faAccusoft: {
                prefix: "fab",
                iconName: "accusoft",
                icon: [640, 512, [], "f369", "M322.1 252v-1l-51.2-65.8s-12 1.6-25 15.1c-9 9.3-242.1 239.1-243.4 240.9-7 10 1.6 6.8 15.7 1.7.8 0 114.5-36.6 114.5-36.6.5-.6-.1-.1.6-.6-.4-5.1-.8-26.2-1-27.7-.6-5.2 2.2-6.9 7-8.9l92.6-33.8c.6-.8 88.5-81.7 90.2-83.3zm160.1 120.1c13.3 16.1 20.7 13.3 30.8 9.3 3.2-1.2 115.4-47.6 117.8-48.9 8-4.3-1.7-16.7-7.2-23.4-2.1-2.5-205.1-245.6-207.2-248.3-9.7-12.2-14.3-12.9-38.4-12.8-10.2 0-106.8.5-116.5.6-19.2.1-32.9-.3-19.2 16.9C250 75 476.5 365.2 482.2 372.1zm152.7 1.6c-2.3-.3-24.6-4.7-38-7.2 0 0-115 50.4-117.5 51.6-16 7.3-26.9-3.2-36.7-14.6l-57.1-74c-5.4-.9-60.4-9.6-65.3-9.3-3.1.2-9.6.8-14.4 2.9-4.9 2.1-145.2 52.8-150.2 54.7-5.1 2-11.4 3.6-11.1 7.6.2 2.5 2 2.6 4.6 3.5 2.7.8 300.9 67.6 308 69.1 15.6 3.3 38.5 10.5 53.6 1.7 2.1-1.2 123.8-76.4 125.8-77.8 5.4-4 4.3-6.8-1.7-8.2z"]
            },
            faAcquisitionsIncorporated: {
                prefix: "fab",
                iconName: "acquisitions-incorporated",
                icon: [384, 512, [], "f6af", "M357.45 468.2c-1.2-7.7-1.3-7.6-9.6-7.6-99.8.2-111.8-2.4-112.7-2.6-12.3-1.7-20.6-10.5-21-23.1-.1-1.6-.2-71.6-1-129.1-.1-4.7 1.6-6.4 5.9-7.5 12.5-3 24.9-6.1 37.3-9.7 4.3-1.3 6.8-.2 8.4 3.5 4.5 10.3 8.8 20.6 13.2 30.9 1.6 3.7.1 4.4-3.4 4.4-10-.2-20-.1-30.4-.1v27h116c-1.4-9.5-2.7-18.1-4-27.5-7 0-13.8.4-20.4-.1-22.6-1.6-18.3-4.4-84-158.6-8.8-20.1-27.9-62.1-36.5-89.2-4.4-14 5.5-25.4 18.9-26.6 18.6-1.7 37.5-1.6 56.2-2 20.6-.4 41.2-.4 61.8-.5 3.1 0 4-1.4 4.3-4.3 1.2-9.8 2.7-19.5 4-29.2.8-5.3 1.6-10.7 2.4-16.1L23.75 0c-3.6 0-5.3 1.1-4.6 5.3 2.2 13.2-.8.8 6.4 45.3 63.4 0 71.8.9 101.8.5 12.3-.2 37 3.5 37.7 22.1.4 11.4-1.1 11.3-32.6 87.4-53.8 129.8-50.7 120.3-67.3 161-1.7 4.1-3.6 5.2-7.6 5.2-8.5-.2-17-.3-25.4.1-1.9.1-5.2 1.8-5.5 3.2-1.5 8.1-2.2 16.3-3.2 24.9h114.3v-27.6c-6.9 0-33.5.4-35.3-2.9 5.3-12.3 10.4-24.4 15.7-36.7 16.3 4 31.9 7.8 47.6 11.7 3.4.9 4.6 3 4.6 6.8-.1 42.9.1 85.9.2 128.8 0 10.2-5.5 19.1-14.9 23.1-6.5 2.7-3.3 3.4-121.4 2.4-5.3 0-7.1 2-7.6 6.8-1.5 12.9-2.9 25.9-5 38.8-.8 5 1.3 5.7 5.3 5.7 183.2.6-30.7 0 337.1 0-2.5-15-4.4-29.4-6.6-43.7zm-174.9-205.7c-13.3-4.2-26.6-8.2-39.9-12.5a44.53 44.53 0 0 1-5.8-2.9c17.2-44.3 34.2-88.1 51.3-132.1 7.5 2.4 7.9-.8 9.4 0 9.3 22.5 18.1 60.1 27 82.8 6.6 16.7 13 33.5 19.7 50.9a35.78 35.78 0 0 1-3.9 2.1c-13.1 3.9-26.4 7.5-39.4 11.7a27.66 27.66 0 0 1-18.4 0z"]
            },
            faAdn: {
                prefix: "fab",
                iconName: "adn",
                icon: [496, 512, [], "f170", "M248 167.5l64.9 98.8H183.1l64.9-98.8zM496 256c0 136.9-111.1 248-248 248S0 392.9 0 256 111.1 8 248 8s248 111.1 248 248zm-99.8 82.7L248 115.5 99.8 338.7h30.4l33.6-51.7h168.6l33.6 51.7h30.2z"]
            },
            faAdversal: {
                prefix: "fab",
                iconName: "adversal",
                icon: [512, 512, [], "f36a", "M482.1 32H28.7C5.8 32 0 37.9 0 60.9v390.2C0 474.4 5.8 480 28.7 480h453.4c24.4 0 29.9-5.2 29.9-29.7V62.2c0-24.6-5.4-30.2-29.9-30.2zM178.4 220.3c-27.5-20.2-72.1-8.7-84.2 23.4-4.3 11.1-9.3 9.5-17.5 8.3-9.7-1.5-17.2-3.2-22.5-5.5-28.8-11.4 8.6-55.3 24.9-64.3 41.1-21.4 83.4-22.2 125.3-4.8 40.9 16.8 34.5 59.2 34.5 128.5 2.7 25.8-4.3 58.3 9.3 88.8 1.9 4.4.4 7.9-2.7 10.7-8.4 6.7-39.3 2.2-46.6-7.4-1.9-2.2-1.8-3.6-3.9-6.2-3.6-3.9-7.3-2.2-11.9 1-57.4 36.4-140.3 21.4-147-43.3-3.1-29.3 12.4-57.1 39.6-71 38.2-19.5 112.2-11.8 114-30.9 1.1-10.2-1.9-20.1-11.3-27.3zm286.7 222c0 15.1-11.1 9.9-17.8 9.9H52.4c-7.4 0-18.2 4.8-17.8-10.7.4-13.9 10.5-9.1 17.1-9.1 132.3-.4 264.5-.4 396.8 0 6.8 0 16.6-4.4 16.6 9.9zm3.8-340.5v291c0 5.7-.7 13.9-8.1 13.9-12.4-.4-27.5 7.1-36.1-5.6-5.8-8.7-7.8-4-12.4-1.2-53.4 29.7-128.1 7.1-144.4-85.2-6.1-33.4-.7-67.1 15.7-100 11.8-23.9 56.9-76.1 136.1-30.5v-71c0-26.2-.1-26.2 26-26.2 3.1 0 6.6.4 9.7 0 10.1-.8 13.6 4.4 13.6 14.3-.1.2-.1.3-.1.5zm-51.5 232.3c-19.5 47.6-72.9 43.3-90 5.2-15.1-33.3-15.5-68.2.4-101.5 16.3-34.1 59.7-35.7 81.5-4.8 20.6 28.8 14.9 84.6 8.1 101.1zm-294.8 35.3c-7.5-1.3-33-3.3-33.7-27.8-.4-13.9 7.8-23 19.8-25.8 24.4-5.9 49.3-9.9 73.7-14.7 8.9-2 7.4 4.4 7.8 9.5 1.4 33-26.1 59.2-67.6 58.8z"]
            },
            faAffiliatetheme: {
                prefix: "fab",
                iconName: "affiliatetheme",
                icon: [512, 512, [], "f36b", "M159.7 237.4C108.4 308.3 43.1 348.2 14 326.6-15.2 304.9 2.8 230 54.2 159.1c51.3-70.9 116.6-110.8 145.7-89.2 29.1 21.6 11.1 96.6-40.2 167.5zm351.2-57.3C437.1 303.5 319 367.8 246.4 323.7c-25-15.2-41.3-41.2-49-73.8-33.6 64.8-92.8 113.8-164.1 133.2 49.8 59.3 124.1 96.9 207 96.9 150 0 271.6-123.1 271.6-274.9.1-8.5-.3-16.8-1-25z"]
            },
            faAirbnb: {
                prefix: "fab",
                iconName: "airbnb",
                icon: [448, 512, [], "f834", "M224 373.12c-25.24-31.67-40.08-59.43-45-83.18-22.55-88 112.61-88 90.06 0-5.45 24.25-20.29 52-45 83.18zm138.15 73.23c-42.06 18.31-83.67-10.88-119.3-50.47 103.9-130.07 46.11-200-18.85-200-54.92 0-85.16 46.51-73.28 100.5 6.93 29.19 25.23 62.39 54.43 99.5-32.53 36.05-60.55 52.69-85.15 54.92-50 7.43-89.11-41.06-71.3-91.09 15.1-39.16 111.72-231.18 115.87-241.56 15.75-30.07 25.56-57.4 59.38-57.4 32.34 0 43.4 25.94 60.37 59.87 36 70.62 89.35 177.48 114.84 239.09 13.17 33.07-1.37 71.29-37.01 86.64zm47-136.12C280.27 35.93 273.13 32 224 32c-45.52 0-64.87 31.67-84.66 72.79C33.18 317.1 22.89 347.19 22 349.81-3.22 419.14 48.74 480 111.63 480c21.71 0 60.61-6.06 112.37-62.4 58.68 63.78 101.26 62.4 112.37 62.4 62.89.05 114.85-60.86 89.61-130.19.02-3.89-16.82-38.9-16.82-39.58z"]
            },
            faAlgolia: {
                prefix: "fab",
                iconName: "algolia",
                icon: [448, 512, [], "f36c", "M229.3 182.6c-49.3 0-89.2 39.9-89.2 89.2 0 49.3 39.9 89.2 89.2 89.2s89.2-39.9 89.2-89.2c0-49.3-40-89.2-89.2-89.2zm62.7 56.6l-58.9 30.6c-1.8.9-3.8-.4-3.8-2.3V201c0-1.5 1.3-2.7 2.7-2.6 26.2 1 48.9 15.7 61.1 37.1.7 1.3.2 3-1.1 3.7zM389.1 32H58.9C26.4 32 0 58.4 0 90.9V421c0 32.6 26.4 59 58.9 59H389c32.6 0 58.9-26.4 58.9-58.9V90.9C448 58.4 421.6 32 389.1 32zm-202.6 84.7c0-10.8 8.7-19.5 19.5-19.5h45.3c10.8 0 19.5 8.7 19.5 19.5v15.4c0 1.8-1.7 3-3.3 2.5-12.3-3.4-25.1-5.1-38.1-5.1-13.5 0-26.7 1.8-39.4 5.5-1.7.5-3.4-.8-3.4-2.5v-15.8zm-84.4 37l9.2-9.2c7.6-7.6 19.9-7.6 27.5 0l7.7 7.7c1.1 1.1 1 3-.3 4-6.2 4.5-12.1 9.4-17.6 14.9-5.4 5.4-10.4 11.3-14.8 17.4-1 1.3-2.9 1.5-4 .3l-7.7-7.7c-7.6-7.5-7.6-19.8 0-27.4zm127.2 244.8c-70 0-126.6-56.7-126.6-126.6s56.7-126.6 126.6-126.6c70 0 126.6 56.6 126.6 126.6 0 69.8-56.7 126.6-126.6 126.6z"]
            },
            faAlipay: {
                prefix: "fab",
                iconName: "alipay",
                icon: [448, 512, [], "f642", "M377.74 32H70.26C31.41 32 0 63.41 0 102.26v307.48C0 448.59 31.41 480 70.26 480h307.48c38.52 0 69.76-31.08 70.26-69.6-45.96-25.62-110.59-60.34-171.6-88.44-32.07 43.97-84.14 81-148.62 81-70.59 0-93.73-45.3-97.04-76.37-3.97-39.01 14.88-81.5 99.52-81.5 35.38 0 79.35 10.25 127.13 24.96 16.53-30.09 26.45-60.34 26.45-60.34h-178.2v-16.7h92.08v-31.24H88.28v-19.01h109.44V92.34h50.92v50.42h109.44v19.01H248.63v31.24h88.77s-15.21 46.62-38.35 90.92c48.93 16.7 100.01 36.04 148.62 52.74V102.26C447.83 63.57 416.43 32 377.74 32zM47.28 322.95c.99 20.17 10.25 53.73 69.93 53.73 52.07 0 92.58-39.68 117.87-72.9-44.63-18.68-84.48-31.41-109.44-31.41-67.45 0-79.35 33.06-78.36 50.58z"]
            },
            faAmazon: {
                prefix: "fab",
                iconName: "amazon",
                icon: [448, 512, [], "f270", "M257.2 162.7c-48.7 1.8-169.5 15.5-169.5 117.5 0 109.5 138.3 114 183.5 43.2 6.5 10.2 35.4 37.5 45.3 46.8l56.8-56S341 288.9 341 261.4V114.3C341 89 316.5 32 228.7 32 140.7 32 94 87 94 136.3l73.5 6.8c16.3-49.5 54.2-49.5 54.2-49.5 40.7-.1 35.5 29.8 35.5 69.1zm0 86.8c0 80-84.2 68-84.2 17.2 0-47.2 50.5-56.7 84.2-57.8v40.6zm136 163.5c-7.7 10-70 67-174.5 67S34.2 408.5 9.7 379c-6.8-7.7 1-11.3 5.5-8.3C88.5 415.2 203 488.5 387.7 401c7.5-3.7 13.3 2 5.5 12zm39.8 2.2c-6.5 15.8-16 26.8-21.2 31-5.5 4.5-9.5 2.7-6.5-3.8s19.3-46.5 12.7-55c-6.5-8.3-37-4.3-48-3.2-10.8 1-13 2-14-.3-2.3-5.7 21.7-15.5 37.5-17.5 15.7-1.8 41-.8 46 5.7 3.7 5.1 0 27.1-6.5 43.1z"]
            },
            faAmazonPay: {
                prefix: "fab",
                iconName: "amazon-pay",
                icon: [640, 512, [], "f42c", "M14 325.3c2.3-4.2 5.2-4.9 9.7-2.5 10.4 5.6 20.6 11.4 31.2 16.7a595.88 595.88 0 0 0 127.4 46.3 616.61 616.61 0 0 0 63.2 11.8 603.33 603.33 0 0 0 95 5.2c17.4-.4 34.8-1.8 52.1-3.8a603.66 603.66 0 0 0 163.3-42.8c2.9-1.2 5.9-2 9.1-1.2 6.7 1.8 9 9 4.1 13.9a70 70 0 0 1-9.6 7.4c-30.7 21.1-64.2 36.4-99.6 47.9a473.31 473.31 0 0 1-75.1 17.6 431 431 0 0 1-53.2 4.8 21.3 21.3 0 0 0-2.5.3H308a21.3 21.3 0 0 0-2.5-.3c-3.6-.2-7.2-.3-10.7-.4a426.3 426.3 0 0 1-50.4-5.3A448.4 448.4 0 0 1 164 420a443.33 443.33 0 0 1-145.6-87c-1.8-1.6-3-3.8-4.4-5.7zM172 65.1l-4.3.6a80.92 80.92 0 0 0-38 15.1c-2.4 1.7-4.6 3.5-7.1 5.4a4.29 4.29 0 0 1-.4-1.4c-.4-2.7-.8-5.5-1.3-8.2-.7-4.6-3-6.6-7.6-6.6h-11.5c-6.9 0-8.2 1.3-8.2 8.2v209.3c0 1 0 2 .1 3 .2 3 2 4.9 4.9 5 7 .1 14.1.1 21.1 0 2.9 0 4.7-2 5-5 .1-1 .1-2 .1-3v-72.4c1.1.9 1.7 1.4 2.2 1.9 17.9 14.9 38.5 19.8 61 15.4 20.4-4 34.6-16.5 43.8-34.9 7-13.9 9.9-28.7 10.3-44.1.5-17.1-1.2-33.9-8.1-49.8-8.5-19.6-22.6-32.5-43.9-36.9-3.2-.7-6.5-1-9.8-1.5-2.8-.1-5.5-.1-8.3-.1zM124.6 107a3.48 3.48 0 0 1 1.7-3.3c13.7-9.5 28.8-14.5 45.6-13.2 14.9 1.1 27.1 8.4 33.5 25.9 3.9 10.7 4.9 21.8 4.9 33 0 10.4-.8 20.6-4 30.6-6.8 21.3-22.4 29.4-42.6 28.5-14-.6-26.2-6-37.4-13.9a3.57 3.57 0 0 1-1.7-3.3c.1-14.1 0-28.1 0-42.2s.1-28 0-42.1zm205.7-41.9c-1 .1-2 .3-2.9.4a148 148 0 0 0-28.9 4.1c-6.1 1.6-12 3.8-17.9 5.8-3.6 1.2-5.4 3.8-5.3 7.7.1 3.3-.1 6.6 0 9.9.1 4.8 2.1 6.1 6.8 4.9 7.8-2 15.6-4.2 23.5-5.7 12.3-2.3 24.7-3.3 37.2-1.4 6.5 1 12.6 2.9 16.8 8.4 3.7 4.8 5.1 10.5 5.3 16.4.3 8.3.2 16.6.3 24.9a7.84 7.84 0 0 1-.2 1.4c-.5-.1-.9 0-1.3-.1a180.56 180.56 0 0 0-32-4.9c-11.3-.6-22.5.1-33.3 3.9-12.9 4.5-23.3 12.3-29.4 24.9-4.7 9.8-5.4 20.2-3.9 30.7 2 14 9 24.8 21.4 31.7 11.9 6.6 24.8 7.4 37.9 5.4 15.1-2.3 28.5-8.7 40.3-18.4a7.36 7.36 0 0 1 1.6-1.1c.6 3.8 1.1 7.4 1.8 11 .6 3.1 2.5 5.1 5.4 5.2 5.4.1 10.9.1 16.3 0a4.84 4.84 0 0 0 4.8-4.7 26.2 26.2 0 0 0 .1-2.8v-106a80 80 0 0 0-.9-12.9c-1.9-12.9-7.4-23.5-19-30.4-6.7-4-14.1-6-21.8-7.1-3.6-.5-7.2-.8-10.8-1.3-3.9.1-7.9.1-11.9.1zm35 127.7a3.33 3.33 0 0 1-1.5 3c-11.2 8.1-23.5 13.5-37.4 14.9-5.7.6-11.4.4-16.8-1.8a20.08 20.08 0 0 1-12.4-13.3 32.9 32.9 0 0 1-.1-19.4c2.5-8.3 8.4-13 16.4-15.6a61.33 61.33 0 0 1 24.8-2.2c8.4.7 16.6 2.3 25 3.4 1.6.2 2.1 1 2.1 2.6-.1 4.8 0 9.5 0 14.3s-.2 9.4-.1 14.1zm259.9 129.4c-1-5-4.8-6.9-9.1-8.3a88.42 88.42 0 0 0-21-3.9 147.32 147.32 0 0 0-39.2 1.9c-14.3 2.7-27.9 7.3-40 15.6a13.75 13.75 0 0 0-3.7 3.5 5.11 5.11 0 0 0-.5 4c.4 1.5 2.1 1.9 3.6 1.8a16.2 16.2 0 0 0 2.2-.1c7.8-.8 15.5-1.7 23.3-2.5 11.4-1.1 22.9-1.8 34.3-.9a71.64 71.64 0 0 1 14.4 2.7c5.1 1.4 7.4 5.2 7.6 10.4.4 8-1.4 15.7-3.5 23.3-4.1 15.4-10 30.3-15.8 45.1a17.6 17.6 0 0 0-1 3c-.5 2.9 1.2 4.8 4.1 4.1a10.56 10.56 0 0 0 4.8-2.5 145.91 145.91 0 0 0 12.7-13.4c12.8-16.4 20.3-35.3 24.7-55.6.8-3.6 1.4-7.3 2.1-10.9v-17.3zM493.1 199q-19.35-53.55-38.7-107.2c-2-5.7-4.2-11.3-6.3-16.9-1.1-2.9-3.2-4.8-6.4-4.8-7.6-.1-15.2-.2-22.9-.1-2.5 0-3.7 2-3.2 4.5a43.1 43.1 0 0 0 1.9 6.1q29.4 72.75 59.1 145.5c1.7 4.1 2.1 7.6.2 11.8-3.3 7.3-5.9 15-9.3 22.3-3 6.5-8 11.4-15.2 13.3a42.13 42.13 0 0 1-15.4 1.1c-2.5-.2-5-.8-7.5-1-3.4-.2-5.1 1.3-5.2 4.8q-.15 5 0 9.9c.1 5.5 2 8 7.4 8.9a108.18 108.18 0 0 0 16.9 2c17.1.4 30.7-6.5 39.5-21.4a131.63 131.63 0 0 0 9.2-18.4q35.55-89.7 70.6-179.6a26.62 26.62 0 0 0 1.6-5.5c.4-2.8-.9-4.4-3.7-4.4-6.6-.1-13.3 0-19.9 0a7.54 7.54 0 0 0-7.7 5.2c-.5 1.4-1.1 2.7-1.6 4.1l-34.8 100c-2.5 7.2-5.1 14.5-7.7 22.2-.4-1.1-.6-1.7-.9-2.4z"]
            },
            faAmilia: {
                prefix: "fab",
                iconName: "amilia",
                icon: [448, 512, [], "f36d", "M240.1 32c-61.9 0-131.5 16.9-184.2 55.4-5.1 3.1-9.1 9.2-7.2 19.4 1.1 5.1 5.1 27.4 10.2 39.6 4.1 10.2 14.2 10.2 20.3 6.1 32.5-22.3 96.5-47.7 152.3-47.7 57.9 0 58.9 28.4 58.9 73.1v38.5C203 227.7 78.2 251 46.7 264.2 11.2 280.5 16.3 357.7 16.3 376s15.2 104 124.9 104c47.8 0 113.7-20.7 153.3-42.1v25.4c0 3 2.1 8.2 6.1 9.1 3.1 1 50.7 2 59.9 2s62.5.3 66.5-.7c4.1-1 5.1-6.1 5.1-9.1V168c-.1-80.3-57.9-136-192-136zm50.2 348c-21.4 13.2-48.7 24.4-79.1 24.4-52.8 0-58.9-33.5-59-44.7 0-12.2-3-42.7 18.3-52.9 24.3-13.2 75.1-29.4 119.8-33.5z"]
            },
            faAndroid: {
                prefix: "fab",
                iconName: "android",
                icon: [576, 512, [], "f17b", "M420.55,301.93a24,24,0,1,1,24-24,24,24,0,0,1-24,24m-265.1,0a24,24,0,1,1,24-24,24,24,0,0,1-24,24m273.7-144.48,47.94-83a10,10,0,1,0-17.27-10h0l-48.54,84.07a301.25,301.25,0,0,0-246.56,0L116.18,64.45a10,10,0,1,0-17.27,10h0l47.94,83C64.53,202.22,8.24,285.55,0,384H576c-8.24-98.45-64.54-181.78-146.85-226.55"]
            },
            faAngellist: {
                prefix: "fab",
                iconName: "angellist",
                icon: [448, 512, [], "f209", "M347.1 215.4c11.7-32.6 45.4-126.9 45.4-157.1 0-26.6-15.7-48.9-43.7-48.9-44.6 0-84.6 131.7-97.1 163.1C242 144 196.6 0 156.6 0c-31.1 0-45.7 22.9-45.7 51.7 0 35.3 34.2 126.8 46.6 162-6.3-2.3-13.1-4.3-20-4.3-23.4 0-48.3 29.1-48.3 52.6 0 8.9 4.9 21.4 8 29.7-36.9 10-51.1 34.6-51.1 71.7C46 435.6 114.4 512 210.6 512c118 0 191.4-88.6 191.4-202.9 0-43.1-6.9-82-54.9-93.7zM311.7 108c4-12.3 21.1-64.3 37.1-64.3 8.6 0 10.9 8.9 10.9 16 0 19.1-38.6 124.6-47.1 148l-34-6 33.1-93.7zM142.3 48.3c0-11.9 14.5-45.7 46.3 47.1l34.6 100.3c-15.6-1.3-27.7-3-35.4 1.4-10.9-28.8-45.5-119.7-45.5-148.8zM140 244c29.3 0 67.1 94.6 67.1 107.4 0 5.1-4.9 11.4-10.6 11.4-20.9 0-76.9-76.9-76.9-97.7.1-7.7 12.7-21.1 20.4-21.1zm184.3 186.3c-29.1 32-66.3 48.6-109.7 48.6-59.4 0-106.3-32.6-128.9-88.3-17.1-43.4 3.8-68.3 20.6-68.3 11.4 0 54.3 60.3 54.3 73.1 0 4.9-7.7 8.3-11.7 8.3-16.1 0-22.4-15.5-51.1-51.4-29.7 29.7 20.5 86.9 58.3 86.9 26.1 0 43.1-24.2 38-42 3.7 0 8.3.3 11.7-.6 1.1 27.1 9.1 59.4 41.7 61.7 0-.9 2-7.1 2-7.4 0-17.4-10.6-32.6-10.6-50.3 0-28.3 21.7-55.7 43.7-71.7 8-6 17.7-9.7 27.1-13.1 9.7-3.7 20-8 27.4-15.4-1.1-11.2-5.7-21.1-16.9-21.1-27.7 0-120.6 4-120.6-39.7 0-6.7.1-13.1 17.4-13.1 32.3 0 114.3 8 138.3 29.1 18.1 16.1 24.3 113.2-31 174.7zm-98.6-126c9.7 3.1 19.7 4 29.7 6-7.4 5.4-14 12-20.3 19.1-2.8-8.5-6.2-16.8-9.4-25.1z"]
            },
            faAngrycreative: {
                prefix: "fab",
                iconName: "angrycreative",
                icon: [640, 512, [], "f36e", "M640 238.2l-3.2 28.2-34.5 2.3-2 18.1 34.5-2.3-3.2 28.2-34.4 2.2-2.3 20.1 34.4-2.2-3 26.1-64.7 4.1 12.7-113.2L527 365.2l-31.9 2-23.8-117.8 30.3-2 13.6 79.4 31.7-82.4 93.1-6.2zM426.8 371.5l28.3-1.8L468 249.6l-28.4 1.9-12.8 120zM162 388.1l-19.4-36-3.5 37.4-28.2 1.7 2.7-29.1c-11 18-32 34.3-56.9 35.8C23.9 399.9-3 377 .3 339.7c2.6-29.3 26.7-62.8 67.5-65.4 37.7-2.4 47.6 23.2 51.3 28.8l2.8-30.8 38.9-2.5c20.1-1.3 38.7 3.7 42.5 23.7l2.6-26.6 64.8-4.2-2.7 27.9-36.4 2.4-1.7 17.9 36.4-2.3-2.7 27.9-36.4 2.3-1.9 19.9 36.3-2.3-2.1 20.8 55-117.2 23.8-1.6L370.4 369l8.9-85.6-22.3 1.4 2.9-27.9 75-4.9-3 28-24.3 1.6-9.7 91.9-58 3.7-4.3-15.6-39.4 2.5-8 16.3-126.2 7.7zm-44.3-70.2l-26.4 1.7C84.6 307.2 76.9 303 65 303.8c-19 1.2-33.3 17.5-34.6 33.3-1.4 16 7.3 32.5 28.7 31.2 12.8-.8 21.3-8.6 28.9-18.9l27-1.7 2.7-29.8zm56.1-7.7c1.2-12.9-7.6-13.6-26.1-12.4l-2.7 28.5c14.2-.9 27.5-2.1 28.8-16.1zm21.1 70.8l5.8-60c-5 13.5-14.7 21.1-27.9 26.6l22.1 33.4zm135.4-45l-7.9-37.8-15.8 39.3 23.7-1.5zm-170.1-74.6l-4.3-17.5-39.6 2.6-8.1 18.2-31.9 2.1 57-121.9 23.9-1.6 30.7 102 9.9-104.7 27-1.8 37.8 63.6 6.5-66.6 28.5-1.9-4 41.2c7.4-13.5 22.9-44.7 63.6-47.5 40.5-2.8 52.4 29.3 53.4 30.3l3.3-32 39.3-2.7c12.7-.9 27.8.3 36.3 9.7l-4.4-11.9 32.2-2.2 12.9 43.2 23-45.7 31-2.2-43.6 78.4-4.8 44.3-28.4 1.9 4.8-44.3-15.8-43c1 22.3-9.2 40.1-32 49.6l25.2 38.8-36.4 2.4-19.2-36.8-4 38.3-28.4 1.9 3.3-31.5c-6.7 9.3-19.7 35.4-59.6 38-26.2 1.7-45.6-10.3-55.4-39.2l-4 40.3-25 1.6-37.6-63.3-6.3 66.2-56.8 3.7zm276.6-82.1c10.2-.7 17.5-2.1 21.6-4.3 4.5-2.4 7-6.4 7.6-12.1.6-5.3-.6-8.8-3.4-10.4-3.6-2.1-10.6-2.8-22.9-2l-2.9 28.8zM327.7 214c5.6 5.9 12.7 8.5 21.3 7.9 4.7-.3 9.1-1.8 13.3-4.1 5.5-3 10.6-8 15.1-14.3l-34.2 2.3 2.4-23.9 63.1-4.3 1.2-12-31.2 2.1c-4.1-3.7-7.8-6.6-11.1-8.1-4-1.7-8.1-2.8-12.2-2.5-8 .5-15.3 3.6-22 9.2-7.7 6.4-12 14.5-12.9 24.4-1.1 9.6 1.4 17.3 7.2 23.3zm-201.3 8.2l23.8-1.6-8.3-37.6-15.5 39.2z"]
            },
            faAngular: {
                prefix: "fab",
                iconName: "angular",
                icon: [448, 512, [], "f420", "M185.7 268.1h76.2l-38.1-91.6-38.1 91.6zM223.8 32L16 106.4l31.8 275.7 176 97.9 176-97.9 31.8-275.7zM354 373.8h-48.6l-26.2-65.4H168.6l-26.2 65.4H93.7L223.8 81.5z"]
            },
            faAppStore: {
                prefix: "fab",
                iconName: "app-store",
                icon: [512, 512, [], "f36f", "M255.9 120.9l9.1-15.7c5.6-9.8 18.1-13.1 27.9-7.5 9.8 5.6 13.1 18.1 7.5 27.9l-87.5 151.5h63.3c20.5 0 32 24.1 23.1 40.8H113.8c-11.3 0-20.4-9.1-20.4-20.4 0-11.3 9.1-20.4 20.4-20.4h52l66.6-115.4-20.8-36.1c-5.6-9.8-2.3-22.2 7.5-27.9 9.8-5.6 22.2-2.3 27.9 7.5l8.9 15.7zm-78.7 218l-19.6 34c-5.6 9.8-18.1 13.1-27.9 7.5-9.8-5.6-13.1-18.1-7.5-27.9l14.6-25.2c16.4-5.1 29.8-1.2 40.4 11.6zm168.9-61.7h53.1c11.3 0 20.4 9.1 20.4 20.4 0 11.3-9.1 20.4-20.4 20.4h-29.5l19.9 34.5c5.6 9.8 2.3 22.2-7.5 27.9-9.8 5.6-22.2 2.3-27.9-7.5-33.5-58.1-58.7-101.6-75.4-130.6-17.1-29.5-4.9-59.1 7.2-69.1 13.4 23 33.4 57.7 60.1 104zM256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm216 248c0 118.7-96.1 216-216 216-118.7 0-216-96.1-216-216 0-118.7 96.1-216 216-216 118.7 0 216 96.1 216 216z"]
            },
            faAppStoreIos: {
                prefix: "fab",
                iconName: "app-store-ios",
                icon: [448, 512, [], "f370", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM127 384.5c-5.5 9.6-17.8 12.8-27.3 7.3-9.6-5.5-12.8-17.8-7.3-27.3l14.3-24.7c16.1-4.9 29.3-1.1 39.6 11.4L127 384.5zm138.9-53.9H84c-11 0-20-9-20-20s9-20 20-20h51l65.4-113.2-20.5-35.4c-5.5-9.6-2.2-21.8 7.3-27.3 9.6-5.5 21.8-2.2 27.3 7.3l8.9 15.4 8.9-15.4c5.5-9.6 17.8-12.8 27.3-7.3 9.6 5.5 12.8 17.8 7.3 27.3l-85.8 148.6h62.1c20.2 0 31.5 23.7 22.7 40zm98.1 0h-29l19.6 33.9c5.5 9.6 2.2 21.8-7.3 27.3-9.6 5.5-21.8 2.2-27.3-7.3-32.9-56.9-57.5-99.7-74-128.1-16.7-29-4.8-58 7.1-67.8 13.1 22.7 32.7 56.7 58.9 102h52c11 0 20 9 20 20 0 11.1-9 20-20 20z"]
            },
            faApper: {
                prefix: "fab",
                iconName: "apper",
                icon: [640, 512, [], "f371", "M42.1 239.1c22.2 0 29 2.8 33.5 14.6h.8v-22.9c0-11.3-4.8-15.4-17.9-15.4-11.3 0-14.4 2.5-15.1 12.8H4.8c.3-13.9 1.5-19.1 5.8-24.4C17.9 195 29.5 192 56.7 192c33 0 47.1 5 53.9 18.9 2 4.3 4 15.6 4 23.7v76.3H76.3l1.3-19.1h-1c-5.3 15.6-13.6 20.4-35.5 20.4-30.3 0-41.1-10.1-41.1-37.3 0-25.2 12.3-35.8 42.1-35.8zm17.1 48.1c13.1 0 16.9-3 16.9-13.4 0-9.1-4.3-11.6-19.6-11.6-13.1 0-17.9 3-17.9 12.1-.1 10.4 3.7 12.9 20.6 12.9zm77.8-94.9h38.3l-1.5 20.6h.8c9.1-17.1 15.9-20.9 37.5-20.9 14.4 0 24.7 3 31.5 9.1 9.8 8.6 12.8 20.4 12.8 48.1 0 30-3 43.1-12.1 52.9-6.8 7.3-16.4 10.1-33.2 10.1-20.4 0-29.2-5.5-33.8-21.2h-.8v70.3H137v-169zm80.9 60.7c0-27.5-3.3-32.5-20.7-32.5-16.9 0-20.7 5-20.7 28.7 0 28 3.5 33.5 21.2 33.5 16.4 0 20.2-5.6 20.2-29.7zm57.9-60.7h38.3l-1.5 20.6h.8c9.1-17.1 15.9-20.9 37.5-20.9 14.4 0 24.7 3 31.5 9.1 9.8 8.6 12.8 20.4 12.8 48.1 0 30-3 43.1-12.1 52.9-6.8 7.3-16.4 10.1-33.3 10.1-20.4 0-29.2-5.5-33.8-21.2h-.8v70.3h-39.5v-169zm80.9 60.7c0-27.5-3.3-32.5-20.7-32.5-16.9 0-20.7 5-20.7 28.7 0 28 3.5 33.5 21.2 33.5 16.4 0 20.2-5.6 20.2-29.7zm53.8-3.8c0-25.4 3.3-37.8 12.3-45.8 8.8-8.1 22.2-11.3 45.1-11.3 42.8 0 55.7 12.8 55.7 55.7v11.1h-75.3c-.3 2-.3 4-.3 4.8 0 16.9 4.5 21.9 20.1 21.9 13.9 0 17.9-3 17.9-13.9h37.5v2.3c0 9.8-2.5 18.9-6.8 24.7-7.3 9.8-19.6 13.6-44.3 13.6-27.5 0-41.6-3.3-50.6-12.3-8.5-8.5-11.3-21.3-11.3-50.8zm76.4-11.6c-.3-1.8-.3-3.3-.3-3.8 0-12.3-3.3-14.6-19.6-14.6-14.4 0-17.1 3-18.1 15.1l-.3 3.3h38.3zm55.6-45.3h38.3l-1.8 19.9h.7c6.8-14.9 14.4-20.2 29.7-20.2 10.8 0 19.1 3.3 23.4 9.3 5.3 7.3 6.8 14.4 6.8 34 0 1.5 0 5 .2 9.3h-35c.3-1.8.3-3.3.3-4 0-15.4-2-19.4-10.3-19.4-6.3 0-10.8 3.3-13.1 9.3-1 3-1 4.3-1 12.3v68h-38.3V192.3z"]
            },
            faApple: {
                prefix: "fab",
                iconName: "apple",
                icon: [384, 512, [], "f179", "M318.7 268.7c-.2-36.7 16.4-64.4 50-84.8-18.8-26.9-47.2-41.7-84.7-44.6-35.5-2.8-74.3 20.7-88.5 20.7-15 0-49.4-19.7-76.4-19.7C63.3 141.2 4 184.8 4 273.5q0 39.3 14.4 81.2c12.8 36.7 59 126.7 107.2 125.2 25.2-.6 43-17.9 75.8-17.9 31.8 0 48.3 17.9 76.4 17.9 48.6-.7 90.4-82.5 102.6-119.3-65.2-30.7-61.7-90-61.7-91.9zm-56.6-164.2c27.3-32.4 24.8-61.9 24-72.5-24.1 1.4-52 16.4-67.9 34.9-17.5 19.8-27.8 44.3-25.6 71.9 26.1 2 49.9-11.4 69.5-34.3z"]
            },
            faApplePay: {
                prefix: "fab",
                iconName: "apple-pay",
                icon: [640, 512, [], "f415", "M116.9 158.5c-7.5 8.9-19.5 15.9-31.5 14.9-1.5-12 4.4-24.8 11.3-32.6 7.5-9.1 20.6-15.6 31.3-16.1 1.2 12.4-3.7 24.7-11.1 33.8m10.9 17.2c-17.4-1-32.3 9.9-40.5 9.9-8.4 0-21-9.4-34.8-9.1-17.9.3-34.5 10.4-43.6 26.5-18.8 32.3-4.9 80 13.3 106.3 8.9 13 19.5 27.3 33.5 26.8 13.3-.5 18.5-8.6 34.5-8.6 16.1 0 20.8 8.6 34.8 8.4 14.5-.3 23.6-13 32.5-26 10.1-14.8 14.3-29.1 14.5-29.9-.3-.3-28-10.9-28.3-42.9-.3-26.8 21.9-39.5 22.9-40.3-12.5-18.6-32-20.6-38.8-21.1m100.4-36.2v194.9h30.3v-66.6h41.9c38.3 0 65.1-26.3 65.1-64.3s-26.4-64-64.1-64h-73.2zm30.3 25.5h34.9c26.3 0 41.3 14 41.3 38.6s-15 38.8-41.4 38.8h-34.8V165zm162.2 170.9c19 0 36.6-9.6 44.6-24.9h.6v23.4h28v-97c0-28.1-22.5-46.3-57.1-46.3-32.1 0-55.9 18.4-56.8 43.6h27.3c2.3-12 13.4-19.9 28.6-19.9 18.5 0 28.9 8.6 28.9 24.5v10.8l-37.8 2.3c-35.1 2.1-54.1 16.5-54.1 41.5.1 25.2 19.7 42 47.8 42zm8.2-23.1c-16.1 0-26.4-7.8-26.4-19.6 0-12.3 9.9-19.4 28.8-20.5l33.6-2.1v11c0 18.2-15.5 31.2-36 31.2zm102.5 74.6c29.5 0 43.4-11.3 55.5-45.4L640 193h-30.8l-35.6 115.1h-.6L537.4 193h-31.6L557 334.9l-2.8 8.6c-4.6 14.6-12.1 20.3-25.5 20.3-2.4 0-7-.3-8.9-.5v23.4c1.8.4 9.3.7 11.6.7z"]
            },
            faArtstation: {
                prefix: "fab",
                iconName: "artstation",
                icon: [512, 512, [], "f77a", "M2 377.4l43 74.3A51.35 51.35 0 0 0 90.9 480h285.4l-59.2-102.6zM501.8 350L335.6 59.3A51.38 51.38 0 0 0 290.2 32h-88.4l257.3 447.6 40.7-70.5c1.9-3.2 21-29.7 2-59.1zM275 304.5l-115.5-200L44 304.5z"]
            },
            faAsymmetrik: {
                prefix: "fab",
                iconName: "asymmetrik",
                icon: [576, 512, [], "f372", "M517.5 309.2c38.8-40 58.1-80 58.5-116.1.8-65.5-59.4-118.2-169.4-135C277.9 38.4 118.1 73.6 0 140.5 52 114 110.6 92.3 170.7 82.3c74.5-20.5 153-25.4 221.3-14.8C544.5 91.3 588.8 195 490.8 299.2c-10.2 10.8-22 21.1-35 30.6L304.9 103.4 114.7 388.9c-65.6-29.4-76.5-90.2-19.1-151.2 20.8-22.2 48.3-41.9 79.5-58.1 20-12.2 39.7-22.6 62-30.7-65.1 20.3-122.7 52.9-161.6 92.9-27.7 28.6-41.4 57.1-41.7 82.9-.5 35.1 23.4 65.1 68.4 83l-34.5 51.7h101.6l22-34.4c22.2 1 45.3 0 68.6-2.7l-22.8 37.1h135.5L340 406.3c18.6-5.3 36.9-11.5 54.5-18.7l45.9 71.8H542L468.6 349c18.5-12.1 35-25.5 48.9-39.8zm-187.6 80.5l-25-40.6-32.7 53.3c-23.4 3.5-46.7 5.1-69.2 4.4l101.9-159.3 78.7 123c-17.2 7.4-35.3 13.9-53.7 19.2z"]
            },
            faAtlassian: {
                prefix: "fab",
                iconName: "atlassian",
                icon: [512, 512, [], "f77b", "M152.2 236.4c-7.7-8.2-19.7-7.7-24.8 2.8L1.6 490.2c-5 10 2.4 21.7 13.4 21.7h175c5.8.1 11-3.2 13.4-8.4 37.9-77.8 15.1-196.3-51.2-267.1zM244.4 8.1c-122.3 193.4-8.5 348.6 65 495.5 2.5 5.1 7.7 8.4 13.4 8.4H497c11.2 0 18.4-11.8 13.4-21.7 0 0-234.5-470.6-240.4-482.3-5.3-10.6-18.8-10.8-25.6.1z"]
            },
            faAudible: {
                prefix: "fab",
                iconName: "audible",
                icon: [640, 512, [], "f373", "M640 199.9v54l-320 200L0 254v-54l320 200 320-200.1zm-194.5 72l47.1-29.4c-37.2-55.8-100.7-92.6-172.7-92.6-72 0-135.5 36.7-172.6 92.4h.3c2.5-2.3 5.1-4.5 7.7-6.7 89.7-74.4 219.4-58.1 290.2 36.3zm-220.1 18.8c16.9-11.9 36.5-18.7 57.4-18.7 34.4 0 65.2 18.4 86.4 47.6l45.4-28.4c-20.9-29.9-55.6-49.5-94.8-49.5-38.9 0-73.4 19.4-94.4 49zM103.6 161.1c131.8-104.3 318.2-76.4 417.5 62.1l.7 1 48.8-30.4C517.1 112.1 424.8 58.1 319.9 58.1c-103.5 0-196.6 53.5-250.5 135.6 9.9-10.5 22.7-23.5 34.2-32.6zm467 32.7z"]
            },
            faAutoprefixer: {
                prefix: "fab",
                iconName: "autoprefixer",
                icon: [640, 512, [], "f41c", "M318.4 16l-161 480h77.5l25.4-81.4h119.5L405 496h77.5L318.4 16zm-40.3 341.9l41.2-130.4h1.5l40.9 130.4h-83.6zM640 405l-10-31.4L462.1 358l19.4 56.5L640 405zm-462.1-47L10 373.7 0 405l158.5 9.4 19.4-56.4z"]
            },
            faAvianex: {
                prefix: "fab",
                iconName: "avianex",
                icon: [512, 512, [], "f374", "M453.1 32h-312c-38.9 0-76.2 31.2-83.3 69.7L1.2 410.3C-5.9 448.8 19.9 480 58.9 480h312c38.9 0 76.2-31.2 83.3-69.7l56.7-308.5c7-38.6-18.8-69.8-57.8-69.8zm-58.2 347.3l-32 13.5-115.4-110c-14.7 10-29.2 19.5-41.7 27.1l22.1 64.2-17.9 12.7-40.6-61-52.4-48.1 15.7-15.4 58 31.1c9.3-10.5 20.8-22.6 32.8-34.9L203 228.9l-68.8-99.8 18.8-28.9 8.9-4.8L265 207.8l4.9 4.5c19.4-18.8 33.8-32.4 33.8-32.4 7.7-6.5 21.5-2.9 30.7 7.9 9 10.5 10.6 24.7 2.7 31.3-1.8 1.3-15.5 11.4-35.3 25.6l4.5 7.3 94.9 119.4-6.3 7.9z"]
            },
            faAviato: {
                prefix: "fab",
                iconName: "aviato",
                icon: [640, 512, [], "f421", "M107.2 283.5l-19-41.8H36.1l-19 41.8H0l62.2-131.4 62.2 131.4h-17.2zm-45-98.1l-19.6 42.5h39.2l-19.6-42.5zm112.7 102.4l-62.2-131.4h17.1l45.1 96 45.1-96h17l-62.1 131.4zm80.6-4.3V156.4H271v127.1h-15.5zm209.1-115.6v115.6h-17.3V167.9h-41.2v-11.5h99.6v11.5h-41.1zM640 218.8c0 9.2-1.7 17.8-5.1 25.8-3.4 8-8.2 15.1-14.2 21.1-6 6-13.1 10.8-21.1 14.2-8 3.4-16.6 5.1-25.8 5.1s-17.8-1.7-25.8-5.1c-8-3.4-15.1-8.2-21.1-14.2-6-6-10.8-13-14.2-21.1-3.4-8-5.1-16.6-5.1-25.8s1.7-17.8 5.1-25.8c3.4-8 8.2-15.1 14.2-21.1 6-6 13-8.4 21.1-11.9 8-3.4 16.6-5.1 25.8-5.1s17.8 1.7 25.8 5.1c8 3.4 15.1 5.8 21.1 11.9 6 6 10.7 13.1 14.2 21.1 3.4 8 5.1 16.6 5.1 25.8zm-15.5 0c0-7.3-1.3-14-3.9-20.3-2.6-6.3-6.2-11.7-10.8-16.3-4.6-4.6-10-8.2-16.2-10.9-6.2-2.7-12.8-4-19.8-4s-13.6 1.3-19.8 4c-6.2 2.7-11.6 6.3-16.2 10.9-4.6 4.6-8.2 10-10.8 16.3-2.6 6.3-3.9 13.1-3.9 20.3 0 7.3 1.3 14 3.9 20.3 2.6 6.3 6.2 11.7 10.8 16.3 4.6 4.6 10 8.2 16.2 10.9 6.2 2.7 12.8 4 19.8 4s13.6-1.3 19.8-4c6.2-2.7 11.6-6.3 16.2-10.9 4.6-4.6 8.2-10 10.8-16.3 2.6-6.3 3.9-13.1 3.9-20.3zm-94.8 96.7v-6.3l88.9-10-242.9 13.4c.6-2.2 1.1-4.6 1.4-7.2.3-2 .5-4.2.6-6.5l64.8-8.1-64.9 1.9c0-.4-.1-.7-.1-1.1-2.8-17.2-25.5-23.7-25.5-23.7l-1.1-26.3h23.8l19 41.8h17.1L348.6 152l-62.2 131.4h17.1l19-41.8h23.6L345 268s-22.7 6.5-25.5 23.7c-.1.3-.1.7-.1 1.1l-64.9-1.9 64.8 8.1c.1 2.3.3 4.4.6 6.5.3 2.6.8 5 1.4 7.2L78.4 299.2l88.9 10v6.3c-5.9.9-10.5 6-10.5 12.2 0 6.8 5.6 12.4 12.4 12.4 6.8 0 12.4-5.6 12.4-12.4 0-6.2-4.6-11.3-10.5-12.2v-5.8l80.3 9v5.4c-5.7 1.1-9.9 6.2-9.9 12.1 0 6.8 5.6 10.2 12.4 10.2 6.8 0 12.4-3.4 12.4-10.2 0-6-4.3-11-9.9-12.1v-4.9l28.4 3.2v23.7h-5.9V360h5.9v-6.6h5v6.6h5.9v-13.8h-5.9V323l38.3 4.3c8.1 11.4 19 13.6 19 13.6l-.1 6.7-5.1.2-.1 12.1h4.1l.1-5h5.2l.1 5h4.1l-.1-12.1-5.1-.2-.1-6.7s10.9-2.1 19-13.6l38.3-4.3v23.2h-5.9V360h5.9v-6.6h5v6.6h5.9v-13.8h-5.9v-23.7l28.4-3.2v4.9c-5.7 1.1-9.9 6.2-9.9 12.1 0 6.8 5.6 10.2 12.4 10.2 6.8 0 12.4-3.4 12.4-10.2 0-6-4.3-11-9.9-12.1v-5.4l80.3-9v5.8c-5.9.9-10.5 6-10.5 12.2 0 6.8 5.6 12.4 12.4 12.4 6.8 0 12.4-5.6 12.4-12.4-.2-6.3-4.7-11.4-10.7-12.3zm-200.8-87.6l19.6-42.5 19.6 42.5h-17.9l-1.7-40.3-1.7 40.3h-17.9z"]
            },
            faAws: {
                prefix: "fab",
                iconName: "aws",
                icon: [640, 512, [], "f375", "M180.41 203.01c-.72 22.65 10.6 32.68 10.88 39.05a8.164 8.164 0 0 1-4.1 6.27l-12.8 8.96a10.66 10.66 0 0 1-5.63 1.92c-.43-.02-8.19 1.83-20.48-25.61a78.608 78.608 0 0 1-62.61 29.45c-16.28.89-60.4-9.24-58.13-56.21-1.59-38.28 34.06-62.06 70.93-60.05 7.1.02 21.6.37 46.99 6.27v-15.62c2.69-26.46-14.7-46.99-44.81-43.91-2.4.01-19.4-.5-45.84 10.11-7.36 3.38-8.3 2.82-10.75 2.82-7.41 0-4.36-21.48-2.94-24.2 5.21-6.4 35.86-18.35 65.94-18.18a76.857 76.857 0 0 1 55.69 17.28 70.285 70.285 0 0 1 17.67 52.36l-.01 69.29zM93.99 235.4c32.43-.47 46.16-19.97 49.29-30.47 2.46-10.05 2.05-16.41 2.05-27.4-9.67-2.32-23.59-4.85-39.56-4.87-15.15-1.14-42.82 5.63-41.74 32.26-1.24 16.79 11.12 31.4 29.96 30.48zm170.92 23.05c-7.86.72-11.52-4.86-12.68-10.37l-49.8-164.65c-.97-2.78-1.61-5.65-1.92-8.58a4.61 4.61 0 0 1 3.86-5.25c.24-.04-2.13 0 22.25 0 8.78-.88 11.64 6.03 12.55 10.37l35.72 140.83 33.16-140.83c.53-3.22 2.94-11.07 12.8-10.24h17.16c2.17-.18 11.11-.5 12.68 10.37l33.42 142.63L420.98 80.1c.48-2.18 2.72-11.37 12.68-10.37h19.72c.85-.13 6.15-.81 5.25 8.58-.43 1.85 3.41-10.66-52.75 169.9-1.15 5.51-4.82 11.09-12.68 10.37h-18.69c-10.94 1.15-12.51-9.66-12.68-10.75L328.67 110.7l-32.78 136.99c-.16 1.09-1.73 11.9-12.68 10.75h-18.3zm273.48 5.63c-5.88.01-33.92-.3-57.36-12.29a12.802 12.802 0 0 1-7.81-11.91v-10.75c0-8.45 6.2-6.9 8.83-5.89 10.04 4.06 16.48 7.14 28.81 9.6 36.65 7.53 52.77-2.3 56.72-4.48 13.15-7.81 14.19-25.68 5.25-34.95-10.48-8.79-15.48-9.12-53.13-21-4.64-1.29-43.7-13.61-43.79-52.36-.61-28.24 25.05-56.18 69.52-55.95 12.67-.01 46.43 4.13 55.57 15.62 1.35 2.09 2.02 4.55 1.92 7.04v10.11c0 4.44-1.62 6.66-4.87 6.66-7.71-.86-21.39-11.17-49.16-10.75-6.89-.36-39.89.91-38.41 24.97-.43 18.96 26.61 26.07 29.7 26.89 36.46 10.97 48.65 12.79 63.12 29.58 17.14 22.25 7.9 48.3 4.35 55.44-19.08 37.49-68.42 34.44-69.26 34.42zm40.2 104.86c-70.03 51.72-171.69 79.25-258.49 79.25A469.127 469.127 0 0 1 2.83 327.46c-6.53-5.89-.77-13.96 7.17-9.47a637.37 637.37 0 0 0 316.88 84.12 630.22 630.22 0 0 0 241.59-49.55c11.78-5 21.77 7.8 10.12 16.38zm29.19-33.29c-8.96-11.52-59.28-5.38-81.81-2.69-6.79.77-7.94-5.12-1.79-9.47 40.07-28.17 105.88-20.1 113.44-10.63 7.55 9.47-2.05 75.41-39.56 106.91-5.76 4.87-11.27 2.3-8.71-4.1 8.44-21.25 27.39-68.49 18.43-80.02z"]
            },
            faBandcamp: {
                prefix: "fab",
                iconName: "bandcamp",
                icon: [512, 512, [], "f2d5", "M256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8Zm48.2,326.1h-181L207.9,178h181Z"]
            },
            faBattleNet: {
                prefix: "fab",
                iconName: "battle-net",
                icon: [512, 512, [], "f835", "M448.61 225.62c26.87.18 35.57-7.43 38.92-12.37 12.47-16.32-7.06-47.6-52.85-71.33 17.76-33.58 30.11-63.68 36.34-85.3 3.38-11.83 1.09-19 .45-20.25-1.72 10.52-15.85 48.46-48.2 100.05-25-11.22-56.52-20.1-93.77-23.8-8.94-16.94-34.88-63.86-60.48-88.93C252.18 7.14 238.7 1.07 228.18.22h-.05c-13.83-1.55-22.67 5.85-27.4 11-17.2 18.53-24.33 48.87-25 84.07-7.24-12.35-17.17-24.63-28.5-25.93h-.18c-20.66-3.48-38.39 29.22-36 81.29-38.36 1.38-71 5.75-93 11.23-9.9 2.45-16.22 7.27-17.76 9.72 1-.38 22.4-9.22 111.56-9.22 5.22 53 29.75 101.82 26 93.19-9.73 15.4-38.24 62.36-47.31 97.7-5.87 22.88-4.37 37.61.15 47.14 5.57 12.75 16.41 16.72 23.2 18.26 25 5.71 55.38-3.63 86.7-21.14-7.53 12.84-13.9 28.51-9.06 39.34 7.31 19.65 44.49 18.66 88.44-9.45 20.18 32.18 40.07 57.94 55.7 74.12a39.79 39.79 0 0 0 8.75 7.09c5.14 3.21 8.58 3.37 8.58 3.37-8.24-6.75-34-38-62.54-91.78 22.22-16 45.65-38.87 67.47-69.27 122.82 4.6 143.29-24.76 148-31.64 14.67-19.88 3.43-57.44-57.32-93.69zm-77.85 106.22c23.81-37.71 30.34-67.77 29.45-92.33 27.86 17.57 47.18 37.58 49.06 58.83 1.14 12.93-8.1 29.12-78.51 33.5zM216.9 387.69c9.76-6.23 19.53-13.12 29.2-20.49 6.68 13.33 13.6 26.1 20.6 38.19-40.6 21.86-68.84 12.76-49.8-17.7zm215-171.35c-10.29-5.34-21.16-10.34-32.38-15.05a722.459 722.459 0 0 0 22.74-36.9c39.06 24.1 45.9 53.18 9.64 51.95zM279.18 398c-5.51-11.35-11-23.5-16.5-36.44 43.25 1.27 62.42-18.73 63.28-20.41 0 .07-25 15.64-62.53 12.25a718.78 718.78 0 0 0 85.06-84q13.06-15.31 24.93-31.11c-.36-.29-1.54-3-16.51-12-51.7 60.27-102.34 98-132.75 115.92-20.59-11.18-40.84-31.78-55.71-61.49-20-39.92-30-82.39-31.57-116.07 12.3.91 25.27 2.17 38.85 3.88-22.29 36.8-14.39 63-13.47 64.23 0-.07-.95-29.17 20.14-59.57a695.23 695.23 0 0 0 44.67 152.84c.93-.38 1.84.88 18.67-8.25-26.33-74.47-33.76-138.17-34-173.43 20-12.42 48.18-19.8 81.63-17.81 44.57 2.67 86.36 15.25 116.32 30.71q-10.69 15.66-23.33 32.47C365.63 152 339.1 145.84 337.5 146c.11 0 25.9 14.07 41.52 47.22a717.63 717.63 0 0 0-115.34-31.71 646.608 646.608 0 0 0-39.39-6.05c-.07.45-1.81 1.85-2.16 20.33C300 190.28 358.78 215.68 389.36 233c.74 23.55-6.95 51.61-25.41 79.57-24.6 37.31-56.39 67.23-84.77 85.43zm27.4-287c-44.56-1.66-73.58 7.43-94.69 20.67 2-52.3 21.31-76.38 38.21-75.28C267 52.15 305 108.55 306.58 111zm-130.65 3.1c.48 12.11 1.59 24.62 3.21 37.28-14.55-.85-28.74-1.25-42.4-1.26-.08 3.24-.12-51 24.67-49.59h.09c5.76 1.09 10.63 6.88 14.43 13.57zm-28.06 162c20.76 39.7 43.3 60.57 65.25 72.31-46.79 24.76-77.53 20-84.92 4.51-.2-.21-11.13-15.3 19.67-76.81zm210.06 74.8"]
            },
            faBehance: {
                prefix: "fab",
                iconName: "behance",
                icon: [576, 512, [], "f1b4", "M232 237.2c31.8-15.2 48.4-38.2 48.4-74 0-70.6-52.6-87.8-113.3-87.8H0v354.4h171.8c64.4 0 124.9-30.9 124.9-102.9 0-44.5-21.1-77.4-64.7-89.7zM77.9 135.9H151c28.1 0 53.4 7.9 53.4 40.5 0 30.1-19.7 42.2-47.5 42.2h-79v-82.7zm83.3 233.7H77.9V272h84.9c34.3 0 56 14.3 56 50.6 0 35.8-25.9 47-57.6 47zm358.5-240.7H376V94h143.7v34.9zM576 305.2c0-75.9-44.4-139.2-124.9-139.2-78.2 0-131.3 58.8-131.3 135.8 0 79.9 50.3 134.7 131.3 134.7 61.3 0 101-27.6 120.1-86.3H509c-6.7 21.9-34.3 33.5-55.7 33.5-41.3 0-63-24.2-63-65.3h185.1c.3-4.2.6-8.7.6-13.2zM390.4 274c2.3-33.7 24.7-54.8 58.5-54.8 35.4 0 53.2 20.8 56.2 54.8H390.4z"]
            },
            faBehanceSquare: {
                prefix: "fab",
                iconName: "behance-square",
                icon: [448, 512, [], "f1b5", "M186.5 293c0 19.3-14 25.4-31.2 25.4h-45.1v-52.9h46c18.6.1 30.3 7.8 30.3 27.5zm-7.7-82.3c0-17.7-13.7-21.9-28.9-21.9h-39.6v44.8H153c15.1 0 25.8-6.6 25.8-22.9zm132.3 23.2c-18.3 0-30.5 11.4-31.7 29.7h62.2c-1.7-18.5-11.3-29.7-30.5-29.7zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zM271.7 185h77.8v-18.9h-77.8V185zm-43 110.3c0-24.1-11.4-44.9-35-51.6 17.2-8.2 26.2-17.7 26.2-37 0-38.2-28.5-47.5-61.4-47.5H68v192h93.1c34.9-.2 67.6-16.9 67.6-55.9zM380 280.5c0-41.1-24.1-75.4-67.6-75.4-42.4 0-71.1 31.8-71.1 73.6 0 43.3 27.3 73 71.1 73 33.2 0 54.7-14.9 65.1-46.8h-33.7c-3.7 11.9-18.6 18.1-30.2 18.1-22.4 0-34.1-13.1-34.1-35.3h100.2c.1-2.3.3-4.8.3-7.2z"]
            },
            faBimobject: {
                prefix: "fab",
                iconName: "bimobject",
                icon: [448, 512, [], "f378", "M416 32H32C14.4 32 0 46.4 0 64v384c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32zm-64 257.4c0 49.4-11.4 82.6-103.8 82.6h-16.9c-44.1 0-62.4-14.9-70.4-38.8h-.9V368H96V136h64v74.7h1.1c4.6-30.5 39.7-38.8 69.7-38.8h17.3c92.4 0 103.8 33.1 103.8 82.5v35zm-64-28.9v22.9c0 21.7-3.4 33.8-38.4 33.8h-45.3c-28.9 0-44.1-6.5-44.1-35.7v-19c0-29.3 15.2-35.7 44.1-35.7h45.3c35-.2 38.4 12 38.4 33.7z"]
            },
            faBitbucket: {
                prefix: "fab",
                iconName: "bitbucket",
                icon: [512, 512, [], "f171", "M22.2 32A16 16 0 0 0 6 47.8a26.35 26.35 0 0 0 .2 2.8l67.9 412.1a21.77 21.77 0 0 0 21.3 18.2h325.7a16 16 0 0 0 16-13.4L505 50.7a16 16 0 0 0-13.2-18.3 24.58 24.58 0 0 0-2.8-.2L22.2 32zm285.9 297.8h-104l-28.1-147h157.3l-25.2 147z"]
            },
            faBitcoin: {
                prefix: "fab",
                iconName: "bitcoin",
                icon: [512, 512, [], "f379", "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zm-141.651-35.33c4.937-32.999-20.191-50.739-54.55-62.573l11.146-44.702-27.213-6.781-10.851 43.524c-7.154-1.783-14.502-3.464-21.803-5.13l10.929-43.81-27.198-6.781-11.153 44.686c-5.922-1.349-11.735-2.682-17.377-4.084l.031-.14-37.53-9.37-7.239 29.062s20.191 4.627 19.765 4.913c11.022 2.751 13.014 10.044 12.68 15.825l-12.696 50.925c.76.194 1.744.473 2.829.907-.907-.225-1.876-.473-2.876-.713l-17.796 71.338c-1.349 3.348-4.767 8.37-12.471 6.464.271.395-19.78-4.937-19.78-4.937l-13.51 31.147 35.414 8.827c6.588 1.651 13.045 3.379 19.4 5.006l-11.262 45.213 27.182 6.781 11.153-44.733a1038.209 1038.209 0 0 0 21.687 5.627l-11.115 44.523 27.213 6.781 11.262-45.128c46.404 8.781 81.299 5.239 95.986-36.727 11.836-33.79-.589-53.281-25.004-65.991 17.78-4.098 31.174-15.792 34.747-39.949zm-62.177 87.179c-8.41 33.79-65.308 15.523-83.755 10.943l14.944-59.899c18.446 4.603 77.6 13.717 68.811 48.956zm8.417-87.667c-7.673 30.736-55.031 15.12-70.393 11.292l13.548-54.327c15.363 3.828 64.836 10.973 56.845 43.035z"]
            },
            faBity: {
                prefix: "fab",
                iconName: "bity",
                icon: [496, 512, [], "f37a", "M78.4 67.2C173.8-22 324.5-24 421.5 71c14.3 14.1-6.4 37.1-22.4 21.5-84.8-82.4-215.8-80.3-298.9-3.2-16.3 15.1-36.5-8.3-21.8-22.1zm98.9 418.6c19.3 5.7 29.3-23.6 7.9-30C73 421.9 9.4 306.1 37.7 194.8c5-19.6-24.9-28.1-30.2-7.1-32.1 127.4 41.1 259.8 169.8 298.1zm148.1-2c121.9-40.2 192.9-166.9 164.4-291-4.5-19.7-34.9-13.8-30 7.9 24.2 107.7-37.1 217.9-143.2 253.4-21.2 7-10.4 36 8.8 29.7zm-62.9-79l.2-71.8c0-8.2-6.6-14.8-14.8-14.8-8.2 0-14.8 6.7-14.8 14.8l-.2 71.8c0 8.2 6.6 14.8 14.8 14.8s14.8-6.6 14.8-14.8zm71-269c2.1 90.9 4.7 131.9-85.5 132.5-92.5-.7-86.9-44.3-85.5-132.5 0-21.8-32.5-19.6-32.5 0v71.6c0 69.3 60.7 90.9 118 90.1 57.3.8 118-20.8 118-90.1v-71.6c0-19.6-32.5-21.8-32.5 0z"]
            },
            faBlackTie: {
                prefix: "fab",
                iconName: "black-tie",
                icon: [448, 512, [], "f27e", "M0 32v448h448V32H0zm316.5 325.2L224 445.9l-92.5-88.7 64.5-184-64.5-86.6h184.9L252 173.2l64.5 184z"]
            },
            faBlackberry: {
                prefix: "fab",
                iconName: "blackberry",
                icon: [512, 512, [], "f37b", "M166 116.9c0 23.4-16.4 49.1-72.5 49.1H23.4l21-88.8h67.8c42.1 0 53.8 23.3 53.8 39.7zm126.2-39.7h-67.8L205.7 166h70.1c53.8 0 70.1-25.7 70.1-49.1.1-16.4-11.6-39.7-53.7-39.7zM88.8 208.1H21L0 296.9h70.1c56.1 0 72.5-23.4 72.5-49.1 0-16.3-11.7-39.7-53.8-39.7zm180.1 0h-67.8l-18.7 88.8h70.1c53.8 0 70.1-23.4 70.1-49.1 0-16.3-11.7-39.7-53.7-39.7zm189.3-53.8h-67.8l-18.7 88.8h70.1c53.8 0 70.1-23.4 70.1-49.1.1-16.3-11.6-39.7-53.7-39.7zm-28 137.9h-67.8L343.7 381h70.1c56.1 0 70.1-23.4 70.1-49.1 0-16.3-11.6-39.7-53.7-39.7zM240.8 346H173l-18.7 88.8h70.1c56.1 0 70.1-25.7 70.1-49.1.1-16.3-11.6-39.7-53.7-39.7z"]
            },
            faBlogger: {
                prefix: "fab",
                iconName: "blogger",
                icon: [448, 512, [], "f37c", "M162.4 196c4.8-4.9 6.2-5.1 36.4-5.1 27.2 0 28.1.1 32.1 2.1 5.8 2.9 8.3 7 8.3 13.6 0 5.9-2.4 10-7.6 13.4-2.8 1.8-4.5 1.9-31.1 2.1-16.4.1-29.5-.2-31.5-.8-10.3-2.9-14.1-17.7-6.6-25.3zm61.4 94.5c-53.9 0-55.8.2-60.2 4.1-3.5 3.1-5.7 9.4-5.1 13.9.7 4.7 4.8 10.1 9.2 12 2.2 1 14.1 1.7 56.3 1.2l47.9-.6 9.2-1.5c9-5.1 10.5-17.4 3.1-24.4-5.3-4.7-5-4.7-60.4-4.7zm223.4 130.1c-3.5 28.4-23 50.4-51.1 57.5-7.2 1.8-9.7 1.9-172.9 1.8-157.8 0-165.9-.1-172-1.8-8.4-2.2-15.6-5.5-22.3-10-5.6-3.8-13.9-11.8-17-16.4-3.8-5.6-8.2-15.3-10-22C.1 423 0 420.3 0 256.3 0 93.2 0 89.7 1.8 82.6 8.1 57.9 27.7 39 53 33.4c7.3-1.6 332.1-1.9 340-.3 21.2 4.3 37.9 17.1 47.6 36.4 7.7 15.3 7-1.5 7.3 180.6.2 115.8 0 164.5-.7 170.5zm-85.4-185.2c-1.1-5-4.2-9.6-7.7-11.5-1.1-.6-8-1.3-15.5-1.7-12.4-.6-13.8-.8-17.8-3.1-6.2-3.6-7.9-7.6-8-18.3 0-20.4-8.5-39.4-25.3-56.5-12-12.2-25.3-20.5-40.6-25.1-3.6-1.1-11.8-1.5-39.2-1.8-42.9-.5-52.5.4-67.1 6.2-27 10.7-46.3 33.4-53.4 62.4-1.3 5.4-1.6 14.2-1.9 64.3-.4 62.8 0 72.1 4 84.5 9.7 30.7 37.1 53.4 64.6 58.4 9.2 1.7 122.2 2.1 133.7.5 20.1-2.7 35.9-10.8 50.7-25.9 10.7-10.9 17.4-22.8 21.8-38.5 3.2-10.9 2.9-88.4 1.7-93.9z"]
            },
            faBloggerB: {
                prefix: "fab",
                iconName: "blogger-b",
                icon: [448, 512, [], "f37d", "M446.6 222.7c-1.8-8-6.8-15.4-12.5-18.5-1.8-1-13-2.2-25-2.7-20.1-.9-22.3-1.3-28.7-5-10.1-5.9-12.8-12.3-12.9-29.5-.1-33-13.8-63.7-40.9-91.3-19.3-19.7-40.9-33-65.5-40.5-5.9-1.8-19.1-2.4-63.3-2.9-69.4-.8-84.8.6-108.4 10C45.9 59.5 14.7 96.1 3.3 142.9 1.2 151.7.7 165.8.2 246.8c-.6 101.5.1 116.4 6.4 136.5 15.6 49.6 59.9 86.3 104.4 94.3 14.8 2.7 197.3 3.3 216 .8 32.5-4.4 58-17.5 81.9-41.9 17.3-17.7 28.1-36.8 35.2-62.1 4.9-17.6 4.5-142.8 2.5-151.7zm-322.1-63.6c7.8-7.9 10-8.2 58.8-8.2 43.9 0 45.4.1 51.8 3.4 9.3 4.7 13.4 11.3 13.4 21.9 0 9.5-3.8 16.2-12.3 21.6-4.6 2.9-7.3 3.1-50.3 3.3-26.5.2-47.7-.4-50.8-1.2-16.6-4.7-22.8-28.5-10.6-40.8zm191.8 199.8l-14.9 2.4-77.5.9c-68.1.8-87.3-.4-90.9-2-7.1-3.1-13.8-11.7-14.9-19.4-1.1-7.3 2.6-17.3 8.2-22.4 7.1-6.4 10.2-6.6 97.3-6.7 89.6-.1 89.1-.1 97.6 7.8 12.1 11.3 9.5 31.2-4.9 39.4z"]
            },
            faBluetooth: {
                prefix: "fab",
                iconName: "bluetooth",
                icon: [448, 512, [], "f293", "M292.6 171.1L249.7 214l-.3-86 43.2 43.1m-43.2 219.8l43.1-43.1-42.9-42.9-.2 86zM416 259.4C416 465 344.1 512 230.9 512S32 465 32 259.4 115.4 0 228.6 0 416 53.9 416 259.4zm-158.5 0l79.4-88.6L211.8 36.5v176.9L138 139.6l-27 26.9 92.7 93-92.7 93 26.9 26.9 73.8-73.8 2.3 170 127.4-127.5-83.9-88.7z"]
            },
            faBluetoothB: {
                prefix: "fab",
                iconName: "bluetooth-b",
                icon: [320, 512, [], "f294", "M196.48 260.023l92.626-103.333L143.125 0v206.33l-86.111-86.111-31.406 31.405 108.061 108.399L25.608 368.422l31.406 31.405 86.111-86.111L145.84 512l148.552-148.644-97.912-103.333zm40.86-102.996l-49.977 49.978-.338-100.295 50.315 50.317zM187.363 313.04l49.977 49.978-50.315 50.316.338-100.294z"]
            },
            faBootstrap: {
                prefix: "fab",
                iconName: "bootstrap",
                icon: [448, 512, [], "f836", "M292.3 311.93c0 42.41-39.72 41.43-43.92 41.43h-80.89v-81.69h80.89c42.56 0 43.92 31.9 43.92 40.26zm-50.15-73.13c.67 0 38.44 1 38.44-36.31 0-15.52-3.51-35.87-38.44-35.87h-74.66v72.18h74.66zM448 106.67v298.66A74.89 74.89 0 0 1 373.33 480H74.67A74.89 74.89 0 0 1 0 405.33V106.67A74.89 74.89 0 0 1 74.67 32h298.66A74.89 74.89 0 0 1 448 106.67zM338.05 317.86c0-21.57-6.65-58.29-49.05-67.35v-.73c22.91-9.78 37.34-28.25 37.34-55.64 0-7 2-64.78-77.6-64.78h-127v261.33c128.23 0 139.87 1.68 163.6-5.71 14.21-4.42 52.71-17.98 52.71-67.12z"]
            },
            faBtc: {
                prefix: "fab",
                iconName: "btc",
                icon: [384, 512, [], "f15a", "M310.204 242.638c27.73-14.18 45.377-39.39 41.28-81.3-5.358-57.351-52.458-76.573-114.85-81.929V0h-48.528v77.203c-12.605 0-25.525.315-38.444.63V0h-48.528v79.409c-17.842.539-38.622.276-97.37 0v51.678c38.314-.678 58.417-3.14 63.023 21.427v217.429c-2.925 19.492-18.524 16.685-53.255 16.071L3.765 443.68c88.481 0 97.37.315 97.37.315V512h48.528v-67.06c13.234.315 26.154.315 38.444.315V512h48.528v-68.005c81.299-4.412 135.647-24.894 142.895-101.467 5.671-61.446-23.32-88.862-69.326-99.89zM150.608 134.553c27.415 0 113.126-8.507 113.126 48.528 0 54.515-85.71 48.212-113.126 48.212v-96.74zm0 251.776V279.821c32.772 0 133.127-9.138 133.127 53.255-.001 60.186-100.355 53.253-133.127 53.253z"]
            },
            faBuffer: {
                prefix: "fab",
                iconName: "buffer",
                icon: [448, 512, [], "f837", "M427.84 380.67l-196.5 97.82a18.6 18.6 0 0 1-14.67 0L20.16 380.67c-4-2-4-5.28 0-7.29L67.22 350a18.65 18.65 0 0 1 14.69 0l134.76 67a18.51 18.51 0 0 0 14.67 0l134.76-67a18.62 18.62 0 0 1 14.68 0l47.06 23.43c4.05 1.96 4.05 5.24 0 7.24zm0-136.53l-47.06-23.43a18.62 18.62 0 0 0-14.68 0l-134.76 67.08a18.68 18.68 0 0 1-14.67 0L81.91 220.71a18.65 18.65 0 0 0-14.69 0l-47.06 23.43c-4 2-4 5.29 0 7.31l196.51 97.8a18.6 18.6 0 0 0 14.67 0l196.5-97.8c4.05-2.02 4.05-5.3 0-7.31zM20.16 130.42l196.5 90.29a20.08 20.08 0 0 0 14.67 0l196.51-90.29c4-1.86 4-4.89 0-6.74L231.33 33.4a19.88 19.88 0 0 0-14.67 0l-196.5 90.28c-4.05 1.85-4.05 4.88 0 6.74z"]
            },
            faBuromobelexperte: {
                prefix: "fab",
                iconName: "buromobelexperte",
                icon: [448, 512, [], "f37f", "M0 32v128h128V32H0zm120 120H8V40h112v112zm40-120v128h128V32H160zm120 120H168V40h112v112zm40-120v128h128V32H320zm120 120H328V40h112v112zM0 192v128h128V192H0zm120 120H8V200h112v112zm40-120v128h128V192H160zm120 120H168V200h112v112zm40-120v128h128V192H320zm120 120H328V200h112v112zM0 352v128h128V352H0zm120 120H8V360h112v112zm40-120v128h128V352H160zm120 120H168V360h112v112zm40-120v128h128V352H320z"]
            },
            faBuyNLarge: {
                prefix: "fab",
                iconName: "buy-n-large",
                icon: [576, 512, [], "f8a6", "M288 32C133.27 32 7.79 132.32 7.79 256S133.27 480 288 480s280.21-100.32 280.21-224S442.73 32 288 32zm-85.39 357.19L64.1 390.55l77.25-290.74h133.44c63.15 0 84.93 28.65 78 72.84a60.24 60.24 0 0 1-1.5 6.85 77.39 77.39 0 0 0-17.21-1.93c-42.35 0-76.69 33.88-76.69 75.65 0 37.14 27.14 68 62.93 74.45-18.24 37.16-56.16 60.92-117.71 61.52zM358 207.11h32l-22.16 90.31h-35.41l-11.19-35.63-7.83 35.63h-37.83l26.63-90.31h31.34l15 36.75zm145.86 182.08H306.79L322.63 328a78.8 78.8 0 0 0 11.47.83c42.34 0 76.69-33.87 76.69-75.65 0-32.65-21-60.46-50.38-71.06l21.33-82.35h92.5l-53.05 205.36h103.87zM211.7 269.39H187l-13.8 56.47h24.7c16.14 0 32.11-3.18 37.94-26.65 5.56-22.31-7.99-29.82-24.14-29.82zM233 170h-21.34L200 217.71h21.37c18 0 35.38-14.64 39.21-30.14C265.23 168.71 251.07 170 233 170z"]
            },
            faBuysellads: {
                prefix: "fab",
                iconName: "buysellads",
                icon: [448, 512, [], "f20d", "M224 150.7l42.9 160.7h-85.8L224 150.7zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-65.3 325.3l-94.5-298.7H159.8L65.3 405.3H156l111.7-91.6 24.2 91.6h90.8z"]
            },
            faCanadianMapleLeaf: {
                prefix: "fab",
                iconName: "canadian-maple-leaf",
                icon: [512, 512, [], "f785", "M383.8 351.7c2.5-2.5 105.2-92.4 105.2-92.4l-17.5-7.5c-10-4.9-7.4-11.5-5-17.4 2.4-7.6 20.1-67.3 20.1-67.3s-47.7 10-57.7 12.5c-7.5 2.4-10-2.5-12.5-7.5s-15-32.4-15-32.4-52.6 59.9-55.1 62.3c-10 7.5-20.1 0-17.6-10 0-10 27.6-129.6 27.6-129.6s-30.1 17.4-40.1 22.4c-7.5 5-12.6 5-17.6-5C293.5 72.3 255.9 0 255.9 0s-37.5 72.3-42.5 79.8c-5 10-10 10-17.6 5-10-5-40.1-22.4-40.1-22.4S183.3 182 183.3 192c2.5 10-7.5 17.5-17.6 10-2.5-2.5-55.1-62.3-55.1-62.3S98.1 167 95.6 172s-5 9.9-12.5 7.5C73 177 25.4 167 25.4 167s17.6 59.7 20.1 67.3c2.4 6 5 12.5-5 17.4L23 259.3s102.6 89.9 105.2 92.4c5.1 5 10 7.5 5.1 22.5-5.1 15-10.1 35.1-10.1 35.1s95.2-20.1 105.3-22.6c8.7-.9 18.3 2.5 18.3 12.5S241 512 241 512h30s-5.8-102.7-5.8-112.8 9.5-13.4 18.4-12.5c10 2.5 105.2 22.6 105.2 22.6s-5-20.1-10-35.1 0-17.5 5-22.5z"]
            },
            faCcAmazonPay: {
                prefix: "fab",
                iconName: "cc-amazon-pay",
                icon: [576, 512, [], "f42d", "M124.7 201.8c.1-11.8 0-23.5 0-35.3v-35.3c0-1.3.4-2 1.4-2.7 11.5-8 24.1-12.1 38.2-11.1 12.5.9 22.7 7 28.1 21.7 3.3 8.9 4.1 18.2 4.1 27.7 0 8.7-.7 17.3-3.4 25.6-5.7 17.8-18.7 24.7-35.7 23.9-11.7-.5-21.9-5-31.4-11.7-.9-.8-1.4-1.6-1.3-2.8zm154.9 14.6c4.6 1.8 9.3 2 14.1 1.5 11.6-1.2 21.9-5.7 31.3-12.5.9-.6 1.3-1.3 1.3-2.5-.1-3.9 0-7.9 0-11.8 0-4-.1-8 0-12 0-1.4-.4-2-1.8-2.2-7-.9-13.9-2.2-20.9-2.9-7-.6-14-.3-20.8 1.9-6.7 2.2-11.7 6.2-13.7 13.1-1.6 5.4-1.6 10.8.1 16.2 1.6 5.5 5.2 9.2 10.4 11.2zM576 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zm-207.5 23.9c.4 1.7.9 3.4 1.6 5.1 16.5 40.6 32.9 81.3 49.5 121.9 1.4 3.5 1.7 6.4.2 9.9-2.8 6.2-4.9 12.6-7.8 18.7-2.6 5.5-6.7 9.5-12.7 11.2-4.2 1.1-8.5 1.3-12.9.9-2.1-.2-4.2-.7-6.3-.8-2.8-.2-4.2 1.1-4.3 4-.1 2.8-.1 5.6 0 8.3.1 4.6 1.6 6.7 6.2 7.5 4.7.8 9.4 1.6 14.2 1.7 14.3.3 25.7-5.4 33.1-17.9 2.9-4.9 5.6-10.1 7.7-15.4 19.8-50.1 39.5-100.3 59.2-150.5.6-1.5 1.1-3 1.3-4.6.4-2.4-.7-3.6-3.1-3.7-5.6-.1-11.1 0-16.7 0-3.1 0-5.3 1.4-6.4 4.3-.4 1.1-.9 2.3-1.3 3.4l-29.1 83.7c-2.1 6.1-4.2 12.1-6.5 18.6-.4-.9-.6-1.4-.8-1.9-10.8-29.9-21.6-59.9-32.4-89.8-1.7-4.7-3.5-9.5-5.3-14.2-.9-2.5-2.7-4-5.4-4-6.4-.1-12.8-.2-19.2-.1-2.2 0-3.3 1.6-2.8 3.7zM242.4 206c1.7 11.7 7.6 20.8 18 26.6 9.9 5.5 20.7 6.2 31.7 4.6 12.7-1.9 23.9-7.3 33.8-15.5.4-.3.8-.6 1.4-1 .5 3.2.9 6.2 1.5 9.2.5 2.6 2.1 4.3 4.5 4.4 4.6.1 9.1.1 13.7 0 2.3-.1 3.8-1.6 4-3.9.1-.8.1-1.6.1-2.3v-88.8c0-3.6-.2-7.2-.7-10.8-1.6-10.8-6.2-19.7-15.9-25.4-5.6-3.3-11.8-5-18.2-5.9-3-.4-6-.7-9.1-1.1h-10c-.8.1-1.6.3-2.5.3-8.2.4-16.3 1.4-24.2 3.5-5.1 1.3-10 3.2-15 4.9-3 1-4.5 3.2-4.4 6.5.1 2.8-.1 5.6 0 8.3.1 4.1 1.8 5.2 5.7 4.1 6.5-1.7 13.1-3.5 19.7-4.8 10.3-1.9 20.7-2.7 31.1-1.2 5.4.8 10.5 2.4 14.1 7 3.1 4 4.2 8.8 4.4 13.7.3 6.9.2 13.9.3 20.8 0 .4-.1.7-.2 1.2-.4 0-.8 0-1.1-.1-8.8-2.1-17.7-3.6-26.8-4.1-9.5-.5-18.9.1-27.9 3.2-10.8 3.8-19.5 10.3-24.6 20.8-4.1 8.3-4.6 17-3.4 25.8zM98.7 106.9v175.3c0 .8 0 1.7.1 2.5.2 2.5 1.7 4.1 4.1 4.2 5.9.1 11.8.1 17.7 0 2.5 0 4-1.7 4.1-4.1.1-.8.1-1.7.1-2.5v-60.7c.9.7 1.4 1.2 1.9 1.6 15 12.5 32.2 16.6 51.1 12.9 17.1-3.4 28.9-13.9 36.7-29.2 5.8-11.6 8.3-24.1 8.7-37 .5-14.3-1-28.4-6.8-41.7-7.1-16.4-18.9-27.3-36.7-30.9-2.7-.6-5.5-.8-8.2-1.2h-7c-1.2.2-2.4.3-3.6.5-11.7 1.4-22.3 5.8-31.8 12.7-2 1.4-3.9 3-5.9 4.5-.1-.5-.3-.8-.4-1.2-.4-2.3-.7-4.6-1.1-6.9-.6-3.9-2.5-5.5-6.4-5.6h-9.7c-5.9-.1-6.9 1-6.9 6.8zM493.6 339c-2.7-.7-5.1 0-7.6 1-43.9 18.4-89.5 30.2-136.8 35.8-14.5 1.7-29.1 2.8-43.7 3.2-26.6.7-53.2-.8-79.6-4.3-17.8-2.4-35.5-5.7-53-9.9-37-8.9-72.7-21.7-106.7-38.8-8.8-4.4-17.4-9.3-26.1-14-3.8-2.1-6.2-1.5-8.2 2.1v1.7c1.2 1.6 2.2 3.4 3.7 4.8 36 32.2 76.6 56.5 122 72.9 21.9 7.9 44.4 13.7 67.3 17.5 14 2.3 28 3.8 42.2 4.5 3 .1 6 .2 9 .4.7 0 1.4.2 2.1.3h17.7c.7-.1 1.4-.3 2.1-.3 14.9-.4 29.8-1.8 44.6-4 21.4-3.2 42.4-8.1 62.9-14.7 29.6-9.6 57.7-22.4 83.4-40.1 2.8-1.9 5.7-3.8 8-6.2 4.3-4.4 2.3-10.4-3.3-11.9zm50.4-27.7c-.8-4.2-4-5.8-7.6-7-5.7-1.9-11.6-2.8-17.6-3.3-11-.9-22-.4-32.8 1.6-12 2.2-23.4 6.1-33.5 13.1-1.2.8-2.4 1.8-3.1 3-.6.9-.7 2.3-.5 3.4.3 1.3 1.7 1.6 3 1.5.6 0 1.2 0 1.8-.1l19.5-2.1c9.6-.9 19.2-1.5 28.8-.8 4.1.3 8.1 1.2 12 2.2 4.3 1.1 6.2 4.4 6.4 8.7.3 6.7-1.2 13.1-2.9 19.5-3.5 12.9-8.3 25.4-13.3 37.8-.3.8-.7 1.7-.8 2.5-.4 2.5 1 4 3.4 3.5 1.4-.3 3-1.1 4-2.1 3.7-3.6 7.5-7.2 10.6-11.2 10.7-13.8 17-29.6 20.7-46.6.7-3 1.2-6.1 1.7-9.1.2-4.7.2-9.6.2-14.5z"]
            },
            faCcAmex: {
                prefix: "fab",
                iconName: "cc-amex",
                icon: [576, 512, [], "f1f3", "M325.1 167.8c0-16.4-14.1-18.4-27.4-18.4l-39.1-.3v69.3H275v-25.1h18c18.4 0 14.5 10.3 14.8 25.1h16.6v-13.5c0-9.2-1.5-15.1-11-18.4 7.4-3 11.8-10.7 11.7-18.7zm-29.4 11.3H275v-15.3h21c5.1 0 10.7 1 10.7 7.4 0 6.6-5.3 7.9-11 7.9zM279 268.6h-52.7l-21 22.8-20.5-22.8h-66.5l-.1 69.3h65.4l21.3-23 20.4 23h32.2l.1-23.3c18.9 0 49.3 4.6 49.3-23.3 0-17.3-12.3-22.7-27.9-22.7zm-103.8 54.7h-40.6v-13.8h36.3v-14.1h-36.3v-12.5h41.7l17.9 20.2zm65.8 8.2l-25.3-28.1L241 276zm37.8-31h-21.2v-17.6h21.5c5.6 0 10.2 2.3 10.2 8.4 0 6.4-4.6 9.2-10.5 9.2zm-31.6-136.7v-14.6h-55.5v69.3h55.5v-14.3h-38.9v-13.8h37.8v-14.1h-37.8v-12.5zM576 255.4h-.2zm-194.6 31.9c0-16.4-14.1-18.7-27.1-18.7h-39.4l-.1 69.3h16.6l.1-25.3h17.6c11 0 14.8 2 14.8 13.8l-.1 11.5h16.6l.1-13.8c0-8.9-1.8-15.1-11-18.4 7.7-3.1 11.8-10.8 11.9-18.4zm-29.2 11.2h-20.7v-15.6h21c5.1 0 10.7 1 10.7 7.4 0 6.9-5.4 8.2-11 8.2zm-172.8-80v-69.3h-27.6l-19.7 47-21.7-47H83.3v65.7l-28.1-65.7H30.7L1 218.5h17.9l6.4-15.3h34.5l6.4 15.3H100v-54.2l24 54.2h14.6l24-54.2v54.2zM31.2 188.8l11.2-27.6 11.5 27.6zm477.4 158.9v-4.5c-10.8 5.6-3.9 4.5-156.7 4.5 0-25.2.1-23.9 0-25.2-1.7-.1-3.2-.1-9.4-.1 0 17.9-.1 6.8-.1 25.3h-39.6c0-12.1.1-15.3.1-29.2-10 6-22.8 6.4-34.3 6.2 0 14.7-.1 8.3-.1 23h-48.9c-5.1-5.7-2.7-3.1-15.4-17.4-3.2 3.5-12.8 13.9-16.1 17.4h-82v-92.3h83.1c5 5.6 2.8 3.1 15.5 17.2 3.2-3.5 12.2-13.4 15.7-17.2h58c9.8 0 18 1.9 24.3 5.6v-5.6c54.3 0 64.3-1.4 75.7 5.1v-5.1h78.2v5.2c11.4-6.9 19.6-5.2 64.9-5.2v5c10.3-5.9 16.6-5.2 54.3-5V80c0-26.5-21.5-48-48-48h-480c-26.5 0-48 21.5-48 48v109.8c9.4-21.9 19.7-46 23.1-53.9h39.7c4.3 10.1 1.6 3.7 9 21.1v-21.1h46c2.9 6.2 11.1 24 13.9 30 5.8-13.6 10.1-23.9 12.6-30h103c0-.1 11.5 0 11.6 0 43.7.2 53.6-.8 64.4 5.3v-5.3H363v9.3c7.6-6.1 17.9-9.3 30.7-9.3h27.6c0 .5 1.9.3 2.3.3H456c4.2 9.8 2.6 6 8.8 20.6v-20.6h43.3c4.9 8-1-1.8 11.2 18.4v-18.4h39.9v92h-41.6c-5.4-9-1.4-2.2-13.2-21.9v21.9h-52.8c-6.4-14.8-.1-.3-6.6-15.3h-19c-4.2 10-2.2 5.2-6.4 15.3h-26.8c-12.3 0-22.3-3-29.7-8.9v8.9h-66.5c-.3-13.9-.1-24.8-.1-24.8-1.8-.3-3.4-.2-9.8-.2v25.1H151.2v-11.4c-2.5 5.6-2.7 5.9-5.1 11.4h-29.5c-4-8.9-2.9-6.4-5.1-11.4v11.4H58.6c-4.2-10.1-2.2-5.3-6.4-15.3H33c-4.2 10-2.2 5.2-6.4 15.3H0V432c0 26.5 21.5 48 48 48h480.1c26.5 0 48-21.5 48-48v-90.4c-12.7 8.3-32.7 6.1-67.5 6.1zm36.3-64.5H575v-14.6h-32.9c-12.8 0-23.8 6.6-23.8 20.7 0 33 42.7 12.8 42.7 27.4 0 5.1-4.3 6.4-8.4 6.4h-32l-.1 14.8h32c8.4 0 17.6-1.8 22.5-8.9v-25.8c-10.5-13.8-39.3-1.3-39.3-13.5 0-5.8 4.6-6.5 9.2-6.5zm-57 39.8h-32.2l-.1 14.8h32.2c14.8 0 26.2-5.6 26.2-22 0-33.2-42.9-11.2-42.9-26.3 0-5.6 4.9-6.4 9.2-6.4h30.4v-14.6h-33.2c-12.8 0-23.5 6.6-23.5 20.7 0 33 42.7 12.5 42.7 27.4-.1 5.4-4.7 6.4-8.8 6.4zm-42.2-40.1v-14.3h-55.2l-.1 69.3h55.2l.1-14.3-38.6-.3v-13.8H445v-14.1h-37.8v-12.5zm-56.3-108.1c-.3.2-1.4 2.2-1.4 7.6 0 6 .9 7.7 1.1 7.9.2.1 1.1.5 3.4.5l7.3-16.9c-1.1 0-2.1-.1-3.1-.1-5.6 0-7 .7-7.3 1zm20.4-10.5h-.1zm-16.2-15.2c-23.5 0-34 12-34 35.3 0 22.2 10.2 34 33 34h19.2l6.4-15.3h34.3l6.6 15.3h33.7v-51.9l31.2 51.9h23.6v-69h-16.9v48.1l-29.1-48.1h-25.3v65.4l-27.9-65.4h-24.8l-23.5 54.5h-7.4c-13.3 0-16.1-8.1-16.1-19.9 0-23.8 15.7-20 33.1-19.7v-15.2zm42.1 12.1l11.2 27.6h-22.8zm-101.1-12v69.3h16.9v-69.3z"]
            },
            faCcApplePay: {
                prefix: "fab",
                iconName: "cc-apple-pay",
                icon: [576, 512, [], "f416", "M302.2 218.4c0 17.2-10.5 27.1-29 27.1h-24.3v-54.2h24.4c18.4 0 28.9 9.8 28.9 27.1zm47.5 62.6c0 8.3 7.2 13.7 18.5 13.7 14.4 0 25.2-9.1 25.2-21.9v-7.7l-23.5 1.5c-13.3.9-20.2 5.8-20.2 14.4zM576 79v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM127.8 197.2c8.4.7 16.8-4.2 22.1-10.4 5.2-6.4 8.6-15 7.7-23.7-7.4.3-16.6 4.9-21.9 11.3-4.8 5.5-8.9 14.4-7.9 22.8zm60.6 74.5c-.2-.2-19.6-7.6-19.8-30-.2-18.7 15.3-27.7 16-28.2-8.8-13-22.4-14.4-27.1-14.7-12.2-.7-22.6 6.9-28.4 6.9-5.9 0-14.7-6.6-24.3-6.4-12.5.2-24.2 7.3-30.5 18.6-13.1 22.6-3.4 56 9.3 74.4 6.2 9.1 13.7 19.1 23.5 18.7 9.3-.4 13-6 24.2-6 11.3 0 14.5 6 24.3 5.9 10.2-.2 16.5-9.1 22.8-18.2 6.9-10.4 9.8-20.4 10-21zm135.4-53.4c0-26.6-18.5-44.8-44.9-44.8h-51.2v136.4h21.2v-46.6h29.3c26.8 0 45.6-18.4 45.6-45zm90 23.7c0-19.7-15.8-32.4-40-32.4-22.5 0-39.1 12.9-39.7 30.5h19.1c1.6-8.4 9.4-13.9 20-13.9 13 0 20.2 6 20.2 17.2v7.5l-26.4 1.6c-24.6 1.5-37.9 11.6-37.9 29.1 0 17.7 13.7 29.4 33.4 29.4 13.3 0 25.6-6.7 31.2-17.4h.4V310h19.6v-68zM516 210.9h-21.5l-24.9 80.6h-.4l-24.9-80.6H422l35.9 99.3-1.9 6c-3.2 10.2-8.5 14.2-17.9 14.2-1.7 0-4.9-.2-6.2-.3v16.4c1.2.4 6.5.5 8.1.5 20.7 0 30.4-7.9 38.9-31.8L516 210.9z"]
            },
            faCcDinersClub: {
                prefix: "fab",
                iconName: "cc-diners-club",
                icon: [576, 512, [], "f24c", "M239.7 79.9c-96.9 0-175.8 78.6-175.8 175.8 0 96.9 78.9 175.8 175.8 175.8 97.2 0 175.8-78.9 175.8-175.8 0-97.2-78.6-175.8-175.8-175.8zm-39.9 279.6c-41.7-15.9-71.4-56.4-71.4-103.8s29.7-87.9 71.4-104.1v207.9zm79.8.3V151.6c41.7 16.2 71.4 56.7 71.4 104.1s-29.7 87.9-71.4 104.1zM528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM329.7 448h-90.3c-106.2 0-193.8-85.5-193.8-190.2C45.6 143.2 133.2 64 239.4 64h90.3c105 0 200.7 79.2 200.7 193.8 0 104.7-95.7 190.2-200.7 190.2z"]
            },
            faCcDiscover: {
                prefix: "fab",
                iconName: "cc-discover",
                icon: [576, 512, [], "f1f2", "M520.4 196.1c0-7.9-5.5-12.1-15.6-12.1h-4.9v24.9h4.7c10.3 0 15.8-4.4 15.8-12.8zM528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-44.1 138.9c22.6 0 52.9-4.1 52.9 24.4 0 12.6-6.6 20.7-18.7 23.2l25.8 34.4h-19.6l-22.2-32.8h-2.2v32.8h-16zm-55.9.1h45.3v14H444v18.2h28.3V217H444v22.2h29.3V253H428zm-68.7 0l21.9 55.2 22.2-55.2h17.5l-35.5 84.2h-8.6l-35-84.2zm-55.9-3c24.7 0 44.6 20 44.6 44.6 0 24.7-20 44.6-44.6 44.6-24.7 0-44.6-20-44.6-44.6 0-24.7 20-44.6 44.6-44.6zm-49.3 6.1v19c-20.1-20.1-46.8-4.7-46.8 19 0 25 27.5 38.5 46.8 19.2v19c-29.7 14.3-63.3-5.7-63.3-38.2 0-31.2 33.1-53 63.3-38zm-97.2 66.3c11.4 0 22.4-15.3-3.3-24.4-15-5.5-20.2-11.4-20.2-22.7 0-23.2 30.6-31.4 49.7-14.3l-8.4 10.8c-10.4-11.6-24.9-6.2-24.9 2.5 0 4.4 2.7 6.9 12.3 10.3 18.2 6.6 23.6 12.5 23.6 25.6 0 29.5-38.8 37.4-56.6 11.3l10.3-9.9c3.7 7.1 9.9 10.8 17.5 10.8zM55.4 253H32v-82h23.4c26.1 0 44.1 17 44.1 41.1 0 18.5-13.2 40.9-44.1 40.9zm67.5 0h-16v-82h16zM544 433c0 8.2-6.8 15-15 15H128c189.6-35.6 382.7-139.2 416-160zM74.1 191.6c-5.2-4.9-11.6-6.6-21.9-6.6H48v54.2h4.2c10.3 0 17-2 21.9-6.4 5.7-5.2 8.9-12.8 8.9-20.7s-3.2-15.5-8.9-20.5z"]
            },
            faCcJcb: {
                prefix: "fab",
                iconName: "cc-jcb",
                icon: [576, 512, [], "f24b", "M431.5 244.3V212c41.2 0 38.5.2 38.5.2 7.3 1.3 13.3 7.3 13.3 16 0 8.8-6 14.5-13.3 15.8-1.2.4-3.3.3-38.5.3zm42.8 20.2c-2.8-.7-3.3-.5-42.8-.5v35c39.6 0 40 .2 42.8-.5 7.5-1.5 13.5-8 13.5-17 0-8.7-6-15.5-13.5-17zM576 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM182 192.3h-57c0 67.1 10.7 109.7-35.8 109.7-19.5 0-38.8-5.7-57.2-14.8v28c30 8.3 68 8.3 68 8.3 97.9 0 82-47.7 82-131.2zm178.5 4.5c-63.4-16-165-14.9-165 59.3 0 77.1 108.2 73.6 165 59.2V287C312.9 311.7 253 309 253 256s59.8-55.6 107.5-31.2v-28zM544 286.5c0-18.5-16.5-30.5-38-32v-.8c19.5-2.7 30.3-15.5 30.3-30.2 0-19-15.7-30-37-31 0 0 6.3-.3-120.3-.3v127.5h122.7c24.3.1 42.3-12.9 42.3-33.2z"]
            },
            faCcMastercard: {
                prefix: "fab",
                iconName: "cc-mastercard",
                icon: [576, 512, [], "f1f1", "M482.9 410.3c0 6.8-4.6 11.7-11.2 11.7-6.8 0-11.2-5.2-11.2-11.7 0-6.5 4.4-11.7 11.2-11.7 6.6 0 11.2 5.2 11.2 11.7zm-310.8-11.7c-7.1 0-11.2 5.2-11.2 11.7 0 6.5 4.1 11.7 11.2 11.7 6.5 0 10.9-4.9 10.9-11.7-.1-6.5-4.4-11.7-10.9-11.7zm117.5-.3c-5.4 0-8.7 3.5-9.5 8.7h19.1c-.9-5.7-4.4-8.7-9.6-8.7zm107.8.3c-6.8 0-10.9 5.2-10.9 11.7 0 6.5 4.1 11.7 10.9 11.7 6.8 0 11.2-4.9 11.2-11.7 0-6.5-4.4-11.7-11.2-11.7zm105.9 26.1c0 .3.3.5.3 1.1 0 .3-.3.5-.3 1.1-.3.3-.3.5-.5.8-.3.3-.5.5-1.1.5-.3.3-.5.3-1.1.3-.3 0-.5 0-1.1-.3-.3 0-.5-.3-.8-.5-.3-.3-.5-.5-.5-.8-.3-.5-.3-.8-.3-1.1 0-.5 0-.8.3-1.1 0-.5.3-.8.5-1.1.3-.3.5-.3.8-.5.5-.3.8-.3 1.1-.3.5 0 .8 0 1.1.3.5.3.8.3 1.1.5s.2.6.5 1.1zm-2.2 1.4c.5 0 .5-.3.8-.3.3-.3.3-.5.3-.8 0-.3 0-.5-.3-.8-.3 0-.5-.3-1.1-.3h-1.6v3.5h.8V426h.3l1.1 1.4h.8l-1.1-1.3zM576 81v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V81c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM64 220.6c0 76.5 62.1 138.5 138.5 138.5 27.2 0 53.9-8.2 76.5-23.1-72.9-59.3-72.4-171.2 0-230.5-22.6-15-49.3-23.1-76.5-23.1-76.4-.1-138.5 62-138.5 138.2zm224 108.8c70.5-55 70.2-162.2 0-217.5-70.2 55.3-70.5 162.6 0 217.5zm-142.3 76.3c0-8.7-5.7-14.4-14.7-14.7-4.6 0-9.5 1.4-12.8 6.5-2.4-4.1-6.5-6.5-12.2-6.5-3.8 0-7.6 1.4-10.6 5.4V392h-8.2v36.7h8.2c0-18.9-2.5-30.2 9-30.2 10.2 0 8.2 10.2 8.2 30.2h7.9c0-18.3-2.5-30.2 9-30.2 10.2 0 8.2 10 8.2 30.2h8.2v-23zm44.9-13.7h-7.9v4.4c-2.7-3.3-6.5-5.4-11.7-5.4-10.3 0-18.2 8.2-18.2 19.3 0 11.2 7.9 19.3 18.2 19.3 5.2 0 9-1.9 11.7-5.4v4.6h7.9V392zm40.5 25.6c0-15-22.9-8.2-22.9-15.2 0-5.7 11.9-4.8 18.5-1.1l3.3-6.5c-9.4-6.1-30.2-6-30.2 8.2 0 14.3 22.9 8.3 22.9 15 0 6.3-13.5 5.8-20.7.8l-3.5 6.3c11.2 7.6 32.6 6 32.6-7.5zm35.4 9.3l-2.2-6.8c-3.8 2.1-12.2 4.4-12.2-4.1v-16.6h13.1V392h-13.1v-11.2h-8.2V392h-7.6v7.3h7.6V416c0 17.6 17.3 14.4 22.6 10.9zm13.3-13.4h27.5c0-16.2-7.4-22.6-17.4-22.6-10.6 0-18.2 7.9-18.2 19.3 0 20.5 22.6 23.9 33.8 14.2l-3.8-6c-7.8 6.4-19.6 5.8-21.9-4.9zm59.1-21.5c-4.6-2-11.6-1.8-15.2 4.4V392h-8.2v36.7h8.2V408c0-11.6 9.5-10.1 12.8-8.4l2.4-7.6zm10.6 18.3c0-11.4 11.6-15.1 20.7-8.4l3.8-6.5c-11.6-9.1-32.7-4.1-32.7 15 0 19.8 22.4 23.8 32.7 15l-3.8-6.5c-9.2 6.5-20.7 2.6-20.7-8.6zm66.7-18.3H408v4.4c-8.3-11-29.9-4.8-29.9 13.9 0 19.2 22.4 24.7 29.9 13.9v4.6h8.2V392zm33.7 0c-2.4-1.2-11-2.9-15.2 4.4V392h-7.9v36.7h7.9V408c0-11 9-10.3 12.8-8.4l2.4-7.6zm40.3-14.9h-7.9v19.3c-8.2-10.9-29.9-5.1-29.9 13.9 0 19.4 22.5 24.6 29.9 13.9v4.6h7.9v-51.7zm7.6-75.1v4.6h.8V302h1.9v-.8h-4.6v.8h1.9zm6.6 123.8c0-.5 0-1.1-.3-1.6-.3-.3-.5-.8-.8-1.1-.3-.3-.8-.5-1.1-.8-.5 0-1.1-.3-1.6-.3-.3 0-.8.3-1.4.3-.5.3-.8.5-1.1.8-.5.3-.8.8-.8 1.1-.3.5-.3 1.1-.3 1.6 0 .3 0 .8.3 1.4 0 .3.3.8.8 1.1.3.3.5.5 1.1.8.5.3 1.1.3 1.4.3.5 0 1.1 0 1.6-.3.3-.3.8-.5 1.1-.8.3-.3.5-.8.8-1.1.3-.6.3-1.1.3-1.4zm3.2-124.7h-1.4l-1.6 3.5-1.6-3.5h-1.4v5.4h.8v-4.1l1.6 3.5h1.1l1.4-3.5v4.1h1.1v-5.4zm4.4-80.5c0-76.2-62.1-138.3-138.5-138.3-27.2 0-53.9 8.2-76.5 23.1 72.1 59.3 73.2 171.5 0 230.5 22.6 15 49.5 23.1 76.5 23.1 76.4.1 138.5-61.9 138.5-138.4z"]
            },
            faCcPaypal: {
                prefix: "fab",
                iconName: "cc-paypal",
                icon: [576, 512, [], "f1f4", "M186.3 258.2c0 12.2-9.7 21.5-22 21.5-9.2 0-16-5.2-16-15 0-12.2 9.5-22 21.7-22 9.3 0 16.3 5.7 16.3 15.5zM80.5 209.7h-4.7c-1.5 0-3 1-3.2 2.7l-4.3 26.7 8.2-.3c11 0 19.5-1.5 21.5-14.2 2.3-13.4-6.2-14.9-17.5-14.9zm284 0H360c-1.8 0-3 1-3.2 2.7l-4.2 26.7 8-.3c13 0 22-3 22-18-.1-10.6-9.6-11.1-18.1-11.1zM576 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM128.3 215.4c0-21-16.2-28-34.7-28h-40c-2.5 0-5 2-5.2 4.7L32 294.2c-.3 2 1.2 4 3.2 4h19c2.7 0 5.2-2.9 5.5-5.7l4.5-26.6c1-7.2 13.2-4.7 18-4.7 28.6 0 46.1-17 46.1-45.8zm84.2 8.8h-19c-3.8 0-4 5.5-4.2 8.2-5.8-8.5-14.2-10-23.7-10-24.5 0-43.2 21.5-43.2 45.2 0 19.5 12.2 32.2 31.7 32.2 9 0 20.2-4.9 26.5-11.9-.5 1.5-1 4.7-1 6.2 0 2.3 1 4 3.2 4H200c2.7 0 5-2.9 5.5-5.7l10.2-64.3c.3-1.9-1.2-3.9-3.2-3.9zm40.5 97.9l63.7-92.6c.5-.5.5-1 .5-1.7 0-1.7-1.5-3.5-3.2-3.5h-19.2c-1.7 0-3.5 1-4.5 2.5l-26.5 39-11-37.5c-.8-2.2-3-4-5.5-4h-18.7c-1.7 0-3.2 1.8-3.2 3.5 0 1.2 19.5 56.8 21.2 62.1-2.7 3.8-20.5 28.6-20.5 31.6 0 1.8 1.5 3.2 3.2 3.2h19.2c1.8-.1 3.5-1.1 4.5-2.6zm159.3-106.7c0-21-16.2-28-34.7-28h-39.7c-2.7 0-5.2 2-5.5 4.7l-16.2 102c-.2 2 1.3 4 3.2 4h20.5c2 0 3.5-1.5 4-3.2l4.5-29c1-7.2 13.2-4.7 18-4.7 28.4 0 45.9-17 45.9-45.8zm84.2 8.8h-19c-3.8 0-4 5.5-4.3 8.2-5.5-8.5-14-10-23.7-10-24.5 0-43.2 21.5-43.2 45.2 0 19.5 12.2 32.2 31.7 32.2 9.3 0 20.5-4.9 26.5-11.9-.3 1.5-1 4.7-1 6.2 0 2.3 1 4 3.2 4H484c2.7 0 5-2.9 5.5-5.7l10.2-64.3c.3-1.9-1.2-3.9-3.2-3.9zm47.5-33.3c0-2-1.5-3.5-3.2-3.5h-18.5c-1.5 0-3 1.2-3.2 2.7l-16.2 104-.3.5c0 1.8 1.5 3.5 3.5 3.5h16.5c2.5 0 5-2.9 5.2-5.7L544 191.2v-.3zm-90 51.8c-12.2 0-21.7 9.7-21.7 22 0 9.7 7 15 16.2 15 12 0 21.7-9.2 21.7-21.5.1-9.8-6.9-15.5-16.2-15.5z"]
            },
            faCcStripe: {
                prefix: "fab",
                iconName: "cc-stripe",
                icon: [576, 512, [], "f1f5", "M492.4 220.8c-8.9 0-18.7 6.7-18.7 22.7h36.7c0-16-9.3-22.7-18-22.7zM375 223.4c-8.2 0-13.3 2.9-17 7l.2 52.8c3.5 3.7 8.5 6.7 16.8 6.7 13.1 0 21.9-14.3 21.9-33.4 0-18.6-9-33.2-21.9-33.1zM528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM122.2 281.1c0 25.6-20.3 40.1-49.9 40.3-12.2 0-25.6-2.4-38.8-8.1v-33.9c12 6.4 27.1 11.3 38.9 11.3 7.9 0 13.6-2.1 13.6-8.7 0-17-54-10.6-54-49.9 0-25.2 19.2-40.2 48-40.2 11.8 0 23.5 1.8 35.3 6.5v33.4c-10.8-5.8-24.5-9.1-35.3-9.1-7.5 0-12.1 2.2-12.1 7.7 0 16 54.3 8.4 54.3 50.7zm68.8-56.6h-27V275c0 20.9 22.5 14.4 27 12.6v28.9c-4.7 2.6-13.3 4.7-24.9 4.7-21.1 0-36.9-15.5-36.9-36.5l.2-113.9 34.7-7.4v30.8H191zm74 2.4c-4.5-1.5-18.7-3.6-27.1 7.4v84.4h-35.5V194.2h30.7l2.2 10.5c8.3-15.3 24.9-12.2 29.6-10.5h.1zm44.1 91.8h-35.7V194.2h35.7zm0-142.9l-35.7 7.6v-28.9l35.7-7.6zm74.1 145.5c-12.4 0-20-5.3-25.1-9l-.1 40.2-35.5 7.5V194.2h31.3l1.8 8.8c4.9-4.5 13.9-11.1 27.8-11.1 24.9 0 48.4 22.5 48.4 63.8 0 45.1-23.2 65.5-48.6 65.6zm160.4-51.5h-69.5c1.6 16.6 13.8 21.5 27.6 21.5 14.1 0 25.2-3 34.9-7.9V312c-9.7 5.3-22.4 9.2-39.4 9.2-34.6 0-58.8-21.7-58.8-64.5 0-36.2 20.5-64.9 54.3-64.9 33.7 0 51.3 28.7 51.3 65.1 0 3.5-.3 10.9-.4 12.9z"]
            },
            faCcVisa: {
                prefix: "fab",
                iconName: "cc-visa",
                icon: [576, 512, [], "f1f0", "M470.1 231.3s7.6 37.2 9.3 45H446c3.3-8.9 16-43.5 16-43.5-.2.3 3.3-9.1 5.3-14.9l2.8 13.4zM576 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM152.5 331.2L215.7 176h-42.5l-39.3 106-4.3-21.5-14-71.4c-2.3-9.9-9.4-12.7-18.2-13.1H32.7l-.7 3.1c15.8 4 29.9 9.8 42.2 17.1l35.8 135h42.5zm94.4.2L272.1 176h-40.2l-25.1 155.4h40.1zm139.9-50.8c.2-17.7-10.6-31.2-33.7-42.3-14.1-7.1-22.7-11.9-22.7-19.2.2-6.6 7.3-13.4 23.1-13.4 13.1-.3 22.7 2.8 29.9 5.9l3.6 1.7 5.5-33.6c-7.9-3.1-20.5-6.6-36-6.6-39.7 0-67.6 21.2-67.8 51.4-.3 22.3 20 34.7 35.2 42.2 15.5 7.6 20.8 12.6 20.8 19.3-.2 10.4-12.6 15.2-24.1 15.2-16 0-24.6-2.5-37.7-8.3l-5.3-2.5-5.6 34.9c9.4 4.3 26.8 8.1 44.8 8.3 42.2.1 69.7-20.8 70-53zM528 331.4L495.6 176h-31.1c-9.6 0-16.9 2.8-21 12.9l-59.7 142.5H426s6.9-19.2 8.4-23.3H486c1.2 5.5 4.8 23.3 4.8 23.3H528z"]
            },
            faCentercode: {
                prefix: "fab",
                iconName: "centercode",
                icon: [512, 512, [], "f380", "M329.2 268.6c-3.8 35.2-35.4 60.6-70.6 56.8-35.2-3.8-60.6-35.4-56.8-70.6 3.8-35.2 35.4-60.6 70.6-56.8 35.1 3.8 60.6 35.4 56.8 70.6zm-85.8 235.1C96.7 496-8.2 365.5 10.1 224.3c11.2-86.6 65.8-156.9 139.1-192 161-77.1 349.7 37.4 354.7 216.6 4.1 147-118.4 262.2-260.5 254.8zm179.9-180c27.9-118-160.5-205.9-237.2-234.2-57.5 56.3-69.1 188.6-33.8 344.4 68.8 15.8 169.1-26.4 271-110.2z"]
            },
            faCentos: {
                prefix: "fab",
                iconName: "centos",
                icon: [448, 512, [], "f789", "M289.6 97.5l31.6 31.7-76.3 76.5V97.5zm-162.4 31.7l76.3 76.5V97.5h-44.7zm41.5-41.6h44.7v127.9l10.8 10.8 10.8-10.8V87.6h44.7L224.2 32zm26.2 168.1l-10.8-10.8H55.5v-44.8L0 255.7l55.5 55.6v-44.8h128.6l10.8-10.8zm79.3-20.7h107.9v-44.8l-31.6-31.7zm173.3 20.7L392 200.1v44.8H264.3l-10.8 10.8 10.8 10.8H392v44.8l55.5-55.6zM65.4 176.2l32.5-31.7 90.3 90.5h15.3v-15.3l-90.3-90.5 31.6-31.7H65.4zm316.7-78.7h-78.5l31.6 31.7-90.3 90.5V235h15.3l90.3-90.5 31.6 31.7zM203.5 413.9V305.8l-76.3 76.5 31.6 31.7h44.7zM65.4 235h108.8l-76.3-76.5-32.5 31.7zm316.7 100.2l-31.6 31.7-90.3-90.5h-15.3v15.3l90.3 90.5-31.6 31.7h78.5zm0-58.8H274.2l76.3 76.5 31.6-31.7zm-60.9 105.8l-76.3-76.5v108.1h44.7zM97.9 352.9l76.3-76.5H65.4v44.8zm181.8 70.9H235V295.9l-10.8-10.8-10.8 10.8v127.9h-44.7l55.5 55.6zm-166.5-41.6l90.3-90.5v-15.3h-15.3l-90.3 90.5-32.5-31.7v78.7h79.4z"]
            },
            faChrome: {
                prefix: "fab",
                iconName: "chrome",
                icon: [496, 512, [], "f268", "M131.5 217.5L55.1 100.1c47.6-59.2 119-91.8 192-92.1 42.3-.3 85.5 10.5 124.8 33.2 43.4 25.2 76.4 61.4 97.4 103L264 133.4c-58.1-3.4-113.4 29.3-132.5 84.1zm32.9 38.5c0 46.2 37.4 83.6 83.6 83.6s83.6-37.4 83.6-83.6-37.4-83.6-83.6-83.6-83.6 37.3-83.6 83.6zm314.9-89.2L339.6 174c37.9 44.3 38.5 108.2 6.6 157.2L234.1 503.6c46.5 2.5 94.4-7.7 137.8-32.9 107.4-62 150.9-192 107.4-303.9zM133.7 303.6L40.4 120.1C14.9 159.1 0 205.9 0 256c0 124 90.8 226.7 209.5 244.9l63.7-124.8c-57.6 10.8-113.2-20.8-139.5-72.5z"]
            },
            faChromecast: {
                prefix: "fab",
                iconName: "chromecast",
                icon: [512, 512, [], "f838", "M447.8,64H64c-23.6,0-42.7,19.1-42.7,42.7v63.9H64v-63.9h383.8v298.6H298.6V448H448c23.6,0,42.7-19.1,42.7-42.7V106.7 C490.7,83.1,471.4,64,447.8,64z M21.3,383.6L21.3,383.6l0,63.9h63.9C85.2,412.2,56.6,383.6,21.3,383.6L21.3,383.6z M21.3,298.6V341 c58.9,0,106.6,48.1,106.6,107h42.7C170.7,365.6,103.7,298.7,21.3,298.6z M213.4,448h42.7c-0.5-129.5-105.3-234.3-234.8-234.6l0,42.4 C127.3,255.6,213.3,342,213.4,448z"]
            },
            faCloudflare: {
                prefix: "fab",
                iconName: "cloudflare",
                icon: [640, 512, [], "e07d", "M407.906,319.913l-230.8-2.928a4.58,4.58,0,0,1-3.632-1.926,4.648,4.648,0,0,1-.494-4.147,6.143,6.143,0,0,1,5.361-4.076L411.281,303.9c27.631-1.26,57.546-23.574,68.022-50.784l13.286-34.542a7.944,7.944,0,0,0,.524-2.936,7.735,7.735,0,0,0-.164-1.631A151.91,151.91,0,0,0,201.257,198.4,68.12,68.12,0,0,0,94.2,269.59C41.924,271.106,0,313.728,0,366.12a96.054,96.054,0,0,0,1.029,13.958,4.508,4.508,0,0,0,4.445,3.871l426.1.051c.043,0,.08-.019.122-.02a5.606,5.606,0,0,0,5.271-4l3.273-11.265c3.9-13.4,2.448-25.8-4.1-34.9C430.124,325.423,420.09,320.487,407.906,319.913ZM513.856,221.1c-2.141,0-4.271.062-6.391.164a3.771,3.771,0,0,0-3.324,2.653l-9.077,31.193c-3.9,13.4-2.449,25.786,4.1,34.89,6.02,8.4,16.054,13.323,28.238,13.9l49.2,2.939a4.491,4.491,0,0,1,3.51,1.894,4.64,4.64,0,0,1,.514,4.169,6.153,6.153,0,0,1-5.351,4.075l-51.125,2.939c-27.754,1.27-57.669,23.574-68.145,50.784l-3.695,9.606a2.716,2.716,0,0,0,2.427,3.68c.046,0,.088.017.136.017h175.91a4.69,4.69,0,0,0,4.539-3.37,124.807,124.807,0,0,0,4.682-34C640,277.3,583.524,221.1,513.856,221.1Z"]
            },
            faCloudscale: {
                prefix: "fab",
                iconName: "cloudscale",
                icon: [448, 512, [], "f383", "M318.1 154l-9.4 7.6c-22.5-19.3-51.5-33.6-83.3-33.6C153.8 128 96 188.8 96 260.3c0 6.6.4 13.1 1.4 19.4-2-56 41.8-97.4 92.6-97.4 24.2 0 46.2 9.4 62.6 24.7l-25.2 20.4c-8.3-.9-16.8 1.8-23.1 8.1-11.1 11-11.1 28.9 0 40 11.1 11 28.9 11 40 0 6.3-6.3 9-14.9 8.1-23.1l75.2-88.8c6.3-6.5-3.3-15.9-9.5-9.6zm-83.8 111.5c-5.6 5.5-14.6 5.5-20.2 0-5.6-5.6-5.6-14.6 0-20.2s14.6-5.6 20.2 0 5.6 14.7 0 20.2zM224 32C100.5 32 0 132.5 0 256s100.5 224 224 224 224-100.5 224-224S347.5 32 224 32zm0 384c-88.2 0-160-71.8-160-160S135.8 96 224 96s160 71.8 160 160-71.8 160-160 160z"]
            },
            faCloudsmith: {
                prefix: "fab",
                iconName: "cloudsmith",
                icon: [332, 512, [], "f384", "M332.5 419.9c0 46.4-37.6 84.1-84 84.1s-84-37.7-84-84.1 37.6-84 84-84 84 37.6 84 84zm-84-243.9c46.4 0 80-37.6 80-84s-33.6-84-80-84-88 37.6-88 84-29.6 76-76 76-84 41.6-84 88 37.6 80 84 80 84-33.6 84-80 33.6-80 80-80z"]
            },
            faCloudversify: {
                prefix: "fab",
                iconName: "cloudversify",
                icon: [616, 512, [], "f385", "M148.6 304c8.2 68.5 67.4 115.5 146 111.3 51.2 43.3 136.8 45.8 186.4-5.6 69.2 1.1 118.5-44.6 131.5-99.5 14.8-62.5-18.2-132.5-92.1-155.1-33-88.1-131.4-101.5-186.5-85-57.3 17.3-84.3 53.2-99.3 109.7-7.8 2.7-26.5 8.9-45 24.1 11.7 0 15.2 8.9 15.2 19.5v20.4c0 10.7-8.7 19.5-19.5 19.5h-20.2c-10.7 0-19.5-6-19.5-16.7V240H98.8C95 240 88 244.3 88 251.9v40.4c0 6.4 5.3 11.8 11.7 11.8h48.9zm227.4 8c-10.7 46.3 21.7 72.4 55.3 86.8C324.1 432.6 259.7 348 296 288c-33.2 21.6-33.7 71.2-29.2 92.9-17.9-12.4-53.8-32.4-57.4-79.8-3-39.9 21.5-75.7 57-93.9C297 191.4 369.9 198.7 400 248c-14.1-48-53.8-70.1-101.8-74.8 30.9-30.7 64.4-50.3 114.2-43.7 69.8 9.3 133.2 82.8 67.7 150.5 35-16.3 48.7-54.4 47.5-76.9l10.5 19.6c11.8 22 15.2 47.6 9.4 72-9.2 39-40.6 68.8-79.7 76.5-32.1 6.3-83.1-5.1-91.8-59.2zM128 208H88.2c-8.9 0-16.2-7.3-16.2-16.2v-39.6c0-8.9 7.3-16.2 16.2-16.2H128c8.9 0 16.2 7.3 16.2 16.2v39.6c0 8.9-7.3 16.2-16.2 16.2zM10.1 168C4.5 168 0 163.5 0 157.9v-27.8c0-5.6 4.5-10.1 10.1-10.1h27.7c5.5 0 10.1 4.5 10.1 10.1v27.8c0 5.6-4.5 10.1-10.1 10.1H10.1zM168 142.7v-21.4c0-5.1 4.2-9.3 9.3-9.3h21.4c5.1 0 9.3 4.2 9.3 9.3v21.4c0 5.1-4.2 9.3-9.3 9.3h-21.4c-5.1 0-9.3-4.2-9.3-9.3zM56 235.5v25c0 6.3-5.1 11.5-11.4 11.5H19.4C13.1 272 8 266.8 8 260.5v-25c0-6.3 5.1-11.5 11.4-11.5h25.1c6.4 0 11.5 5.2 11.5 11.5z"]
            },
            faCodepen: {
                prefix: "fab",
                iconName: "codepen",
                icon: [512, 512, [], "f1cb", "M502.285 159.704l-234-156c-7.987-4.915-16.511-4.96-24.571 0l-234 156C3.714 163.703 0 170.847 0 177.989v155.999c0 7.143 3.714 14.286 9.715 18.286l234 156.022c7.987 4.915 16.511 4.96 24.571 0l234-156.022c6-3.999 9.715-11.143 9.715-18.286V177.989c-.001-7.142-3.715-14.286-9.716-18.285zM278 63.131l172.286 114.858-76.857 51.429L278 165.703V63.131zm-44 0v102.572l-95.429 63.715-76.857-51.429L234 63.131zM44 219.132l55.143 36.857L44 292.846v-73.714zm190 229.715L61.714 333.989l76.857-51.429L234 346.275v102.572zm22-140.858l-77.715-52 77.715-52 77.715 52-77.715 52zm22 140.858V346.275l95.429-63.715 76.857 51.429L278 448.847zm190-156.001l-55.143-36.857L468 219.132v73.714z"]
            },
            faCodiepie: {
                prefix: "fab",
                iconName: "codiepie",
                icon: [472, 512, [], "f284", "M422.5 202.9c30.7 0 33.5 53.1-.3 53.1h-10.8v44.3h-26.6v-97.4h37.7zM472 352.6C429.9 444.5 350.4 504 248 504 111 504 0 393 0 256S111 8 248 8c97.4 0 172.8 53.7 218.2 138.4l-186 108.8L472 352.6zm-38.5 12.5l-60.3-30.7c-27.1 44.3-70.4 71.4-122.4 71.4-82.5 0-149.2-66.7-149.2-148.9 0-82.5 66.7-149.2 149.2-149.2 48.4 0 88.9 23.5 116.9 63.4l59.5-34.6c-40.7-62.6-104.7-100-179.2-100-121.2 0-219.5 98.3-219.5 219.5S126.8 475.5 248 475.5c78.6 0 146.5-42.1 185.5-110.4z"]
            },
            faConfluence: {
                prefix: "fab",
                iconName: "confluence",
                icon: [512, 512, [], "f78d", "M2.3 412.2c-4.5 7.6-2.1 17.5 5.5 22.2l105.9 65.2c7.7 4.7 17.7 2.4 22.4-5.3 0-.1.1-.2.1-.2 67.1-112.2 80.5-95.9 280.9-.7 8.1 3.9 17.8.4 21.7-7.7.1-.1.1-.3.2-.4l50.4-114.1c3.6-8.1-.1-17.6-8.1-21.3-22.2-10.4-66.2-31.2-105.9-50.3C127.5 179 44.6 345.3 2.3 412.2zm507.4-312.1c4.5-7.6 2.1-17.5-5.5-22.2L398.4 12.8c-7.5-5-17.6-3.1-22.6 4.4-.2.3-.4.6-.6 1-67.3 112.6-81.1 95.6-280.6.9-8.1-3.9-17.8-.4-21.7 7.7-.1.1-.1.3-.2.4L22.2 141.3c-3.6 8.1.1 17.6 8.1 21.3 22.2 10.4 66.3 31.2 106 50.4 248 120 330.8-45.4 373.4-112.9z"]
            },
            faConnectdevelop: {
                prefix: "fab",
                iconName: "connectdevelop",
                icon: [576, 512, [], "f20e", "M550.5 241l-50.089-86.786c1.071-2.142 1.875-4.553 1.875-7.232 0-8.036-6.696-14.733-14.732-15.001l-55.447-95.893c.536-1.607 1.071-3.214 1.071-4.821 0-8.571-6.964-15.268-15.268-15.268-4.821 0-8.839 2.143-11.786 5.625H299.518C296.839 18.143 292.821 16 288 16s-8.839 2.143-11.518 5.625H170.411C167.464 18.143 163.447 16 158.625 16c-8.303 0-15.268 6.696-15.268 15.268 0 1.607.536 3.482 1.072 4.821l-55.983 97.233c-5.356 2.41-9.107 7.5-9.107 13.661 0 .535.268 1.071.268 1.607l-53.304 92.143c-7.232 1.339-12.59 7.5-12.59 15 0 7.232 5.089 13.393 12.054 15l55.179 95.358c-.536 1.607-.804 2.946-.804 4.821 0 7.232 5.089 13.393 12.054 14.732l51.697 89.732c-.536 1.607-1.071 3.482-1.071 5.357 0 8.571 6.964 15.268 15.268 15.268 4.821 0 8.839-2.143 11.518-5.357h106.875C279.161 493.857 283.447 496 288 496s8.839-2.143 11.518-5.357h107.143c2.678 2.946 6.696 4.821 10.982 4.821 8.571 0 15.268-6.964 15.268-15.268 0-1.607-.267-2.946-.803-4.285l51.697-90.268c6.964-1.339 12.054-7.5 12.054-14.732 0-1.607-.268-3.214-.804-4.821l54.911-95.358c6.964-1.339 12.322-7.5 12.322-15-.002-7.232-5.092-13.393-11.788-14.732zM153.535 450.732l-43.66-75.803h43.66v75.803zm0-83.839h-43.66c-.268-1.071-.804-2.142-1.339-3.214l44.999-47.41v50.624zm0-62.411l-50.357 53.304c-1.339-.536-2.679-1.34-4.018-1.607L43.447 259.75c.535-1.339.535-2.679.535-4.018s0-2.41-.268-3.482l51.965-90c2.679-.268 5.357-1.072 7.768-2.679l50.089 51.965v92.946zm0-102.322l-45.803-47.41c1.339-2.143 2.143-4.821 2.143-7.767 0-.268-.268-.804-.268-1.072l43.928-15.804v72.053zm0-80.625l-43.66 15.804 43.66-75.536v59.732zm326.519 39.108l.804 1.339L445.5 329.125l-63.75-67.232 98.036-101.518.268.268zM291.75 355.107l11.518 11.786H280.5l11.25-11.786zm-.268-11.25l-83.303-85.446 79.553-84.375 83.036 87.589-79.286 82.232zm5.357 5.893l79.286-82.232 67.5 71.25-5.892 28.125H313.714l-16.875-17.143zM410.411 44.393c1.071.536 2.142 1.072 3.482 1.34l57.857 100.714v.536c0 2.946.803 5.624 2.143 7.767L376.393 256l-83.035-87.589L410.411 44.393zm-9.107-2.143L287.732 162.518l-57.054-60.268 166.339-60h4.287zm-123.483 0c2.678 2.678 6.16 4.285 10.179 4.285s7.5-1.607 10.179-4.285h75L224.786 95.821 173.893 42.25h103.928zm-116.249 5.625l1.071-2.142a33.834 33.834 0 0 0 2.679-.804l51.161 53.84-54.911 19.821V47.875zm0 79.286l60.803-21.964 59.732 63.214-79.553 84.107-40.982-42.053v-83.304zm0 92.678L198 257.607l-36.428 38.304v-76.072zm0 87.858l42.053-44.464 82.768 85.982-17.143 17.678H161.572v-59.196zm6.964 162.053c-1.607-1.607-3.482-2.678-5.893-3.482l-1.071-1.607v-89.732h99.91l-91.607 94.821h-1.339zm129.911 0c-2.679-2.41-6.428-4.285-10.447-4.285s-7.767 1.875-10.447 4.285h-96.429l91.607-94.821h38.304l91.607 94.821H298.447zm120-11.786l-4.286 7.5c-1.339.268-2.41.803-3.482 1.339l-89.196-91.875h114.376l-17.412 83.036zm12.856-22.232l12.858-60.803h21.964l-34.822 60.803zm34.822-68.839h-20.357l4.553-21.16 17.143 18.214c-.535.803-1.071 1.874-1.339 2.946zm66.161-107.411l-55.447 96.697c-1.339.535-2.679 1.071-4.018 1.874l-20.625-21.964 34.554-163.928 45.803 79.286c-.267 1.339-.803 2.678-.803 4.285 0 1.339.268 2.411.536 3.75z"]
            },
            faContao: {
                prefix: "fab",
                iconName: "contao",
                icon: [512, 512, [], "f26d", "M45.4 305c14.4 67.1 26.4 129 68.2 175H34c-18.7 0-34-15.2-34-34V66c0-18.7 15.2-34 34-34h57.7C77.9 44.6 65.6 59.2 54.8 75.6c-45.4 70-27 146.8-9.4 229.4zM478 32h-90.2c21.4 21.4 39.2 49.5 52.7 84.1l-137.1 29.3c-14.9-29-37.8-53.3-82.6-43.9-24.6 5.3-41 19.3-48.3 34.6-8.8 18.7-13.2 39.8 8.2 140.3 21.1 100.2 33.7 117.7 49.5 131.2 12.9 11.1 33.4 17 58.3 11.7 44.5-9.4 55.7-40.7 57.4-73.2l137.4-29.6c3.2 71.5-18.7 125.2-57.4 163.6H478c18.7 0 34-15.2 34-34V66c0-18.8-15.2-34-34-34z"]
            },
            faCottonBureau: {
                prefix: "fab",
                iconName: "cotton-bureau",
                icon: [512, 512, [], "f89e", "M474.31 330.41c-23.66 91.85-94.23 144.59-201.9 148.35V429.6c0-48 26.41-74.39 74.39-74.39 62 0 99.2-37.2 99.2-99.21 0-61.37-36.53-98.28-97.38-99.06-33-69.32-146.5-64.65-177.24 0C110.52 157.72 74 194.63 74 256c0 62.13 37.27 99.41 99.4 99.41 48 0 74.55 26.23 74.55 74.39V479c-134.43-5-211.1-85.07-211.1-223 0-141.82 81.35-223.2 223.2-223.2 114.77 0 189.84 53.2 214.69 148.81H500C473.88 71.51 388.22 8 259.82 8 105 8 12 101.19 12 255.82 12 411.14 105.19 504.34 259.82 504c128.27 0 213.87-63.81 239.67-173.59zM357 182.33c41.37 3.45 64.2 29 64.2 73.67 0 48-26.43 74.41-74.4 74.41-28.61 0-49.33-9.59-61.59-27.33 83.06-16.55 75.59-99.67 71.79-120.75zm-81.68 97.36c-2.46-10.34-16.33-87 56.23-97 2.27 10.09 16.52 87.11-56.26 97zM260 132c28.61 0 49 9.67 61.44 27.61-28.36 5.48-49.36 20.59-61.59 43.45-12.23-22.86-33.23-38-61.6-43.45 12.41-17.69 33.27-27.35 61.57-27.35zm-71.52 50.72c73.17 10.57 58.91 86.81 56.49 97-72.41-9.84-59-86.95-56.25-97zM173.2 330.41c-48 0-74.4-26.4-74.4-74.41 0-44.36 22.86-70 64.22-73.67-6.75 37.2-1.38 106.53 71.65 120.75-12.14 17.63-32.84 27.3-61.14 27.3zm53.21 12.39A80.8 80.8 0 0 0 260 309.25c7.77 14.49 19.33 25.54 33.82 33.55a80.28 80.28 0 0 0-33.58 33.83c-8-14.5-19.07-26.23-33.56-33.83z"]
            },
            faCpanel: {
                prefix: "fab",
                iconName: "cpanel",
                icon: [640, 512, [], "f388", "M210.3 220.2c-5.6-24.8-26.9-41.2-51-41.2h-37c-7.1 0-12.5 4.5-14.3 10.9L73.1 320l24.7-.1c6.8 0 12.3-4.5 14.2-10.7l25.8-95.7h19.8c8.4 0 16.2 5.6 18.3 14.8 2.5 10.9-5.9 22.6-18.3 22.6h-10.3c-7 0-12.5 4.6-14.3 10.8l-6.4 23.8h32c37.2 0 58.3-36.2 51.7-65.3zm-156.5 28h18.6c6.9 0 12.4-4.4 14.3-10.9l6.2-23.6h-40C30 213.7 9 227.8 1.7 254.8-7 288.6 18.5 320 52 320h12.4l7.1-26.1c1.2-4.4-2.2-8.3-6.4-8.3H53.8c-24.7 0-24.9-37.4 0-37.4zm247.5-34.8h-77.9l-3.5 13.4c-2.4 9.6 4.5 18.5 14.2 18.5h57.5c4 0 2.4 4.3 2.1 5.3l-8.6 31.8c-.4 1.4-.9 5.3-5.5 5.3h-34.9c-5.3 0-5.3-7.9 0-7.9h21.6c6.8 0 12.3-4.6 14.2-10.8l3.5-13.2h-48.4c-39.2 0-43.6 63.8-.7 63.8l57.5.2c11.2 0 20.6-7.2 23.4-17.8l14-51.8c4.8-19.2-9.7-36.8-28.5-36.8zM633.1 179h-18.9c-4.9 0-9.2 3.2-10.4 7.9L568.2 320c20.7 0 39.8-13.8 44.9-34.5l26.5-98.2c1.2-4.3-2-8.3-6.5-8.3zm-236.3 34.7v.1h-48.3l-26.2 98c-1.2 4.4 2.2 8.3 6.4 8.3h18.9c4.8 0 9.2-3 10.4-7.8l17.2-64H395c12.5 0 21.4 11.8 18.1 23.4l-10.6 40c-1.2 4.3 1.9 8.3 6.4 8.3H428c4.6 0 9.1-2.9 10.3-7.8l8.8-33.1c9-33.1-15.9-65.4-50.3-65.4zm98.3 74.6c-3.6 0-6-3.4-5.1-6.7l8-30c.9-3.9 3.7-6 7.8-6h32.9c2.6 0 4.6 2.4 3.9 5.1l-.7 2.6c-.6 2-1.9 3-3.9 3h-21.6c-7 0-12.6 4.6-14.2 10.8l-3.5 13h53.4c10.5 0 20.3-6.6 23.2-17.6l3.2-12c4.9-19.1-9.3-36.8-28.3-36.8h-47.3c-17.9 0-33.8 12-38.6 29.6l-10.8 40c-5 17.7 8.3 36.7 28.3 36.7h66.7c6.8 0 12.3-4.5 14.2-10.7l5.7-21z"]
            },
            faCreativeCommons: {
                prefix: "fab",
                iconName: "creative-commons",
                icon: [496, 512, [], "f25e", "M245.83 214.87l-33.22 17.28c-9.43-19.58-25.24-19.93-27.46-19.93-22.13 0-33.22 14.61-33.22 43.84 0 23.57 9.21 43.84 33.22 43.84 14.47 0 24.65-7.09 30.57-21.26l30.55 15.5c-6.17 11.51-25.69 38.98-65.1 38.98-22.6 0-73.96-10.32-73.96-77.05 0-58.69 43-77.06 72.63-77.06 30.72-.01 52.7 11.95 65.99 35.86zm143.05 0l-32.78 17.28c-9.5-19.77-25.72-19.93-27.9-19.93-22.14 0-33.22 14.61-33.22 43.84 0 23.55 9.23 43.84 33.22 43.84 14.45 0 24.65-7.09 30.54-21.26l31 15.5c-2.1 3.75-21.39 38.98-65.09 38.98-22.69 0-73.96-9.87-73.96-77.05 0-58.67 42.97-77.06 72.63-77.06 30.71-.01 52.58 11.95 65.56 35.86zM247.56 8.05C104.74 8.05 0 123.11 0 256.05c0 138.49 113.6 248 247.56 248 129.93 0 248.44-100.87 248.44-248 0-137.87-106.62-248-248.44-248zm.87 450.81c-112.54 0-203.7-93.04-203.7-202.81 0-105.42 85.43-203.27 203.72-203.27 112.53 0 202.82 89.46 202.82 203.26-.01 121.69-99.68 202.82-202.84 202.82z"]
            },
            faCreativeCommonsBy: {
                prefix: "fab",
                iconName: "creative-commons-by",
                icon: [496, 512, [], "f4e7", "M314.9 194.4v101.4h-28.3v120.5h-77.1V295.9h-28.3V194.4c0-4.4 1.6-8.2 4.6-11.3 3.1-3.1 6.9-4.7 11.3-4.7H299c4.1 0 7.8 1.6 11.1 4.7 3.1 3.2 4.8 6.9 4.8 11.3zm-101.5-63.7c0-23.3 11.5-35 34.5-35s34.5 11.7 34.5 35c0 23-11.5 34.5-34.5 34.5s-34.5-11.5-34.5-34.5zM247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3z"]
            },
            faCreativeCommonsNc: {
                prefix: "fab",
                iconName: "creative-commons-nc",
                icon: [496, 512, [], "f4e8", "M247.6 8C387.4 8 496 115.9 496 256c0 147.2-118.5 248-248.4 248C113.1 504 0 393.2 0 256 0 123.1 104.7 8 247.6 8zM55.8 189.1c-7.4 20.4-11.1 42.7-11.1 66.9 0 110.9 92.1 202.4 203.7 202.4 122.4 0 177.2-101.8 178.5-104.1l-93.4-41.6c-7.7 37.1-41.2 53-68.2 55.4v38.1h-28.8V368c-27.5-.3-52.6-10.2-75.3-29.7l34.1-34.5c31.7 29.4 86.4 31.8 86.4-2.2 0-6.2-2.2-11.2-6.6-15.1-14.2-6-1.8-.1-219.3-97.4zM248.4 52.3c-38.4 0-112.4 8.7-170.5 93l94.8 42.5c10-31.3 40.4-42.9 63.8-44.3v-38.1h28.8v38.1c22.7 1.2 43.4 8.9 62 23L295 199.7c-42.7-29.9-83.5-8-70 11.1 53.4 24.1 43.8 19.8 93 41.6l127.1 56.7c4.1-17.4 6.2-35.1 6.2-53.1 0-57-19.8-105-59.3-143.9-39.3-39.9-87.2-59.8-143.6-59.8z"]
            },
            faCreativeCommonsNcEu: {
                prefix: "fab",
                iconName: "creative-commons-nc-eu",
                icon: [496, 512, [], "f4e9", "M247.7 8C103.6 8 0 124.8 0 256c0 136.3 111.7 248 247.7 248C377.9 504 496 403.1 496 256 496 117 388.4 8 247.7 8zm.6 450.7c-112 0-203.6-92.5-203.6-202.7 0-23.2 3.7-45.2 10.9-66l65.7 29.1h-4.7v29.5h23.3c0 6.2-.4 3.2-.4 19.5h-22.8v29.5h27c11.4 67 67.2 101.3 124.6 101.3 26.6 0 50.6-7.9 64.8-15.8l-10-46.1c-8.7 4.6-28.2 10.8-47.3 10.8-28.2 0-58.1-10.9-67.3-50.2h90.3l128.3 56.8c-1.5 2.1-56.2 104.3-178.8 104.3zm-16.7-190.6l-.5-.4.9.4h-.4zm77.2-19.5h3.7v-29.5h-70.3l-28.6-12.6c2.5-5.5 5.4-10.5 8.8-14.3 12.9-15.8 31.1-22.4 51.1-22.4 18.3 0 35.3 5.4 46.1 10l11.6-47.3c-15-6.6-37-12.4-62.3-12.4-39 0-72.2 15.8-95.9 42.3-5.3 6.1-9.8 12.9-13.9 20.1l-81.6-36.1c64.6-96.8 157.7-93.6 170.7-93.6 113 0 203 90.2 203 203.4 0 18.7-2.1 36.3-6.3 52.9l-136.1-60.5z"]
            },
            faCreativeCommonsNcJp: {
                prefix: "fab",
                iconName: "creative-commons-nc-jp",
                icon: [496, 512, [], "f4ea", "M247.7 8C103.6 8 0 124.8 0 256c0 136.4 111.8 248 247.7 248C377.9 504 496 403.2 496 256 496 117.2 388.5 8 247.7 8zm.6 450.7c-112 0-203.6-92.5-203.6-202.7 0-21.1 3-41.2 9-60.3l127 56.5h-27.9v38.6h58.1l5.7 11.8v18.7h-63.8V360h63.8v56h61.7v-56h64.2v-35.7l81 36.1c-1.5 2.2-57.1 98.3-175.2 98.3zm87.6-137.3h-57.6v-18.7l2.9-5.6 54.7 24.3zm6.5-51.4v-17.8h-38.6l63-116H301l-43.4 96-23-10.2-39.6-85.7h-65.8l27.3 51-81.9-36.5c27.8-44.1 82.6-98.1 173.7-98.1 112.8 0 203 90 203 203.4 0 21-2.7 40.6-7.9 59l-101-45.1z"]
            },
            faCreativeCommonsNd: {
                prefix: "fab",
                iconName: "creative-commons-nd",
                icon: [496, 512, [], "f4eb", "M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm94 144.3v42.5H162.1V197h180.3zm0 79.8v42.5H162.1v-42.5h180.3z"]
            },
            faCreativeCommonsPd: {
                prefix: "fab",
                iconName: "creative-commons-pd",
                icon: [496, 512, [], "f4ec", "M248 8C111 8 0 119.1 0 256c0 137 111 248 248 248s248-111 248-248C496 119.1 385 8 248 8zm0 449.5c-139.2 0-235.8-138-190.2-267.9l78.8 35.1c-2.1 10.5-3.3 21.5-3.3 32.9 0 99 73.9 126.9 120.4 126.9 22.9 0 53.5-6.7 79.4-29.5L297 311.1c-5.5 6.3-17.6 16.7-36.3 16.7-37.8 0-53.7-39.9-53.9-71.9 230.4 102.6 216.5 96.5 217.9 96.8-34.3 62.4-100.6 104.8-176.7 104.8zm194.2-150l-224-100c18.8-34 54.9-30.7 74.7-11l40.4-41.6c-27.1-23.3-58-27.5-78.1-27.5-47.4 0-80.9 20.5-100.7 51.6l-74.9-33.4c36.1-54.9 98.1-91.2 168.5-91.2 111.1 0 201.5 90.4 201.5 201.5 0 18-2.4 35.4-6.8 52-.3-.1-.4-.2-.6-.4z"]
            },
            faCreativeCommonsPdAlt: {
                prefix: "fab",
                iconName: "creative-commons-pd-alt",
                icon: [496, 512, [], "f4ed", "M247.6 8C104.7 8 0 123.1 0 256c0 138.5 113.6 248 247.6 248C377.5 504 496 403.1 496 256 496 118.1 389.4 8 247.6 8zm.8 450.8c-112.5 0-203.7-93-203.7-202.8 0-105.4 85.5-203.3 203.7-203.3 112.6 0 202.9 89.5 202.8 203.3 0 121.7-99.6 202.8-202.8 202.8zM316.7 186h-53.2v137.2h53.2c21.4 0 70-5.1 70-68.6 0-63.4-48.6-68.6-70-68.6zm.8 108.5h-19.9v-79.7l19.4-.1c3.8 0 35-2.1 35 39.9 0 24.6-10.5 39.9-34.5 39.9zM203.7 186h-68.2v137.3h34.6V279h27c54.1 0 57.1-37.5 57.1-46.5 0-31-16.8-46.5-50.5-46.5zm-4.9 67.3h-29.2v-41.6h28.3c30.9 0 28.8 41.6.9 41.6z"]
            },
            faCreativeCommonsRemix: {
                prefix: "fab",
                iconName: "creative-commons-remix",
                icon: [496, 512, [], "f4ee", "M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm161.7 207.7l4.9 2.2v70c-7.2 3.6-63.4 27.5-67.3 28.8-6.5-1.8-113.7-46.8-137.3-56.2l-64.2 26.6-63.3-27.5v-63.8l59.3-24.8c-.7-.7-.4 5-.4-70.4l67.3-29.7L361 178.5v61.6l49.1 20.3zm-70.4 81.5v-43.8h-.4v-1.8l-113.8-46.5V295l113.8 46.9v-.4l.4.4zm7.5-57.6l39.9-16.4-36.8-15.5-39 16.4 35.9 15.5zm52.3 38.1v-43L355.2 298v43.4l44.3-19z"]
            },
            faCreativeCommonsSa: {
                prefix: "fab",
                iconName: "creative-commons-sa",
                icon: [496, 512, [], "f4ef", "M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zM137.7 221c13-83.9 80.5-95.7 108.9-95.7 99.8 0 127.5 82.5 127.5 134.2 0 63.6-41 132.9-128.9 132.9-38.9 0-99.1-20-109.4-97h62.5c1.5 30.1 19.6 45.2 54.5 45.2 23.3 0 58-18.2 58-82.8 0-82.5-49.1-80.6-56.7-80.6-33.1 0-51.7 14.6-55.8 43.8h18.2l-49.2 49.2-49-49.2h19.4z"]
            },
            faCreativeCommonsSampling: {
                prefix: "fab",
                iconName: "creative-commons-sampling",
                icon: [496, 512, [], "f4f0", "M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm3.6 53.2c2.8-.3 11.5 1 11.5 11.5l6.6 107.2 4.9-59.3c0-6 4.7-10.6 10.6-10.6 5.9 0 10.6 4.7 10.6 10.6 0 2.5-.5-5.7 5.7 81.5l5.8-64.2c.3-2.9 2.9-9.3 10.2-9.3 3.8 0 9.9 2.3 10.6 8.9l11.5 96.5 5.3-12.8c1.8-4.4 5.2-6.6 10.2-6.6h58v21.3h-50.9l-18.2 44.3c-3.9 9.9-19.5 9.1-20.8-3.1l-4-31.9-7.5 92.6c-.3 3-3 9.3-10.2 9.3-3 0-9.8-2.1-10.6-9.3 0-1.9.6 5.8-6.2-77.9l-5.3 72.2c-1.1 4.8-4.8 9.3-10.6 9.3-2.9 0-9.8-2-10.6-9.3 0-1.9.5 6.7-5.8-87.7l-5.8 94.8c0 6.3-3.6 12.4-10.6 12.4-5.2 0-10.6-4.1-10.6-12l-5.8-87.7c-5.8 92.5-5.3 84-5.3 85.9-1.1 4.8-4.8 9.3-10.6 9.3-3 0-9.8-2.1-10.6-9.3 0-.7-.4-1.1-.4-2.6l-6.2-88.6L182 348c-.7 6.5-6.7 9.3-10.6 9.3-5.8 0-9.6-4.1-10.6-8.9L149.7 272c-2 4-3.5 8.4-11.1 8.4H87.2v-21.3H132l13.7-27.9c4.4-9.9 18.2-7.2 19.9 2.7l3.1 20.4 8.4-97.9c0-6 4.8-10.6 10.6-10.6.5 0 10.6-.2 10.6 12.4l4.9 69.1 6.6-92.6c0-10.1 9.5-10.6 10.2-10.6.6 0 10.6.7 10.6 10.6l5.3 80.6 6.2-97.9c.1-1.1-.6-10.3 9.9-11.5z"]
            },
            faCreativeCommonsSamplingPlus: {
                prefix: "fab",
                iconName: "creative-commons-sampling-plus",
                icon: [496, 512, [], "f4f1", "M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm107 205.6c-4.7 0-9 2.8-10.7 7.2l-4 9.5-11-92.8c-1.7-13.9-22-13.4-23.1.4l-4.3 51.4-5.2-68.8c-1.1-14.3-22.1-14.2-23.2 0l-3.5 44.9-5.9-94.3c-.9-14.5-22.3-14.4-23.2 0l-5.1 83.7-4.3-66.3c-.9-14.4-22.2-14.4-23.2 0l-5.3 80.2-4.1-57c-1.1-14.3-22-14.3-23.2-.2l-7.7 89.8-1.8-12.2c-1.7-11.4-17.1-13.6-22-3.3l-13.2 27.7H87.5v23.2h51.3c4.4 0 8.4-2.5 10.4-6.4l10.7 73.1c2 13.5 21.9 13 23.1-.7l3.8-43.6 5.7 78.3c1.1 14.4 22.3 14.2 23.2-.1l4.6-70.4 4.8 73.3c.9 14.4 22.3 14.4 23.2-.1l4.9-80.5 4.5 71.8c.9 14.3 22.1 14.5 23.2.2l4.6-58.6 4.9 64.4c1.1 14.3 22 14.2 23.1.1l6.8-83 2.7 22.3c1.4 11.8 17.7 14.1 22.3 3.1l18-43.4h50.5V258l-58.4.3zm-78 5.2h-21.9v21.9c0 4.1-3.3 7.5-7.5 7.5-4.1 0-7.5-3.3-7.5-7.5v-21.9h-21.9c-4.1 0-7.5-3.3-7.5-7.5 0-4.1 3.4-7.5 7.5-7.5h21.9v-21.9c0-4.1 3.4-7.5 7.5-7.5s7.5 3.3 7.5 7.5v21.9h21.9c4.1 0 7.5 3.3 7.5 7.5 0 4.1-3.4 7.5-7.5 7.5z"]
            },
            faCreativeCommonsShare: {
                prefix: "fab",
                iconName: "creative-commons-share",
                icon: [496, 512, [], "f4f2", "M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm101 132.4c7.8 0 13.7 6.1 13.7 13.7v182.5c0 7.7-6.1 13.7-13.7 13.7H214.3c-7.7 0-13.7-6-13.7-13.7v-54h-54c-7.8 0-13.7-6-13.7-13.7V131.1c0-8.2 6.6-12.7 12.4-13.7h136.4c7.7 0 13.7 6 13.7 13.7v54h54zM159.9 300.3h40.7V198.9c0-7.4 5.8-12.6 12-13.7h55.8v-40.3H159.9v155.4zm176.2-88.1H227.6v155.4h108.5V212.2z"]
            },
            faCreativeCommonsZero: {
                prefix: "fab",
                iconName: "creative-commons-zero",
                icon: [496, 512, [], "f4f3", "M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm-.4 60.5c-81.9 0-102.5 77.3-102.5 142.8 0 65.5 20.6 142.8 102.5 142.8S350.5 321.5 350.5 256c0-65.5-20.6-142.8-102.5-142.8zm0 53.9c3.3 0 6.4.5 9.2 1.2 5.9 5.1 8.8 12.1 3.1 21.9l-54.5 100.2c-1.7-12.7-1.9-25.1-1.9-34.4 0-28.8 2-88.9 44.1-88.9zm40.8 46.2c2.9 15.4 3.3 31.4 3.3 42.7 0 28.9-2 88.9-44.1 88.9-13.5 0-32.6-7.7-20.1-26.4l60.9-105.2z"]
            },
            faCriticalRole: {
                prefix: "fab",
                iconName: "critical-role",
                icon: [448, 512, [], "f6c9", "M225.82 0c.26.15 216.57 124.51 217.12 124.72 3 1.18 3.7 3.46 3.7 6.56q-.11 125.17 0 250.36a5.88 5.88 0 0 1-3.38 5.78c-21.37 12-207.86 118.29-218.93 124.58h-3C142 466.34 3.08 386.56 2.93 386.48a3.29 3.29 0 0 1-1.88-3.24c0-.87 0-225.94-.05-253.1a5 5 0 0 1 2.93-4.93C27.19 112.11 213.2 6 224.07 0zM215.4 20.42l-.22-.16Q118.06 75.55 21 130.87c0 .12.08.23.13.35l30.86 11.64c-7.71 6-8.32 6-10.65 5.13-.1 0-24.17-9.28-26.8-10v230.43c.88-1.41 64.07-110.91 64.13-111 1.62-2.82 3-1.92 9.12-1.52 1.4.09 1.48.22.78 1.42-41.19 71.33-36.4 63-67.48 116.94-.81 1.4-.61 1.13 1.25 1.13h186.5c1.44 0 1.69-.23 1.7-1.64v-8.88c0-1.34 2.36-.81-18.37-1-7.46-.07-14.14-3.22-21.38-12.7-7.38-9.66-14.62-19.43-21.85-29.21-2.28-3.08-3.45-2.38-16.76-2.38-1.75 0-1.78 0-1.76 1.82.29 26.21.15 25.27 1 32.66.52 4.37 2.16 4.2 9.69 4.81 3.14.26 3.88 4.08.52 4.92-1.57.39-31.6.51-33.67-.1a2.42 2.42 0 0 1 .3-4.73c3.29-.76 6.16.81 6.66-4.44 1.3-13.66 1.17-9 1.1-79.42 0-10.82-.35-12.58-5.36-13.55-1.22-.24-3.54-.16-4.69-.55-2.88-1-2-4.84 1.77-4.85 33.67 0 46.08-1.07 56.06 4.86 7.74 4.61 12 11.48 12.51 20.4.88 14.59-6.51 22.35-15 32.59a1.46 1.46 0 0 0 0 2.22c2.6 3.25 5 6.63 7.71 9.83 27.56 33.23 24.11 30.54 41.28 33.06.89.13 1-.42 1-1.15v-11c0-1 .32-1.43 1.41-1.26a72.37 72.37 0 0 0 23.58-.3c1.08-.15 1.5.2 1.48 1.33 0 .11.88 26.69.87 26.8-.05 1.52.67 1.62 1.89 1.62h186.71Q386.51 304.6 346 234.33c2.26-.66-.4 0 6.69-1.39 2-.39 2.05-.41 3.11 1.44 7.31 12.64 77.31 134 77.37 134.06V138c-1.72.5-103.3 38.72-105.76 39.68-1.08.42-1.55.2-1.91-.88-.63-1.9-1.34-3.76-2.09-5.62-.32-.79-.09-1.13.65-1.39.1 0 95.53-35.85 103-38.77-65.42-37.57-130.56-75-196-112.6l86.82 150.39-.28.33c-9.57-.9-10.46-1.6-11.8-3.94-1-1.69-73.5-127.71-82-142.16-9.1 14.67-83.56 146.21-85.37 146.32-2.93.17-5.88.08-9.25.08q43.25-74.74 86.18-149zm51.93 129.92a37.68 37.68 0 0 0 5.54-.85c1.69-.3 2.53.2 2.6 1.92 0 .11.07 19.06-.86 20.45s-1.88 1.22-2.6-.19c-5-9.69 6.22-9.66-39.12-12-.7 0-1 .23-1 .93 0 .13 3.72 122 3.73 122.11 0 .89.52 1.2 1.21 1.51a83.92 83.92 0 0 1 8.7 4.05c7.31 4.33 11.38 10.84 12.41 19.31 1.44 11.8-2.77 35.77-32.21 37.14-2.75.13-28.26 1.08-34.14-23.25-4.66-19.26 8.26-32.7 19.89-36.4a2.45 2.45 0 0 0 2-2.66c.1-5.63 3-107.1 3.71-121.35.05-1.08-.62-1.16-1.35-1.15-32.35.52-36.75-.34-40.22 8.52-2.42 6.18-4.14 1.32-3.95.23q1.59-9 3.31-18c.4-2.11 1.43-2.61 3.43-1.86 5.59 2.11 6.72 1.7 37.25 1.92 1.73 0 1.78-.08 1.82-1.85.68-27.49.58-22.59 1-29.55a2.69 2.69 0 0 0-1.63-2.8c-5.6-2.91-8.75-7.55-8.9-13.87-.35-14.81 17.72-21.67 27.38-11.51 6.84 7.19 5.8 18.91-2.45 24.15a4.35 4.35 0 0 0-2.22 4.34c0 .59-.11-4.31 1 30.05 0 .9.43 1.12 1.24 1.11.1 0 23-.09 34.47-.37zM68.27 141.7c19.84-4.51 32.68-.56 52.49 1.69 2.76.31 3.74 1.22 3.62 4-.21 5-1.16 22.33-1.24 23.15a2.65 2.65 0 0 1-1.63 2.34c-4.06 1.7-3.61-4.45-4-7.29-3.13-22.43-73.87-32.7-74.63 25.4-.31 23.92 17 53.63 54.08 50.88 27.24-2 19-20.19 24.84-20.47a2.72 2.72 0 0 1 3 3.36c-1.83 10.85-3.42 18.95-3.45 19.15-1.54 9.17-86.7 22.09-93.35-42.06-2.71-25.85 10.44-53.37 40.27-60.15zm80 87.67h-19.49a2.57 2.57 0 0 1-2.66-1.79c2.38-3.75 5.89.92 5.86-6.14-.08-25.75.21-38 .23-40.1 0-3.42-.53-4.65-3.32-4.94-7-.72-3.11-3.37-1.11-3.38 11.84-.1 22.62-.18 30.05.72 8.77 1.07 16.71 12.63 7.93 22.62-2 2.25-4 4.42-6.14 6.73.95 1.15 6.9 8.82 17.28 19.68 2.66 2.78 6.15 3.51 9.88 3.13a2.21 2.21 0 0 0 2.23-2.12c.3-3.42.26 4.73.45-40.58 0-5.65-.34-6.58-3.23-6.83-3.95-.35-4-2.26-.69-3.37l19.09-.09c.32 0 4.49.53 1 3.38 0 .05-.16 0-.24 0-3.61.26-3.94 1-4 4.62-.27 43.93.07 40.23.41 42.82.11.84.27 2.23 5.1 2.14 2.49 0 3.86 3.37 0 3.4-10.37.08-20.74 0-31.11.07-10.67 0-13.47-6.2-24.21-20.82-1.6-2.18-8.31-2.36-8.2-.37.88 16.47 0 17.78 4 17.67 4.75-.1 4.73 3.57.83 3.55zm275-10.15c-1.21 7.13.17 10.38-5.3 10.34-61.55-.42-47.82-.22-50.72-.31a18.4 18.4 0 0 1-3.63-.73c-2.53-.6 1.48-1.23-.38-5.6-1.43-3.37-2.78-6.78-4.11-10.19a1.94 1.94 0 0 0-2-1.44 138 138 0 0 0-14.58.07 2.23 2.23 0 0 0-1.62 1.06c-1.58 3.62-3.07 7.29-4.51 11-1.27 3.23 7.86 1.32 12.19 2.16 3 .57 4.53 3.72.66 3.73H322.9c-2.92 0-3.09-3.15-.74-3.21a6.3 6.3 0 0 0 5.92-3.47c1.5-3 2.8-6 4.11-9.09 18.18-42.14 17.06-40.17 18.42-41.61a1.83 1.83 0 0 1 3 0c2.93 3.34 18.4 44.71 23.62 51.92 2 2.7 5.74 2 6.36 2 3.61.13 4-1.11 4.13-4.29.09-1.87.08 1.17.07-41.24 0-4.46-2.36-3.74-5.55-4.27-.26 0-2.56-.63-.08-3.06.21-.2-.89-.24 21.7-.15 2.32 0 5.32 2.75-1.21 3.45a2.56 2.56 0 0 0-2.66 2.83c-.07 1.63-.19 38.89.29 41.21a3.06 3.06 0 0 0 3.23 2.43c13.25.43 14.92.44 16-3.41 1.67-5.78 4.13-2.52 3.73-.19zm-104.72 64.37c-4.24 0-4.42-3.39-.61-3.41 35.91-.16 28.11.38 37.19-.65 1.68-.19 2.38.24 2.25 1.89-.26 3.39-.64 6.78-1 10.16-.25 2.16-3.2 2.61-3.4-.15-.38-5.31-2.15-4.45-15.63-5.08-1.58-.07-1.64 0-1.64 1.52V304c0 1.65 0 1.6 1.62 1.47 3.12-.25 10.31.34 15.69-1.52.47-.16 3.3-1.79 3.07 1.76 0 .21-.76 10.35-1.18 11.39-.53 1.29-1.88 1.51-2.58.32-1.17-2 0-5.08-3.71-5.3-15.42-.9-12.91-2.55-12.91 6 0 12.25-.76 16.11 3.89 16.24 16.64.48 14.4 0 16.43-5.71.84-2.37 3.5-1.77 3.18.58-.44 3.21-.85 6.43-1.23 9.64 0 .36-.16 2.4-4.66 2.39-37.16-.08-34.54-.19-35.21-.31-2.72-.51-2.2-3 .22-3.45 1.1-.19 4 .54 4.16-2.56 2.44-56.22-.07-51.34-3.91-51.33zm-.41-109.52c2.46.61 3.13 1.76 2.95 4.65-.33 5.3-.34 9-.55 9.69-.66 2.23-3.15 2.12-3.34-.27-.38-4.81-3.05-7.82-7.57-9.15-26.28-7.73-32.81 15.46-27.17 30.22 5.88 15.41 22 15.92 28.86 13.78 5.92-1.85 5.88-6.5 6.91-7.58 1.23-1.3 2.25-1.84 3.12 1.1 0 .1.57 11.89-6 12.75-1.6.21-19.38 3.69-32.68-3.39-21-11.19-16.74-35.47-6.88-45.33 14-14.06 39.91-7.06 42.32-6.47zM289.8 280.14c3.28 0 3.66 3 .16 3.43-2.61.32-5-.42-5 5.46 0 2-.19 29.05.4 41.45.11 2.29 1.15 3.52 3.44 3.65 22 1.21 14.95-1.65 18.79-6.34 1.83-2.24 2.76.84 2.76 1.08.35 13.62-4 12.39-5.19 12.4l-38.16-.19c-1.93-.23-2.06-3-.42-3.38 2-.48 4.94.4 5.13-2.8 1-15.87.57-44.65.34-47.81-.27-3.77-2.8-3.27-5.68-3.71-2.47-.38-2-3.22.34-3.22 1.45-.02 17.97-.03 23.09-.02zm-31.63-57.79c.07 4.08 2.86 3.46 6 3.58 2.61.1 2.53 3.41-.07 3.43-6.48 0-13.7 0-21.61-.06-3.84 0-3.38-3.35 0-3.37 4.49 0 3.24 1.61 3.41-45.54 0-5.08-3.27-3.54-4.72-4.23-2.58-1.23-1.36-3.09.41-3.15 1.29 0 20.19-.41 21.17.21s1.87 1.65-.42 2.86c-1 .52-3.86-.28-4.15 2.47 0 .21-.82 1.63-.07 43.8zm-36.91 274.27a2.93 2.93 0 0 0 3.26 0c17-9.79 182-103.57 197.42-112.51-.14-.43 11.26-.18-181.52-.27-1.22 0-1.57.37-1.53 1.56 0 .1 1.25 44.51 1.22 50.38a28.33 28.33 0 0 1-1.36 7.71c-.55 1.83.38-.5-13.5 32.23-.73 1.72-1 2.21-2-.08-4.19-10.34-8.28-20.72-12.57-31a23.6 23.6 0 0 1-2-10.79c.16-2.46.8-16.12 1.51-48 0-1.95 0-2-2-2h-183c2.58 1.63 178.32 102.57 196 112.76zm-90.9-188.75c0 2.4.36 2.79 2.76 3 11.54 1.17 21 3.74 25.64-7.32 6-14.46 2.66-34.41-12.48-38.84-2-.59-16-2.76-15.94 1.51.05 8.04.01 11.61.02 41.65zm105.75-15.05c0 2.13 1.07 38.68 1.09 39.13.34 9.94-25.58 5.77-25.23-2.59.08-2 1.37-37.42 1.1-39.43-14.1 7.44-14.42 40.21 6.44 48.8a17.9 17.9 0 0 0 22.39-7.07c4.91-7.76 6.84-29.47-5.43-39a2.53 2.53 0 0 1-.36.12zm-12.28-198c-9.83 0-9.73 14.75-.07 14.87s10.1-14.88.07-14.91zm-80.15 103.83c0 1.8.41 2.4 2.17 2.58 13.62 1.39 12.51-11 12.16-13.36-1.69-11.22-14.38-10.2-14.35-7.81.05 4.5-.03 13.68.02 18.59zm212.32 6.4l-6.1-15.84c-2.16 5.48-4.16 10.57-6.23 15.84z"]
            },
            faCss3: {
                prefix: "fab",
                iconName: "css3",
                icon: [512, 512, [], "f13c", "M480 32l-64 368-223.3 80L0 400l19.6-94.8h82l-8 40.6L210 390.2l134.1-44.4 18.8-97.1H29.5l16-82h333.7l10.5-52.7H56.3l16.3-82H480z"]
            },
            faCss3Alt: {
                prefix: "fab",
                iconName: "css3-alt",
                icon: [384, 512, [], "f38b", "M0 32l34.9 395.8L192 480l157.1-52.2L384 32H0zm313.1 80l-4.8 47.3L193 208.6l-.3.1h111.5l-12.8 146.6-98.2 28.7-98.8-29.2-6.4-73.9h48.9l3.2 38.3 52.6 13.3 54.7-15.4 3.7-61.6-166.3-.5v-.1l-.2.1-3.6-46.3L193.1 162l6.5-2.7H76.7L70.9 112h242.2z"]
            },
            faCuttlefish: {
                prefix: "fab",
                iconName: "cuttlefish",
                icon: [440, 512, [], "f38c", "M344 305.5c-17.5 31.6-57.4 54.5-96 54.5-56.6 0-104-47.4-104-104s47.4-104 104-104c38.6 0 78.5 22.9 96 54.5 13.7-50.9 41.7-93.3 87-117.8C385.7 39.1 320.5 8 248 8 111 8 0 119 0 256s111 248 248 248c72.5 0 137.7-31.1 183-80.7-45.3-24.5-73.3-66.9-87-117.8z"]
            },
            faDAndD: {
                prefix: "fab",
                iconName: "d-and-d",
                icon: [576, 512, [], "f38d", "M82.5 98.9c-.6-17.2 2-33.8 12.7-48.2.3 7.4 1.2 14.5 4.2 21.6 5.9-27.5 19.7-49.3 42.3-65.5-1.9 5.9-3.5 11.8-3 17.7 8.7-7.4 18.8-17.8 44.4-22.7 14.7-2.8 29.7-2 42.1 1 38.5 9.3 61 34.3 69.7 72.3 5.3 23.1.7 45-8.3 66.4-5.2 12.4-12 24.4-20.7 35.1-2-1.9-3.9-3.8-5.8-5.6-42.8-40.8-26.8-25.2-37.4-37.4-1.1-1.2-1-2.2-.1-3.6 8.3-13.5 11.8-28.2 10-44-1.1-9.8-4.3-18.9-11.3-26.2-14.5-15.3-39.2-15-53.5.6-11.4 12.5-14.1 27.4-10.9 43.6.2 1.3.4 2.7 0 3.9-3.4 13.7-4.6 27.6-2.5 41.6.1.5.1 1.1.1 1.6 0 .3-.1.5-.2 1.1-21.8-11-36-28.3-43.2-52.2-8.3 17.8-11.1 35.5-6.6 54.1-15.6-15.2-21.3-34.3-22-55.2zm469.6 123.2c-11.6-11.6-25-20.4-40.1-26.6-12.8-5.2-26-7.9-39.9-7.1-10 .6-19.6 3.1-29 6.4-2.5.9-5.1 1.6-7.7 2.2-4.9 1.2-7.3-3.1-4.7-6.8 3.2-4.6 3.4-4.2 15-12 .6-.4 1.2-.8 2.2-1.5h-2.5c-.6 0-1.2.2-1.9.3-19.3 3.3-30.7 15.5-48.9 29.6-10.4 8.1-13.8 3.8-12-.5 1.4-3.5 3.3-6.7 5.1-10 1-1.8 2.3-3.4 3.5-5.1-.2-.2-.5-.3-.7-.5-27 18.3-46.7 42.4-57.7 73.3.3.3.7.6 1 .9.3-.6.5-1.2.9-1.7 10.4-12.1 22.8-21.8 36.6-29.8 18.2-10.6 37.5-18.3 58.7-20.2 4.3-.4 8.7-.1 13.1-.1-1.8.7-3.5.9-5.3 1.1-18.5 2.4-35.5 9-51.5 18.5-30.2 17.9-54.5 42.2-75.1 70.4-.3.4-.4.9-.7 1.3 14.5 5.3 24 17.3 36.1 25.6.2-.1.3-.2.4-.4l1.2-2.7c12.2-26.9 27-52.3 46.7-74.5 16.7-18.8 38-25.3 62.5-20 5.9 1.3 11.4 4.4 17.2 6.8 2.3-1.4 5.1-3.2 8-4.7 8.4-4.3 17.4-7 26.7-9 14.7-3.1 29.5-4.9 44.5-1.3v-.5c-.5-.4-1.2-.8-1.7-1.4zM316.7 397.6c-39.4-33-22.8-19.5-42.7-35.6-.8.9 0-.2-1.9 3-11.2 19.1-25.5 35.3-44 47.6-10.3 6.8-21.5 11.8-34.1 11.8-21.6 0-38.2-9.5-49.4-27.8-12-19.5-13.3-40.7-8.2-62.6 7.8-33.8 30.1-55.2 38.6-64.3-18.7-6.2-33 1.7-46.4 13.9.8-13.9 4.3-26.2 11.8-37.3-24.3 10.6-45.9 25-64.8 43.9-.3-5.8 5.4-43.7 5.6-44.7.3-2.7-.6-5.3-3-7.4-24.2 24.7-44.5 51.8-56.1 84.6 7.4-5.9 14.9-11.4 23.6-16.2-8.3 22.3-19.6 52.8-7.8 101.1 4.6 19 11.9 36.8 24.1 52.3 2.9 3.7 6.3 6.9 9.5 10.3.2-.2.4-.3.6-.5-1.4-7-2.2-14.1-1.5-21.9 2.2 3.2 3.9 6 5.9 8.6 12.6 16 28.7 27.4 47.2 35.6 25 11.3 51.1 13.3 77.9 8.6 54.9-9.7 90.7-48.6 116-98.8 1-1.8.6-2.9-.9-4.2zm172-46.4c-9.5-3.1-22.2-4.2-28.7-2.9 9.9 4 14.1 6.6 18.8 12 12.6 14.4 10.4 34.7-5.4 45.6-11.7 8.1-24.9 10.5-38.9 9.1-1.2-.1-2.3-.4-3-.6 2.8-3.7 6-7 8.1-10.8 9.4-16.8 5.4-42.1-8.7-56.1-2.1-2.1-4.6-3.9-7-5.9-.3 1.3-.1 2.1.1 2.8 4.2 16.6-8.1 32.4-24.8 31.8-7.6-.3-13.9-3.8-19.6-8.5-19.5-16.1-39.1-32.1-58.5-48.3-5.9-4.9-12.5-8.1-20.1-8.7-4.6-.4-9.3-.6-13.9-.9-5.9-.4-8.8-2.8-10.4-8.4-.9-3.4-1.5-6.8-2.2-10.2-1.5-8.1-6.2-13-14.3-14.2-4.4-.7-8.9-1-13.3-1.5-13-1.4-19.8-7.4-22.6-20.3-5 11-1.6 22.4 7.3 29.9 4.5 3.8 9.3 7.3 13.8 11.2 4.6 3.8 7.4 8.7 7.9 14.8.4 4.7.8 9.5 1.8 14.1 2.2 10.6 8.9 18.4 17 25.1 16.5 13.7 33 27.3 49.5 41.1 17.9 15 13.9 32.8 13 56-.9 22.9 12.2 42.9 33.5 51.2 1 .4 2 .6 3.6 1.1-15.7-18.2-10.1-44.1.7-52.3.3 2.2.4 4.3.9 6.4 9.4 44.1 45.4 64.2 85 56.9 16-2.9 30.6-8.9 42.9-19.8 2-1.8 3.7-4.1 5.9-6.5-19.3 4.6-35.8.1-50.9-10.6.7-.3 1.3-.3 1.9-.3 21.3 1.8 40.6-3.4 57-17.4 19.5-16.6 26.6-42.9 17.4-66-8.3-20.1-23.6-32.3-43.8-38.9zM99.4 179.3c-5.3-9.2-13.2-15.6-22.1-21.3 13.7-.5 26.6.2 39.6 3.7-7-12.2-8.5-24.7-5-38.7 5.3 11.9 13.7 20.1 23.6 26.8 19.7 13.2 35.7 19.6 46.7 30.2 3.4 3.3 6.3 7.1 9.6 10.9-.8-2.1-1.4-4.1-2.2-6-5-10.6-13-18.6-22.6-25-1.8-1.2-2.8-2.5-3.4-4.5-3.3-12.5-3-25.1-.7-37.6 1-5.5 2.8-10.9 4.5-16.3.8-2.4 2.3-4.6 4-6.6.6 6.9 0 25.5 19.6 46 10.8 11.3 22.4 21.9 33.9 32.7 9 8.5 18.3 16.7 25.5 26.8 1.1 1.6 2.2 3.3 3.8 4.7-5-13-14.2-24.1-24.2-33.8-9.6-9.3-19.4-18.4-29.2-27.4-3.3-3-4.6-6.7-5.1-10.9-1.2-10.4 0-20.6 4.3-30.2.5-1 1.1-2 1.9-3.3.5 4.2.6 7.9 1.4 11.6 4.8 23.1 20.4 36.3 49.3 63.5 10 9.4 19.3 19.2 25.6 31.6 4.8 9.3 7.3 19 5.7 29.6-.1.6.5 1.7 1.1 2 6.2 2.6 10 6.9 9.7 14.3 7.7-2.6 12.5-8 16.4-14.5 4.2 20.2-9.1 50.3-27.2 58.7.4-4.5 5-23.4-16.5-27.7-6.8-1.3-12.8-1.3-22.9-2.1 4.7-9 10.4-20.6.5-22.4-24.9-4.6-52.8 1.9-57.8 4.6 8.2.4 16.3 1 23.5 3.3-2 6.5-4 12.7-5.8 18.9-1.9 6.5 2.1 14.6 9.3 9.6 1.2-.9 2.3-1.9 3.3-2.7-3.1 17.9-2.9 15.9-2.8 18.3.3 10.2 9.5 7.8 15.7 7.3-2.5 11.8-29.5 27.3-45.4 25.8 7-4.7 12.7-10.3 15.9-17.9-6.5.8-12.9 1.6-19.2 2.4l-.3-.9c4.7-3.4 8-7.8 10.2-13.1 8.7-21.1-3.6-38-25-39.9-9.1-.8-17.8.8-25.9 5.5 6.2-15.6 17.2-26.6 32.6-34.5-15.2-4.3-8.9-2.7-24.6-6.3 14.6-9.3 30.2-13.2 46.5-14.6-5.2-3.2-48.1-3.6-70.2 20.9 7.9 1.4 15.5 2.8 23.2 4.2-23.8 7-44 19.7-62.4 35.6 1.1-4.8 2.7-9.5 3.3-14.3.6-4.5.8-9.2.1-13.6-1.5-9.4-8.9-15.1-19.7-16.3-7.9-.9-15.6.1-23.3 1.3-.9.1-1.7.3-2.9 0 15.8-14.8 36-21.7 53.1-33.5 6-4.5 6.8-8.2 3-14.9zm128.4 26.8c3.3 16 12.6 25.5 23.8 24.3-4.6-11.3-12.1-19.5-23.8-24.3z"]
            },
            faDAndDBeyond: {
                prefix: "fab",
                iconName: "d-and-d-beyond",
                icon: [640, 512, [], "f6ca", "M313.8 241.5c13.8 0 21-10.1 24.8-17.9-1-1.1-5-4.2-7.4-6.6-2.4 4.3-8.2 10.7-13.9 10.7-10.2 0-15.4-14.7-3.2-26.6-.5-.2-4.3-1.8-8 2.4 0-3 1-5.1 2.1-6.6-3.5 1.3-9.8 5.6-11.4 7.9.2-5.8 1.6-7.5.6-9l-.2-.2s-8.5 5.6-9.3 14.7c0 0 1.1-1.6 2.1-1.9.6-.3 1.3 0 .6 1.9-.2.6-5.8 15.7 5.1 26-.6-1.6-1.9-7.6 2.4-1.9-.3.1 5.8 7.1 15.7 7.1zm52.4-21.1c0-4-4.9-4.4-5.6-4.5 2 3.9.9 7.5.2 9 2.5-.4 5.4-1.6 5.4-4.5zm10.3 5.2c0-6.4-6.2-11.4-13.5-10.7 8 1.3 5.6 13.8-5 11.4 3.7-2.6 3.2-9.9-1.3-12.5 1.4 4.2-3 8.2-7.4 4.6-2.4-1.9-8-6.6-10.6-8.6-2.4-2.1-5.5-1-6.6-1.8-1.3-1.1-.5-3.8-2.2-5-1.6-.8-3-.3-4.8-1-1.6-.6-2.7-1.9-2.6-3.5-2.5 4.4 3.4 6.3 4.5 8.5 1 1.9-.8 4.8 4 8.5 14.8 11.6 9.1 8 10.4 18.1.6 4.3 4.2 6.7 6.4 7.4-2.1-1.9-2.9-6.4 0-9.3 0 13.9 19.2 13.3 23.1 6.4-2.4 1.1-7-.2-9-1.9 7.7 1 14.2-4.1 14.6-10.6zm-39.4-18.4c2 .8 1.6.7 6.4 4.5 10.2-24.5 21.7-15.7 22-15.5 2.2-1.9 9.8-3.8 13.8-2.7-2.4-2.7-7.5-6.2-13.3-6.2-4.7 0-7.4 2.2-8 1.3-.8-1.4 3.2-3.4 3.2-3.4-5.4.2-9.6 6.7-11.2 5.9-1.1-.5 1.4-3.7 1.4-3.7-5.1 2.9-9.3 9.1-10.2 13 4.6-5.8 13.8-9.8 19.7-9-10.5.5-19.5 9.7-23.8 15.8zm242.5 51.9c-20.7 0-40 1.3-50.3 2.1l7.4 8.2v77.2l-7.4 8.2c10.4.8 30.9 2.1 51.6 2.1 42.1 0 59.1-20.7 59.1-48.9 0-29.3-23.2-48.9-60.4-48.9zm-15.1 75.6v-53.3c30.1-3.3 46.8 3.8 46.8 26.3 0 25.6-21.4 30.2-46.8 27zM301.6 181c-1-3.4-.2-6.9 1.1-9.4 1 3 2.6 6.4 7.5 9-.5-2.4-.2-5.6.5-8-1.4-5.4 2.1-9.9 6.4-9.9 6.9 0 8.5 8.8 4.7 14.4 2.1 3.2 5.5 5.6 7.7 7.8 3.2-3.7 5.5-9.5 5.5-13.8 0-8.2-5.5-15.9-16.7-16.5-20-.9-20.2 16.6-20 18.9.5 5.2 3.4 7.8 3.3 7.5zm-.4 6c-.5 1.8-7 3.7-10.2 6.9 4.8-1 7-.2 7.8 1.8.5 1.4-.2 3.4-.5 5.6 1.6-1.8 7-5.5 11-6.2-1-.3-3.4-.8-4.3-.8 2.9-3.4 9.3-4.5 12.8-3.7-2.2-.2-6.7 1.1-8.5 2.6 1.6.3 3 .6 4.3 1.1-2.1.8-4.8 3.4-5.8 6.1 7-5 13.1 5.2 7 8.2.8.2 2.7 0 3.5-.5-.3 1.1-1.9 3-3 3.4 2.9 0 7-1.9 8.2-4.6 0 0-1.8.6-2.6-.2s.3-4.3.3-4.3c-2.3 2.9-3.4-1.3-1.3-4.2-1-.3-3.5-.6-4.6-.5 3.2-1.1 10.4-1.8 11.2-.3.6 1.1-1 3.4-1 3.4 4-.5 8.3 1.1 6.7 5.1 2.9-1.4 5.5-5.9 4.8-10.4-.3 1-1.6 2.4-2.9 2.7.2-1.4-1-2.2-1.9-2.6 1.7-9.6-14.6-14.2-14.1-23.9-1 1.3-1.8 5-.8 7.1 2.7 3.2 8.7 6.7 10.1 12.2-2.6-6.4-15.1-11.4-14.6-20.2-1.6 1.6-2.6 7.8-1.3 11 2.4 1.4 4.5 3.8 4.8 6.1-2.2-5.1-11.4-6.1-13.9-12.2-.6 2.2-.3 5 1 6.7 0 0-2.2-.8-7-.6 1.7.6 5.1 3.5 4.8 5.2zm25.9 7.4c-2.7 0-3.5-2.1-4.2-4.3 3.3 1.3 4.2 4.3 4.2 4.3zm38.9 3.7l-1-.6c-1.1-1-2.9-1.4-4.7-1.4-2.9 0-5.8 1.3-7.5 3.4-.8.8-1.4 1.8-2.1 2.6v15.7c3.5 2.6 7.1-2.9 3-7.2 1.5.3 4.6 2.7 5.1 3.2 0 0 2.6-.5 5-.5 2.1 0 3.9.3 5.6 1.1V196c-1.1.5-2.2 1-2.7 1.4zM79.9 305.9c17.2-4.6 16.2-18 16.2-19.9 0-20.6-24.1-25-37-25H3l8.3 8.6v29.5H0l11.4 14.6V346L3 354.6c61.7 0 73.8 1.5 86.4-5.9 6.7-4 9.9-9.8 9.9-17.6 0-5.1 2.6-18.8-19.4-25.2zm-41.3-27.5c20 0 29.6-.8 29.6 9.1v3c0 12.1-19 8.8-29.6 8.8zm0 59.2V315c12.2 0 32.7-2.3 32.7 8.8v4.5h.2c0 11.2-12.5 9.3-32.9 9.3zm101.2-19.3l23.1.2v-.2l14.1-21.2h-37.2v-14.9h52.4l-14.1-21v-.2l-73.5.2 7.4 8.2v77.1l-7.4 8.2h81.2l14.1-21.2-60.1.2zm214.7-60.1c-73.9 0-77.5 99.3-.3 99.3 77.9 0 74.1-99.3.3-99.3zm-.3 77.5c-37.4 0-36.9-55.3.2-55.3 36.8.1 38.8 55.3-.2 55.3zm-91.3-8.3l44.1-66.2h-41.7l6.1 7.2-20.5 37.2h-.3l-21-37.2 6.4-7.2h-44.9l44.1 65.8.2 19.4-7.7 8.2h42.6l-7.2-8.2zm-28.4-151.3c1.6 1.3 2.9 2.4 2.9 6.6v38.8c0 4.2-.8 5.3-2.7 6.4-.1.1-7.5 4.5-7.9 4.6h35.1c10 0 17.4-1.5 26-8.6-.6-5 .2-9.5.8-12 0-.2-1.8 1.4-2.7 3.5 0-5.7 1.6-15.4 9.6-20.5-.1 0-3.7-.8-9 1.1 2-3.1 10-7.9 10.4-7.9-8.2-26-38-22.9-32.2-22.9-30.9 0-32.6.3-39.9-4 .1.8.5 8.2 9.6 14.9zm21.5 5.5c4.6 0 23.1-3.3 23.1 17.3 0 20.7-18.4 17.3-23.1 17.3zm228.9 79.6l7 8.3V312h-.3c-5.4-14.4-42.3-41.5-45.2-50.9h-31.6l7.4 8.5v76.9l-7.2 8.3h39l-7.4-8.2v-47.4h.3c3.7 10.6 44.5 42.9 48.5 55.6h21.3v-85.2l7.4-8.3zm-106.7-96.1c-32.2 0-32.8.2-39.9-4 .1.7.5 8.3 9.6 14.9 3.1 2 2.9 4.3 2.9 9.5 1.8-1.1 3.8-2.2 6.1-3-1.1 1.1-2.7 2.7-3.5 4.5 1-1.1 7.5-5.1 14.6-3.5-1.6.3-4 1.1-6.1 2.9.1 0 2.1-1.1 7.5-.3v-4.3c4.7 0 23.1-3.4 23.1 17.3 0 20.5-18.5 17.3-19.7 17.3 5.7 4.4 5.8 12 2.2 16.3h.3c33.4 0 36.7-27.3 36.7-34 0-3.8-1.1-32-33.8-33.6z"]
            },
            faDailymotion: {
                prefix: "fab",
                iconName: "dailymotion",
                icon: [448, 512, [], "e052", "M298.93,267a48.4,48.4,0,0,0-24.36-6.21q-19.83,0-33.44,13.27t-13.61,33.42q0,21.16,13.28,34.6t33.43,13.44q20.5,0,34.11-13.78T322,307.47A47.13,47.13,0,0,0,315.9,284,44.13,44.13,0,0,0,298.93,267ZM0,32V480H448V32ZM374.71,405.26h-53.1V381.37h-.67q-15.79,26.2-55.78,26.2-27.56,0-48.89-13.1a88.29,88.29,0,0,1-32.94-35.77q-11.6-22.68-11.59-50.89,0-27.56,11.76-50.22a89.9,89.9,0,0,1,32.93-35.78q21.18-13.09,47.72-13.1a80.87,80.87,0,0,1,29.74,5.21q13.28,5.21,25,17V153l55.79-12.09Z"]
            },
            faDashcube: {
                prefix: "fab",
                iconName: "dashcube",
                icon: [448, 512, [], "f210", "M326.6 104H110.4c-51.1 0-91.2 43.3-91.2 93.5V427c0 50.5 40.1 85 91.2 85h227.2c51.1 0 91.2-34.5 91.2-85V0L326.6 104zM153.9 416.5c-17.7 0-32.4-15.1-32.4-32.8V240.8c0-17.7 14.7-32.5 32.4-32.5h140.7c17.7 0 32 14.8 32 32.5v123.5l51.1 52.3H153.9z"]
            },
            faDeezer: {
                prefix: "fab",
                iconName: "deezer",
                icon: [576, 512, [], "e077", "M451.46,244.71H576V172H451.46Zm0-173.89v72.67H576V70.82Zm0,275.06H576V273.2H451.46ZM0,447.09H124.54V374.42H0Zm150.47,0H275V374.42H150.47Zm150.52,0H425.53V374.42H301Zm150.47,0H576V374.42H451.46ZM301,345.88H425.53V273.2H301Zm-150.52,0H275V273.2H150.47Zm0-101.17H275V172H150.47Z"]
            },
            faDelicious: {
                prefix: "fab",
                iconName: "delicious",
                icon: [448, 512, [], "f1a5", "M446.5 68c-.4-1.5-.9-3-1.4-4.5-.9-2.5-2-4.8-3.3-7.1-1.4-2.4-3-4.8-4.7-6.9-2.1-2.5-4.4-4.8-6.9-6.8-1.1-.9-2.2-1.7-3.3-2.5-1.3-.9-2.6-1.7-4-2.4-1.8-1-3.6-1.8-5.5-2.5-1.7-.7-3.5-1.3-5.4-1.7-3.8-1-7.9-1.5-12-1.5H48C21.5 32 0 53.5 0 80v352c0 4.1.5 8.2 1.5 12 2 7.7 5.8 14.6 11 20.3 1 1.1 2.1 2.2 3.3 3.3 5.7 5.2 12.6 9 20.3 11 3.8 1 7.9 1.5 12 1.5h352c26.5 0 48-21.5 48-48V80c-.1-4.1-.6-8.2-1.6-12zM416 432c0 8.8-7.2 16-16 16H224V256H32V80c0-8.8 7.2-16 16-16h176v192h192z"]
            },
            faDeploydog: {
                prefix: "fab",
                iconName: "deploydog",
                icon: [512, 512, [], "f38e", "M382.2 136h51.7v239.6h-51.7v-20.7c-19.8 24.8-52.8 24.1-73.8 14.7-26.2-11.7-44.3-38.1-44.3-71.8 0-29.8 14.8-57.9 43.3-70.8 20.2-9.1 52.7-10.6 74.8 12.9V136zm-64.7 161.8c0 18.2 13.6 33.5 33.2 33.5 19.8 0 33.2-16.4 33.2-32.9 0-17.1-13.7-33.2-33.2-33.2-19.6 0-33.2 16.4-33.2 32.6zM188.5 136h51.7v239.6h-51.7v-20.7c-19.8 24.8-52.8 24.1-73.8 14.7-26.2-11.7-44.3-38.1-44.3-71.8 0-29.8 14.8-57.9 43.3-70.8 20.2-9.1 52.7-10.6 74.8 12.9V136zm-64.7 161.8c0 18.2 13.6 33.5 33.2 33.5 19.8 0 33.2-16.4 33.2-32.9 0-17.1-13.7-33.2-33.2-33.2-19.7 0-33.2 16.4-33.2 32.6zM448 96c17.5 0 32 14.4 32 32v256c0 17.5-14.4 32-32 32H64c-17.5 0-32-14.4-32-32V128c0-17.5 14.4-32 32-32h384m0-32H64C28.8 64 0 92.8 0 128v256c0 35.2 28.8 64 64 64h384c35.2 0 64-28.8 64-64V128c0-35.2-28.8-64-64-64z"]
            },
            faDeskpro: {
                prefix: "fab",
                iconName: "deskpro",
                icon: [480, 512, [], "f38f", "M205.9 512l31.1-38.4c12.3-.2 25.6-1.4 36.5-6.6 38.9-18.6 38.4-61.9 38.3-63.8-.1-5-.8-4.4-28.9-37.4H362c-.2 50.1-7.3 68.5-10.2 75.7-9.4 23.7-43.9 62.8-95.2 69.4-8.7 1.1-32.8 1.2-50.7 1.1zm200.4-167.7c38.6 0 58.5-13.6 73.7-30.9l-175.5-.3-17.4 31.3 119.2-.1zm-43.6-223.9v168.3h-73.5l-32.7 55.5H250c-52.3 0-58.1-56.5-58.3-58.9-1.2-13.2-21.3-11.6-20.1 1.8 1.4 15.8 8.8 40 26.4 57.1h-91c-25.5 0-110.8-26.8-107-114V16.9C0 .9 9.7.3 15 .1h82c.2 0 .3.1.5.1 4.3-.4 50.1-2.1 50.1 43.7 0 13.3 20.2 13.4 20.2 0 0-18.2-5.5-32.8-15.8-43.7h84.2c108.7-.4 126.5 79.4 126.5 120.2zm-132.5 56l64 29.3c13.3-45.5-42.2-71.7-64-29.3z"]
            },
            faDev: {
                prefix: "fab",
                iconName: "dev",
                icon: [448, 512, [], "f6cc", "M120.12 208.29c-3.88-2.9-7.77-4.35-11.65-4.35H91.03v104.47h17.45c3.88 0 7.77-1.45 11.65-4.35 3.88-2.9 5.82-7.25 5.82-13.06v-69.65c-.01-5.8-1.96-10.16-5.83-13.06zM404.1 32H43.9C19.7 32 .06 51.59 0 75.8v360.4C.06 460.41 19.7 480 43.9 480h360.2c24.21 0 43.84-19.59 43.9-43.8V75.8c-.06-24.21-19.7-43.8-43.9-43.8zM154.2 291.19c0 18.81-11.61 47.31-48.36 47.25h-46.4V172.98h47.38c35.44 0 47.36 28.46 47.37 47.28l.01 70.93zm100.68-88.66H201.6v38.42h32.57v29.57H201.6v38.41h53.29v29.57h-62.18c-11.16.29-20.44-8.53-20.72-19.69V193.7c-.27-11.15 8.56-20.41 19.71-20.69h63.19l-.01 29.52zm103.64 115.29c-13.2 30.75-36.85 24.63-47.44 0l-38.53-144.8h32.57l29.71 113.72 29.57-113.72h32.58l-38.46 144.8z"]
            },
            faDeviantart: {
                prefix: "fab",
                iconName: "deviantart",
                icon: [320, 512, [], "f1bd", "M320 93.2l-98.2 179.1 7.4 9.5H320v127.7H159.1l-13.5 9.2-43.7 84c-.3 0-8.6 8.6-9.2 9.2H0v-93.2l93.2-179.4-7.4-9.2H0V102.5h156l13.5-9.2 43.7-84c.3 0 8.6-8.6 9.2-9.2H320v93.1z"]
            },
            faDhl: {
                prefix: "fab",
                iconName: "dhl",
                icon: [640, 512, [], "f790", "M238 301.2h58.7L319 271h-58.7L238 301.2zM0 282.9v6.4h81.8l4.7-6.4H0zM172.9 271c-8.7 0-6-3.6-4.6-5.5 2.8-3.8 7.6-10.4 10.4-14.1 2.8-3.7 2.8-5.9-2.8-5.9h-51l-41.1 55.8h100.1c33.1 0 51.5-22.5 57.2-30.3h-68.2zm317.5-6.9l39.3-53.4h-62.2l-39.3 53.4h62.2zM95.3 271H0v6.4h90.6l4.7-6.4zm111-26.6c-2.8 3.8-7.5 10.4-10.3 14.2-1.4 2-4.1 5.5 4.6 5.5h45.6s7.3-10 13.5-18.4c8.4-11.4.7-35-29.2-35H112.6l-20.4 27.8h111.4c5.6 0 5.5 2.2 2.7 5.9zM0 301.2h73.1l4.7-6.4H0v6.4zm323 0h58.7L404 271h-58.7c-.1 0-22.3 30.2-22.3 30.2zm222 .1h95v-6.4h-90.3l-4.7 6.4zm22.3-30.3l-4.7 6.4H640V271h-72.7zm-13.5 18.3H640v-6.4h-81.5l-4.7 6.4zm-164.2-78.6l-22.5 30.6h-26.2l22.5-30.6h-58.7l-39.3 53.4H409l39.3-53.4h-58.7zm33.5 60.3s-4.3 5.9-6.4 8.7c-7.4 10-.9 21.6 23.2 21.6h94.3l22.3-30.3H423.1z"]
            },
            faDiaspora: {
                prefix: "fab",
                iconName: "diaspora",
                icon: [512, 512, [], "f791", "M251.64 354.55c-1.4 0-88 119.9-88.7 119.9S76.34 414 76 413.25s86.6-125.7 86.6-127.4c0-2.2-129.6-44-137.6-47.1-1.3-.5 31.4-101.8 31.7-102.1.6-.7 144.4 47 145.5 47 .4 0 .9-.6 1-1.3.4-2 1-148.6 1.7-149.6.8-1.2 104.5-.7 105.1-.3 1.5 1 3.5 156.1 6.1 156.1 1.4 0 138.7-47 139.3-46.3.8.9 31.9 102.2 31.5 102.6-.9.9-140.2 47.1-140.6 48.8-.3 1.4 82.8 122.1 82.5 122.9s-85.5 63.5-86.3 63.5c-1-.2-89-125.5-90.9-125.5z"]
            },
            faDigg: {
                prefix: "fab",
                iconName: "digg",
                icon: [512, 512, [], "f1a6", "M81.7 172.3H0v174.4h132.7V96h-51v76.3zm0 133.4H50.9v-92.3h30.8v92.3zm297.2-133.4v174.4h81.8v28.5h-81.8V416H512V172.3H378.9zm81.8 133.4h-30.8v-92.3h30.8v92.3zm-235.6 41h82.1v28.5h-82.1V416h133.3V172.3H225.1v174.4zm51.2-133.3h30.8v92.3h-30.8v-92.3zM153.3 96h51.3v51h-51.3V96zm0 76.3h51.3v174.4h-51.3V172.3z"]
            },
            faDigitalOcean: {
                prefix: "fab",
                iconName: "digital-ocean",
                icon: [512, 512, [], "f391", "M87 481.8h73.7v-73.6H87zM25.4 346.6v61.6H87v-61.6zm466.2-169.7c-23-74.2-82.4-133.3-156.6-156.6C164.9-32.8 8 93.7 8 255.9h95.8c0-101.8 101-180.5 208.1-141.7 39.7 14.3 71.5 46.1 85.8 85.7 39.1 107-39.7 207.8-141.4 208v.3h-.3V504c162.6 0 288.8-156.8 235.6-327.1zm-235.3 231v-95.3h-95.6v95.6H256v-.3z"]
            },
            faDiscord: {
                prefix: "fab",
                iconName: "discord",
                icon: [448, 512, [], "f392", "M297.216 243.2c0 15.616-11.52 28.416-26.112 28.416-14.336 0-26.112-12.8-26.112-28.416s11.52-28.416 26.112-28.416c14.592 0 26.112 12.8 26.112 28.416zm-119.552-28.416c-14.592 0-26.112 12.8-26.112 28.416s11.776 28.416 26.112 28.416c14.592 0 26.112-12.8 26.112-28.416.256-15.616-11.52-28.416-26.112-28.416zM448 52.736V512c-64.494-56.994-43.868-38.128-118.784-107.776l13.568 47.36H52.48C23.552 451.584 0 428.032 0 398.848V52.736C0 23.552 23.552 0 52.48 0h343.04C424.448 0 448 23.552 448 52.736zm-72.96 242.688c0-82.432-36.864-149.248-36.864-149.248-36.864-27.648-71.936-26.88-71.936-26.88l-3.584 4.096c43.52 13.312 63.744 32.512 63.744 32.512-60.811-33.329-132.244-33.335-191.232-7.424-9.472 4.352-15.104 7.424-15.104 7.424s21.248-20.224 67.328-33.536l-2.56-3.072s-35.072-.768-71.936 26.88c0 0-36.864 66.816-36.864 149.248 0 0 21.504 37.12 78.08 38.912 0 0 9.472-11.52 17.152-21.248-32.512-9.728-44.8-30.208-44.8-30.208 3.766 2.636 9.976 6.053 10.496 6.4 43.21 24.198 104.588 32.126 159.744 8.96 8.96-3.328 18.944-8.192 29.44-15.104 0 0-12.8 20.992-46.336 30.464 7.68 9.728 16.896 20.736 16.896 20.736 56.576-1.792 78.336-38.912 78.336-38.912z"]
            },
            faDiscourse: {
                prefix: "fab",
                iconName: "discourse",
                icon: [448, 512, [], "f393", "M225.9 32C103.3 32 0 130.5 0 252.1 0 256 .1 480 .1 480l225.8-.2c122.7 0 222.1-102.3 222.1-223.9C448 134.3 348.6 32 225.9 32zM224 384c-19.4 0-37.9-4.3-54.4-12.1L88.5 392l22.9-75c-9.8-18.1-15.4-38.9-15.4-61 0-70.7 57.3-128 128-128s128 57.3 128 128-57.3 128-128 128z"]
            },
            faDochub: {
                prefix: "fab",
                iconName: "dochub",
                icon: [416, 512, [], "f394", "M397.9 160H256V19.6L397.9 160zM304 192v130c0 66.8-36.5 100.1-113.3 100.1H96V84.8h94.7c12 0 23.1.8 33.1 2.5v-84C212.9 1.1 201.4 0 189.2 0H0v512h189.2C329.7 512 400 447.4 400 318.1V192h-96z"]
            },
            faDocker: {
                prefix: "fab",
                iconName: "docker",
                icon: [640, 512, [], "f395", "M349.9 236.3h-66.1v-59.4h66.1v59.4zm0-204.3h-66.1v60.7h66.1V32zm78.2 144.8H362v59.4h66.1v-59.4zm-156.3-72.1h-66.1v60.1h66.1v-60.1zm78.1 0h-66.1v60.1h66.1v-60.1zm276.8 100c-14.4-9.7-47.6-13.2-73.1-8.4-3.3-24-16.7-44.9-41.1-63.7l-14-9.3-9.3 14c-18.4 27.8-23.4 73.6-3.7 103.8-8.7 4.7-25.8 11.1-48.4 10.7H2.4c-8.7 50.8 5.8 116.8 44 162.1 37.1 43.9 92.7 66.2 165.4 66.2 157.4 0 273.9-72.5 328.4-204.2 21.4.4 67.6.1 91.3-45.2 1.5-2.5 6.6-13.2 8.5-17.1l-13.3-8.9zm-511.1-27.9h-66v59.4h66.1v-59.4zm78.1 0h-66.1v59.4h66.1v-59.4zm78.1 0h-66.1v59.4h66.1v-59.4zm-78.1-72.1h-66.1v60.1h66.1v-60.1z"]
            },
            faDraft2digital: {
                prefix: "fab",
                iconName: "draft2digital",
                icon: [480, 512, [], "f396", "M480 398.1l-144-82.2v64.7h-91.3c30.8-35 81.8-95.9 111.8-149.3 35.2-62.6 16.1-123.4-12.8-153.3-4.4-4.6-62.2-62.9-166-41.2-59.1 12.4-89.4 43.4-104.3 67.3-13.1 20.9-17 39.8-18.2 47.7-5.5 33 19.4 67.1 56.7 67.1 31.7 0 57.3-25.7 57.3-57.4 0-27.1-19.7-52.1-48-56.8 1.8-7.3 17.7-21.1 26.3-24.7 41.1-17.3 78 5.2 83.3 33.5 8.3 44.3-37.1 90.4-69.7 127.6C84.5 328.1 18.3 396.8 0 415.9l336-.1V480zM369.9 371l47.1 27.2-47.1 27.2zM134.2 161.4c0 12.4-10 22.4-22.4 22.4s-22.4-10-22.4-22.4 10-22.4 22.4-22.4 22.4 10.1 22.4 22.4zM82.5 380.5c25.6-27.4 97.7-104.7 150.8-169.9 35.1-43.1 40.3-82.4 28.4-112.7-7.4-18.8-17.5-30.2-24.3-35.7 45.3 2.1 68 23.4 82.2 38.3 0 0 42.4 48.2 5.8 113.3-37 65.9-110.9 147.5-128.5 166.7z"]
            },
            faDribbble: {
                prefix: "fab",
                iconName: "dribbble",
                icon: [512, 512, [], "f17d", "M256 8C119.252 8 8 119.252 8 256s111.252 248 248 248 248-111.252 248-248S392.748 8 256 8zm163.97 114.366c29.503 36.046 47.369 81.957 47.835 131.955-6.984-1.477-77.018-15.682-147.502-6.818-5.752-14.041-11.181-26.393-18.617-41.614 78.321-31.977 113.818-77.482 118.284-83.523zM396.421 97.87c-3.81 5.427-35.697 48.286-111.021 76.519-34.712-63.776-73.185-116.168-79.04-124.008 67.176-16.193 137.966 1.27 190.061 47.489zm-230.48-33.25c5.585 7.659 43.438 60.116 78.537 122.509-99.087 26.313-186.36 25.934-195.834 25.809C62.38 147.205 106.678 92.573 165.941 64.62zM44.17 256.323c0-2.166.043-4.322.108-6.473 9.268.19 111.92 1.513 217.706-30.146 6.064 11.868 11.857 23.915 17.174 35.949-76.599 21.575-146.194 83.527-180.531 142.306C64.794 360.405 44.17 310.73 44.17 256.323zm81.807 167.113c22.127-45.233 82.178-103.622 167.579-132.756 29.74 77.283 42.039 142.053 45.189 160.638-68.112 29.013-150.015 21.053-212.768-27.882zm248.38 8.489c-2.171-12.886-13.446-74.897-41.152-151.033 66.38-10.626 124.7 6.768 131.947 9.055-9.442 58.941-43.273 109.844-90.795 141.978z"]
            },
            faDribbbleSquare: {
                prefix: "fab",
                iconName: "dribbble-square",
                icon: [448, 512, [], "f397", "M90.2 228.2c8.9-42.4 37.4-77.7 75.7-95.7 3.6 4.9 28 38.8 50.7 79-64 17-120.3 16.8-126.4 16.7zM314.6 154c-33.6-29.8-79.3-41.1-122.6-30.6 3.8 5.1 28.6 38.9 51 80 48.6-18.3 69.1-45.9 71.6-49.4zM140.1 364c40.5 31.6 93.3 36.7 137.3 18-2-12-10-53.8-29.2-103.6-55.1 18.8-93.8 56.4-108.1 85.6zm98.8-108.2c-3.4-7.8-7.2-15.5-11.1-23.2C159.6 253 93.4 252.2 87.4 252c0 1.4-.1 2.8-.1 4.2 0 35.1 13.3 67.1 35.1 91.4 22.2-37.9 67.1-77.9 116.5-91.8zm34.9 16.3c17.9 49.1 25.1 89.1 26.5 97.4 30.7-20.7 52.5-53.6 58.6-91.6-4.6-1.5-42.3-12.7-85.1-5.8zm-20.3-48.4c4.8 9.8 8.3 17.8 12 26.8 45.5-5.7 90.7 3.4 95.2 4.4-.3-32.3-11.8-61.9-30.9-85.1-2.9 3.9-25.8 33.2-76.3 53.9zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-64 176c0-88.2-71.8-160-160-160S64 167.8 64 256s71.8 160 160 160 160-71.8 160-160z"]
            },
            faDropbox: {
                prefix: "fab",
                iconName: "dropbox",
                icon: [528, 512, [], "f16b", "M264.4 116.3l-132 84.3 132 84.3-132 84.3L0 284.1l132.3-84.3L0 116.3 132.3 32l132.1 84.3zM131.6 395.7l132-84.3 132 84.3-132 84.3-132-84.3zm132.8-111.6l132-84.3-132-83.6L395.7 32 528 116.3l-132.3 84.3L528 284.8l-132.3 84.3-131.3-85z"]
            },
            faDrupal: {
                prefix: "fab",
                iconName: "drupal",
                icon: [448, 512, [], "f1a9", "M319.5 114.7c-22.2-14-43.5-19.5-64.7-33.5-13-8.8-31.3-30-46.5-48.3-2.7 29.3-11.5 41.2-22 49.5-21.3 17-34.8 22.2-53.5 32.3C117 123 32 181.5 32 290.5 32 399.7 123.8 480 225.8 480 327.5 480 416 406 416 294c0-112.3-83-171-96.5-179.3zm2.5 325.6c-20.1 20.1-90.1 28.7-116.7 4.2-4.8-4.8.3-12 6.5-12 0 0 17 13.3 51.5 13.3 27 0 46-7.7 54.5-14 6.1-4.6 8.4 4.3 4.2 8.5zm-54.5-52.6c8.7-3.6 29-3.8 36.8 1.3 4.1 2.8 16.1 18.8 6.2 23.7-8.4 4.2-1.2-15.7-26.5-15.7-14.7 0-19.5 5.2-26.7 11-7 6-9.8 8-12.2 4.7-6-8.2 15.9-22.3 22.4-25zM360 405c-15.2-1-45.5-48.8-65-49.5-30.9-.9-104.1 80.7-161.3 42-38.8-26.6-14.6-104.8 51.8-105.2 49.5-.5 83.8 49 108.5 48.5 21.3-.3 61.8-41.8 81.8-41.8 48.7 0 23.3 109.3-15.8 106z"]
            },
            faDyalog: {
                prefix: "fab",
                iconName: "dyalog",
                icon: [416, 512, [], "f399", "M0 32v119.2h64V96h107.2C284.6 96 352 176.2 352 255.9 352 332 293.4 416 171.2 416H0v64h171.2C331.9 480 416 367.3 416 255.9c0-58.7-22.1-113.4-62.3-154.3C308.9 56 245.7 32 171.2 32H0z"]
            },
            faEarlybirds: {
                prefix: "fab",
                iconName: "earlybirds",
                icon: [480, 512, [], "f39a", "M313.2 47.5c1.2-13 21.3-14 36.6-8.7.9.3 26.2 9.7 19 15.2-27.9-7.4-56.4 18.2-55.6-6.5zm-201 6.9c30.7-8.1 62 20 61.1-7.1-1.3-14.2-23.4-15.3-40.2-9.6-1 .3-28.7 10.5-20.9 16.7zM319.4 160c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm-159.7 0c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm318.5 163.2c-9.9 24-40.7 11-63.9-1.2-13.5 69.1-58.1 111.4-126.3 124.2.3.9-2-.1 24 1 33.6 1.4 63.8-3.1 97.4-8-19.8-13.8-11.4-37.1-9.8-38.1 1.4-.9 14.7 1.7 21.6 11.5 8.6-12.5 28.4-14.8 30.2-13.6 1.6 1.1 6.6 20.9-6.9 34.6 4.7-.9 8.2-1.6 9.8-2.1 2.6-.8 17.7 11.3 3.1 13.3-14.3 2.3-22.6 5.1-47.1 10.8-45.9 10.7-85.9 11.8-117.7 12.8l1 11.6c3.8 18.1-23.4 24.3-27.6 6.2.8 17.9-27.1 21.8-28.4-1l-.5 5.3c-.7 18.4-28.4 17.9-28.3-.6-7.5 13.5-28.1 6.8-26.4-8.5l1.2-12.4c-36.7.9-59.7 3.1-61.8 3.1-20.9 0-20.9-31.6 0-31.6 2.4 0 27.7 1.3 63.2 2.8-61.1-15.5-103.7-55-114.9-118.2-25 12.8-57.5 26.8-68.2.8-10.5-25.4 21.5-42.6 66.8-73.4.7-6.6 1.6-13.3 2.7-19.8-14.4-19.6-11.6-36.3-16.1-60.4-16.8 2.4-23.2-9.1-23.6-23.1.3-7.3 2.1-14.9 2.4-15.4 1.1-1.8 10.1-2 12.7-2.6 6-31.7 50.6-33.2 90.9-34.5 19.7-21.8 45.2-41.5 80.9-48.3C203.3 29 215.2 8.5 216.2 8c1.7-.8 21.2 4.3 26.3 23.2 5.2-8.8 18.3-11.4 19.6-10.7 1.1.6 6.4 15-4.9 25.9 40.3 3.5 72.2 24.7 96 50.7 36.1 1.5 71.8 5.9 77.1 34 2.7.6 11.6.8 12.7 2.6.3.5 2.1 8.1 2.4 15.4-.5 13.9-6.8 25.4-23.6 23.1-3.2 17.3-2.7 32.9-8.7 47.7 2.4 11.7 4 23.8 4.8 36.4 37 25.4 70.3 42.5 60.3 66.9zM207.4 159.9c.9-44-37.9-42.2-78.6-40.3-21.7 1-38.9 1.9-45.5 13.9-11.4 20.9 5.9 92.9 23.2 101.2 9.8 4.7 73.4 7.9 86.3-7.1 8.2-9.4 15-49.4 14.6-67.7zm52 58.3c-4.3-12.4-6-30.1-15.3-32.7-2-.5-9-.5-11 0-10 2.8-10.8 22.1-17 37.2 15.4 0 19.3 9.7 23.7 9.7 4.3 0 6.3-11.3 19.6-14.2zm135.7-84.7c-6.6-12.1-24.8-12.9-46.5-13.9-40.2-1.9-78.2-3.8-77.3 40.3-.5 18.3 5 58.3 13.2 67.8 13 14.9 76.6 11.8 86.3 7.1 15.8-7.6 36.5-78.9 24.3-101.3z"]
            },
            faEbay: {
                prefix: "fab",
                iconName: "ebay",
                icon: [640, 512, [], "f4f4", "M606 189.5l-54.8 109.9-54.9-109.9h-37.5l10.9 20.6c-11.5-19-35.9-26-63.3-26-31.8 0-67.9 8.7-71.5 43.1h33.7c1.4-13.8 15.7-21.8 35-21.8 26 0 41 9.6 41 33v3.4c-12.7 0-28 .1-41.7.4-42.4.9-69.6 10-76.7 34.4 1-5.2 1.5-10.6 1.5-16.2 0-52.1-39.7-76.2-75.4-76.2-21.3 0-43 5.5-58.7 24.2v-80.6h-32.1v169.5c0 10.3-.6 22.9-1.1 33.1h31.5c.7-6.3 1.1-12.9 1.1-19.5 13.6 16.6 35.4 24.9 58.7 24.9 36.9 0 64.9-21.9 73.3-54.2-.5 2.8-.7 5.8-.7 9 0 24.1 21.1 45 60.6 45 26.6 0 45.8-5.7 61.9-25.5 0 6.6.3 13.3 1.1 20.2h29.8c-.7-8.2-1-17.5-1-26.8v-65.6c0-9.3-1.7-17.2-4.8-23.8l61.5 116.1-28.5 54.1h35.9L640 189.5zM243.7 313.8c-29.6 0-50.2-21.5-50.2-53.8 0-32.4 20.6-53.8 50.2-53.8 29.8 0 50.2 21.4 50.2 53.8 0 32.3-20.4 53.8-50.2 53.8zm200.9-47.3c0 30-17.9 48.4-51.6 48.4-25.1 0-35-13.4-35-25.8 0-19.1 18.1-24.4 47.2-25.3 13.1-.5 27.6-.6 39.4-.6zm-411.9 1.6h128.8v-8.5c0-51.7-33.1-75.4-78.4-75.4-56.8 0-83 30.8-83 77.6 0 42.5 25.3 74 82.5 74 31.4 0 68-11.7 74.4-46.1h-33.1c-12 35.8-87.7 36.7-91.2-21.6zm95-21.4H33.3c6.9-56.6 92.1-54.7 94.4 0z"]
            },
            faEdge: {
                prefix: "fab",
                iconName: "edge",
                icon: [512, 512, [], "f282", "M481.92,134.48C440.87,54.18,352.26,8,255.91,8,137.05,8,37.51,91.68,13.47,203.66c26-46.49,86.22-79.14,149.46-79.14,79.27,0,121.09,48.93,122.25,50.18,22,23.8,33,50.39,33,83.1,0,10.4-5.31,25.82-15.11,38.57-1.57,2-6.39,4.84-6.39,11,0,5.06,3.29,9.92,9.14,14,27.86,19.37,80.37,16.81,80.51,16.81A115.39,115.39,0,0,0,444.94,322a118.92,118.92,0,0,0,58.95-102.44C504.39,176.13,488.39,147.26,481.92,134.48ZM212.77,475.67a154.88,154.88,0,0,1-46.64-45c-32.94-47.42-34.24-95.6-20.1-136A155.5,155.5,0,0,1,203,215.75c59-45.2,94.84-5.65,99.06-1a80,80,0,0,0-4.89-10.14c-9.24-15.93-24-36.41-56.56-53.51-33.72-17.69-70.59-18.59-77.64-18.59-38.71,0-77.9,13-107.53,35.69C35.68,183.3,12.77,208.72,8.6,243c-1.08,12.31-2.75,62.8,23,118.27a248,248,0,0,0,248.3,141.61C241.78,496.26,214.05,476.24,212.77,475.67Zm250.72-98.33a7.76,7.76,0,0,0-7.92-.23,181.66,181.66,0,0,1-20.41,9.12,197.54,197.54,0,0,1-69.55,12.52c-91.67,0-171.52-63.06-171.52-144A61.12,61.12,0,0,1,200.61,228,168.72,168.72,0,0,0,161.85,278c-14.92,29.37-33,88.13,13.33,151.66,6.51,8.91,23,30,56,47.67,23.57,12.65,49,19.61,71.7,19.61,35.14,0,115.43-33.44,163-108.87A7.75,7.75,0,0,0,463.49,377.34Z"]
            },
            faEdgeLegacy: {
                prefix: "fab",
                iconName: "edge-legacy",
                icon: [512, 512, [], "e078", "M25.71,228.16l.35-.48c0,.16,0,.32-.07.48Zm460.58,15.51c0-44-7.76-84.46-28.81-122.4C416.5,47.88,343.91,8,258.89,8,119,7.72,40.62,113.21,26.06,227.68c42.42-61.31,117.07-121.38,220.37-125,0,0,109.67,0,99.42,105H170c6.37-37.39,18.55-59,34.34-78.93-75.05,34.9-121.85,96.1-120.75,188.32.83,71.45,50.13,144.84,120.75,172,83.35,31.84,192.77,7.2,240.13-21.33V363.31C363.6,419.8,173.6,424.23,172.21,295.74H486.29V243.67Z"]
            },
            faElementor: {
                prefix: "fab",
                iconName: "elementor",
                icon: [448, 512, [], "f430", "M425.6 32H22.4C10 32 0 42 0 54.4v403.2C0 470 10 480 22.4 480h403.2c12.4 0 22.4-10 22.4-22.4V54.4C448 42 438 32 425.6 32M164.3 355.5h-39.8v-199h39.8v199zm159.3 0H204.1v-39.8h119.5v39.8zm0-79.6H204.1v-39.8h119.5v39.8zm0-79.7H204.1v-39.8h119.5v39.8z"]
            },
            faEllo: {
                prefix: "fab",
                iconName: "ello",
                icon: [496, 512, [], "f5f1", "M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm143.84 285.2C375.31 358.51 315.79 404.8 248 404.8s-127.31-46.29-143.84-111.6c-1.65-7.44 2.48-15.71 9.92-17.36 7.44-1.65 15.71 2.48 17.36 9.92 14.05 52.91 62 90.11 116.56 90.11s102.51-37.2 116.56-90.11c1.65-7.44 9.92-12.4 17.36-9.92 7.44 1.65 12.4 9.92 9.92 17.36z"]
            },
            faEmber: {
                prefix: "fab",
                iconName: "ember",
                icon: [640, 512, [], "f423", "M639.9 254.6c-1.1-10.7-10.7-6.8-10.7-6.8s-15.6 12.1-29.3 10.7c-13.7-1.3-9.4-32-9.4-32s3-28.1-5.1-30.4c-8.1-2.4-18 7.3-18 7.3s-12.4 13.7-18.3 31.2l-1.6.5s1.9-30.6-.3-37.6c-1.6-3.5-16.4-3.2-18.8 3s-14.2 49.2-15 67.2c0 0-23.1 19.6-43.3 22.8s-25-9.4-25-9.4 54.8-15.3 52.9-59.1-44.2-27.6-49-24c-4.6 3.5-29.4 18.4-36.6 59.7-.2 1.4-.7 7.5-.7 7.5s-21.2 14.2-33 18c0 0 33-55.6-7.3-80.9-11.4-6.8-21.3-.5-27.2 5.3 13.6-17.3 46.4-64.2 36.9-105.2-5.8-24.4-18-27.1-29.2-23.1-17 6.7-23.5 16.7-23.5 16.7s-22 32-27.1 79.5-12.6 105.1-12.6 105.1-10.5 10.2-20.2 10.7-5.4-28.7-5.4-28.7 7.5-44.6 7-52.1-1.1-11.6-9.9-14.2c-8.9-2.7-18.5 8.6-18.5 8.6s-25.5 38.7-27.7 44.6l-1.3 2.4-1.3-1.6s18-52.7.8-53.5-28.5 18.8-28.5 18.8-19.6 32.8-20.4 36.5l-1.3-1.6s8.1-38.2 6.4-47.6c-1.6-9.4-10.5-7.5-10.5-7.5s-11.3-1.3-14.2 5.9-13.7 55.3-15 70.7c0 0-28.2 20.2-46.8 20.4-18.5.3-16.7-11.8-16.7-11.8s68-23.3 49.4-69.2c-8.3-11.8-18-15.5-31.7-15.3-13.7.3-30.3 8.6-41.3 33.3-5.3 11.8-6.8 23-7.8 31.5 0 0-12.3 2.4-18.8-2.9s-10 0-10 0-11.2 14-.1 18.3 28.1 6.1 28.1 6.1c1.6 7.5 6.2 19.5 19.6 29.7 20.2 15.3 58.8-1.3 58.8-1.3l15.9-8.8s.5 14.6 12.1 16.7 16.4 1 36.5-47.9c11.8-25 12.6-23.6 12.6-23.6l1.3-.3s-9.1 46.8-5.6 59.7C187.7 319.4 203 318 203 318s8.3 2.4 15-21.2 19.6-49.9 19.6-49.9h1.6s-5.6 48.1 3 63.7 30.9 5.3 30.9 5.3 15.6-7.8 18-10.2c0 0 18.5 15.8 44.6 12.9 58.3-11.5 79.1-25.9 79.1-25.9s10 24.4 41.1 26.7c35.5 2.7 54.8-18.6 54.8-18.6s-.3 13.5 12.1 18.6 20.7-22.8 20.7-22.8l20.7-57.2h1.9s1.1 37.3 21.5 43.2 47-13.7 47-13.7 6.4-3.5 5.3-14.3zm-578 5.3c.8-32 21.8-45.9 29-39 7.3 7 4.6 22-9.1 31.4-13.7 9.5-19.9 7.6-19.9 7.6zm272.8-123.8s19.1-49.7 23.6-25.5-40 96.2-40 96.2c.5-16.2 16.4-70.7 16.4-70.7zm22.8 138.4c-12.6 33-43.3 19.6-43.3 19.6s-3.5-11.8 6.4-44.9 33.3-20.2 33.3-20.2 16.2 12.4 3.6 45.5zm84.6-14.6s-3-10.5 8.1-30.6c11-20.2 19.6-9.1 19.6-9.1s9.4 10.2-1.3 25.5-26.4 14.2-26.4 14.2z"]
            },
            faEmpire: {
                prefix: "fab",
                iconName: "empire",
                icon: [496, 512, [], "f1d1", "M287.6 54.2c-10.8-2.2-22.1-3.3-33.5-3.6V32.4c78.1 2.2 146.1 44 184.6 106.6l-15.8 9.1c-6.1-9.7-12.7-18.8-20.2-27.1l-18 15.5c-26-29.6-61.4-50.7-101.9-58.4l4.8-23.9zM53.4 322.4l23-7.7c-6.4-18.3-10-38.2-10-58.7s3.3-40.4 9.7-58.7l-22.7-7.7c3.6-10.8 8.3-21.3 13.6-31l-15.8-9.1C34 181 24.1 217.5 24.1 256s10 75 27.1 106.6l15.8-9.1c-5.3-10-9.7-20.3-13.6-31.1zM213.1 434c-40.4-8-75.8-29.1-101.9-58.7l-18 15.8c-7.5-8.6-14.4-17.7-20.2-27.4l-16 9.4c38.5 62.3 106.8 104.3 184.9 106.6v-18.3c-11.3-.3-22.7-1.7-33.5-3.6l4.7-23.8zM93.3 120.9l18 15.5c26-29.6 61.4-50.7 101.9-58.4l-4.7-23.8c10.8-2.2 22.1-3.3 33.5-3.6V32.4C163.9 34.6 95.9 76.4 57.4 139l15.8 9.1c6-9.7 12.6-18.9 20.1-27.2zm309.4 270.2l-18-15.8c-26 29.6-61.4 50.7-101.9 58.7l4.7 23.8c-10.8 1.9-22.1 3.3-33.5 3.6v18.3c78.1-2.2 146.4-44.3 184.9-106.6l-16.1-9.4c-5.7 9.7-12.6 18.8-20.1 27.4zM496 256c0 137-111 248-248 248S0 393 0 256 111 8 248 8s248 111 248 248zm-12.2 0c0-130.1-105.7-235.8-235.8-235.8S12.2 125.9 12.2 256 117.9 491.8 248 491.8 483.8 386.1 483.8 256zm-39-106.6l-15.8 9.1c5.3 9.7 10 20.2 13.6 31l-22.7 7.7c6.4 18.3 9.7 38.2 9.7 58.7s-3.6 40.4-10 58.7l23 7.7c-3.9 10.8-8.3 21-13.6 31l15.8 9.1C462 331 471.9 294.5 471.9 256s-9.9-75-27.1-106.6zm-183 177.7c16.3-3.3 30.4-11.6 40.7-23.5l51.2 44.8c11.9-13.6 21.3-29.3 27.1-46.8l-64.2-22.1c2.5-7.5 3.9-15.2 3.9-23.5s-1.4-16.1-3.9-23.5l64.5-22.1c-6.1-17.4-15.5-33.2-27.4-46.8l-51.2 44.8c-10.2-11.9-24.4-20.5-40.7-23.8l13.3-66.4c-8.6-1.9-17.7-2.8-27.1-2.8-9.4 0-18.5.8-27.1 2.8l13.3 66.4c-16.3 3.3-30.4 11.9-40.7 23.8l-51.2-44.8c-11.9 13.6-21.3 29.3-27.4 46.8l64.5 22.1c-2.5 7.5-3.9 15.2-3.9 23.5s1.4 16.1 3.9 23.5l-64.2 22.1c5.8 17.4 15.2 33.2 27.1 46.8l51.2-44.8c10.2 11.9 24.4 20.2 40.7 23.5l-13.3 66.7c8.6 1.7 17.7 2.8 27.1 2.8 9.4 0 18.5-1.1 27.1-2.8l-13.3-66.7z"]
            },
            faEnvira: {
                prefix: "fab",
                iconName: "envira",
                icon: [448, 512, [], "f299", "M0 32c477.6 0 366.6 317.3 367.1 366.3L448 480h-26l-70.4-71.2c-39 4.2-124.4 34.5-214.4-37C47 300.3 52 214.7 0 32zm79.7 46c-49.7-23.5-5.2 9.2-5.2 9.2 45.2 31.2 66 73.7 90.2 119.9 31.5 60.2 79 139.7 144.2 167.7 65 28 34.2 12.5 6-8.5-28.2-21.2-68.2-87-91-130.2-31.7-60-61-118.6-144.2-158.1z"]
            },
            faErlang: {
                prefix: "fab",
                iconName: "erlang",
                icon: [640, 512, [], "f39d", "M87.2 53.5H0v405h100.4c-49.7-52.6-78.8-125.3-78.7-212.1-.1-76.7 24-142.7 65.5-192.9zm238.2 9.7c-45.9.1-85.1 33.5-89.2 83.2h169.9c-1.1-49.7-34.5-83.1-80.7-83.2zm230.7-9.6h.3l-.1-.1zm.3 0c31.4 42.7 48.7 97.5 46.2 162.7.5 6 .5 11.7 0 24.1H230.2c-.2 109.7 38.9 194.9 138.6 195.3 68.5-.3 118-51 151.9-106.1l96.4 48.2c-17.4 30.9-36.5 57.8-57.9 80.8H640v-405z"]
            },
            faEthereum: {
                prefix: "fab",
                iconName: "ethereum",
                icon: [320, 512, [], "f42e", "M311.9 260.8L160 353.6 8 260.8 160 0l151.9 260.8zM160 383.4L8 290.6 160 512l152-221.4-152 92.8z"]
            },
            faEtsy: {
                prefix: "fab",
                iconName: "etsy",
                icon: [384, 512, [], "f2d7", "M384 348c-1.75 10.75-13.75 110-15.5 132-117.879-4.299-219.895-4.743-368.5 0v-25.5c45.457-8.948 60.627-8.019 61-35.25 1.793-72.322 3.524-244.143 0-322-1.029-28.46-12.13-26.765-61-36v-25.5c73.886 2.358 255.933 8.551 362.999-3.75-3.5 38.25-7.75 126.5-7.75 126.5H332C320.947 115.665 313.241 68 277.25 68h-137c-10.25 0-10.75 3.5-10.75 9.75V241.5c58 .5 88.5-2.5 88.5-2.5 29.77-.951 27.56-8.502 40.75-65.251h25.75c-4.407 101.351-3.91 61.829-1.75 160.25H257c-9.155-40.086-9.065-61.045-39.501-61.5 0 0-21.5-2-88-2v139c0 26 14.25 38.25 44.25 38.25H263c63.636 0 66.564-24.996 98.751-99.75H384z"]
            },
            faEvernote: {
                prefix: "fab",
                iconName: "evernote",
                icon: [384, 512, [], "f839", "M120.82 132.21c1.6 22.31-17.55 21.59-21.61 21.59-68.93 0-73.64-1-83.58 3.34-.56.22-.74 0-.37-.37L123.79 46.45c.38-.37.6-.22.38.37-4.35 9.99-3.35 15.09-3.35 85.39zm79 308c-14.68-37.08 13-76.93 52.52-76.62 17.49 0 22.6 23.21 7.95 31.42-6.19 3.3-24.95 1.74-25.14 19.2-.05 17.09 19.67 25 31.2 24.89A45.64 45.64 0 0 0 312 393.45v-.08c0-11.63-7.79-47.22-47.54-55.34-7.72-1.54-65-6.35-68.35-50.52-3.74 16.93-17.4 63.49-43.11 69.09-8.74 1.94-69.68 7.64-112.92-36.77 0 0-18.57-15.23-28.23-57.95-3.38-15.75-9.28-39.7-11.14-62 0-18 11.14-30.45 25.07-32.2 81 0 90 2.32 101-7.8 9.82-9.24 7.8-15.5 7.8-102.78 1-8.3 7.79-30.81 53.41-24.14 6 .86 31.91 4.18 37.48 30.64l64.26 11.15c20.43 3.71 70.94 7 80.6 57.94 22.66 121.09 8.91 238.46 7.8 238.46C362.15 485.53 267.06 480 267.06 480c-18.95-.23-54.25-9.4-67.27-39.83zm80.94-204.84c-1 1.92-2.2 6 .85 7 14.09 4.93 39.75 6.84 45.88 5.53 3.11-.25 3.05-4.43 2.48-6.65-3.53-21.85-40.83-26.5-49.24-5.92z"]
            },
            faExpeditedssl: {
                prefix: "fab",
                iconName: "expeditedssl",
                icon: [496, 512, [], "f23e", "M248 43.4C130.6 43.4 35.4 138.6 35.4 256S130.6 468.6 248 468.6 460.6 373.4 460.6 256 365.4 43.4 248 43.4zm-97.4 132.9c0-53.7 43.7-97.4 97.4-97.4s97.4 43.7 97.4 97.4v26.6c0 5-3.9 8.9-8.9 8.9h-17.7c-5 0-8.9-3.9-8.9-8.9v-26.6c0-82.1-124-82.1-124 0v26.6c0 5-3.9 8.9-8.9 8.9h-17.7c-5 0-8.9-3.9-8.9-8.9v-26.6zM389.7 380c0 9.7-8 17.7-17.7 17.7H124c-9.7 0-17.7-8-17.7-17.7V238.3c0-9.7 8-17.7 17.7-17.7h248c9.7 0 17.7 8 17.7 17.7V380zm-248-137.3v132.9c0 2.5-1.9 4.4-4.4 4.4h-8.9c-2.5 0-4.4-1.9-4.4-4.4V242.7c0-2.5 1.9-4.4 4.4-4.4h8.9c2.5 0 4.4 1.9 4.4 4.4zm141.7 48.7c0 13-7.2 24.4-17.7 30.4v31.6c0 5-3.9 8.9-8.9 8.9h-17.7c-5 0-8.9-3.9-8.9-8.9v-31.6c-10.5-6.1-17.7-17.4-17.7-30.4 0-19.7 15.8-35.4 35.4-35.4s35.5 15.8 35.5 35.4zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 478.3C121 486.3 17.7 383 17.7 256S121 25.7 248 25.7 478.3 129 478.3 256 375 486.3 248 486.3z"]
            },
            faFacebook: {
                prefix: "fab",
                iconName: "facebook",
                icon: [512, 512, [], "f09a", "M504 256C504 119 393 8 256 8S8 119 8 256c0 123.78 90.69 226.38 209.25 245V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.28c-30.8 0-40.41 19.12-40.41 38.73V256h68.78l-11 71.69h-57.78V501C413.31 482.38 504 379.78 504 256z"]
            },
            faFacebookF: {
                prefix: "fab",
                iconName: "facebook-f",
                icon: [320, 512, [], "f39e", "M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z"]
            },
            faFacebookMessenger: {
                prefix: "fab",
                iconName: "facebook-messenger",
                icon: [512, 512, [], "f39f", "M256.55 8C116.52 8 8 110.34 8 248.57c0 72.3 29.71 134.78 78.07 177.94 8.35 7.51 6.63 11.86 8.05 58.23A19.92 19.92 0 0 0 122 502.31c52.91-23.3 53.59-25.14 62.56-22.7C337.85 521.8 504 423.7 504 248.57 504 110.34 396.59 8 256.55 8zm149.24 185.13l-73 115.57a37.37 37.37 0 0 1-53.91 9.93l-58.08-43.47a15 15 0 0 0-18 0l-78.37 59.44c-10.46 7.93-24.16-4.6-17.11-15.67l73-115.57a37.36 37.36 0 0 1 53.91-9.93l58.06 43.46a15 15 0 0 0 18 0l78.41-59.38c10.44-7.98 24.14 4.54 17.09 15.62z"]
            },
            faFacebookSquare: {
                prefix: "fab",
                iconName: "facebook-square",
                icon: [448, 512, [], "f082", "M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h137.25V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.27c-30.81 0-40.42 19.12-40.42 38.73V256h68.78l-11 71.69h-57.78V480H400a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48z"]
            },
            faFantasyFlightGames: {
                prefix: "fab",
                iconName: "fantasy-flight-games",
                icon: [512, 512, [], "f6dc", "M256 32.86L32.86 256 256 479.14 479.14 256 256 32.86zM88.34 255.83c1.96-2 11.92-12.3 96.49-97.48 41.45-41.75 86.19-43.77 119.77-18.69 24.63 18.4 62.06 58.9 62.15 59 .68.74 1.07 2.86.58 3.38-11.27 11.84-22.68 23.54-33.5 34.69-34.21-32.31-40.52-38.24-48.51-43.95-17.77-12.69-41.4-10.13-56.98 5.1-2.17 2.13-1.79 3.43.12 5.35 2.94 2.95 28.1 28.33 35.09 35.78-11.95 11.6-23.66 22.97-35.69 34.66-12.02-12.54-24.48-25.53-36.54-38.11-21.39 21.09-41.69 41.11-61.85 60.99a42569.01 42569.01 0 0 1-41.13-40.72zm234.82 101.6c-35.49 35.43-78.09 38.14-106.99 20.47-22.08-13.5-39.38-32.08-72.93-66.84 12.05-12.37 23.79-24.42 35.37-36.31 33.02 31.91 37.06 36.01 44.68 42.09 18.48 14.74 42.52 13.67 59.32-1.8 3.68-3.39 3.69-3.64.14-7.24-10.59-10.73-21.19-21.44-31.77-32.18-1.32-1.34-3.03-2.48-.8-4.69 10.79-10.71 21.48-21.52 32.21-32.29.26-.26.65-.38 1.91-1.07 12.37 12.87 24.92 25.92 37.25 38.75 21.01-20.73 41.24-40.68 61.25-60.42 13.68 13.4 27.13 26.58 40.86 40.03-20.17 20.86-81.68 82.71-100.5 101.5zM256 0L0 256l256 256 256-256L256 0zM16 256L256 16l240 240-240 240L16 256z"]
            },
            faFedex: {
                prefix: "fab",
                iconName: "fedex",
                icon: [640, 512, [], "f797", "M586 284.5l53.3-59.9h-62.4l-21.7 24.8-22.5-24.8H414v-16h56.1v-48.1H318.9V236h-.5c-9.6-11-21.5-14.8-35.4-14.8-28.4 0-49.8 19.4-57.3 44.9-18-59.4-97.4-57.6-121.9-14v-24.2H49v-26.2h60v-41.1H0V345h49v-77.5h48.9c-1.5 5.7-2.3 11.8-2.3 18.2 0 73.1 102.6 91.4 130.2 23.7h-42c-14.7 20.9-45.8 8.9-45.8-14.6h85.5c3.7 30.5 27.4 56.9 60.1 56.9 14.1 0 27-6.9 34.9-18.6h.5V345h212.2l22.1-25 22.3 25H640l-54-60.5zm-446.7-16.6c6.1-26.3 41.7-25.6 46.5 0h-46.5zm153.4 48.9c-34.6 0-34-62.8 0-62.8 32.6 0 34.5 62.8 0 62.8zm167.8 19.1h-94.4V169.4h95v30.2H405v33.9h55.5v28.1h-56.1v44.7h56.1v29.6zm-45.9-39.8v-24.4h56.1v-44l50.7 57-50.7 57v-45.6h-56.1zm138.6 10.3l-26.1 29.5H489l45.6-51.2-45.6-51.2h39.7l26.6 29.3 25.6-29.3h38.5l-45.4 51 46 51.4h-40.5l-26.3-29.5z"]
            },
            faFedora: {
                prefix: "fab",
                iconName: "fedora",
                icon: [448, 512, [], "f798", "M225 32C101.3 31.7.8 131.7.4 255.4L0 425.7a53.6 53.6 0 0 0 53.6 53.9l170.2.4c123.7.3 224.3-99.7 224.6-223.4S348.7 32.3 225 32zm169.8 157.2L333 126.6c2.3-4.7 3.8-9.2 3.8-14.3v-1.6l55.2 56.1a101 101 0 0 1 2.8 22.4zM331 94.3a106.06 106.06 0 0 1 58.5 63.8l-54.3-54.6a26.48 26.48 0 0 0-4.2-9.2zM118.1 247.2a49.66 49.66 0 0 0-7.7 11.4l-8.5-8.5a85.78 85.78 0 0 1 16.2-2.9zM97 251.4l11.8 11.9-.9 8a34.74 34.74 0 0 0 2.4 12.5l-27-27.2a80.6 80.6 0 0 1 13.7-5.2zm-18.2 7.4l38.2 38.4a53.17 53.17 0 0 0-14.1 4.7L67.6 266a107 107 0 0 1 11.2-7.2zm-15.2 9.8l35.3 35.5a67.25 67.25 0 0 0-10.5 8.5L53.5 278a64.33 64.33 0 0 1 10.1-9.4zm-13.3 12.3l34.9 35a56.84 56.84 0 0 0-7.7 11.4l-35.8-35.9c2.8-3.8 5.7-7.2 8.6-10.5zm-11 14.3l36.4 36.6a48.29 48.29 0 0 0-3.6 15.2l-39.5-39.8a99.81 99.81 0 0 1 6.7-12zm-8.8 16.3l41.3 41.8a63.47 63.47 0 0 0 6.7 26.2L25.8 326c1.4-4.9 2.9-9.6 4.7-14.5zm-7.9 43l61.9 62.2a31.24 31.24 0 0 0-3.6 14.3v1.1l-55.4-55.7a88.27 88.27 0 0 1-2.9-21.9zm5.3 30.7l54.3 54.6a28.44 28.44 0 0 0 4.2 9.2 106.32 106.32 0 0 1-58.5-63.8zm-5.3-37a80.69 80.69 0 0 1 2.1-17l72.2 72.5a37.59 37.59 0 0 0-9.9 8.7zm253.3-51.8l-42.6-.1-.1 56c-.2 69.3-64.4 115.8-125.7 102.9-5.7 0-19.9-8.7-19.9-24.2a24.89 24.89 0 0 1 24.5-24.6c6.3 0 6.3 1.6 15.7 1.6a55.91 55.91 0 0 0 56.1-55.9l.1-47c0-4.5-4.5-9-8.9-9l-33.6-.1c-32.6-.1-32.5-49.4.1-49.3l42.6.1.1-56a105.18 105.18 0 0 1 105.6-105 86.35 86.35 0 0 1 20.2 2.3c11.2 1.8 19.9 11.9 19.9 24 0 15.5-14.9 27.8-30.3 23.9-27.4-5.9-65.9 14.4-66 54.9l-.1 47a8.94 8.94 0 0 0 8.9 9l33.6.1c32.5.2 32.4 49.5-.2 49.4zm23.5-.3a35.58 35.58 0 0 0 7.6-11.4l8.5 8.5a102 102 0 0 1-16.1 2.9zm21-4.2L308.6 280l.9-8.1a34.74 34.74 0 0 0-2.4-12.5l27 27.2a74.89 74.89 0 0 1-13.7 5.3zm18-7.4l-38-38.4c4.9-1.1 9.6-2.4 13.7-4.7l36.2 35.9c-3.8 2.5-7.9 5-11.9 7.2zm15.5-9.8l-35.3-35.5a61.06 61.06 0 0 0 10.5-8.5l34.9 35a124.56 124.56 0 0 1-10.1 9zm13.2-12.3l-34.9-35a63.18 63.18 0 0 0 7.7-11.4l35.8 35.9a130.28 130.28 0 0 1-8.6 10.5zm11-14.3l-36.4-36.6a48.29 48.29 0 0 0 3.6-15.2l39.5 39.8a87.72 87.72 0 0 1-6.7 12zm13.5-30.9a140.63 140.63 0 0 1-4.7 14.3L345.6 190a58.19 58.19 0 0 0-7.1-26.2zm1-5.6l-71.9-72.1a32 32 0 0 0 9.9-9.2l64.3 64.7a90.93 90.93 0 0 1-2.3 16.6z"]
            },
            faFigma: {
                prefix: "fab",
                iconName: "figma",
                icon: [384, 512, [], "f799", "M277 170.7A85.35 85.35 0 0 0 277 0H106.3a85.3 85.3 0 0 0 0 170.6 85.35 85.35 0 0 0 0 170.7 85.35 85.35 0 1 0 85.3 85.4v-256zm0 0a85.3 85.3 0 1 0 85.3 85.3 85.31 85.31 0 0 0-85.3-85.3z"]
            },
            faFirefox: {
                prefix: "fab",
                iconName: "firefox",
                icon: [512, 512, [], "f269", "M503.52,241.48c-.12-1.56-.24-3.12-.24-4.68v-.12l-.36-4.68v-.12a245.86,245.86,0,0,0-7.32-41.15c0-.12,0-.12-.12-.24l-1.08-4c-.12-.24-.12-.48-.24-.6-.36-1.2-.72-2.52-1.08-3.72-.12-.24-.12-.6-.24-.84-.36-1.2-.72-2.4-1.08-3.48-.12-.36-.24-.6-.36-1-.36-1.2-.72-2.28-1.2-3.48l-.36-1.08c-.36-1.08-.84-2.28-1.2-3.36a8.27,8.27,0,0,0-.36-1c-.48-1.08-.84-2.28-1.32-3.36-.12-.24-.24-.6-.36-.84-.48-1.2-1-2.28-1.44-3.48,0-.12-.12-.24-.12-.36-1.56-3.84-3.24-7.68-5-11.4l-.36-.72c-.48-1-.84-1.8-1.32-2.64-.24-.48-.48-1.08-.72-1.56-.36-.84-.84-1.56-1.2-2.4-.36-.6-.6-1.2-1-1.8s-.84-1.44-1.2-2.28c-.36-.6-.72-1.32-1.08-1.92s-.84-1.44-1.2-2.16a18.07,18.07,0,0,0-1.2-2c-.36-.72-.84-1.32-1.2-2s-.84-1.32-1.2-2-.84-1.32-1.2-1.92-.84-1.44-1.32-2.16a15.63,15.63,0,0,0-1.2-1.8L463.2,119a15.63,15.63,0,0,0-1.2-1.8c-.48-.72-1.08-1.56-1.56-2.28-.36-.48-.72-1.08-1.08-1.56l-1.8-2.52c-.36-.48-.6-.84-1-1.32-1-1.32-1.8-2.52-2.76-3.72a248.76,248.76,0,0,0-23.51-26.64A186.82,186.82,0,0,0,412,62.46c-4-3.48-8.16-6.72-12.48-9.84a162.49,162.49,0,0,0-24.6-15.12c-2.4-1.32-4.8-2.52-7.2-3.72a254,254,0,0,0-55.43-19.56c-1.92-.36-3.84-.84-5.64-1.2h-.12c-1-.12-1.8-.36-2.76-.48a236.35,236.35,0,0,0-38-4H255.14a234.62,234.62,0,0,0-45.48,5c-33.59,7.08-63.23,21.24-82.91,39-1.08,1-1.92,1.68-2.4,2.16l-.48.48H124l-.12.12.12-.12a.12.12,0,0,0,.12-.12l-.12.12a.42.42,0,0,1,.24-.12c14.64-8.76,34.92-16,49.44-19.56l5.88-1.44c.36-.12.84-.12,1.2-.24,1.68-.36,3.36-.72,5.16-1.08.24,0,.6-.12.84-.12C250.94,20.94,319.34,40.14,367,85.61a171.49,171.49,0,0,1,26.88,32.76c30.36,49.2,27.48,111.11,3.84,147.59-34.44,53-111.35,71.27-159,24.84a84.19,84.19,0,0,1-25.56-59,74.05,74.05,0,0,1,6.24-31c1.68-3.84,13.08-25.67,18.24-24.59-13.08-2.76-37.55,2.64-54.71,28.19-15.36,22.92-14.52,58.2-5,83.28a132.85,132.85,0,0,1-12.12-39.24c-12.24-82.55,43.31-153,94.31-170.51-27.48-24-96.47-22.31-147.71,15.36-29.88,22-51.23,53.16-62.51,90.36,1.68-20.88,9.6-52.08,25.8-83.88-17.16,8.88-39,37-49.8,62.88-15.6,37.43-21,82.19-16.08,124.79.36,3.24.72,6.36,1.08,9.6,19.92,117.11,122,206.38,244.78,206.38C392.77,503.42,504,392.19,504,255,503.88,250.48,503.76,245.92,503.52,241.48Z"]
            },
            faFirefoxBrowser: {
                prefix: "fab",
                iconName: "firefox-browser",
                icon: [512, 512, [], "e007", "M189.37,152.86Zm-58.74-29.37C130.79,123.5,130.71,123.5,130.63,123.49Zm351.42,45.35c-10.61-25.5-32.08-53-48.94-61.73,13.72,26.89,21.67,53.88,24.7,74,0,0,0,.14.05.41-27.58-68.75-74.35-96.47-112.55-156.83-1.93-3.05-3.86-6.11-5.74-9.33-1-1.65-1.86-3.34-2.69-5.05A44.88,44.88,0,0,1,333.24.69a.63.63,0,0,0-.55-.66.9.9,0,0,0-.46,0l-.12.07-.18.1.1-.14c-54.23,31.77-76.72,87.38-82.5,122.78a130,130,0,0,0-48.33,12.33,6.25,6.25,0,0,0-3.09,7.75,6.13,6.13,0,0,0,7.79,3.79l.52-.21a117.84,117.84,0,0,1,42.11-11l1.42-.1c2-.12,4-.2,6-.22A122.61,122.61,0,0,1,291,140c.67.2,1.32.42,2,.63,1.89.57,3.76,1.2,5.62,1.87,1.36.5,2.71,1,4.05,1.58,1.09.44,2.18.88,3.25,1.35q2.52,1.13,5,2.35c.75.37,1.5.74,2.25,1.13q2.4,1.26,4.74,2.63,1.51.87,3,1.8a124.89,124.89,0,0,1,42.66,44.13c-13-9.15-36.35-18.19-58.82-14.28,87.74,43.86,64.18,194.9-57.39,189.2a108.43,108.43,0,0,1-31.74-6.12c-2.42-.91-4.8-1.89-7.16-2.93-1.38-.63-2.76-1.27-4.12-2C174.5,346,149.9,316.92,146.83,281.59c0,0,11.25-41.95,80.62-41.95,7.5,0,28.93-20.92,29.33-27-.09-2-42.54-18.87-59.09-35.18-8.85-8.71-13.05-12.91-16.77-16.06a69.58,69.58,0,0,0-6.31-4.77A113.05,113.05,0,0,1,173.92,97c-25.06,11.41-44.55,29.45-58.71,45.37h-.12c-9.67-12.25-9-52.65-8.43-61.08-.12-.53-7.22,3.68-8.15,4.31a178.54,178.54,0,0,0-23.84,20.43A214,214,0,0,0,51.9,133.36l0,0a.08.08,0,0,1,0,0,205.84,205.84,0,0,0-32.73,73.9c-.06.27-2.33,10.21-4,22.48q-.42,2.87-.78,5.74c-.57,3.69-1,7.71-1.44,14,0,.24,0,.48-.05.72-.18,2.71-.34,5.41-.49,8.12,0,.41,0,.82,0,1.24,0,134.7,109.21,243.89,243.92,243.89,120.64,0,220.82-87.58,240.43-202.62.41-3.12.74-6.26,1.11-9.41,4.85-41.83-.54-85.79-15.82-122.55Z"]
            },
            faFirstOrder: {
                prefix: "fab",
                iconName: "first-order",
                icon: [448, 512, [], "f2b0", "M12.9 229.2c.1-.1.2-.3.3-.4 0 .1 0 .3-.1.4h-.2zM224 96.6c-7.1 0-14.6.6-21.4 1.7l3.7 67.4-22-64c-14.3 3.7-27.7 9.4-40 16.6l29.4 61.4-45.1-50.9c-11.4 8.9-21.7 19.1-30.6 30.9l50.6 45.4-61.1-29.7c-7.1 12.3-12.9 25.7-16.6 40l64.3 22.6-68-4c-.9 7.1-1.4 14.6-1.4 22s.6 14.6 1.4 21.7l67.7-4-64 22.6c3.7 14.3 9.4 27.7 16.6 40.3l61.1-29.7L97.7 352c8.9 11.7 19.1 22.3 30.9 30.9l44.9-50.9-29.5 61.4c12.3 7.4 25.7 13.1 40 16.9l22.3-64.6-4 68c7.1 1.1 14.6 1.7 21.7 1.7 7.4 0 14.6-.6 21.7-1.7l-4-68.6 22.6 65.1c14.3-4 27.7-9.4 40-16.9L274.9 332l44.9 50.9c11.7-8.9 22-19.1 30.6-30.9l-50.6-45.1 61.1 29.4c7.1-12.3 12.9-25.7 16.6-40.3l-64-22.3 67.4 4c1.1-7.1 1.4-14.3 1.4-21.7s-.3-14.9-1.4-22l-67.7 4 64-22.3c-3.7-14.3-9.1-28-16.6-40.3l-60.9 29.7 50.6-45.4c-8.9-11.7-19.1-22-30.6-30.9l-45.1 50.9 29.4-61.1c-12.3-7.4-25.7-13.1-40-16.9L241.7 166l4-67.7c-7.1-1.2-14.3-1.7-21.7-1.7zM443.4 128v256L224 512 4.6 384V128L224 0l219.4 128zm-17.1 10.3L224 20.9 21.7 138.3v235.1L224 491.1l202.3-117.7V138.3zM224 37.1l187.7 109.4v218.9L224 474.9 36.3 365.4V146.6L224 37.1zm0 50.9c-92.3 0-166.9 75.1-166.9 168 0 92.6 74.6 167.7 166.9 167.7 92 0 166.9-75.1 166.9-167.7 0-92.9-74.9-168-166.9-168z"]
            },
            faFirstOrderAlt: {
                prefix: "fab",
                iconName: "first-order-alt",
                icon: [496, 512, [], "f50a", "M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 488.21C115.34 496.21 7.79 388.66 7.79 256S115.34 15.79 248 15.79 488.21 123.34 488.21 256 380.66 496.21 248 496.21zm0-459.92C126.66 36.29 28.29 134.66 28.29 256S126.66 475.71 248 475.71 467.71 377.34 467.71 256 369.34 36.29 248 36.29zm0 431.22c-116.81 0-211.51-94.69-211.51-211.51S131.19 44.49 248 44.49 459.51 139.19 459.51 256 364.81 467.51 248 467.51zm186.23-162.98a191.613 191.613 0 0 1-20.13 48.69l-74.13-35.88 61.48 54.82a193.515 193.515 0 0 1-37.2 37.29l-54.8-61.57 35.88 74.27a190.944 190.944 0 0 1-48.63 20.23l-27.29-78.47 4.79 82.93c-8.61 1.18-17.4 1.8-26.33 1.8s-17.72-.62-26.33-1.8l4.76-82.46-27.15 78.03a191.365 191.365 0 0 1-48.65-20.2l35.93-74.34-54.87 61.64a193.85 193.85 0 0 1-37.22-37.28l61.59-54.9-74.26 35.93a191.638 191.638 0 0 1-20.14-48.69l77.84-27.11-82.23 4.76c-1.16-8.57-1.78-17.32-1.78-26.21 0-9 .63-17.84 1.82-26.51l82.38 4.77-77.94-27.16a191.726 191.726 0 0 1 20.23-48.67l74.22 35.92-61.52-54.86a193.85 193.85 0 0 1 37.28-37.22l54.76 61.53-35.83-74.17a191.49 191.49 0 0 1 48.65-20.13l26.87 77.25-4.71-81.61c8.61-1.18 17.39-1.8 26.32-1.8s17.71.62 26.32 1.8l-4.74 82.16 27.05-77.76c17.27 4.5 33.6 11.35 48.63 20.17l-35.82 74.12 54.72-61.47a193.13 193.13 0 0 1 37.24 37.23l-61.45 54.77 74.12-35.86a191.515 191.515 0 0 1 20.2 48.65l-77.81 27.1 82.24-4.75c1.19 8.66 1.82 17.5 1.82 26.49 0 8.88-.61 17.63-1.78 26.19l-82.12-4.75 77.72 27.09z"]
            },
            faFirstdraft: {
                prefix: "fab",
                iconName: "firstdraft",
                icon: [384, 512, [], "f3a1", "M384 192h-64v128H192v128H0v-25.6h166.4v-128h128v-128H384V192zm-25.6 38.4v128h-128v128H64V512h192V384h128V230.4h-25.6zm25.6 192h-89.6V512H320v-64h64v-25.6zM0 0v384h128V256h128V128h128V0H0z"]
            },
            faFlickr: {
                prefix: "fab",
                iconName: "flickr",
                icon: [448, 512, [], "f16e", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM144.5 319c-35.1 0-63.5-28.4-63.5-63.5s28.4-63.5 63.5-63.5 63.5 28.4 63.5 63.5-28.4 63.5-63.5 63.5zm159 0c-35.1 0-63.5-28.4-63.5-63.5s28.4-63.5 63.5-63.5 63.5 28.4 63.5 63.5-28.4 63.5-63.5 63.5z"]
            },
            faFlipboard: {
                prefix: "fab",
                iconName: "flipboard",
                icon: [448, 512, [], "f44d", "M0 32v448h448V32H0zm358.4 179.2h-89.6v89.6h-89.6v89.6H89.6V121.6h268.8v89.6z"]
            },
            faFly: {
                prefix: "fab",
                iconName: "fly",
                icon: [384, 512, [], "f417", "M197.8 427.8c12.9 11.7 33.7 33.3 33.2 50.7 0 .8-.1 1.6-.1 2.5-1.8 19.8-18.8 31.1-39.1 31-25-.1-39.9-16.8-38.7-35.8 1-16.2 20.5-36.7 32.4-47.6 2.3-2.1 2.7-2.7 5.6-3.6 3.4 0 3.9.3 6.7 2.8zM331.9 67.3c-16.3-25.7-38.6-40.6-63.3-52.1C243.1 4.5 214-.2 192 0c-44.1 0-71.2 13.2-81.1 17.3C57.3 45.2 26.5 87.2 28 158.6c7.1 82.2 97 176 155.8 233.8 1.7 1.6 4.5 4.5 6.2 5.1l3.3.1c2.1-.7 1.8-.5 3.5-2.1 52.3-49.2 140.7-145.8 155.9-215.7 7-39.2 3.1-72.5-20.8-112.5zM186.8 351.9c-28-51.1-65.2-130.7-69.3-189-3.4-47.5 11.4-131.2 69.3-136.7v325.7zM328.7 180c-16.4 56.8-77.3 128-118.9 170.3C237.6 298.4 275 217 277 158.4c1.6-45.9-9.8-105.8-48-131.4 88.8 18.3 115.5 98.1 99.7 153z"]
            },
            faFontAwesome: {
                prefix: "fab",
                iconName: "font-awesome",
                icon: [448, 512, [], "f2b4", "M397.8 32H50.2C22.7 32 0 54.7 0 82.2v347.6C0 457.3 22.7 480 50.2 480h347.6c27.5 0 50.2-22.7 50.2-50.2V82.2c0-27.5-22.7-50.2-50.2-50.2zm-45.4 284.3c0 4.2-3.6 6-7.8 7.8-16.7 7.2-34.6 13.7-53.8 13.7-26.9 0-39.4-16.7-71.7-16.7-23.3 0-47.8 8.4-67.5 17.3-1.2.6-2.4.6-3.6 1.2V385c0 1.8 0 3.6-.6 4.8v1.2c-2.4 8.4-10.2 14.3-19.1 14.3-11.3 0-20.3-9-20.3-20.3V166.4c-7.8-6-13.1-15.5-13.1-26.3 0-18.5 14.9-33.5 33.5-33.5 18.5 0 33.5 14.9 33.5 33.5 0 10.8-4.8 20.3-13.1 26.3v18.5c1.8-.6 3.6-1.2 5.4-2.4 18.5-7.8 40.6-14.3 61.5-14.3 22.7 0 40.6 6 60.9 13.7 4.2 1.8 8.4 2.4 13.1 2.4 22.7 0 47.8-16.1 53.8-16.1 4.8 0 9 3.6 9 7.8v140.3z"]
            },
            faFontAwesomeAlt: {
                prefix: "fab",
                iconName: "font-awesome-alt",
                icon: [448, 512, [], "f35c", "M339.3 171.2c-6 0-29.9 15.5-52.6 15.5-4.2 0-8.4-.6-12.5-2.4-19.7-7.8-37-13.7-59.1-13.7-20.3 0-41.8 6.6-59.7 13.7-1.8.6-3.6 1.2-4.8 1.8v-17.9c7.8-6 12.5-14.9 12.5-25.7 0-17.9-14.3-32.3-32.3-32.3s-32.3 14.3-32.3 32.3c0 10.2 4.8 19.7 12.5 25.7v212.1c0 10.8 9 19.7 19.7 19.7 9 0 16.1-6 18.5-13.7V385c.6-1.8.6-3 .6-4.8V336c1.2 0 2.4-.6 3-1.2 19.7-8.4 43-16.7 65.7-16.7 31.1 0 43 16.1 69.3 16.1 18.5 0 36.4-6.6 52-13.7 4.2-1.8 7.2-3.6 7.2-7.8V178.3c1.8-4.1-2.3-7.1-7.7-7.1zM397.8 32H50.2C22.7 32 0 54.7 0 82.2v347.6C0 457.3 22.7 480 50.2 480h347.6c27.5 0 50.2-22.7 50.2-50.2V82.2c0-27.5-22.7-50.2-50.2-50.2zm14.3 397.7c0 7.8-6.6 14.3-14.3 14.3H50.2c-7.8 0-14.3-6.6-14.3-14.3V82.2c0-7.8 6.6-14.3 14.3-14.3h347.6v-.1c7.8 0 14.3 6.6 14.3 14.3z"]
            },
            faFontAwesomeFlag: {
                prefix: "fab",
                iconName: "font-awesome-flag",
                icon: [448, 512, [], "f425", "M444.373 359.424c0 7.168-6.144 10.24-13.312 13.312-28.672 12.288-59.392 23.552-92.16 23.552-46.08 0-67.584-28.672-122.88-28.672-39.936 0-81.92 14.336-115.712 29.696-2.048 1.024-4.096 1.024-6.144 2.048v77.824c0 21.405-16.122 34.816-33.792 34.816-19.456 0-34.816-15.36-34.816-34.816V102.4C12.245 92.16 3.029 75.776 3.029 57.344 3.029 25.6 28.629 0 60.373 0s57.344 25.6 57.344 57.344c0 18.432-8.192 34.816-22.528 45.056v31.744c4.124-1.374 58.768-28.672 114.688-28.672 65.27 0 97.676 27.648 126.976 27.648 38.912 0 81.92-27.648 92.16-27.648 8.192 0 15.36 6.144 15.36 13.312v240.64z"]
            },
            faFontAwesomeLogoFull: {
                prefix: "fab",
                iconName: "font-awesome-logo-full",
                icon: [3992, 512, ["Font Awesome"], "f4e6", "M454.6 0H57.4C25.9 0 0 25.9 0 57.4v397.3C0 486.1 25.9 512 57.4 512h397.3c31.4 0 57.4-25.9 57.4-57.4V57.4C512 25.9 486.1 0 454.6 0zm-58.9 324.9c0 4.8-4.1 6.9-8.9 8.9-19.2 8.1-39.7 15.7-61.5 15.7-40.5 0-68.7-44.8-163.2 2.5v51.8c0 30.3-45.7 30.2-45.7 0v-250c-9-7-15-17.9-15-30.3 0-21 17.1-38.2 38.2-38.2 21 0 38.2 17.1 38.2 38.2 0 12.2-5.8 23.2-14.9 30.2v21c37.1-12 65.5-34.4 146.1-3.4 26.6 11.4 68.7-15.7 76.5-15.7 5.5 0 10.3 4.1 10.3 8.9v160.4zm432.9-174.2h-137v70.1H825c39.8 0 40.4 62.2 0 62.2H691.6v105.6c0 45.5-70.7 46.4-70.7 0V128.3c0-22 18-39.8 39.8-39.8h167.8c39.6 0 40.5 62.2.1 62.2zm191.1 23.4c-169.3 0-169.1 252.4 0 252.4 169.9 0 169.9-252.4 0-252.4zm0 196.1c-81.6 0-82.1-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm372.4 53.4c-17.5 0-31.4-13.9-31.4-31.4v-117c0-62.4-72.6-52.5-99.1-16.4v133.4c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c43.3-51.6 162.4-60.4 162.4 39.3v141.5c.3 30.4-31.5 31.4-31.7 31.4zm179.7 2.9c-44.3 0-68.3-22.9-68.3-65.8V235.2H1488c-35.6 0-36.7-55.3 0-55.3h15.5v-37.3c0-41.3 63.8-42.1 63.8 0v37.5h24.9c35.4 0 35.7 55.3 0 55.3h-24.9v108.5c0 29.6 26.1 26.3 27.4 26.3 31.4 0 52.6 56.3-22.9 56.3zM1992 123c-19.5-50.2-95.5-50-114.5 0-107.3 275.7-99.5 252.7-99.5 262.8 0 42.8 58.3 51.2 72.1 14.4l13.5-35.9H2006l13 35.9c14.2 37.7 72.1 27.2 72.1-14.4 0-10.1 5.3 6.8-99.1-262.8zm-108.9 179.1l51.7-142.9 51.8 142.9h-103.5zm591.3-85.6l-53.7 176.3c-12.4 41.2-72 41-84 0l-42.3-135.9-42.3 135.9c-12.4 40.9-72 41.2-84.5 0l-54.2-176.3c-12.5-39.4 49.8-56.1 60.2-16.9L2213 342l45.3-139.5c10.9-32.7 59.6-34.7 71.2 0l45.3 139.5 39.3-142.4c10.3-38.3 72.6-23.8 60.3 16.9zm275.4 75.1c0-42.4-33.9-117.5-119.5-117.5-73.2 0-124.4 56.3-124.4 126 0 77.2 55.3 126.4 128.5 126.4 31.7 0 93-11.5 93-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-109 8.4-115.9-43.8h148.3c16.3 0 29.3-13.4 29.3-28.9zM2571 277.7c9.5-73.4 113.9-68.6 118.6 0H2571zm316.7 148.8c-31.4 0-81.6-10.5-96.6-31.9-12.4-17 2.5-39.8 21.8-39.8 16.3 0 36.8 22.9 77.7 22.9 27.4 0 40.4-11 40.4-25.8 0-39.8-142.9-7.4-142.9-102 0-40.4 35.3-75.7 98.6-75.7 31.4 0 74.1 9.9 87.6 29.4 10.8 14.8-1.4 36.2-20.9 36.2-15.1 0-26.7-17.3-66.2-17.3-22.9 0-37.8 10.5-37.8 23.8 0 35.9 142.4 6 142.4 103.1-.1 43.7-37.4 77.1-104.1 77.1zm266.8-252.4c-169.3 0-169.1 252.4 0 252.4 170.1 0 169.6-252.4 0-252.4zm0 196.1c-81.8 0-82-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm476.9 22V268.7c0-53.8-61.4-45.8-85.7-10.5v134c0 41.3-63.8 42.1-63.8 0V268.7c0-52.1-59.5-47.4-85.7-10.1v133.6c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c9.9-14.4 41.8-37.3 78.6-37.3 35.3 0 57.7 16.4 66.7 43.8 13.9-21.8 45.8-43.8 82.6-43.8 44.3 0 70.7 23.4 70.7 72.7v145.3c.5 17.3-13.5 31.4-31.9 31.4 3.5.1-31.3 1.1-31.3-31.3zM3992 291.6c0-42.4-32.4-117.5-117.9-117.5-73.2 0-127.5 56.3-127.5 126 0 77.2 58.3 126.4 131.6 126.4 31.7 0 91.5-11.5 91.5-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-110.5 8.4-117.5-43.8h149.8c16.3 0 29.1-13.4 29.3-28.9zm-180.5-13.9c9.7-74.4 115.9-68.3 120.1 0h-120.1z"]
            },
            faFonticons: {
                prefix: "fab",
                iconName: "fonticons",
                icon: [448, 512, [], "f280", "M0 32v448h448V32zm187 140.9c-18.4 0-19 9.9-19 27.4v23.3c0 2.4-3.5 4.4-.6 4.4h67.4l-11.1 37.3H168v112.9c0 5.8-2 6.7 3.2 7.3l43.5 4.1v25.1H84V389l21.3-2c5.2-.6 6.7-2.3 6.7-7.9V267.7c0-2.3-2.9-2.3-5.8-2.3H84V228h28v-21c0-49.6 26.5-70 77.3-70 34.1 0 64.7 8.2 64.7 52.8l-50.7 6.1c.3-18.7-4.4-23-16.3-23zm74.3 241.8v-25.1l20.4-2.6c5.2-.6 7.6-1.7 7.6-7.3V271.8c0-4.1-2.9-6.7-6.7-7.9l-24.2-6.4 6.7-29.5h80.2v151.7c0 5.8-2.6 6.4 2.9 7.3l15.7 2.6v25.1zm80.8-255.5l9 33.2-7.3 7.3-31.2-16.6-31.2 16.6-7.3-7.3 9-33.2-21.8-24.2 3.5-9.6h27.7l15.5-28h9.3l15.5 28h27.7l3.5 9.6z"]
            },
            faFonticonsFi: {
                prefix: "fab",
                iconName: "fonticons-fi",
                icon: [384, 512, [], "f3a2", "M114.4 224h92.4l-15.2 51.2h-76.4V433c0 8-2.8 9.2 4.4 10l59.6 5.6V483H0v-35.2l29.2-2.8c7.2-.8 9.2-3.2 9.2-10.8V278.4c0-3.2-4-3.2-8-3.2H0V224h38.4v-28.8c0-68 36.4-96 106-96 46.8 0 88.8 11.2 88.8 72.4l-69.6 8.4c.4-25.6-6-31.6-22.4-31.6-25.2 0-26 13.6-26 37.6v32c0 3.2-4.8 6-.8 6zM384 483H243.2v-34.4l28-3.6c7.2-.8 10.4-2.4 10.4-10V287c0-5.6-4-9.2-9.2-10.8l-33.2-8.8 9.2-40.4h110v208c0 8-3.6 8.8 4 10l21.6 3.6V483zm-30-347.2l12.4 45.6-10 10-42.8-22.8-42.8 22.8-10-10 12.4-45.6-30-36.4 4.8-10h38L307.2 51H320l21.2 38.4h38l4.8 13.2-30 33.2z"]
            },
            faFortAwesome: {
                prefix: "fab",
                iconName: "fort-awesome",
                icon: [512, 512, [], "f286", "M489.2 287.9h-27.4c-2.6 0-4.6 2-4.6 4.6v32h-36.6V146.2c0-2.6-2-4.6-4.6-4.6h-27.4c-2.6 0-4.6 2-4.6 4.6v32h-36.6v-32c0-2.6-2-4.6-4.6-4.6h-27.4c-2.6 0-4.6 2-4.6 4.6v32h-36.6v-32c0-6-8-4.6-11.7-4.6v-38c8.3-2 17.1-3.4 25.7-3.4 10.9 0 20.9 4.3 31.4 4.3 4.6 0 27.7-1.1 27.7-8v-60c0-2.6-2-4.6-4.6-4.6-5.1 0-15.1 4.3-24 4.3-9.7 0-20.9-4.3-32.6-4.3-8 0-16 1.1-23.7 2.9v-4.9c5.4-2.6 9.1-8.3 9.1-14.3 0-20.7-31.4-20.8-31.4 0 0 6 3.7 11.7 9.1 14.3v111.7c-3.7 0-11.7-1.4-11.7 4.6v32h-36.6v-32c0-2.6-2-4.6-4.6-4.6h-27.4c-2.6 0-4.6 2-4.6 4.6v32H128v-32c0-2.6-2-4.6-4.6-4.6H96c-2.6 0-4.6 2-4.6 4.6v178.3H54.8v-32c0-2.6-2-4.6-4.6-4.6H22.8c-2.6 0-4.6 2-4.6 4.6V512h182.9v-96c0-72.6 109.7-72.6 109.7 0v96h182.9V292.5c.1-2.6-1.9-4.6-4.5-4.6zm-288.1-4.5c0 2.6-2 4.6-4.6 4.6h-27.4c-2.6 0-4.6-2-4.6-4.6v-64c0-2.6 2-4.6 4.6-4.6h27.4c2.6 0 4.6 2 4.6 4.6v64zm146.4 0c0 2.6-2 4.6-4.6 4.6h-27.4c-2.6 0-4.6-2-4.6-4.6v-64c0-2.6 2-4.6 4.6-4.6h27.4c2.6 0 4.6 2 4.6 4.6v64z"]
            },
            faFortAwesomeAlt: {
                prefix: "fab",
                iconName: "fort-awesome-alt",
                icon: [512, 512, [], "f3a3", "M208 237.4h-22.2c-2.1 0-3.7 1.6-3.7 3.7v51.7c0 2.1 1.6 3.7 3.7 3.7H208c2.1 0 3.7-1.6 3.7-3.7v-51.7c0-2.1-1.6-3.7-3.7-3.7zm118.2 0H304c-2.1 0-3.7 1.6-3.7 3.7v51.7c0 2.1 1.6 3.7 3.7 3.7h22.2c2.1 0 3.7-1.6 3.7-3.7v-51.7c-.1-2.1-1.7-3.7-3.7-3.7zm132-125.1c-2.3-3.2-4.6-6.4-7.1-9.5-9.8-12.5-20.8-24-32.8-34.4-4.5-3.9-9.1-7.6-13.9-11.2-1.6-1.2-3.2-2.3-4.8-3.5C372 34.1 340.3 20 306 13c-16.2-3.3-32.9-5-50-5s-33.9 1.7-50 5c-34.3 7.1-66 21.2-93.3 40.8-1.6 1.1-3.2 2.3-4.8 3.5-4.8 3.6-9.4 7.3-13.9 11.2-3 2.6-5.9 5.3-8.8 8s-5.7 5.5-8.4 8.4c-5.5 5.7-10.7 11.8-15.6 18-2.4 3.1-4.8 6.3-7.1 9.5C25.2 153 8.3 202.5 8.3 256c0 2 .1 4 .1 6 .1.7.1 1.3.1 2 .1 1.3.1 2.7.2 4 0 .8.1 1.5.1 2.3 0 1.3.1 2.5.2 3.7.1.8.1 1.6.2 2.4.1 1.1.2 2.3.3 3.5 0 .8.1 1.6.2 2.4.1 1.2.3 2.4.4 3.6.1.8.2 1.5.3 2.3.1 1.3.3 2.6.5 3.9.1.6.2 1.3.3 1.9l.9 5.7c.1.6.2 1.1.3 1.7.3 1.3.5 2.7.8 4 .2.8.3 1.6.5 2.4.2 1 .5 2.1.7 3.2.2.9.4 1.7.6 2.6.2 1 .4 2 .7 3 .2.9.5 1.8.7 2.7.3 1 .5 1.9.8 2.9.3.9.5 1.8.8 2.7.2.9.5 1.9.8 2.8s.5 1.8.8 2.7c.3 1 .6 1.9.9 2.8.6 1.6 1.1 3.3 1.7 4.9.4 1 .7 1.9 1 2.8.3 1 .7 2 1.1 3 .3.8.6 1.5.9 2.3l1.2 3c.3.7.6 1.5.9 2.2.4 1 .9 2 1.3 3l.9 2.1c.5 1 .9 2 1.4 3 .3.7.6 1.3.9 2 .5 1 1 2.1 1.5 3.1.2.6.5 1.1.8 1.7.6 1.1 1.1 2.2 1.7 3.3.1.2.2.3.3.5 2.2 4.1 4.4 8.2 6.8 12.2.2.4.5.8.7 1.2.7 1.1 1.3 2.2 2 3.3.3.5.6.9.9 1.4.6 1.1 1.3 2.1 2 3.2.3.5.6.9.9 1.4.7 1.1 1.4 2.1 2.1 3.2.2.4.5.8.8 1.2.7 1.1 1.5 2.2 2.3 3.3.2.2.3.5.5.7 37.5 51.7 94.4 88.5 160 99.4.9.1 1.7.3 2.6.4 1 .2 2.1.4 3.1.5s1.9.3 2.8.4c1 .2 2 .3 3 .4.9.1 1.9.2 2.9.3s1.9.2 2.9.3 2.1.2 3.1.3c.9.1 1.8.1 2.7.2 1.1.1 2.3.1 3.4.2.8 0 1.7.1 2.5.1 1.3 0 2.6.1 3.9.1.7.1 1.4.1 2.1.1 2 .1 4 .1 6 .1s4-.1 6-.1c.7 0 1.4-.1 2.1-.1 1.3 0 2.6 0 3.9-.1.8 0 1.7-.1 2.5-.1 1.1-.1 2.3-.1 3.4-.2.9 0 1.8-.1 2.7-.2 1-.1 2.1-.2 3.1-.3s1.9-.2 2.9-.3c.9-.1 1.9-.2 2.9-.3s2-.3 3-.4 1.9-.3 2.8-.4c1-.2 2.1-.3 3.1-.5.9-.1 1.7-.3 2.6-.4 65.6-11 122.5-47.7 160.1-102.4.2-.2.3-.5.5-.7.8-1.1 1.5-2.2 2.3-3.3.2-.4.5-.8.8-1.2.7-1.1 1.4-2.1 2.1-3.2.3-.5.6-.9.9-1.4.6-1.1 1.3-2.1 2-3.2.3-.5.6-.9.9-1.4.7-1.1 1.3-2.2 2-3.3.2-.4.5-.8.7-1.2 2.4-4 4.6-8.1 6.8-12.2.1-.2.2-.3.3-.5.6-1.1 1.1-2.2 1.7-3.3.2-.6.5-1.1.8-1.7.5-1 1-2.1 1.5-3.1.3-.7.6-1.3.9-2 .5-1 1-2 1.4-3l.9-2.1c.5-1 .9-2 1.3-3 .3-.7.6-1.5.9-2.2l1.2-3c.3-.8.6-1.5.9-2.3.4-1 .7-2 1.1-3s.7-1.9 1-2.8c.6-1.6 1.2-3.3 1.7-4.9.3-1 .6-1.9.9-2.8s.5-1.8.8-2.7c.2-.9.5-1.9.8-2.8s.6-1.8.8-2.7c.3-1 .5-1.9.8-2.9.2-.9.5-1.8.7-2.7.2-1 .5-2 .7-3 .2-.9.4-1.7.6-2.6.2-1 .5-2.1.7-3.2.2-.8.3-1.6.5-2.4.3-1.3.6-2.7.8-4 .1-.6.2-1.1.3-1.7l.9-5.7c.1-.6.2-1.3.3-1.9.1-1.3.3-2.6.5-3.9.1-.8.2-1.5.3-2.3.1-1.2.3-2.4.4-3.6 0-.8.1-1.6.2-2.4.1-1.1.2-2.3.3-3.5.1-.8.1-1.6.2-2.4.1 1.7.1.5.2-.7 0-.8.1-1.5.1-2.3.1-1.3.2-2.7.2-4 .1-.7.1-1.3.1-2 .1-2 .1-4 .1-6 0-53.5-16.9-103-45.8-143.7zM448 371.5c-9.4 15.5-20.6 29.9-33.6 42.9-20.6 20.6-44.5 36.7-71.2 48-13.9 5.8-28.2 10.3-42.9 13.2v-75.8c0-58.6-88.6-58.6-88.6 0v75.8c-14.7-2.9-29-7.3-42.9-13.2-26.7-11.3-50.6-27.4-71.2-48-13-13-24.2-27.4-33.6-42.9v-71.3c0-2.1 1.6-3.7 3.7-3.7h22.1c2.1 0 3.7 1.6 3.7 3.7V326h29.6V182c0-2.1 1.6-3.7 3.7-3.7h22.1c2.1 0 3.7 1.6 3.7 3.7v25.9h29.5V182c0-2.1 1.6-3.7 3.7-3.7H208c2.1 0 3.7 1.6 3.7 3.7v25.9h29.5V182c0-4.8 6.5-3.7 9.5-3.7V88.1c-4.4-2-7.4-6.7-7.4-11.5 0-16.8 25.4-16.8 25.4 0 0 4.8-3 9.4-7.4 11.5V92c6.3-1.4 12.7-2.3 19.2-2.3 9.4 0 18.4 3.5 26.3 3.5 7.2 0 15.2-3.5 19.4-3.5 2.1 0 3.7 1.6 3.7 3.7v48.4c0 5.6-18.7 6.5-22.4 6.5-8.6 0-16.6-3.5-25.4-3.5-7 0-14.1 1.2-20.8 2.8v30.7c3 0 9.5-1.1 9.5 3.7v25.9h29.5V182c0-2.1 1.6-3.7 3.7-3.7h22.2c2.1 0 3.7 1.6 3.7 3.7v25.9h29.5V182c0-2.1 1.6-3.7 3.7-3.7h22.1c2.1 0 3.7 1.6 3.7 3.7v144h29.5v-25.8c0-2.1 1.6-3.7 3.7-3.7h22.2c2.1 0 3.7 1.6 3.7 3.7z"]
            },
            faForumbee: {
                prefix: "fab",
                iconName: "forumbee",
                icon: [448, 512, [], "f211", "M5.8 309.7C2 292.7 0 275.5 0 258.3 0 135 99.8 35 223.1 35c16.6 0 33.3 2 49.3 5.5C149 87.5 51.9 186 5.8 309.7zm392.9-189.2C385 103 369 87.8 350.9 75.2c-149.6 44.3-266.3 162.1-309.7 312 12.5 18.1 28 35.6 45.2 49 43.1-151.3 161.2-271.7 312.3-315.7zm15.8 252.7c15.2-25.1 25.4-53.7 29.5-82.8-79.4 42.9-145 110.6-187.6 190.3 30-4.4 58.9-15.3 84.6-31.3 35 13.1 70.9 24.3 107 33.6-9.3-36.5-20.4-74.5-33.5-109.8zm29.7-145.5c-2.6-19.5-7.9-38.7-15.8-56.8C290.5 216.7 182 327.5 137.1 466c18.1 7.6 37 12.5 56.6 15.2C240 367.1 330.5 274.4 444.2 227.7z"]
            },
            faFoursquare: {
                prefix: "fab",
                iconName: "foursquare",
                icon: [368, 512, [], "f180", "M323.1 3H49.9C12.4 3 0 31.3 0 49.1v433.8c0 20.3 12.1 27.7 18.2 30.1 6.2 2.5 22.8 4.6 32.9-7.1C180 356.5 182.2 354 182.2 354c3.1-3.4 3.4-3.1 6.8-3.1h83.4c35.1 0 40.6-25.2 44.3-39.7l48.6-243C373.8 25.8 363.1 3 323.1 3zm-16.3 73.8l-11.4 59.7c-1.2 6.5-9.5 13.2-16.9 13.2H172.1c-12 0-20.6 8.3-20.6 20.3v13c0 12 8.6 20.6 20.6 20.6h90.4c8.3 0 16.6 9.2 14.8 18.2-1.8 8.9-10.5 53.8-11.4 58.8-.9 4.9-6.8 13.5-16.9 13.5h-73.5c-13.5 0-17.2 1.8-26.5 12.6 0 0-8.9 11.4-89.5 108.3-.9.9-1.8.6-1.8-.3V75.9c0-7.7 6.8-16.6 16.6-16.6h219c8.2 0 15.6 7.7 13.5 17.5z"]
            },
            faFreeCodeCamp: {
                prefix: "fab",
                iconName: "free-code-camp",
                icon: [576, 512, [], "f2c5", "M97.22,96.21c10.36-10.65,16-17.12,16-21.9,0-2.76-1.92-5.51-3.83-7.42A14.81,14.81,0,0,0,101,64.05c-8.48,0-20.92,8.79-35.84,25.69C23.68,137,2.51,182.81,3.37,250.34s17.47,117,54.06,161.87C76.22,435.86,90.62,448,100.9,448a13.55,13.55,0,0,0,8.37-3.84c1.91-2.76,3.81-5.63,3.81-8.38,0-5.63-3.86-12.2-13.2-20.55-44.45-42.33-67.32-97-67.48-165C32.25,188.8,54,137.83,97.22,96.21ZM239.47,420.07c.58.37.91.55.91.55Zm93.79.55.17-.13C333.24,420.62,333.17,420.67,333.26,420.62Zm3.13-158.18c-16.24-4.15,50.41-82.89-68.05-177.17,0,0,15.54,49.38-62.83,159.57-74.27,104.35,23.46,168.73,34,175.23-6.73-4.35-47.4-35.7,9.55-128.64,11-18.3,25.53-34.87,43.5-72.16,0,0,15.91,22.45,7.6,71.13C287.7,364,354,342.91,355,343.94c22.75,26.78-17.72,73.51-21.58,76.55,5.49-3.65,117.71-78,33-188.1C360.43,238.4,352.62,266.59,336.39,262.44ZM510.88,89.69C496,72.79,483.52,64,475,64a14.81,14.81,0,0,0-8.39,2.84c-1.91,1.91-3.83,4.66-3.83,7.42,0,4.78,5.6,11.26,16,21.9,43.23,41.61,65,92.59,64.82,154.06-.16,68-23,122.63-67.48,165-9.34,8.35-13.18,14.92-13.2,20.55,0,2.75,1.9,5.62,3.81,8.38A13.61,13.61,0,0,0,475.1,448c10.28,0,24.68-12.13,43.47-35.79,36.59-44.85,53.14-94.38,54.06-161.87S552.32,137,510.88,89.69Z"]
            },
            faFreebsd: {
                prefix: "fab",
                iconName: "freebsd",
                icon: [448, 512, [], "f3a4", "M303.7 96.2c11.1-11.1 115.5-77 139.2-53.2 23.7 23.7-42.1 128.1-53.2 139.2-11.1 11.1-39.4.9-63.1-22.9-23.8-23.7-34.1-52-22.9-63.1zM109.9 68.1C73.6 47.5 22 24.6 5.6 41.1c-16.6 16.6 7.1 69.4 27.9 105.7 18.5-32.2 44.8-59.3 76.4-78.7zM406.7 174c3.3 11.3 2.7 20.7-2.7 26.1-20.3 20.3-87.5-27-109.3-70.1-18-32.3-11.1-53.4 14.9-48.7 5.7-3.6 12.3-7.6 19.6-11.6-29.8-15.5-63.6-24.3-99.5-24.3-119.1 0-215.6 96.5-215.6 215.6 0 119 96.5 215.6 215.6 215.6S445.3 380.1 445.3 261c0-38.4-10.1-74.5-27.7-105.8-3.9 7-7.6 13.3-10.9 18.8z"]
            },
            faFulcrum: {
                prefix: "fab",
                iconName: "fulcrum",
                icon: [320, 512, [], "f50b", "M95.75 164.14l-35.38 43.55L25 164.14l35.38-43.55zM144.23 0l-20.54 198.18L72.72 256l51 57.82L144.23 512V300.89L103.15 256l41.08-44.89zm79.67 164.14l35.38 43.55 35.38-43.55-35.38-43.55zm-48.48 47L216.5 256l-41.08 44.89V512L196 313.82 247 256l-51-57.82L175.42 0z"]
            },
            faGalacticRepublic: {
                prefix: "fab",
                iconName: "galactic-republic",
                icon: [496, 512, [], "f50c", "M248 504C111.25 504 0 392.75 0 256S111.25 8 248 8s248 111.25 248 248-111.25 248-248 248zm0-479.47C120.37 24.53 16.53 128.37 16.53 256S120.37 487.47 248 487.47 479.47 383.63 479.47 256 375.63 24.53 248 24.53zm27.62 21.81v24.62a185.933 185.933 0 0 1 83.57 34.54l17.39-17.36c-28.75-22.06-63.3-36.89-100.96-41.8zm-55.37.07c-37.64 4.94-72.16 19.8-100.88 41.85l17.28 17.36h.08c24.07-17.84 52.55-30.06 83.52-34.67V46.41zm12.25 50.17v82.87c-10.04 2.03-19.42 5.94-27.67 11.42l-58.62-58.59-21.93 21.93 58.67 58.67c-5.47 8.23-9.45 17.59-11.47 27.62h-82.9v31h82.9c2.02 10.02 6.01 19.31 11.47 27.54l-58.67 58.69 21.93 21.93 58.62-58.62a77.873 77.873 0 0 0 27.67 11.47v82.9h31v-82.9c10.05-2.03 19.37-6.06 27.62-11.55l58.67 58.69 21.93-21.93-58.67-58.69c5.46-8.23 9.47-17.52 11.5-27.54h82.87v-31h-82.87c-2.02-10.02-6.03-19.38-11.5-27.62l58.67-58.67-21.93-21.93-58.67 58.67c-8.25-5.49-17.57-9.47-27.62-11.5V96.58h-31zm183.24 30.72l-17.36 17.36a186.337 186.337 0 0 1 34.67 83.67h24.62c-4.95-37.69-19.83-72.29-41.93-101.03zm-335.55.13c-22.06 28.72-36.91 63.26-41.85 100.91h24.65c4.6-30.96 16.76-59.45 34.59-83.52l-17.39-17.39zM38.34 283.67c4.92 37.64 19.75 72.18 41.8 100.9l17.36-17.39c-17.81-24.07-29.92-52.57-34.51-83.52H38.34zm394.7 0c-4.61 30.99-16.8 59.5-34.67 83.6l17.36 17.36c22.08-28.74 36.98-63.29 41.93-100.96h-24.62zM136.66 406.38l-17.36 17.36c28.73 22.09 63.3 36.98 100.96 41.93v-24.64c-30.99-4.63-59.53-16.79-83.6-34.65zm222.53.05c-24.09 17.84-52.58 30.08-83.57 34.67v24.57c37.67-4.92 72.21-19.79 100.96-41.85l-17.31-17.39h-.08z"]
            },
            faGalacticSenate: {
                prefix: "fab",
                iconName: "galactic-senate",
                icon: [512, 512, [], "f50d", "M249.86 33.48v26.07C236.28 80.17 226 168.14 225.39 274.9c11.74-15.62 19.13-33.33 19.13-48.24v-16.88c-.03-5.32.75-10.53 2.19-15.65.65-2.14 1.39-4.08 2.62-5.82 1.23-1.75 3.43-3.79 6.68-3.79 3.24 0 5.45 2.05 6.68 3.79 1.23 1.75 1.97 3.68 2.62 5.82 1.44 5.12 2.22 10.33 2.19 15.65v16.88c0 14.91 7.39 32.62 19.13 48.24-.63-106.76-10.91-194.73-24.49-215.35V33.48h-12.28zm-26.34 147.77c-9.52 2.15-18.7 5.19-27.46 9.08 8.9 16.12 9.76 32.64 1.71 37.29-8 4.62-21.85-4.23-31.36-19.82-11.58 8.79-21.88 19.32-30.56 31.09 14.73 9.62 22.89 22.92 18.32 30.66-4.54 7.7-20.03 7.14-35.47-.96-5.78 13.25-9.75 27.51-11.65 42.42 9.68.18 18.67 2.38 26.18 6.04 17.78-.3 32.77-1.96 40.49-4.22 5.55-26.35 23.02-48.23 46.32-59.51.73-25.55 1.88-49.67 3.48-72.07zm64.96 0c1.59 22.4 2.75 46.52 3.47 72.07 23.29 11.28 40.77 33.16 46.32 59.51 7.72 2.26 22.71 3.92 40.49 4.22 7.51-3.66 16.5-5.85 26.18-6.04-1.9-14.91-5.86-29.17-11.65-42.42-15.44 8.1-30.93 8.66-35.47.96-4.57-7.74 3.6-21.05 18.32-30.66-8.68-11.77-18.98-22.3-30.56-31.09-9.51 15.59-23.36 24.44-31.36 19.82-8.05-4.65-7.19-21.16 1.71-37.29a147.49 147.49 0 0 0-27.45-9.08zm-32.48 8.6c-3.23 0-5.86 8.81-6.09 19.93h-.05v16.88c0 41.42-49.01 95.04-93.49 95.04-52 0-122.75-1.45-156.37 29.17v2.51c9.42 17.12 20.58 33.17 33.18 47.97C45.7 380.26 84.77 360.4 141.2 360c45.68 1.02 79.03 20.33 90.76 40.87.01.01-.01.04 0 .05 7.67 2.14 15.85 3.23 24.04 3.21 8.19.02 16.37-1.07 24.04-3.21.01-.01-.01-.04 0-.05 11.74-20.54 45.08-39.85 90.76-40.87 56.43.39 95.49 20.26 108.02 41.35 12.6-14.8 23.76-30.86 33.18-47.97v-2.51c-33.61-30.62-104.37-29.17-156.37-29.17-44.48 0-93.49-53.62-93.49-95.04v-16.88h-.05c-.23-11.12-2.86-19.93-6.09-19.93zm0 96.59c22.42 0 40.6 18.18 40.6 40.6s-18.18 40.65-40.6 40.65-40.6-18.23-40.6-40.65c0-22.42 18.18-40.6 40.6-40.6zm0 7.64c-18.19 0-32.96 14.77-32.96 32.96S237.81 360 256 360s32.96-14.77 32.96-32.96-14.77-32.96-32.96-32.96zm0 6.14c14.81 0 26.82 12.01 26.82 26.82s-12.01 26.82-26.82 26.82-26.82-12.01-26.82-26.82 12.01-26.82 26.82-26.82zm-114.8 66.67c-10.19.07-21.6.36-30.5 1.66.43 4.42 1.51 18.63 7.11 29.76 9.11-2.56 18.36-3.9 27.62-3.9 41.28.94 71.48 34.35 78.26 74.47l.11 4.7c10.4 1.91 21.19 2.94 32.21 2.94 11.03 0 21.81-1.02 32.21-2.94l.11-4.7c6.78-40.12 36.98-73.53 78.26-74.47 9.26 0 18.51 1.34 27.62 3.9 5.6-11.13 6.68-25.34 7.11-29.76-8.9-1.3-20.32-1.58-30.5-1.66-18.76.42-35.19 4.17-48.61 9.67-12.54 16.03-29.16 30.03-49.58 33.07-.09.02-.17.04-.27.05-.05.01-.11.04-.16.05-5.24 1.07-10.63 1.6-16.19 1.6-5.55 0-10.95-.53-16.19-1.6-.05-.01-.11-.04-.16-.05-.1-.02-.17-.04-.27-.05-20.42-3.03-37.03-17.04-49.58-33.07-13.42-5.49-29.86-9.25-48.61-9.67z"]
            },
            faGetPocket: {
                prefix: "fab",
                iconName: "get-pocket",
                icon: [448, 512, [], "f265", "M407.6 64h-367C18.5 64 0 82.5 0 104.6v135.2C0 364.5 99.7 464 224.2 464c124 0 223.8-99.5 223.8-224.2V104.6c0-22.4-17.7-40.6-40.4-40.6zm-162 268.5c-12.4 11.8-31.4 11.1-42.4 0C89.5 223.6 88.3 227.4 88.3 209.3c0-16.9 13.8-30.7 30.7-30.7 17 0 16.1 3.8 105.2 89.3 90.6-86.9 88.6-89.3 105.5-89.3 16.9 0 30.7 13.8 30.7 30.7 0 17.8-2.9 15.7-114.8 123.2z"]
            },
            faGg: {
                prefix: "fab",
                iconName: "gg",
                icon: [512, 512, [], "f260", "M179.2 230.4l102.4 102.4-102.4 102.4L0 256 179.2 76.8l44.8 44.8-25.6 25.6-19.2-19.2-128 128 128 128 51.5-51.5-77.1-76.5 25.6-25.6zM332.8 76.8L230.4 179.2l102.4 102.4 25.6-25.6-77.1-76.5 51.5-51.5 128 128-128 128-19.2-19.2-25.6 25.6 44.8 44.8L512 256 332.8 76.8z"]
            },
            faGgCircle: {
                prefix: "fab",
                iconName: "gg-circle",
                icon: [512, 512, [], "f261", "M257 8C120 8 9 119 9 256s111 248 248 248 248-111 248-248S394 8 257 8zm-49.5 374.8L81.8 257.1l125.7-125.7 35.2 35.4-24.2 24.2-11.1-11.1-77.2 77.2 77.2 77.2 26.6-26.6-53.1-52.9 24.4-24.4 77.2 77.2-75 75.2zm99-2.2l-35.2-35.2 24.1-24.4 11.1 11.1 77.2-77.2-77.2-77.2-26.5 26.5 53.1 52.9-24.4 24.4-77.2-77.2 75-75L432.2 255 306.5 380.6z"]
            },
            faGit: {
                prefix: "fab",
                iconName: "git",
                icon: [512, 512, [], "f1d3", "M216.29 158.39H137C97 147.9 6.51 150.63 6.51 233.18c0 30.09 15 51.23 35 61-25.1 23-37 33.85-37 49.21 0 11 4.47 21.14 17.89 26.81C8.13 383.61 0 393.35 0 411.65c0 32.11 28.05 50.82 101.63 50.82 70.75 0 111.79-26.42 111.79-73.18 0-58.66-45.16-56.5-151.63-63l13.43-21.55c27.27 7.58 118.7 10 118.7-67.89 0-18.7-7.73-31.71-15-41.07l37.41-2.84zm-63.42 241.9c0 32.06-104.89 32.1-104.89 2.43 0-8.14 5.27-15 10.57-21.54 77.71 5.3 94.32 3.37 94.32 19.11zm-50.81-134.58c-52.8 0-50.46-71.16 1.2-71.16 49.54 0 50.82 71.16-1.2 71.16zm133.3 100.51v-32.1c26.75-3.66 27.24-2 27.24-11V203.61c0-8.5-2.05-7.38-27.24-16.26l4.47-32.92H324v168.71c0 6.51.4 7.32 6.51 8.14l20.73 2.84v32.1zm52.45-244.31c-23.17 0-36.59-13.43-36.59-36.61s13.42-35.77 36.59-35.77c23.58 0 37 12.62 37 35.77s-13.42 36.61-37 36.61zM512 350.46c-17.49 8.53-43.1 16.26-66.28 16.26-48.38 0-66.67-19.5-66.67-65.46V194.75c0-5.42 1.05-4.06-31.71-4.06V154.5c35.78-4.07 50-22 54.47-66.27h38.63c0 65.83-1.34 61.81 3.26 61.81H501v40.65h-60.56v97.15c0 6.92-4.92 51.41 60.57 26.84z"]
            },
            faGitAlt: {
                prefix: "fab",
                iconName: "git-alt",
                icon: [448, 512, [], "f841", "M439.55 236.05L244 40.45a28.87 28.87 0 0 0-40.81 0l-40.66 40.63 51.52 51.52c27.06-9.14 52.68 16.77 43.39 43.68l49.66 49.66c34.23-11.8 61.18 31 35.47 56.69-26.49 26.49-70.21-2.87-56-37.34L240.22 199v121.85c25.3 12.54 22.26 41.85 9.08 55a34.34 34.34 0 0 1-48.55 0c-17.57-17.6-11.07-46.91 11.25-56v-123c-20.8-8.51-24.6-30.74-18.64-45L142.57 101 8.45 235.14a28.86 28.86 0 0 0 0 40.81l195.61 195.6a28.86 28.86 0 0 0 40.8 0l194.69-194.69a28.86 28.86 0 0 0 0-40.81z"]
            },
            faGitSquare: {
                prefix: "fab",
                iconName: "git-square",
                icon: [448, 512, [], "f1d2", "M100.59 334.24c48.57 3.31 58.95 2.11 58.95 11.94 0 20-65.55 20.06-65.55 1.52.01-5.09 3.29-9.4 6.6-13.46zm27.95-116.64c-32.29 0-33.75 44.47-.75 44.47 32.51 0 31.71-44.47.75-44.47zM448 80v352a48 48 0 0 1-48 48H48a48 48 0 0 1-48-48V80a48 48 0 0 1 48-48h352a48 48 0 0 1 48 48zm-227 69.31c0 14.49 8.38 22.88 22.86 22.88 14.74 0 23.13-8.39 23.13-22.88S258.62 127 243.88 127c-14.48 0-22.88 7.84-22.88 22.31zM199.18 195h-49.55c-25-6.55-81.56-4.85-81.56 46.75 0 18.8 9.4 32 21.85 38.11C74.23 294.23 66.8 301 66.8 310.6c0 6.87 2.79 13.22 11.18 16.76-8.9 8.4-14 14.48-14 25.92C64 373.35 81.53 385 127.52 385c44.22 0 69.87-16.51 69.87-45.73 0-36.67-28.23-35.32-94.77-39.38l8.38-13.43c17 4.74 74.19 6.23 74.19-42.43 0-11.69-4.83-19.82-9.4-25.67l23.38-1.78zm84.34 109.84l-13-1.78c-3.82-.51-4.07-1-4.07-5.09V192.52h-52.6l-2.79 20.57c15.75 5.55 17 4.86 17 10.17V298c0 5.62-.31 4.58-17 6.87v20.06h72.42zM384 315l-6.87-22.37c-40.93 15.37-37.85-12.41-37.85-16.73v-60.72h37.85v-25.41h-35.82c-2.87 0-2 2.52-2-38.63h-24.18c-2.79 27.7-11.68 38.88-34 41.42v22.62c20.47 0 19.82-.85 19.82 2.54v66.57c0 28.72 11.43 40.91 41.67 40.91 14.45 0 30.45-4.83 41.38-10.2z"]
            },
            faGithub: {
                prefix: "fab",
                iconName: "github",
                icon: [496, 512, [], "f09b", "M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"]
            },
            faGithubAlt: {
                prefix: "fab",
                iconName: "github-alt",
                icon: [480, 512, [], "f113", "M186.1 328.7c0 20.9-10.9 55.1-36.7 55.1s-36.7-34.2-36.7-55.1 10.9-55.1 36.7-55.1 36.7 34.2 36.7 55.1zM480 278.2c0 31.9-3.2 65.7-17.5 95-37.9 76.6-142.1 74.8-216.7 74.8-75.8 0-186.2 2.7-225.6-74.8-14.6-29-20.2-63.1-20.2-95 0-41.9 13.9-81.5 41.5-113.6-5.2-15.8-7.7-32.4-7.7-48.8 0-21.5 4.9-32.3 14.6-51.8 45.3 0 74.3 9 108.8 36 29-6.9 58.8-10 88.7-10 27 0 54.2 2.9 80.4 9.2 34-26.7 63-35.2 107.8-35.2 9.8 19.5 14.6 30.3 14.6 51.8 0 16.4-2.6 32.7-7.7 48.2 27.5 32.4 39 72.3 39 114.2zm-64.3 50.5c0-43.9-26.7-82.6-73.5-82.6-18.9 0-37 3.4-56 6-14.9 2.3-29.8 3.2-45.1 3.2-15.2 0-30.1-.9-45.1-3.2-18.7-2.6-37-6-56-6-46.8 0-73.5 38.7-73.5 82.6 0 87.8 80.4 101.3 150.4 101.3h48.2c70.3 0 150.6-13.4 150.6-101.3zm-82.6-55.1c-25.8 0-36.7 34.2-36.7 55.1s10.9 55.1 36.7 55.1 36.7-34.2 36.7-55.1-10.9-55.1-36.7-55.1z"]
            },
            faGithubSquare: {
                prefix: "fab",
                iconName: "github-square",
                icon: [448, 512, [], "f092", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM277.3 415.7c-8.4 1.5-11.5-3.7-11.5-8 0-5.4.2-33 .2-55.3 0-15.6-5.2-25.5-11.3-30.7 37-4.1 76-9.2 76-73.1 0-18.2-6.5-27.3-17.1-39 1.7-4.3 7.4-22-1.7-45-13.9-4.3-45.7 17.9-45.7 17.9-13.2-3.7-27.5-5.6-41.6-5.6-14.1 0-28.4 1.9-41.6 5.6 0 0-31.8-22.2-45.7-17.9-9.1 22.9-3.5 40.6-1.7 45-10.6 11.7-15.6 20.8-15.6 39 0 63.6 37.3 69 74.3 73.1-4.8 4.3-9.1 11.7-10.6 22.3-9.5 4.3-33.8 11.7-48.3-13.9-9.1-15.8-25.5-17.1-25.5-17.1-16.2-.2-1.1 10.2-1.1 10.2 10.8 5 18.4 24.2 18.4 24.2 9.7 29.7 56.1 19.7 56.1 19.7 0 13.9.2 36.5.2 40.6 0 4.3-3 9.5-11.5 8-66-22.1-112.2-84.9-112.2-158.3 0-91.8 70.2-161.5 162-161.5S388 165.6 388 257.4c.1 73.4-44.7 136.3-110.7 158.3zm-98.1-61.1c-1.9.4-3.7-.4-3.9-1.7-.2-1.5 1.1-2.8 3-3.2 1.9-.2 3.7.6 3.9 1.9.3 1.3-1 2.6-3 3zm-9.5-.9c0 1.3-1.5 2.4-3.5 2.4-2.2.2-3.7-.9-3.7-2.4 0-1.3 1.5-2.4 3.5-2.4 1.9-.2 3.7.9 3.7 2.4zm-13.7-1.1c-.4 1.3-2.4 1.9-4.1 1.3-1.9-.4-3.2-1.9-2.8-3.2.4-1.3 2.4-1.9 4.1-1.5 2 .6 3.3 2.1 2.8 3.4zm-12.3-5.4c-.9 1.1-2.8.9-4.3-.6-1.5-1.3-1.9-3.2-.9-4.1.9-1.1 2.8-.9 4.3.6 1.3 1.3 1.8 3.3.9 4.1zm-9.1-9.1c-.9.6-2.6 0-3.7-1.5s-1.1-3.2 0-3.9c1.1-.9 2.8-.2 3.7 1.3 1.1 1.5 1.1 3.3 0 4.1zm-6.5-9.7c-.9.9-2.4.4-3.5-.6-1.1-1.3-1.3-2.8-.4-3.5.9-.9 2.4-.4 3.5.6 1.1 1.3 1.3 2.8.4 3.5zm-6.7-7.4c-.4.9-1.7 1.1-2.8.4-1.3-.6-1.9-1.7-1.5-2.6.4-.6 1.5-.9 2.8-.4 1.3.7 1.9 1.8 1.5 2.6z"]
            },
            faGitkraken: {
                prefix: "fab",
                iconName: "gitkraken",
                icon: [592, 512, [], "f3a6", "M565.7 118.1c-2.3-6.1-9.3-9.2-15.3-6.6-5.7 2.4-8.5 8.9-6.3 14.6 10.9 29 16.9 60.5 16.9 93.3 0 134.6-100.3 245.7-230.2 262.7V358.4c7.9-1.5 15.5-3.6 23-6.2v104c106.7-25.9 185.9-122.1 185.9-236.8 0-91.8-50.8-171.8-125.8-213.3-5.7-3.2-13-.9-15.9 5-2.7 5.5-.6 12.2 4.7 15.1 67.9 37.6 113.9 110 113.9 193.2 0 93.3-57.9 173.1-139.8 205.4v-92.2c14.2-4.5 24.9-17.7 24.9-33.5 0-13.1-6.8-24.4-17.3-30.5 8.3-79.5 44.5-58.6 44.5-83.9V170c0-38-87.9-161.8-129-164.7-2.5-.2-5-.2-7.6 0C251.1 8.3 163.2 132 163.2 170v14.8c0 25.3 36.3 4.3 44.5 83.9-10.6 6.1-17.3 17.4-17.3 30.5 0 15.8 10.6 29 24.8 33.5v92.2c-81.9-32.2-139.8-112-139.8-205.4 0-83.1 46-155.5 113.9-193.2 5.4-3 7.4-9.6 4.7-15.1-2.9-5.9-10.1-8.2-15.9-5-75 41.5-125.8 121.5-125.8 213.3 0 114.7 79.2 210.8 185.9 236.8v-104c7.6 2.5 15.1 4.6 23 6.2v123.7C131.4 465.2 31 354.1 31 219.5c0-32.8 6-64.3 16.9-93.3 2.2-5.8-.6-12.2-6.3-14.6-6-2.6-13 .4-15.3 6.6C14.5 149.7 8 183.8 8 219.5c0 155.1 122.6 281.6 276.3 287.8V361.4c6.8.4 15 .5 23.4 0v145.8C461.4 501.1 584 374.6 584 219.5c0-35.7-6.5-69.8-18.3-101.4zM365.9 275.5c13 0 23.7 10.5 23.7 23.7 0 13.1-10.6 23.7-23.7 23.7-13 0-23.7-10.5-23.7-23.7 0-13.1 10.6-23.7 23.7-23.7zm-139.8 47.3c-13.2 0-23.7-10.7-23.7-23.7s10.5-23.7 23.7-23.7c13.1 0 23.7 10.6 23.7 23.7 0 13-10.5 23.7-23.7 23.7z"]
            },
            faGitlab: {
                prefix: "fab",
                iconName: "gitlab",
                icon: [512, 512, [], "f296", "M105.2 24.9c-3.1-8.9-15.7-8.9-18.9 0L29.8 199.7h132c-.1 0-56.6-174.8-56.6-174.8zM.9 287.7c-2.6 8 .3 16.9 7.1 22l247.9 184-226.2-294zm160.8-88l94.3 294 94.3-294zm349.4 88l-28.8-88-226.3 294 247.9-184c6.9-5.1 9.7-14 7.2-22zM425.7 24.9c-3.1-8.9-15.7-8.9-18.9 0l-56.6 174.8h132z"]
            },
            faGitter: {
                prefix: "fab",
                iconName: "gitter",
                icon: [384, 512, [], "f426", "M66.4 322.5H16V0h50.4v322.5zM166.9 76.1h-50.4V512h50.4V76.1zm100.6 0h-50.4V512h50.4V76.1zM368 76h-50.4v247H368V76z"]
            },
            faGlide: {
                prefix: "fab",
                iconName: "glide",
                icon: [448, 512, [], "f2a5", "M252.8 148.6c0 8.8-1.6 17.7-3.4 26.4-5.8 27.8-11.6 55.8-17.3 83.6-1.4 6.3-8.3 4.9-13.7 4.9-23.8 0-30.5-26-30.5-45.5 0-29.3 11.2-68.1 38.5-83.1 4.3-2.5 9.2-4.2 14.1-4.2 11.4 0 12.3 8.3 12.3 17.9zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-64 187c0-5.1-20.8-37.7-25.5-39.5-2.2-.9-7.2-2.3-9.6-2.3-23.1 0-38.7 10.5-58.2 21.5l-.5-.5c4.3-29.4 14.6-57.2 14.6-87.4 0-44.6-23.8-62.7-67.5-62.7-71.7 0-108 70.8-108 123.5 0 54.7 32 85 86.3 85 7.5 0 6.9-.6 6.9 2.3-10.5 80.3-56.5 82.9-56.5 58.9 0-24.4 28-36.5 28.3-38-.2-7.6-29.3-17.2-36.7-17.2-21.1 0-32.7 33-32.7 50.6 0 32.3 20.4 54.7 53.3 54.7 48.2 0 83.4-49.7 94.3-91.7 9.4-37.7 7-39.4 12.3-42.1 20-10.1 35.8-16.8 58.4-16.8 11.1 0 19 2.3 36.7 5.2 1.8.1 4.1-1.7 4.1-3.5z"]
            },
            faGlideG: {
                prefix: "fab",
                iconName: "glide-g",
                icon: [448, 512, [], "f2a6", "M407.1 211.2c-3.5-1.4-11.6-3.8-15.4-3.8-37.1 0-62.2 16.8-93.5 34.5l-.9-.9c7-47.3 23.5-91.9 23.5-140.4C320.8 29.1 282.6 0 212.4 0 97.3 0 39 113.7 39 198.4 39 286.3 90.3 335 177.6 335c12 0 11-1 11 3.8-16.9 128.9-90.8 133.1-90.8 94.6 0-39.2 45-58.6 45.5-61-.3-12.2-47-27.6-58.9-27.6-33.9.1-52.4 51.2-52.4 79.3C32 476 64.8 512 117.5 512c77.4 0 134-77.8 151.4-145.4 15.1-60.5 11.2-63.3 19.7-67.6 32.2-16.2 57.5-27 93.8-27 17.8 0 30.5 3.7 58.9 8.4 2.9 0 6.7-2.9 6.7-5.8 0-8-33.4-60.5-40.9-63.4zm-175.3-84.4c-9.3 44.7-18.6 89.6-27.8 134.3-2.3 10.2-13.3 7.8-22 7.8-38.3 0-49-41.8-49-73.1 0-47 18-109.3 61.8-133.4 7-4.1 14.8-6.7 22.6-6.7 18.6 0 20 13.3 20 28.7-.1 14.3-2.7 28.5-5.6 42.4z"]
            },
            faGofore: {
                prefix: "fab",
                iconName: "gofore",
                icon: [400, 512, [], "f3a7", "M324 319.8h-13.2v34.7c-24.5 23.1-56.3 35.8-89.9 35.8-73.2 0-132.4-60.2-132.4-134.4 0-74.1 59.2-134.4 132.4-134.4 35.3 0 68.6 14 93.6 39.4l62.3-63.3C335 55.3 279.7 32 220.7 32 98 32 0 132.6 0 256c0 122.5 97 224 220.7 224 63.2 0 124.5-26.2 171-82.5-2-27.6-13.4-77.7-67.7-77.7zm-12.1-112.5H205.6v89H324c33.5 0 60.5 15.1 76 41.8v-30.6c0-65.2-40.4-100.2-88.1-100.2z"]
            },
            faGoodreads: {
                prefix: "fab",
                iconName: "goodreads",
                icon: [448, 512, [], "f3a8", "M299.9 191.2c5.1 37.3-4.7 79-35.9 100.7-22.3 15.5-52.8 14.1-70.8 5.7-37.1-17.3-49.5-58.6-46.8-97.2 4.3-60.9 40.9-87.9 75.3-87.5 46.9-.2 71.8 31.8 78.2 78.3zM448 88v336c0 30.9-25.1 56-56 56H56c-30.9 0-56-25.1-56-56V88c0-30.9 25.1-56 56-56h336c30.9 0 56 25.1 56 56zM330 313.2s-.1-34-.1-217.3h-29v40.3c-.8.3-1.2-.5-1.6-1.2-9.6-20.7-35.9-46.3-76-46-51.9.4-87.2 31.2-100.6 77.8-4.3 14.9-5.8 30.1-5.5 45.6 1.7 77.9 45.1 117.8 112.4 115.2 28.9-1.1 54.5-17 69-45.2.5-1 1.1-1.9 1.7-2.9.2.1.4.1.6.2.3 3.8.2 30.7.1 34.5-.2 14.8-2 29.5-7.2 43.5-7.8 21-22.3 34.7-44.5 39.5-17.8 3.9-35.6 3.8-53.2-1.2-21.5-6.1-36.5-19-41.1-41.8-.3-1.6-1.3-1.3-2.3-1.3h-26.8c.8 10.6 3.2 20.3 8.5 29.2 24.2 40.5 82.7 48.5 128.2 37.4 49.9-12.3 67.3-54.9 67.4-106.3z"]
            },
            faGoodreadsG: {
                prefix: "fab",
                iconName: "goodreads-g",
                icon: [384, 512, [], "f3a9", "M42.6 403.3h2.8c12.7 0 25.5 0 38.2.1 1.6 0 3.1-.4 3.6 2.1 7.1 34.9 30 54.6 62.9 63.9 26.9 7.6 54.1 7.8 81.3 1.8 33.8-7.4 56-28.3 68-60.4 8-21.5 10.7-43.8 11-66.5.1-5.8.3-47-.2-52.8l-.9-.3c-.8 1.5-1.7 2.9-2.5 4.4-22.1 43.1-61.3 67.4-105.4 69.1-103 4-169.4-57-172-176.2-.5-23.7 1.8-46.9 8.3-69.7C58.3 47.7 112.3.6 191.6 0c61.3-.4 101.5 38.7 116.2 70.3.5 1.1 1.3 2.3 2.4 1.9V10.6h44.3c0 280.3.1 332.2.1 332.2-.1 78.5-26.7 143.7-103 162.2-69.5 16.9-159 4.8-196-57.2-8-13.5-11.8-28.3-13-44.5zM188.9 36.5c-52.5-.5-108.5 40.7-115 133.8-4.1 59 14.8 122.2 71.5 148.6 27.6 12.9 74.3 15 108.3-8.7 47.6-33.2 62.7-97 54.8-154-9.7-71.1-47.8-120-119.6-119.7z"]
            },
            faGoogle: {
                prefix: "fab",
                iconName: "google",
                icon: [488, 512, [], "f1a0", "M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z"]
            },
            faGoogleDrive: {
                prefix: "fab",
                iconName: "google-drive",
                icon: [512, 512, [], "f3aa", "M339 314.9L175.4 32h161.2l163.6 282.9H339zm-137.5 23.6L120.9 480h310.5L512 338.5H201.5zM154.1 67.4L0 338.5 80.6 480 237 208.8 154.1 67.4z"]
            },
            faGooglePay: {
                prefix: "fab",
                iconName: "google-pay",
                icon: [640, 512, [], "e079", "M105.72,215v41.25h57.1a49.66,49.66,0,0,1-21.14,32.6c-9.54,6.55-21.72,10.28-36,10.28-27.6,0-50.93-18.91-59.3-44.22a65.61,65.61,0,0,1,0-41l0,0c8.37-25.46,31.7-44.37,59.3-44.37a56.43,56.43,0,0,1,40.51,16.08L176.47,155a101.24,101.24,0,0,0-70.75-27.84,105.55,105.55,0,0,0-94.38,59.11,107.64,107.64,0,0,0,0,96.18v.15a105.41,105.41,0,0,0,94.38,59c28.47,0,52.55-9.53,70-25.91,20-18.61,31.41-46.15,31.41-78.91A133.76,133.76,0,0,0,205.38,215Zm389.41-4c-10.13-9.38-23.93-14.14-41.39-14.14-22.46,0-39.34,8.34-50.5,24.86l20.85,13.26q11.45-17,31.26-17a34.05,34.05,0,0,1,22.75,8.79A28.14,28.14,0,0,1,487.79,248v5.51c-9.1-5.07-20.55-7.75-34.64-7.75-16.44,0-29.65,3.88-39.49,11.77s-14.82,18.31-14.82,31.56a39.74,39.74,0,0,0,13.94,31.27c9.25,8.34,21,12.51,34.79,12.51,16.29,0,29.21-7.3,39-21.89h1v17.72h22.61V250C510.25,233.45,505.26,220.34,495.13,211ZM475.9,300.3a37.32,37.32,0,0,1-26.57,11.16A28.61,28.61,0,0,1,431,305.21a19.41,19.41,0,0,1-7.77-15.63c0-7,3.22-12.81,9.54-17.42s14.53-7,24.07-7C470,265,480.3,268,487.64,273.94,487.64,284.07,483.68,292.85,475.9,300.3Zm-93.65-142A55.71,55.71,0,0,0,341.74,142H279.07V328.74H302.7V253.1h39c16,0,29.5-5.36,40.51-15.93.88-.89,1.76-1.79,2.65-2.68A54.45,54.45,0,0,0,382.25,158.26Zm-16.58,62.23a30.65,30.65,0,0,1-23.34,9.68H302.7V165h39.63a32,32,0,0,1,22.6,9.23A33.18,33.18,0,0,1,365.67,220.49ZM614.31,201,577.77,292.7h-.45L539.9,201H514.21L566,320.55l-29.35,64.32H561L640,201Z"]
            },
            faGooglePlay: {
                prefix: "fab",
                iconName: "google-play",
                icon: [512, 512, [], "f3ab", "M325.3 234.3L104.6 13l280.8 161.2-60.1 60.1zM47 0C34 6.8 25.3 19.2 25.3 35.3v441.3c0 16.1 8.7 28.5 21.7 35.3l256.6-256L47 0zm425.2 225.6l-58.9-34.1-65.7 64.5 65.7 64.5 60.1-34.1c18-14.3 18-46.5-1.2-60.8zM104.6 499l280.8-161.2-60.1-60.1L104.6 499z"]
            },
            faGooglePlus: {
                prefix: "fab",
                iconName: "google-plus",
                icon: [512, 512, [], "f2b3", "M256,8C119.1,8,8,119.1,8,256S119.1,504,256,504,504,392.9,504,256,392.9,8,256,8ZM185.3,380a124,124,0,0,1,0-248c31.3,0,60.1,11,83,32.3l-33.6,32.6c-13.2-12.9-31.3-19.1-49.4-19.1-42.9,0-77.2,35.5-77.2,78.1S142.3,334,185.3,334c32.6,0,64.9-19.1,70.1-53.3H185.3V238.1H302.2a109.2,109.2,0,0,1,1.9,20.7c0,70.8-47.5,121.2-118.8,121.2ZM415.5,273.8v35.5H380V273.8H344.5V238.3H380V202.8h35.5v35.5h35.2v35.5Z"]
            },
            faGooglePlusG: {
                prefix: "fab",
                iconName: "google-plus-g",
                icon: [640, 512, [], "f0d5", "M386.061 228.496c1.834 9.692 3.143 19.384 3.143 31.956C389.204 370.205 315.599 448 204.8 448c-106.084 0-192-85.915-192-192s85.916-192 192-192c51.864 0 95.083 18.859 128.611 50.292l-52.126 50.03c-14.145-13.621-39.028-29.599-76.485-29.599-65.484 0-118.92 54.221-118.92 121.277 0 67.056 53.436 121.277 118.92 121.277 75.961 0 104.513-54.745 108.965-82.773H204.8v-66.009h181.261zm185.406 6.437V179.2h-56.001v55.733h-55.733v56.001h55.733v55.733h56.001v-55.733H627.2v-56.001h-55.733z"]
            },
            faGooglePlusSquare: {
                prefix: "fab",
                iconName: "google-plus-square",
                icon: [448, 512, [], "f0d4", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM164 356c-55.3 0-100-44.7-100-100s44.7-100 100-100c27 0 49.5 9.8 67 26.2l-27.1 26.1c-7.4-7.1-20.3-15.4-39.8-15.4-34.1 0-61.9 28.2-61.9 63.2 0 34.9 27.8 63.2 61.9 63.2 39.6 0 54.4-28.5 56.8-43.1H164v-34.4h94.4c1 5 1.6 10.1 1.6 16.6 0 57.1-38.3 97.6-96 97.6zm220-81.8h-29v29h-29.2v-29h-29V245h29v-29H355v29h29v29.2z"]
            },
            faGoogleWallet: {
                prefix: "fab",
                iconName: "google-wallet",
                icon: [448, 512, [], "f1ee", "M156.8 126.8c37.6 60.6 64.2 113.1 84.3 162.5-8.3 33.8-18.8 66.5-31.3 98.3-13.2-52.3-26.5-101.3-56-148.5 6.5-36.4 2.3-73.6 3-112.3zM109.3 200H16.1c-6.5 0-10.5 7.5-6.5 12.7C51.8 267 81.3 330.5 101.3 400h103.5c-16.2-69.7-38.7-133.7-82.5-193.5-3-4-8-6.5-13-6.5zm47.8-88c68.5 108 130 234.5 138.2 368H409c-12-138-68.4-265-143.2-368H157.1zm251.8-68.5c-1.8-6.8-8.2-11.5-15.2-11.5h-88.3c-5.3 0-9 5-7.8 10.3 13.2 46.5 22.3 95.5 26.5 146 48.2 86.2 79.7 178.3 90.6 270.8 15.8-60.5 25.3-133.5 25.3-203 0-73.6-12.1-145.1-31.1-212.6z"]
            },
            faGratipay: {
                prefix: "fab",
                iconName: "gratipay",
                icon: [496, 512, [], "f184", "M248 8C111.1 8 0 119.1 0 256s111.1 248 248 248 248-111.1 248-248S384.9 8 248 8zm114.6 226.4l-113 152.7-112.7-152.7c-8.7-11.9-19.1-50.4 13.6-72 28.1-18.1 54.6-4.2 68.5 11.9 15.9 17.9 46.6 16.9 61.7 0 13.9-16.1 40.4-30 68.1-11.9 32.9 21.6 22.6 60 13.8 72z"]
            },
            faGrav: {
                prefix: "fab",
                iconName: "grav",
                icon: [512, 512, [], "f2d6", "M301.1 212c4.4 4.4 4.4 11.9 0 16.3l-9.7 9.7c-4.4 4.7-11.9 4.7-16.6 0l-10.5-10.5c-4.4-4.7-4.4-11.9 0-16.6l9.7-9.7c4.4-4.4 11.9-4.4 16.6 0l10.5 10.8zm-30.2-19.7c3-3 3-7.8 0-10.5-2.8-3-7.5-3-10.5 0-2.8 2.8-2.8 7.5 0 10.5 3.1 2.8 7.8 2.8 10.5 0zm-26 5.3c-3 2.8-3 7.5 0 10.2 2.8 3 7.5 3 10.5 0 2.8-2.8 2.8-7.5 0-10.2-3-3-7.7-3-10.5 0zm72.5-13.3c-19.9-14.4-33.8-43.2-11.9-68.1 21.6-24.9 40.7-17.2 59.8.8 11.9 11.3 29.3 24.9 17.2 48.2-12.5 23.5-45.1 33.2-65.1 19.1zm47.7-44.5c-8.9-10-23.3 6.9-15.5 16.1 7.4 9 32.1 2.4 15.5-16.1zM504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-66.2 42.6c2.5-16.1-20.2-16.6-25.2-25.7-13.6-24.1-27.7-36.8-54.5-30.4 11.6-8 23.5-6.1 23.5-6.1.3-6.4 0-13-9.4-24.9 3.9-12.5.3-22.4.3-22.4 15.5-8.6 26.8-24.4 29.1-43.2 3.6-31-18.8-59.2-49.8-62.8-22.1-2.5-43.7 7.7-54.3 25.7-23.2 40.1 1.4 70.9 22.4 81.4-14.4-1.4-34.3-11.9-40.1-34.3-6.6-25.7 2.8-49.8 8.9-61.4 0 0-4.4-5.8-8-8.9 0 0-13.8 0-24.6 5.3 11.9-15.2 25.2-14.4 25.2-14.4 0-6.4-.6-14.9-3.6-21.6-5.4-11-23.8-12.9-31.7 2.8.1-.2.3-.4.4-.5-5 11.9-1.1 55.9 16.9 87.2-2.5 1.4-9.1 6.1-13 10-21.6 9.7-56.2 60.3-56.2 60.3-28.2 10.8-77.2 50.9-70.6 79.7.3 3 1.4 5.5 3 7.5-2.8 2.2-5.5 5-8.3 8.3-11.9 13.8-5.3 35.2 17.7 24.4 15.8-7.2 29.6-20.2 36.3-30.4 0 0-5.5-5-16.3-4.4 27.7-6.6 34.3-9.4 46.2-9.1 8 3.9 8-34.3 8-34.3 0-14.7-2.2-31-11.1-41.5 12.5 12.2 29.1 32.7 28 60.6-.8 18.3-15.2 23-15.2 23-9.1 16.6-43.2 65.9-30.4 106 0 0-9.7-14.9-10.2-22.1-17.4 19.4-46.5 52.3-24.6 64.5 26.6 14.7 108.8-88.6 126.2-142.3 34.6-20.8 55.4-47.3 63.9-65 22 43.5 95.3 94.5 101.1 59z"]
            },
            faGripfire: {
                prefix: "fab",
                iconName: "gripfire",
                icon: [384, 512, [], "f3ac", "M112.5 301.4c0-73.8 105.1-122.5 105.1-203 0-47.1-34-88-39.1-90.4.4 3.3.6 6.7.6 10C179.1 110.1 32 171.9 32 286.6c0 49.8 32.2 79.2 66.5 108.3 65.1 46.7 78.1 71.4 78.1 86.6 0 10.1-4.8 17-4.8 22.3 13.1-16.7 17.4-31.9 17.5-46.4 0-29.6-21.7-56.3-44.2-86.5-16-22.3-32.6-42.6-32.6-69.5zm205.3-39c-12.1-66.8-78-124.4-94.7-130.9l4 7.2c2.4 5.1 3.4 10.9 3.4 17.1 0 44.7-54.2 111.2-56.6 116.7-2.2 5.1-3.2 10.5-3.2 15.8 0 20.1 15.2 42.1 17.9 42.1 2.4 0 56.6-55.4 58.1-87.7 6.4 11.7 9.1 22.6 9.1 33.4 0 41.2-41.8 96.9-41.8 96.9 0 11.6 31.9 53.2 35.5 53.2 1 0 2.2-1.4 3.2-2.4 37.9-39.3 67.3-85 67.3-136.8 0-8-.7-16.2-2.2-24.6z"]
            },
            faGrunt: {
                prefix: "fab",
                iconName: "grunt",
                icon: [384, 512, [], "f3ad", "M61.3 189.3c-1.1 10 5.2 19.1 5.2 19.1.7-7.5 2.2-12.8 4-16.6.4 10.3 3.2 23.5 12.8 34.1 6.9 7.6 35.6 23.3 54.9 6.1 1 2.4 2.1 5.3 3 8.5 2.9 10.3-2.7 25.3-2.7 25.3s15.1-17.1 13.9-32.5c10.8-.5 21.4-8.4 21.1-19.5 0 0-18.9 10.4-35.5-8.8-9.7-11.2-40.9-42-83.1-31.8 4.3 1 8.9 2.4 13.5 4.1h-.1c-4.2 2-6.5 7.1-7 12zm28.3-1.8c19.5 11 37.4 25.7 44.9 37-5.7 3.3-21.7 10.4-38-1.7-10.3-7.6-9.8-26.2-6.9-35.3zm142.1 45.8c-1.2 15.5 13.9 32.5 13.9 32.5s-5.6-15-2.7-25.3c.9-3.2 2-6 3-8.5 19.3 17.3 48 1.5 54.8-6.1 9.6-10.6 12.3-23.8 12.8-34.1 1.8 3.8 3.4 9.1 4 16.6 0 0 6.4-9.1 5.2-19.1-.6-5-2.9-10-7-11.8h-.1c4.6-1.8 9.2-3.2 13.5-4.1-42.3-10.2-73.4 20.6-83.1 31.8-16.7 19.2-35.5 8.8-35.5 8.8-.2 10.9 10.4 18.9 21.2 19.3zm62.7-45.8c3 9.1 3.4 27.7-7 35.4-16.3 12.1-32.2 5-37.9 1.6 7.5-11.4 25.4-26 44.9-37zM160 418.5h-29.4c-5.5 0-8.2 1.6-9.5 2.9-1.9 2-2.2 4.7-.9 8.1 3.5 9.1 11.4 16.5 13.7 18.6 3.1 2.7 7.5 4.3 11.8 4.3 4.4 0 8.3-1.7 11-4.6 7.5-8.2 11.9-17.1 13-19.8.6-1.5 1.3-4.5-.9-6.8-1.8-1.8-4.7-2.7-8.8-2.7zm189.2-101.2c-2.4 17.9-13 33.8-24.6 43.7-3.1-22.7-3.7-55.5-3.7-62.4 0-14.7 9.5-24.5 12.2-26.1 2.5-1.5 5.4-3 8.3-4.6 18-9.6 40.4-21.6 40.4-43.7 0-16.2-9.3-23.2-15.4-27.8-.8-.6-1.5-1.1-2.2-1.7-2.1-1.7-3.7-3-4.3-4.4-4.4-9.8-3.6-34.2-1.7-37.6.6-.6 16.7-20.9 11.8-39.2-2-7.4-6.9-13.3-14.1-17-5.3-2.7-11.9-4.2-19.5-4.5-.1-2-.5-3.9-.9-5.9-.6-2.6-1.1-5.3-.9-8.1.4-4.7.8-9 2.2-11.3 8.4-13.3 28.8-17.6 29-17.6l12.3-2.4-8.1-9.5c-.1-.2-17.3-17.5-46.3-17.5-7.9 0-16 1.3-24.1 3.9-24.2 7.8-42.9 30.5-49.4 39.3-3.1-1-6.3-1.9-9.6-2.7-4.2-15.8 9-38.5 9-38.5s-13.6-3-33.7 15.2c-2.6-6.5-8.1-20.5-1.8-37.2C184.6 10.1 177.2 26 175 40.4c-7.6-5.4-6.7-23.1-7.2-27.6-7.5.9-29.2 21.9-28.2 48.3-2 .5-3.9 1.1-5.9 1.7-6.5-8.8-25.1-31.5-49.4-39.3-7.9-2.2-16-3.5-23.9-3.5-29 0-46.1 17.3-46.3 17.5L6 46.9l12.3 2.4c.2 0 20.6 4.3 29 17.6 1.4 2.2 1.8 6.6 2.2 11.3.2 2.8-.4 5.5-.9 8.1-.4 1.9-.8 3.9-.9 5.9-7.7.3-14.2 1.8-19.5 4.5-7.2 3.7-12.1 9.6-14.1 17-5 18.2 11.2 38.5 11.8 39.2 1.9 3.4 2.7 27.8-1.7 37.6-.6 1.4-2.2 2.7-4.3 4.4-.7.5-1.4 1.1-2.2 1.7-6.1 4.6-15.4 11.7-15.4 27.8 0 22.1 22.4 34.1 40.4 43.7 3 1.6 5.8 3.1 8.3 4.6 2.7 1.6 12.2 11.4 12.2 26.1 0 6.9-.6 39.7-3.7 62.4-11.6-9.9-22.2-25.9-24.6-43.8 0 0-29.2 22.6-20.6 70.8 5.2 29.5 23.2 46.1 47 54.7 8.8 19.1 29.4 45.7 67.3 49.6C143 504.3 163 512 192.2 512h.2c29.1 0 49.1-7.7 63.6-19.5 37.9-3.9 58.5-30.5 67.3-49.6 23.8-8.7 41.7-25.2 47-54.7 8.2-48.4-21.1-70.9-21.1-70.9zM305.7 37.7c5.6-1.8 11.6-2.7 17.7-2.7 11 0 19.9 3 24.7 5-3.1 1.4-6.4 3.2-9.7 5.3-2.4-.4-5.6-.8-9.2-.8-10.5 0-20.5 3.1-28.7 8.9-12.3 8.7-18 16.9-20.7 22.4-2.2-1.3-4.5-2.5-7.1-3.7-1.6-.8-3.1-1.5-4.7-2.2 6.1-9.1 19.9-26.5 37.7-32.2zm21 18.2c-.8 1-1.6 2.1-2.3 3.2-3.3 5.2-3.9 11.6-4.4 17.8-.5 6.4-1.1 12.5-4.4 17-4.2.8-8.1 1.7-11.5 2.7-2.3-3.1-5.6-7-10.5-11.2 1.4-4.8 5.5-16.1 13.5-22.5 5.6-4.3 12.2-6.7 19.6-7zM45.6 45.3c-3.3-2.2-6.6-4-9.7-5.3 4.8-2 13.7-5 24.7-5 6.1 0 12 .9 17.7 2.7 17.8 5.8 31.6 23.2 37.7 32.1-1.6.7-3.2 1.4-4.8 2.2-2.5 1.2-4.9 2.5-7.1 3.7-2.6-5.4-8.3-13.7-20.7-22.4-8.3-5.8-18.2-8.9-28.8-8.9-3.4.1-6.6.5-9 .9zm44.7 40.1c-4.9 4.2-8.3 8-10.5 11.2-3.4-.9-7.3-1.9-11.5-2.7C65 89.5 64.5 83.4 64 77c-.5-6.2-1.1-12.6-4.4-17.8-.7-1.1-1.5-2.2-2.3-3.2 7.4.3 14 2.6 19.5 7 8 6.3 12.1 17.6 13.5 22.4zM58.1 259.9c-2.7-1.6-5.6-3.1-8.4-4.6-14.9-8-30.2-16.3-30.2-30.5 0-11.1 4.3-14.6 8.9-18.2l.5-.4c.7-.6 1.4-1.2 2.2-1.8-.9 7.2-1.9 13.3-2.7 14.9 0 0 12.1-15 15.7-44.3 1.4-11.5-1.1-34.3-5.1-43 .2 4.9 0 9.8-.3 14.4-.4-.8-.8-1.6-1.3-2.2-3.2-4-11.8-17.5-9.4-26.6.9-3.5 3.1-6 6.7-7.8 3.8-1.9 8.8-2.9 15.1-2.9 12.3 0 25.9 3.7 32.9 6 25.1 8 55.4 30.9 64.1 37.7.2.2.4.3.4.3l5.6 3.9-3.5-5.8c-.2-.3-19.1-31.4-53.2-46.5 2-2.9 7.4-8.1 21.6-15.1 21.4-10.5 46.5-15.8 74.3-15.8 27.9 0 52.9 5.3 74.3 15.8 14.2 6.9 19.6 12.2 21.6 15.1-34 15.1-52.9 46.2-53.1 46.5l-3.5 5.8 5.6-3.9s.2-.1.4-.3c8.7-6.8 39-29.8 64.1-37.7 7-2.2 20.6-6 32.9-6 6.3 0 11.3 1 15.1 2.9 3.5 1.8 5.7 4.4 6.7 7.8 2.5 9.1-6.1 22.6-9.4 26.6-.5.6-.9 1.3-1.3 2.2-.3-4.6-.5-9.5-.3-14.4-4 8.8-6.5 31.5-5.1 43 3.6 29.3 15.7 44.3 15.7 44.3-.8-1.6-1.8-7.7-2.7-14.9.7.6 1.5 1.2 2.2 1.8l.5.4c4.6 3.7 8.9 7.1 8.9 18.2 0 14.2-15.4 22.5-30.2 30.5-2.9 1.5-5.7 3.1-8.4 4.6-8.7 5-18 16.7-19.1 34.2-.9 14.6.9 49.9 3.4 75.9-12.4 4.8-26.7 6.4-39.7 6.8-2-4.1-3.9-8.5-5.5-13.1-.7-2-19.6-51.1-26.4-62.2 5.5 39 17.5 73.7 23.5 89.6-3.5-.5-7.3-.7-11.7-.7h-117c-4.4 0-8.3.3-11.7.7 6-15.9 18.1-50.6 23.5-89.6-6.8 11.2-25.7 60.3-26.4 62.2-1.6 4.6-3.5 9-5.5 13.1-13-.4-27.2-2-39.7-6.8 2.5-26 4.3-61.2 3.4-75.9-.9-17.4-10.3-29.2-19-34.2zM34.8 404.6c-12.1-20-8.7-54.1-3.7-59.1 10.9 34.4 47.2 44.3 74.4 45.4-2.7 4.2-5.2 7.6-7 10l-1.4 1.4c-7.2 7.8-8.6 18.5-4.1 31.8-22.7-.1-46.3-9.8-58.2-29.5zm45.7 43.5c6 1.1 12.2 1.9 18.6 2.4 3.5 8 7.4 15.9 12.3 23.1-14.4-5.9-24.4-16-30.9-25.5zM192 498.2c-60.6-.1-78.3-45.8-84.9-64.7-3.7-10.5-3.4-18.2.9-23.1 2.9-3.3 9.5-7.2 24.6-7.2h118.8c15.1 0 21.8 3.9 24.6 7.2 4.2 4.8 4.5 12.6.9 23.1-6.6 18.8-24.3 64.6-84.9 64.7zm80.6-24.6c4.9-7.2 8.8-15.1 12.3-23.1 6.4-.5 12.6-1.3 18.6-2.4-6.5 9.5-16.5 19.6-30.9 25.5zm76.6-69c-12 19.7-35.6 29.3-58.1 29.7 4.5-13.3 3.1-24.1-4.1-31.8-.4-.5-.9-1-1.4-1.5-1.8-2.4-4.3-5.8-7-10 27.2-1.2 63.5-11 74.4-45.4 5 5 8.4 39.1-3.8 59zM191.9 187.7h.2c12.7-.1 27.2-17.8 27.2-17.8-9.9 6-18.8 8.1-27.3 8.3-8.5-.2-17.4-2.3-27.3-8.3 0 0 14.5 17.6 27.2 17.8zm61.7 230.7h-29.4c-4.2 0-7.2.9-8.9 2.7-2.2 2.3-1.5 5.2-.9 6.7 1 2.6 5.5 11.3 13 19.3 2.7 2.9 6.6 4.5 11 4.5s8.7-1.6 11.8-4.2c2.3-2 10.2-9.2 13.7-18.1 1.3-3.3 1-6-.9-7.9-1.3-1.3-4-2.9-9.4-3z"]
            },
            faGuilded: {
                prefix: "fab",
                iconName: "guilded",
                icon: [448, 512, [], "e07e", "M443.427,64H4.571c0,103.26,22.192,180.06,43.418,222.358C112.046,414.135,224,448,225.256,448a312.824,312.824,0,0,0,140.55-103.477c25.907-33.923,53.1-87.19,65.916-145.761H171.833c4.14,36.429,22.177,67.946,45.1,86.944h88.589c-17.012,28.213-48.186,54.4-80.456,69.482-31.232-13.259-69.09-46.544-96.548-98.362-26.726-53.833-27.092-105.883-27.092-105.883H437.573A625.91,625.91,0,0,0,443.427,64Z"]
            },
            faGulp: {
                prefix: "fab",
                iconName: "gulp",
                icon: [256, 512, [], "f3ae", "M209.8 391.1l-14.1 24.6-4.6 80.2c0 8.9-28.3 16.1-63.1 16.1s-63.1-7.2-63.1-16.1l-5.8-79.4-14.9-25.4c41.2 17.3 126 16.7 165.6 0zm-196-253.3l13.6 125.5c5.9-20 20.8-47 40-55.2 6.3-2.7 12.7-2.7 18.7.9 5.2 3 9.6 9.3 10.1 11.8 1.2 6.5-2 9.1-4.5 9.1-3 0-5.3-4.6-6.8-7.3-4.1-7.3-10.3-7.6-16.9-2.8-6.9 5-12.9 13.4-17.1 20.7-5.1 8.8-9.4 18.5-12 28.2-1.5 5.6-2.9 14.6-.6 19.9 1 2.2 2.5 3.6 4.9 3.6 5 0 12.3-6.6 15.8-10.1 4.5-4.5 10.3-11.5 12.5-16l5.2-15.5c2.6-6.8 9.9-5.6 9.9 0 0 10.2-3.7 13.6-10 34.7-5.8 19.5-7.6 25.8-7.6 25.8-.7 2.8-3.4 7.5-6.3 7.5-1.2 0-2.1-.4-2.6-1.2-1-1.4-.9-5.3-.8-6.3.2-3.2 6.3-22.2 7.3-25.2-2 2.2-4.1 4.4-6.4 6.6-5.4 5.1-14.1 11.8-21.5 11.8-3.4 0-5.6-.9-7.7-2.4l7.6 79.6c2 5 39.2 17.1 88.2 17.1 49.1 0 86.3-12.2 88.2-17.1l10.9-94.6c-5.7 5.2-12.3 11.6-19.6 14.8-5.4 2.3-17.4 3.8-17.4-5.7 0-5.2 9.1-14.8 14.4-21.5 1.4-1.7 4.7-5.9 4.7-8.1 0-2.9-6-2.2-11.7 2.5-3.2 2.7-6.2 6.3-8.7 9.7-4.3 6-6.6 11.2-8.5 15.5-6.2 14.2-4.1 8.6-9.1 22-5 13.3-4.2 11.8-5.2 14-.9 1.9-2.2 3.5-4 4.5-1.9 1-4.5.9-6.1-.3-.9-.6-1.3-1.9-1.3-3.7 0-.9.1-1.8.3-2.7 1.5-6.1 7.8-18.1 15-34.3 1.6-3.7 1-2.6.8-2.3-6.2 6-10.9 8.9-14.4 10.5-5.8 2.6-13 2.6-14.5-4.1-.1-.4-.1-.8-.2-1.2-11.8 9.2-24.3 11.7-20-8.1-4.6 8.2-12.6 14.9-22.4 14.9-4.1 0-7.1-1.4-8.6-5.1-2.3-5.5 1.3-14.9 4.6-23.8 1.7-4.5 4-9.9 7.1-16.2 1.6-3.4 4.2-5.4 7.6-4.5.6.2 1.1.4 1.6.7 2.6 1.8 1.6 4.5.3 7.2-3.8 7.5-7.1 13-9.3 20.8-.9 3.3-2 9 1.5 9 2.4 0 4.7-.8 6.9-2.4 4.6-3.4 8.3-8.5 11.1-13.5 2-3.6 4.4-8.3 5.6-12.3.5-1.7 1.1-3.3 1.8-4.8 1.1-2.5 2.6-5.1 5.2-5.1 1.3 0 2.4.5 3.2 1.5 1.7 2.2 1.3 4.5.4 6.9-2 5.6-4.7 10.6-6.9 16.7-1.3 3.5-2.7 8-2.7 11.7 0 3.4 3.7 2.6 6.8 1.2 2.4-1.1 4.8-2.8 6.8-4.5 1.2-4.9.9-3.8 26.4-68.2 1.3-3.3 3.7-4.7 6.1-4.7 1.2 0 2.2.4 3.2 1.1 1.7 1.3 1.7 4.1 1 6.2-.7 1.9-.6 1.3-4.5 10.5-5.2 12.1-8.6 20.8-13.2 31.9-1.9 4.6-7.7 18.9-8.7 22.3-.6 2.2-1.3 5.8 1 5.8 5.4 0 19.3-13.1 23.1-17 .2-.3.5-.4.9-.6.6-1.9 1.2-3.7 1.7-5.5 1.4-3.8 2.7-8.2 5.3-11.3.8-1 1.7-1.6 2.7-1.6 2.8 0 4.2 1.2 4.2 4 0 1.1-.7 5.1-1.1 6.2 1.4-1.5 2.9-3 4.5-4.5 15-13.9 25.7-6.8 25.7.2 0 7.4-8.9 17.7-13.8 23.4-1.6 1.9-4.9 5.4-5 6.4 0 1.3.9 1.8 2.2 1.8 2 0 6.4-3.5 8-4.7 5-3.9 11.8-9.9 16.6-14.1l14.8-136.8c-30.5 17.1-197.6 17.2-228.3.2zm229.7-8.5c0 21-231.2 21-231.2 0 0-8.8 51.8-15.9 115.6-15.9 9 0 17.8.1 26.3.4l12.6-48.7L228.1.6c1.4-1.4 5.8-.2 9.9 3.5s6.6 7.9 5.3 9.3l-.1.1L185.9 74l-10 40.7c39.9 2.6 67.6 8.1 67.6 14.6zm-69.4 4.6c0-.8-.9-1.5-2.5-2.1l-.2.8c0 1.3-5 2.4-11.1 2.4s-11.1-1.1-11.1-2.4c0-.1 0-.2.1-.3l.2-.7c-1.8.6-3 1.4-3 2.3 0 2.1 6.2 3.7 13.7 3.7 7.7.1 13.9-1.6 13.9-3.7z"]
            },
            faHackerNews: {
                prefix: "fab",
                iconName: "hacker-news",
                icon: [448, 512, [], "f1d4", "M0 32v448h448V32H0zm21.2 197.2H21c.1-.1.2-.3.3-.4 0 .1 0 .3-.1.4zm218 53.9V384h-31.4V281.3L128 128h37.3c52.5 98.3 49.2 101.2 59.3 125.6 12.3-27 5.8-24.4 60.6-125.6H320l-80.8 155.1z"]
            },
            faHackerNewsSquare: {
                prefix: "fab",
                iconName: "hacker-news-square",
                icon: [448, 512, [], "f3af", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM21.2 229.2H21c.1-.1.2-.3.3-.4 0 .1 0 .3-.1.4zm218 53.9V384h-31.4V281.3L128 128h37.3c52.5 98.3 49.2 101.2 59.3 125.6 12.3-27 5.8-24.4 60.6-125.6H320l-80.8 155.1z"]
            },
            faHackerrank: {
                prefix: "fab",
                iconName: "hackerrank",
                icon: [512, 512, [], "f5f7", "M477.5 128C463 103.05 285.13 0 256.16 0S49.25 102.79 34.84 128s-14.49 230.8 0 256 192.38 128 221.32 128S463 409.08 477.49 384s14.51-231 .01-256zM316.13 414.22c-4 0-40.91-35.77-38-38.69.87-.87 6.26-1.48 17.55-1.83 0-26.23.59-68.59.94-86.32 0-2-.44-3.43-.44-5.85h-79.93c0 7.1-.46 36.2 1.37 72.88.23 4.54-1.58 6-5.74 5.94-10.13 0-20.27-.11-30.41-.08-4.1 0-5.87-1.53-5.74-6.11.92-33.44 3-84-.15-212.67v-3.17c-9.67-.35-16.38-1-17.26-1.84-2.92-2.92 34.54-38.69 38.49-38.69s41.17 35.78 38.27 38.69c-.87.87-7.9 1.49-16.77 1.84v3.16c-2.42 25.75-2 79.59-2.63 105.39h80.26c0-4.55.39-34.74-1.2-83.64-.1-3.39.95-5.17 4.21-5.2 11.07-.08 22.15-.13 33.23-.06 3.46 0 4.57 1.72 4.5 5.38C333 354.64 336 341.29 336 373.69c8.87.35 16.82 1 17.69 1.84 2.88 2.91-33.62 38.69-37.58 38.69z"]
            },
            faHips: {
                prefix: "fab",
                iconName: "hips",
                icon: [640, 512, [], "f452", "M251.6 157.6c0-1.9-.9-2.8-2.8-2.8h-40.9c-1.6 0-2.7 1.4-2.7 2.8v201.8c0 1.4 1.1 2.8 2.7 2.8h40.9c1.9 0 2.8-.9 2.8-2.8zM156.5 168c-16.1-11.8-36.3-17.9-60.3-18-18.1-.1-34.6 3.7-49.8 11.4V80.2c0-1.8-.9-2.7-2.8-2.7H2.7c-1.8 0-2.7.9-2.7 2.7v279.2c0 1.9.9 2.8 2.7 2.8h41c1.9 0 2.8-.9 2.8-2.8V223.3c0-.8-2.8-27 45.8-27 48.5 0 45.8 26.1 45.8 27v122.6c0 9 7.3 16.3 16.4 16.3h27.3c1.8 0 2.7-.9 2.7-2.8V223.3c0-23.4-9.3-41.8-28-55.3zm478.4 110.1c-6.8-15.7-18.4-27-34.9-34.1l-57.6-25.3c-8.6-3.6-9.2-11.2-2.6-16.1 7.4-5.5 44.3-13.9 84 6.8 1.7 1 4-.3 4-2.4v-44.7c0-1.3-.6-2.1-1.9-2.6-17.7-6.6-36.1-9.9-55.1-9.9-26.5 0-45.3 5.8-58.5 15.4-.5.4-28.4 20-22.7 53.7 3.4 19.6 15.8 34.2 37.2 43.6l53.6 23.5c11.6 5.1 15.2 13.3 12.2 21.2-3.7 9.1-13.2 13.6-36.5 13.6-24.3 0-44.7-8.9-58.4-19.1-2.1-1.4-4.4.2-4.4 2.3v34.4c0 10.4 4.9 17.3 14.6 20.7 15.6 5.5 31.6 8.2 48.2 8.2 12.7 0 25.8-1.2 36.3-4.3.7-.3 36-8.9 45.6-45.8 3.5-13.5 2.4-26.5-3.1-39.1zM376.2 149.8c-31.7 0-104.2 20.1-104.2 103.5v183.5c0 .8.6 2.7 2.7 2.7h40.9c1.9 0 2.8-.9 2.8-2.7V348c16.5 12.7 35.8 19.1 57.7 19.1 60.5 0 108.7-48.5 108.7-108.7.1-60.3-48.2-108.6-108.6-108.6zm0 170.9c-17.2 0-31.9-6.1-44-18.2-12.2-12.2-18.2-26.8-18.2-44 0-34.5 27.6-62.2 62.2-62.2 34.5 0 62.2 27.6 62.2 62.2.1 34.3-27.3 62.2-62.2 62.2zM228.3 72.5c-15.9 0-28.8 12.9-28.9 28.9 0 15.6 12.7 28.9 28.9 28.9s28.9-13.1 28.9-28.9c0-16.2-13-28.9-28.9-28.9z"]
            },
            faHireAHelper: {
                prefix: "fab",
                iconName: "hire-a-helper",
                icon: [512, 512, [], "f3b0", "M443.1 0H71.9C67.9 37.3 37.4 67.8 0 71.7v371.5c37.4 4.9 66 32.4 71.9 68.8h372.2c3-36.4 32.5-65.8 67.9-69.8V71.7c-36.4-5.9-65-35.3-68.9-71.7zm-37 404.9c-36.3 0-18.8-2-55.1-2-35.8 0-21 2-56.1 2-5.9 0-4.9-8.2 0-9.8 22.8-7.6 22.9-10.2 24.6-12.8 10.4-15.6 5.9-83 5.9-113 0-5.3-6.4-12.8-13.8-12.8H200.4c-7.4 0-13.8 7.5-13.8 12.8 0 30-4.5 97.4 5.9 113 1.7 2.5 1.8 5.2 24.6 12.8 4.9 1.6 6 9.8 0 9.8-35.1 0-20.3-2-56.1-2-36.3 0-18.8 2-55.1 2-7.9 0-5.8-10.8 0-10.8 10.2-3.4 13.5-3.5 21.7-13.8 7.7-12.9 7.9-44.4 7.9-127.8V151.3c0-22.2-12.2-28.3-28.6-32.4-8.8-2.2-4-11.8 1-11.8 36.5 0 20.6 2 57.1 2 32.7 0 16.5-2 49.2-2 3.3 0 8.5 8.3 1 10.8-4.9 1.6-27.6 3.7-27.6 39.3 0 45.6-.2 55.8 1 68.8 0 1.3 2.3 12.8 12.8 12.8h109.2c10.5 0 12.8-11.5 12.8-12.8 1.2-13 1-23.2 1-68.8 0-35.6-22.7-37.7-27.6-39.3-7.5-2.5-2.3-10.8 1-10.8 32.7 0 16.5 2 49.2 2 36.5 0 20.6-2 57.1-2 4.9 0 9.9 9.6 1 11.8-16.4 4.1-28.6 10.3-28.6 32.4v101.2c0 83.4.1 114.9 7.9 127.8 8.2 10.2 11.4 10.4 21.7 13.8 5.8 0 7.8 10.8 0 10.8z"]
            },
            faHive: {
                prefix: "fab",
                iconName: "hive",
                icon: [512, 512, [], "e07f", "M260.353,254.878,131.538,33.1a2.208,2.208,0,0,0-3.829.009L.3,254.887A2.234,2.234,0,0,0,.3,257.122L129.116,478.9a2.208,2.208,0,0,0,3.83-.009L260.358,257.113A2.239,2.239,0,0,0,260.353,254.878Zm39.078-25.713a2.19,2.19,0,0,0,1.9,1.111h66.509a2.226,2.226,0,0,0,1.9-3.341L259.115,33.111a2.187,2.187,0,0,0-1.9-1.111H190.707a2.226,2.226,0,0,0-1.9,3.341ZM511.7,254.886,384.9,33.112A2.2,2.2,0,0,0,382.99,32h-66.6a2.226,2.226,0,0,0-1.906,3.34L440.652,256,314.481,476.66a2.226,2.226,0,0,0,1.906,3.34h66.6a2.2,2.2,0,0,0,1.906-1.112L511.7,257.114A2.243,2.243,0,0,0,511.7,254.886ZM366.016,284.917H299.508a2.187,2.187,0,0,0-1.9,1.111l-108.8,190.631a2.226,2.226,0,0,0,1.9,3.341h66.509a2.187,2.187,0,0,0,1.9-1.111l108.8-190.631A2.226,2.226,0,0,0,366.016,284.917Z"]
            },
            faHooli: {
                prefix: "fab",
                iconName: "hooli",
                icon: [640, 512, [], "f427", "M144.5 352l38.3.8c-13.2-4.6-26-10.2-38.3-16.8zm57.7-5.3v5.3l-19.4.8c36.5 12.5 69.9 14.2 94.7 7.2-19.9.2-45.8-2.6-75.3-13.3zm408.9-115.2c15.9 0 28.9-12.9 28.9-28.9s-12.9-24.5-28.9-24.5c-15.9 0-28.9 8.6-28.9 24.5s12.9 28.9 28.9 28.9zm-29 120.5H640V241.5h-57.9zm-73.7 0h57.9V156.7L508.4 184zm-31-119.4c-18.2-18.2-50.4-17.1-50.4-17.1s-32.3-1.1-50.4 17.1c-18.2 18.2-16.8 33.9-16.8 52.6s-1.4 34.3 16.8 52.5 50.4 17.1 50.4 17.1 32.3 1.1 50.4-17.1c18.2-18.2 16.8-33.8 16.8-52.5-.1-18.8 1.3-34.5-16.8-52.6zm-39.8 71.9c0 3.6-1.8 12.5-10.7 12.5s-10.7-8.9-10.7-12.5v-40.4c0-8.7 7.3-10.9 10.7-10.9s10.7 2.1 10.7 10.9zm-106.2-71.9c-18.2-18.2-50.4-17.1-50.4-17.1s-32.2-1.1-50.4 17.1c-1.9 1.9-3.7 3.9-5.3 6-38.2-29.6-72.5-46.5-102.1-61.1v-20.7l-22.5 10.6c-54.4-22.1-89-18.2-97.3.1 0 0-24.9 32.8 61.8 110.8V352h57.9v-28.6c-6.5-4.2-13-8.7-19.4-13.6-14.8-11.2-27.4-21.6-38.4-31.4v-31c13.1 14.7 30.5 31.4 53.4 50.3l4.5 3.6v-29.8c0-6.9 1.7-18.2 10.8-18.2s10.6 6.9 10.6 15V317c18 12.2 37.3 22.1 57.7 29.6v-93.9c0-18.7-13.4-37.4-40.6-37.4-15.8-.1-30.5 8.2-38.5 21.9v-54.3c41.9 20.9 83.9 46.5 99.9 58.3-10.2 14.6-9.3 28.1-9.3 43.7 0 18.7-1.4 34.3 16.8 52.5s50.4 17.1 50.4 17.1 32.3 1.1 50.4-17.1c18.2-18.2 16.7-33.8 16.7-52.5 0-18.5 1.5-34.2-16.7-52.3zM65.2 184v63.3c-48.7-54.5-38.9-76-35.2-79.1 13.5-11.4 37.5-8 64.4 2.1zm226.5 120.5c0 3.6-1.8 12.5-10.7 12.5s-10.7-8.9-10.7-12.5v-40.4c0-8.7 7.3-10.9 10.7-10.9s10.7 2.1 10.7 10.9z"]
            },
            faHornbill: {
                prefix: "fab",
                iconName: "hornbill",
                icon: [512, 512, [], "f592", "M76.38 370.3a37.8 37.8 0 1 1-32.07-32.42c-78.28-111.35 52-190.53 52-190.53-5.86 43-8.24 91.16-8.24 91.16-67.31 41.49.93 64.06 39.81 72.87a140.38 140.38 0 0 0 131.66 91.94c1.92 0 3.77-.21 5.67-.28l.11 18.86c-99.22 1.39-158.7-29.14-188.94-51.6zm108-327.7A37.57 37.57 0 0 0 181 21.45a37.95 37.95 0 1 0-31.17 54.22c-22.55 29.91-53.83 89.57-52.42 190l21.84-.15c0-.9-.14-1.77-.14-2.68A140.42 140.42 0 0 1 207 132.71c8-37.71 30.7-114.3 73.8-44.29 0 0 48.14 2.38 91.18 8.24 0 0-77.84-128-187.59-54.06zm304.19 134.17a37.94 37.94 0 1 0-53.84-28.7C403 126.13 344.89 99 251.28 100.33l.14 22.5c2.7-.15 5.39-.41 8.14-.41a140.37 140.37 0 0 1 130.49 88.76c39.1 9 105.06 31.58 38.46 72.54 0 0-2.34 48.13-8.21 91.16 0 0 133.45-81.16 49-194.61a37.45 37.45 0 0 0 19.31-3.5zM374.06 436.24c21.43-32.46 46.42-89.69 45.14-179.66l-19.52.14c.08 2.06.3 4.07.3 6.15a140.34 140.34 0 0 1-91.39 131.45c-8.85 38.95-31.44 106.66-72.77 39.49 0 0-48.12-2.34-91.19-8.22 0 0 79.92 131.34 191.9 51a37.5 37.5 0 0 0 3.64 14 37.93 37.93 0 1 0 33.89-54.29z"]
            },
            faHotjar: {
                prefix: "fab",
                iconName: "hotjar",
                icon: [448, 512, [], "f3b1", "M414.9 161.5C340.2 29 121.1 0 121.1 0S222.2 110.4 93 197.7C11.3 252.8-21 324.4 14 402.6c26.8 59.9 83.5 84.3 144.6 93.4-29.2-55.1-6.6-122.4-4.1-129.6 57.1 86.4 165 0 110.8-93.9 71 15.4 81.6 138.6 27.1 215.5 80.5-25.3 134.1-88.9 148.8-145.6 15.5-59.3 3.7-127.9-26.3-180.9z"]
            },
            faHouzz: {
                prefix: "fab",
                iconName: "houzz",
                icon: [448, 512, [], "f27c", "M275.9 330.7H171.3V480H17V32h109.5v104.5l305.1 85.6V480H275.9z"]
            },
            faHtml5: {
                prefix: "fab",
                iconName: "html5",
                icon: [384, 512, [], "f13b", "M0 32l34.9 395.8L191.5 480l157.6-52.2L384 32H0zm308.2 127.9H124.4l4.1 49.4h175.6l-13.6 148.4-97.9 27v.3h-1.1l-98.7-27.3-6-75.8h47.7L138 320l53.5 14.5 53.7-14.5 6-62.2H84.3L71.5 112.2h241.1l-4.4 47.7z"]
            },
            faHubspot: {
                prefix: "fab",
                iconName: "hubspot",
                icon: [512, 512, [], "f3b2", "M267.4 211.6c-25.1 23.7-40.8 57.3-40.8 94.6 0 29.3 9.7 56.3 26 78L203.1 434c-4.4-1.6-9.1-2.5-14-2.5-10.8 0-20.9 4.2-28.5 11.8-7.6 7.6-11.8 17.8-11.8 28.6s4.2 20.9 11.8 28.5c7.6 7.6 17.8 11.6 28.5 11.6 10.8 0 20.9-3.9 28.6-11.6 7.6-7.6 11.8-17.8 11.8-28.5 0-4.2-.6-8.2-1.9-12.1l50-50.2c22 16.9 49.4 26.9 79.3 26.9 71.9 0 130-58.3 130-130.2 0-65.2-47.7-119.2-110.2-128.7V116c17.5-7.4 28.2-23.8 28.2-42.9 0-26.1-20.9-47.9-47-47.9S311.2 47 311.2 73.1c0 19.1 10.7 35.5 28.2 42.9v61.2c-15.2 2.1-29.6 6.7-42.7 13.6-27.6-20.9-117.5-85.7-168.9-124.8 1.2-4.4 2-9 2-13.8C129.8 23.4 106.3 0 77.4 0 48.6 0 25.2 23.4 25.2 52.2c0 28.9 23.4 52.3 52.2 52.3 9.8 0 18.9-2.9 26.8-7.6l163.2 114.7zm89.5 163.6c-38.1 0-69-30.9-69-69s30.9-69 69-69 69 30.9 69 69-30.9 69-69 69z"]
            },
            faIdeal: {
                prefix: "fab",
                iconName: "ideal",
                icon: [576, 512, [], "e013", "M125.61,165.48a49.07,49.07,0,1,0,49.06,49.06A49.08,49.08,0,0,0,125.61,165.48ZM86.15,425.84h78.94V285.32H86.15Zm151.46-211.6c0-20-10-22.53-18.74-22.53H204.82V237.5h14.05C228.62,237.5,237.61,234.69,237.61,214.24Zm201.69,46V168.93h22.75V237.5h33.69C486.5,113.08,388.61,86.19,299.67,86.19H204.84V169h14c25.6,0,41.5,17.35,41.5,45.26,0,28.81-15.52,46-41.5,46h-14V425.88h94.83c144.61,0,194.94-67.16,196.72-165.64Zm-109.75,0H273.3V169h54.43v22.73H296v10.58h30V225H296V237.5h33.51Zm74.66,0-5.16-17.67H369.31l-5.18,17.67H340.47L368,168.92h32.35l27.53,91.34ZM299.65,32H32V480H299.65c161.85,0,251-79.73,251-224.52C550.62,172,518,32,299.65,32Zm0,426.92H53.07V53.07H299.65c142.1,0,229.9,64.61,229.9,202.41C529.55,389.57,448.55,458.92,299.65,458.92Zm83.86-264.85L376,219.88H392.4l-7.52-25.81Z"]
            },
            faImdb: {
                prefix: "fab",
                iconName: "imdb",
                icon: [448, 512, [], "f2d8", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM21.3 229.2H21c.1-.1.2-.3.3-.4zM97 319.8H64V192h33zm113.2 0h-28.7v-86.4l-11.6 86.4h-20.6l-12.2-84.5v84.5h-29V192h42.8c3.3 19.8 6 39.9 8.7 59.9l7.6-59.9h43zm11.4 0V192h24.6c17.6 0 44.7-1.6 49 20.9 1.7 7.6 1.4 16.3 1.4 24.4 0 88.5 11.1 82.6-75 82.5zm160.9-29.2c0 15.7-2.4 30.9-22.2 30.9-9 0-15.2-3-20.9-9.8l-1.9 8.1h-29.8V192h31.7v41.7c6-6.5 12-9.2 20.9-9.2 21.4 0 22.2 12.8 22.2 30.1zM265 229.9c0-9.7 1.6-16-10.3-16v83.7c12.2.3 10.3-8.7 10.3-18.4zm85.5 26.1c0-5.4 1.1-12.7-6.2-12.7-6 0-4.9 8.9-4.9 12.7 0 .6-1.1 39.6 1.1 44.7.8 1.6 2.2 2.4 3.8 2.4 7.8 0 6.2-9 6.2-14.4z"]
            },
            faInnosoft: {
                prefix: "fab",
                iconName: "innosoft",
                icon: [448, 512, [], "e080", "M422.559,159.71a27.379,27.379,0,0,0-13.866-23.337,26.42,26.42,0,0,0-26.211.133L73.943,314.647V176.261a11.955,11.955,0,0,1,6.047-10.34L218.066,86.208a12.153,12.153,0,0,1,11.922.025l32.656,18.853L112.581,191.723v56L359.642,105.086,241.129,36.679c-10.992-6.129-22.3-6.255-33.8-.27l-164.6,95.026c-10.634,6.12-16.771,16.39-17.29,29.124l0,191.5c.17,10.135,5.08,18.672,13.474,23.428a27.037,27.037,0,0,0,26.736-.045L374.057,197.376V335.657a11.976,11.976,0,0,1-5.92,10.368L230.025,425.77a12.175,12.175,0,0,1-11.937.062l-32.723-18.9,150.051-86.627v-56L88.367,406.932l118.794,68.583a33.88,33.88,0,0,0,34.25-.327l164.527-94.995c10.746-6.631,16.649-17.118,16.624-29.528Z"]
            },
            faInstagram: {
                prefix: "fab",
                iconName: "instagram",
                icon: [448, 512, [], "f16d", "M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"]
            },
            faInstagramSquare: {
                prefix: "fab",
                iconName: "instagram-square",
                icon: [448, 512, [], "e055", "M224,202.66A53.34,53.34,0,1,0,277.36,256,53.38,53.38,0,0,0,224,202.66Zm124.71-41a54,54,0,0,0-30.41-30.41c-21-8.29-71-6.43-94.3-6.43s-73.25-1.93-94.31,6.43a54,54,0,0,0-30.41,30.41c-8.28,21-6.43,71.05-6.43,94.33S91,329.26,99.32,350.33a54,54,0,0,0,30.41,30.41c21,8.29,71,6.43,94.31,6.43s73.24,1.93,94.3-6.43a54,54,0,0,0,30.41-30.41c8.35-21,6.43-71.05,6.43-94.33S357.1,182.74,348.75,161.67ZM224,338a82,82,0,1,1,82-82A81.9,81.9,0,0,1,224,338Zm85.38-148.3a19.14,19.14,0,1,1,19.13-19.14A19.1,19.1,0,0,1,309.42,189.74ZM400,32H48A48,48,0,0,0,0,80V432a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V80A48,48,0,0,0,400,32ZM382.88,322c-1.29,25.63-7.14,48.34-25.85,67s-41.4,24.63-67,25.85c-26.41,1.49-105.59,1.49-132,0-25.63-1.29-48.26-7.15-67-25.85s-24.63-41.42-25.85-67c-1.49-26.42-1.49-105.61,0-132,1.29-25.63,7.07-48.34,25.85-67s41.47-24.56,67-25.78c26.41-1.49,105.59-1.49,132,0,25.63,1.29,48.33,7.15,67,25.85s24.63,41.42,25.85,67.05C384.37,216.44,384.37,295.56,382.88,322Z"]
            },
            faInstalod: {
                prefix: "fab",
                iconName: "instalod",
                icon: [512, 512, [], "e081", "M153.384,480H387.113L502.554,275.765,204.229,333.211ZM504.726,240.078,387.113,32H155.669L360.23,267.9ZM124.386,48.809,7.274,256,123.236,461.154,225.627,165.561Z"]
            },
            faIntercom: {
                prefix: "fab",
                iconName: "intercom",
                icon: [448, 512, [], "f7af", "M392 32H56C25.1 32 0 57.1 0 88v336c0 30.9 25.1 56 56 56h336c30.9 0 56-25.1 56-56V88c0-30.9-25.1-56-56-56zm-108.3 82.1c0-19.8 29.9-19.8 29.9 0v199.5c0 19.8-29.9 19.8-29.9 0V114.1zm-74.6-7.5c0-19.8 29.9-19.8 29.9 0v216.5c0 19.8-29.9 19.8-29.9 0V106.6zm-74.7 7.5c0-19.8 29.9-19.8 29.9 0v199.5c0 19.8-29.9 19.8-29.9 0V114.1zM59.7 144c0-19.8 29.9-19.8 29.9 0v134.3c0 19.8-29.9 19.8-29.9 0V144zm323.4 227.8c-72.8 63-241.7 65.4-318.1 0-15-12.8 4.4-35.5 19.4-22.7 65.9 55.3 216.1 53.9 279.3 0 14.9-12.9 34.3 9.8 19.4 22.7zm5.2-93.5c0 19.8-29.9 19.8-29.9 0V144c0-19.8 29.9-19.8 29.9 0v134.3z"]
            },
            faInternetExplorer: {
                prefix: "fab",
                iconName: "internet-explorer",
                icon: [512, 512, [], "f26b", "M483.049 159.706c10.855-24.575 21.424-60.438 21.424-87.871 0-72.722-79.641-98.371-209.673-38.577-107.632-7.181-211.221 73.67-237.098 186.457 30.852-34.862 78.271-82.298 121.977-101.158C125.404 166.85 79.128 228.002 43.992 291.725 23.246 329.651 0 390.94 0 436.747c0 98.575 92.854 86.5 180.251 42.006 31.423 15.43 66.559 15.573 101.695 15.573 97.124 0 184.249-54.294 216.814-146.022H377.927c-52.509 88.593-196.819 52.996-196.819-47.436H509.9c6.407-43.581-1.655-95.715-26.851-141.162zM64.559 346.877c17.711 51.15 53.703 95.871 100.266 123.304-88.741 48.94-173.267 29.096-100.266-123.304zm115.977-108.873c2-55.151 50.276-94.871 103.98-94.871 53.418 0 101.981 39.72 103.981 94.871H180.536zm184.536-187.6c21.425-10.287 48.563-22.003 72.558-22.003 31.422 0 54.274 21.717 54.274 53.722 0 20.003-7.427 49.007-14.569 67.867-26.28-42.292-65.986-81.584-112.263-99.586z"]
            },
            faInvision: {
                prefix: "fab",
                iconName: "invision",
                icon: [448, 512, [], "f7b0", "M407.4 32H40.6C18.2 32 0 50.2 0 72.6v366.8C0 461.8 18.2 480 40.6 480h366.8c22.4 0 40.6-18.2 40.6-40.6V72.6c0-22.4-18.2-40.6-40.6-40.6zM176.1 145.6c.4 23.4-22.4 27.3-26.6 27.4-14.9 0-27.1-12-27.1-27 .1-35.2 53.1-35.5 53.7-.4zM332.8 377c-65.6 0-34.1-74-25-106.6 14.1-46.4-45.2-59-59.9.7l-25.8 103.3H177l8.1-32.5c-31.5 51.8-94.6 44.4-94.6-4.3.1-14.3.9-14 23-104.1H81.7l9.7-35.6h76.4c-33.6 133.7-32.6 126.9-32.9 138.2 0 20.9 40.9 13.5 57.4-23.2l19.8-79.4h-32.3l9.7-35.6h68.8l-8.9 40.5c40.5-75.5 127.9-47.8 101.8 38-14.2 51.1-14.6 50.7-14.9 58.8 0 15.5 17.5 22.6 31.8-16.9L386 325c-10.5 36.7-29.4 52-53.2 52z"]
            },
            faIoxhost: {
                prefix: "fab",
                iconName: "ioxhost",
                icon: [640, 512, [], "f208", "M616 160h-67.3C511.2 70.7 422.9 8 320 8 183 8 72 119 72 256c0 16.4 1.6 32.5 4.7 48H24c-13.3 0-24 10.8-24 24 0 13.3 10.7 24 24 24h67.3c37.5 89.3 125.8 152 228.7 152 137 0 248-111 248-248 0-16.4-1.6-32.5-4.7-48H616c13.3 0 24-10.8 24-24 0-13.3-10.7-24-24-24zm-96 96c0 110.5-89.5 200-200 200-75.7 0-141.6-42-175.5-104H424c13.3 0 24-10.8 24-24 0-13.3-10.7-24-24-24H125.8c-3.8-15.4-5.8-31.4-5.8-48 0-110.5 89.5-200 200-200 75.7 0 141.6 42 175.5 104H216c-13.3 0-24 10.8-24 24 0 13.3 10.7 24 24 24h298.2c3.8 15.4 5.8 31.4 5.8 48zm-304-24h208c13.3 0 24 10.7 24 24 0 13.2-10.7 24-24 24H216c-13.3 0-24-10.7-24-24 0-13.2 10.7-24 24-24z"]
            },
            faItchIo: {
                prefix: "fab",
                iconName: "itch-io",
                icon: [512, 512, [], "f83a", "M71.92 34.77C50.2 47.67 7.4 96.84 7 109.73v21.34c0 27.06 25.29 50.84 48.25 50.84 27.57 0 50.54-22.85 50.54-50 0 27.12 22.18 50 49.76 50s49-22.85 49-50c0 27.12 23.59 50 51.16 50h.5c27.57 0 51.16-22.85 51.16-50 0 27.12 21.47 50 49 50s49.76-22.85 49.76-50c0 27.12 23 50 50.54 50 23 0 48.25-23.78 48.25-50.84v-21.34c-.4-12.9-43.2-62.07-64.92-75C372.56 32.4 325.76 32 256 32S91.14 33.1 71.92 34.77zm132.32 134.39c-22 38.4-77.9 38.71-99.85.25-13.17 23.14-43.17 32.07-56 27.66-3.87 40.15-13.67 237.13 17.73 269.15 80 18.67 302.08 18.12 379.76 0 31.65-32.27 21.32-232 17.75-269.15-12.92 4.44-42.88-4.6-56-27.66-22 38.52-77.85 38.1-99.85-.24-7.1 12.49-23.05 28.94-51.76 28.94a57.54 57.54 0 0 1-51.75-28.94zm-41.58 53.77c16.47 0 31.09 0 49.22 19.78a436.91 436.91 0 0 1 88.18 0C318.22 223 332.85 223 349.31 223c52.33 0 65.22 77.53 83.87 144.45 17.26 62.15-5.52 63.67-33.95 63.73-42.15-1.57-65.49-32.18-65.49-62.79-39.25 6.43-101.93 8.79-155.55 0 0 30.61-23.34 61.22-65.49 62.79-28.42-.06-51.2-1.58-33.94-63.73 18.67-67 31.56-144.45 83.88-144.45zM256 270.79s-44.38 40.77-52.35 55.21l29-1.17v25.32c0 1.55 21.34.16 23.33.16 11.65.54 23.31 1 23.31-.16v-25.28l29 1.17c-8-14.48-52.35-55.24-52.35-55.24z"]
            },
            faItunes: {
                prefix: "fab",
                iconName: "itunes",
                icon: [448, 512, [], "f3b4", "M223.6 80.3C129 80.3 52.5 157 52.5 251.5S129 422.8 223.6 422.8s171.2-76.7 171.2-171.2c0-94.6-76.7-171.3-171.2-171.3zm79.4 240c-3.2 13.6-13.5 21.2-27.3 23.8-12.1 2.2-22.2 2.8-31.9-5-11.8-10-12-26.4-1.4-36.8 8.4-8 20.3-9.6 38-12.8 3-.5 5.6-1.2 7.7-3.7 3.2-3.6 2.2-2 2.2-80.8 0-5.6-2.7-7.1-8.4-6.1-4 .7-91.9 17.1-91.9 17.1-5 1.1-6.7 2.6-6.7 8.3 0 116.1.5 110.8-1.2 118.5-2.1 9-7.6 15.8-14.9 19.6-8.3 4.6-23.4 6.6-31.4 5.2-21.4-4-28.9-28.7-14.4-42.9 8.4-8 20.3-9.6 38-12.8 3-.5 5.6-1.2 7.7-3.7 5-5.7.9-127 2.6-133.7.4-2.6 1.5-4.8 3.5-6.4 2.1-1.7 5.8-2.7 6.7-2.7 101-19 113.3-21.4 115.1-21.4 5.7-.4 9 3 9 8.7-.1 170.6.4 161.4-1 167.6zM345.2 32H102.8C45.9 32 0 77.9 0 134.8v242.4C0 434.1 45.9 480 102.8 480h242.4c57 0 102.8-45.9 102.8-102.8V134.8C448 77.9 402.1 32 345.2 32zM223.6 444c-106.3 0-192.5-86.2-192.5-192.5S117.3 59 223.6 59s192.5 86.2 192.5 192.5S329.9 444 223.6 444z"]
            },
            faItunesNote: {
                prefix: "fab",
                iconName: "itunes-note",
                icon: [384, 512, [], "f3b5", "M381.9 388.2c-6.4 27.4-27.2 42.8-55.1 48-24.5 4.5-44.9 5.6-64.5-10.2-23.9-20.1-24.2-53.4-2.7-74.4 17-16.2 40.9-19.5 76.8-25.8 6-1.1 11.2-2.5 15.6-7.4 6.4-7.2 4.4-4.1 4.4-163.2 0-11.2-5.5-14.3-17-12.3-8.2 1.4-185.7 34.6-185.7 34.6-10.2 2.2-13.4 5.2-13.4 16.7 0 234.7 1.1 223.9-2.5 239.5-4.2 18.2-15.4 31.9-30.2 39.5-16.8 9.3-47.2 13.4-63.4 10.4-43.2-8.1-58.4-58-29.1-86.6 17-16.2 40.9-19.5 76.8-25.8 6-1.1 11.2-2.5 15.6-7.4 10.1-11.5 1.8-256.6 5.2-270.2.8-5.2 3-9.6 7.1-12.9 4.2-3.5 11.8-5.5 13.4-5.5 204-38.2 228.9-43.1 232.4-43.1 11.5-.8 18.1 6 18.1 17.6.2 344.5 1.1 326-1.8 338.5z"]
            },
            faJava: {
                prefix: "fab",
                iconName: "java",
                icon: [384, 512, [], "f4e4", "M277.74 312.9c9.8-6.7 23.4-12.5 23.4-12.5s-38.7 7-77.2 10.2c-47.1 3.9-97.7 4.7-123.1 1.3-60.1-8 33-30.1 33-30.1s-36.1-2.4-80.6 19c-52.5 25.4 130 37 224.5 12.1zm-85.4-32.1c-19-42.7-83.1-80.2 0-145.8C296 53.2 242.84 0 242.84 0c21.5 84.5-75.6 110.1-110.7 162.6-23.9 35.9 11.7 74.4 60.2 118.2zm114.6-176.2c.1 0-175.2 43.8-91.5 140.2 24.7 28.4-6.5 54-6.5 54s62.7-32.4 33.9-72.9c-26.9-37.8-47.5-56.6 64.1-121.3zm-6.1 270.5a12.19 12.19 0 0 1-2 2.6c128.3-33.7 81.1-118.9 19.8-97.3a17.33 17.33 0 0 0-8.2 6.3 70.45 70.45 0 0 1 11-3c31-6.5 75.5 41.5-20.6 91.4zM348 437.4s14.5 11.9-15.9 21.2c-57.9 17.5-240.8 22.8-291.6.7-18.3-7.9 16-19 26.8-21.3 11.2-2.4 17.7-2 17.7-2-20.3-14.3-131.3 28.1-56.4 40.2C232.84 509.4 401 461.3 348 437.4zM124.44 396c-78.7 22 47.9 67.4 148.1 24.5a185.89 185.89 0 0 1-28.2-13.8c-44.7 8.5-65.4 9.1-106 4.5-33.5-3.8-13.9-15.2-13.9-15.2zm179.8 97.2c-78.7 14.8-175.8 13.1-233.3 3.6 0-.1 11.8 9.7 72.4 13.6 92.2 5.9 233.8-3.3 237.1-46.9 0 0-6.4 16.5-76.2 29.7zM260.64 353c-59.2 11.4-93.5 11.1-136.8 6.6-33.5-3.5-11.6-19.7-11.6-19.7-86.8 28.8 48.2 61.4 169.5 25.9a60.37 60.37 0 0 1-21.1-12.8z"]
            },
            faJediOrder: {
                prefix: "fab",
                iconName: "jedi-order",
                icon: [448, 512, [], "f50e", "M398.5 373.6c95.9-122.1 17.2-233.1 17.2-233.1 45.4 85.8-41.4 170.5-41.4 170.5 105-171.5-60.5-271.5-60.5-271.5 96.9 72.7-10.1 190.7-10.1 190.7 85.8 158.4-68.6 230.1-68.6 230.1s-.4-16.9-2.2-85.7c4.3 4.5 34.5 36.2 34.5 36.2l-24.2-47.4 62.6-9.1-62.6-9.1 20.2-55.5-31.4 45.9c-2.2-87.7-7.8-305.1-7.9-306.9v-2.4 1-1 2.4c0 1-5.6 219-7.9 306.9l-31.4-45.9 20.2 55.5-62.6 9.1 62.6 9.1-24.2 47.4 34.5-36.2c-1.8 68.8-2.2 85.7-2.2 85.7s-154.4-71.7-68.6-230.1c0 0-107-118.1-10.1-190.7 0 0-165.5 99.9-60.5 271.5 0 0-86.8-84.8-41.4-170.5 0 0-78.7 111 17.2 233.1 0 0-26.2-16.1-49.4-77.7 0 0 16.9 183.3 222 185.7h4.1c205-2.4 222-185.7 222-185.7-23.6 61.5-49.9 77.7-49.9 77.7z"]
            },
            faJenkins: {
                prefix: "fab",
                iconName: "jenkins",
                icon: [512, 512, [], "f3b6", "M487.1 425c-1.4-11.2-19-23.1-28.2-31.9-5.1-5-29-23.1-30.4-29.9-1.4-6.6 9.7-21.5 13.3-28.9 5.1-10.7 8.8-23.7 11.3-32.6 18.8-66.1 20.7-156.9-6.2-211.2-10.2-20.6-38.6-49-56.4-62.5-42-31.7-119.6-35.3-170.1-16.6-14.1 5.2-27.8 9.8-40.1 17.1-33.1 19.4-68.3 32.5-78.1 71.6-24.2 10.8-31.5 41.8-30.3 77.8.2 7 4.1 15.8 2.7 22.4-.7 3.3-5.2 7.6-6.1 9.8-11.6 27.7-2.3 64 11.1 83.7 8.1 11.9 21.5 22.4 39.2 25.2.7 10.6 3.3 19.7 8.2 30.4 3.1 6.8 14.7 19 10.4 27.7-2.2 4.4-21 13.8-27.3 17.6C89 407.2 73.7 415 54.2 429c-12.6 9-32.3 10.2-29.2 31.1 2.1 14.1 10.1 31.6 14.7 45.8.7 2 1.4 4.1 2.1 6h422c4.9-15.3 9.7-30.9 14.6-47.2 3.4-11.4 10.2-27.8 8.7-39.7zM205.9 33.7c1.8-.5 3.4.7 4.9 2.4-.2 5.2-5.4 5.1-8.9 6.8-5.4 6.7-13.4 9.8-20 17.2-6.8 7.5-14.4 27.7-23.4 30-4.5 1.1-9.7-.8-13.6-.5-10.4.7-17.7 6-28.3 7.5 13.6-29.9 56.1-54 89.3-63.4zm-104.8 93.6c13.5-14.9 32.1-24.1 54.8-25.9 11.7 29.7-8.4 65-.9 97.6 2.3 9.9 10.2 25.4-2.4 25.7.3-28.3-34.8-46.3-61.3-29.6-1.8-21.5-4.9-51.7 9.8-67.8zm36.7 200.2c-1-4.1-2.7-12.9-2.3-15.1 1.6-8.7 17.1-12.5 11-24.7-11.3-.1-13.8 10.2-24.1 11.3-26.7 2.6-45.6-35.4-44.4-58.4 1-19.5 17.6-38.2 40.1-35.8 16 1.8 21.4 19.2 24.5 34.7 9.2.5 22.5-.4 26.9-7.6-.6-17.5-8.8-31.6-8.2-47.7 1-30.3 17.5-57.6 4.8-87.4 13.6-30.9 53.5-55.3 83.1-70 36.6-18.3 94.9-3.7 129.3 15.8 19.7 11.1 34.4 32.7 48.3 50.7-19.5-5.8-36.1 4.2-33.1 20.3 16.3-14.9 44.2-.2 52.5 16.4 7.9 15.8 7.8 39.3 9 62.8 2.9 57-10.4 115.9-39.1 157.1-7.7 11-14.1 23-24.9 30.6-26 18.2-65.4 34.7-99.2 23.4-44.7-15-65-44.8-89.5-78.8.7 18.7 13.8 34.1 26.8 48.4 11.3 12.5 25 26.6 39.7 32.4-12.3-2.9-31.1-3.8-36.2 7.2-28.6-1.9-55.1-4.8-68.7-24.2-10.6-15.4-21.4-41.4-26.3-61.4zm222 124.1c4.1-3 11.1-2.9 17.4-3.6-5.4-2.7-13-3.7-19.3-2.2-.1-4.2-2-6.8-3.2-10.2 10.6-3.8 35.5-28.5 49.6-20.3 6.7 3.9 9.5 26.2 10.1 37 .4 9-.8 18-4.5 22.8-18.8-.6-35.8-2.8-50.7-7 .9-6.1-1-12.1.6-16.5zm-17.2-20c-16.8.8-26-1.2-38.3-10.8.2-.8 1.4-.5 1.5-1.4 18 8 40.8-3.3 59-4.9-7.9 5.1-14.6 11.6-22.2 17.1zm-12.1 33.2c-1.6-9.4-3.5-12-2.8-20.2 25-16.6 29.7 28.6 2.8 20.2zM226 438.6c-11.6-.7-48.1-14-38.5-23.7 9.4 6.5 27.5 4.9 41.3 7.3.8 4.4-2.8 10.2-2.8 16.4zM57.7 497.1c-4.3-12.7-9.2-25.1-14.8-36.9 30.8-23.8 65.3-48.9 102.2-63.5 2.8-1.1 23.2 25.4 26.2 27.6 16.5 11.7 37 21 56.2 30.2 1.2 8.8 3.9 20.2 8.7 35.5.7 2.3 1.4 4.7 2.2 7.2H57.7zm240.6 5.7h-.8c.3-.2.5-.4.8-.5v.5zm7.5-5.7c2.1-1.4 4.3-2.8 6.4-4.3 1.1 1.4 2.2 2.8 3.2 4.3h-9.6zm15.1-24.7c-10.8 7.3-20.6 18.3-33.3 25.2-6 3.3-27 11.7-33.4 10.2-3.6-.8-3.9-5.3-5.4-9.5-3.1-9-10.1-23.4-10.8-37-.8-17.2-2.5-46 16-42.4 14.9 2.9 32.3 9.7 43.9 16.1 7.1 3.9 11.1 8.6 21.9 9.5-.1 1.4-.1 2.8-.2 4.3-5.9 3.9-15.3 3.8-21.8 7.1 9.5.4 17 2.7 23.5 5.9-.1 3.4-.3 7-.4 10.6zm53.4 24.7h-14c-.1-3.2-2.8-5.8-6.1-5.8s-5.9 2.6-6.1 5.8h-17.4c-2.8-4.4-5.7-8.6-8.9-12.5 2.1-2.2 4-4.7 6-6.9 9 3.7 14.8-4.9 21.7-4.2 7.9.8 14.2 11.7 25.4 11l-.6 12.6zm8.7 0c.2-4 .4-7.8.6-11.5 15.6-7.3 29 1.3 35.7 11.5H383zm83.4-37c-2.3 11.2-5.8 24-9.9 37.1-.2-.1-.4-.1-.6-.1H428c.6-1.1 1.2-2.2 1.9-3.3-2.6-6.1-9-8.7-10.9-15.5 12.1-22.7 6.5-93.4-24.2-78.5 4.3-6.3 15.6-11.5 20.8-19.3 13 10.4 20.8 20.3 33.2 31.4 6.8 6 20 13.3 21.4 23.1.8 5.5-2.6 18.9-3.8 25.1zM222.2 130.5c5.4-14.9 27.2-34.7 45-32 7.7 1.2 18 8.2 12.2 17.7-30.2-7-45.2 12.6-54.4 33.1-8.1-2-4.9-13.1-2.8-18.8zm184.1 63.1c8.2-3.6 22.4-.7 29.6-5.3-4.2-11.5-10.3-21.4-9.3-37.7.5 0 1 0 1.4.1 6.8 14.2 12.7 29.2 21.4 41.7-5.7 13.5-43.6 25.4-43.1 1.2zm20.4-43zm-117.2 45.7c-6.8-10.9-19-32.5-14.5-45.3 6.5 11.9 8.6 24.4 17.8 33.3 4.1 4 12.2 9 8.2 20.2-.9 2.7-7.8 8.6-11.7 9.7-14.4 4.3-47.9.9-36.6-17.1 11.9.7 27.9 7.8 36.8-.8zm27.3 70c3.8 6.6 1.4 18.7 12.1 20.6 20.2 3.4 43.6-12.3 58.1-17.8 9-15.2-.8-20.7-8.9-30.5-16.6-20-38.8-44.8-38-74.7 6.7-4.9 7.3 7.4 8.2 9.7 8.7 20.3 30.4 46.2 46.3 63.5 3.9 4.3 10.3 8.4 11 11.2 2.1 8.2-5.4 18-4.5 23.5-21.7 13.9-45.8 29.1-81.4 25.6-7.4-6.7-10.3-21.4-2.9-31.1zm-201.3-9.2c-6.8-3.9-8.4-21-16.4-21.4-11.4-.7-9.3 22.2-9.3 35.5-7.8-7.1-9.2-29.1-3.5-40.3-6.6-3.2-9.5 3.6-13.1 5.9 4.7-34.1 49.8-15.8 42.3 20.3zm299.6 28.8c-10.1 19.2-24.4 40.4-54 41-.6-6.2-1.1-15.6 0-19.4 22.7-2.2 36.6-13.7 54-21.6zm-141.9 12.4c18.9 9.9 53.6 11 79.3 10.2 1.4 5.6 1.3 12.6 1.4 19.4-33 1.8-72-6.4-80.7-29.6zm92.2 46.7c-1.7 4.3-5.3 9.3-9.8 11.1-12.1 4.9-45.6 8.7-62.4-.3-10.7-5.7-17.5-18.5-23.4-26-2.8-3.6-16.9-12.9-.2-12.9 13.1 32.7 58 29 95.8 28.1z"]
            },
            faJira: {
                prefix: "fab",
                iconName: "jira",
                icon: [496, 512, [], "f7b1", "M490 241.7C417.1 169 320.6 71.8 248.5 0 83 164.9 6 241.7 6 241.7c-7.9 7.9-7.9 20.7 0 28.7C138.8 402.7 67.8 331.9 248.5 512c379.4-378 15.7-16.7 241.5-241.7 8-7.9 8-20.7 0-28.6zm-241.5 90l-76-75.7 76-75.7 76 75.7-76 75.7z"]
            },
            faJoget: {
                prefix: "fab",
                iconName: "joget",
                icon: [496, 512, [], "f3b7", "M378.1 45C337.6 19.9 292.6 8 248.2 8 165 8 83.8 49.9 36.9 125.9c-71.9 116.6-35.6 269.3 81 341.2s269.3 35.6 341.2-80.9c71.9-116.6 35.6-269.4-81-341.2zm51.8 323.2c-40.4 65.5-110.4 101.5-182 101.5-6.8 0-13.6-.4-20.4-1-9-13.6-19.9-33.3-23.7-42.4-5.7-13.7-27.2-45.6 31.2-67.1 51.7-19.1 176.7-16.5 208.8-17.6-4 9-8.6 17.9-13.9 26.6zm-200.8-86.3c-55.5-1.4-81.7-20.8-58.5-48.2s51.1-40.7 68.9-51.2c17.9-10.5 27.3-33.7-23.6-29.7C87.3 161.5 48.6 252.1 37.6 293c-8.8-49.7-.1-102.7 28.5-149.1C128 43.4 259.6 12.2 360.1 74.1c74.8 46.1 111.2 130.9 99.3 212.7-24.9-.5-179.3-3.6-230.3-4.9zm183.8-54.8c-22.7-6-57 11.3-86.7 27.2-29.7 15.8-31.1 8.2-31.1 8.2s40.2-28.1 50.7-34.5 31.9-14 13.4-24.6c-3.2-1.8-6.7-2.7-10.4-2.7-17.8 0-41.5 18.7-67.5 35.6-31.5 20.5-65.3 31.3-65.3 31.3l169.5-1.6 46.5-23.4s3.6-9.5-19.1-15.5z"]
            },
            faJoomla: {
                prefix: "fab",
                iconName: "joomla",
                icon: [448, 512, [], "f1aa", "M.6 92.1C.6 58.8 27.4 32 60.4 32c30 0 54.5 21.9 59.2 50.2 32.6-7.6 67.1.6 96.5 30l-44.3 44.3c-20.5-20.5-42.6-16.3-55.4-3.5-14.3 14.3-14.3 37.9 0 52.2l99.5 99.5-44 44.3c-87.7-87.2-49.7-49.7-99.8-99.7-26.8-26.5-35-64.8-24.8-98.9C20.4 144.6.6 120.7.6 92.1zm129.5 116.4l44.3 44.3c10-10 89.7-89.7 99.7-99.8 14.3-14.3 37.6-14.3 51.9 0 12.8 12.8 17 35-3.5 55.4l44 44.3c31.2-31.2 38.5-67.6 28.9-101.2 29.2-4.1 51.9-29.2 51.9-59.5 0-33.2-26.8-60.1-59.8-60.1-30.3 0-55.4 22.5-59.5 51.6-33.8-9.9-71.7-1.5-98.3 25.1-18.3 19.1-71.1 71.5-99.6 99.9zm266.3 152.2c8.2-32.7-.9-68.5-26.3-93.9-11.8-12.2 5 4.7-99.5-99.7l-44.3 44.3 99.7 99.7c14.3 14.3 14.3 37.6 0 51.9-12.8 12.8-35 17-55.4-3.5l-44 44.3c27.6 30.2 68 38.8 102.7 28 5.5 27.4 29.7 48.1 58.9 48.1 33 0 59.8-26.8 59.8-60.1 0-30.2-22.5-55-51.6-59.1zm-84.3-53.1l-44-44.3c-87 86.4-50.4 50.4-99.7 99.8-14.3 14.3-37.6 14.3-51.9 0-13.1-13.4-16.9-35.3 3.2-55.4l-44-44.3c-30.2 30.2-38 65.2-29.5 98.3-26.7 6-46.2 29.9-46.2 58.2C0 453.2 26.8 480 59.8 480c28.6 0 52.5-19.8 58.6-46.7 32.7 8.2 68.5-.6 94.2-26 32.1-32 12.2-12.4 99.5-99.7z"]
            },
            faJs: {
                prefix: "fab",
                iconName: "js",
                icon: [448, 512, [], "f3b8", "M0 32v448h448V32H0zm243.8 349.4c0 43.6-25.6 63.5-62.9 63.5-33.7 0-53.2-17.4-63.2-38.5l34.3-20.7c6.6 11.7 12.6 21.6 27.1 21.6 13.8 0 22.6-5.4 22.6-26.5V237.7h42.1v143.7zm99.6 63.5c-39.1 0-64.4-18.6-76.7-43l34.3-19.8c9 14.7 20.8 25.6 41.5 25.6 17.4 0 28.6-8.7 28.6-20.8 0-14.4-11.4-19.5-30.7-28l-10.5-4.5c-30.4-12.9-50.5-29.2-50.5-63.5 0-31.6 24.1-55.6 61.6-55.6 26.8 0 46 9.3 59.8 33.7L368 290c-7.2-12.9-15-18-27.1-18-12.3 0-20.1 7.8-20.1 18 0 12.6 7.8 17.7 25.9 25.6l10.5 4.5c35.8 15.3 55.9 31 55.9 66.2 0 37.8-29.8 58.6-69.7 58.6z"]
            },
            faJsSquare: {
                prefix: "fab",
                iconName: "js-square",
                icon: [448, 512, [], "f3b9", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM243.8 381.4c0 43.6-25.6 63.5-62.9 63.5-33.7 0-53.2-17.4-63.2-38.5l34.3-20.7c6.6 11.7 12.6 21.6 27.1 21.6 13.8 0 22.6-5.4 22.6-26.5V237.7h42.1v143.7zm99.6 63.5c-39.1 0-64.4-18.6-76.7-43l34.3-19.8c9 14.7 20.8 25.6 41.5 25.6 17.4 0 28.6-8.7 28.6-20.8 0-14.4-11.4-19.5-30.7-28l-10.5-4.5c-30.4-12.9-50.5-29.2-50.5-63.5 0-31.6 24.1-55.6 61.6-55.6 26.8 0 46 9.3 59.8 33.7L368 290c-7.2-12.9-15-18-27.1-18-12.3 0-20.1 7.8-20.1 18 0 12.6 7.8 17.7 25.9 25.6l10.5 4.5c35.8 15.3 55.9 31 55.9 66.2 0 37.8-29.8 58.6-69.7 58.6z"]
            },
            faJsfiddle: {
                prefix: "fab",
                iconName: "jsfiddle",
                icon: [576, 512, [], "f1cc", "M510.634 237.462c-4.727-2.621-5.664-5.748-6.381-10.776-2.352-16.488-3.539-33.619-9.097-49.095-35.895-99.957-153.99-143.386-246.849-91.646-27.37 15.25-48.971 36.369-65.493 63.903-3.184-1.508-5.458-2.71-7.824-3.686-30.102-12.421-59.049-10.121-85.331 9.167-25.531 18.737-36.422 44.548-32.676 76.408.355 3.025-1.967 7.621-4.514 9.545-39.712 29.992-56.031 78.065-41.902 124.615 13.831 45.569 57.514 79.796 105.608 81.433 30.291 1.031 60.637.546 90.959.539 84.041-.021 168.09.531 252.12-.48 52.664-.634 96.108-36.873 108.212-87.293 11.54-48.074-11.144-97.3-56.832-122.634zm21.107 156.88c-18.23 22.432-42.343 35.253-71.28 35.65-56.874.781-113.767.23-170.652.23 0 .7-163.028.159-163.728.154-43.861-.332-76.739-19.766-95.175-59.995-18.902-41.245-4.004-90.848 34.186-116.106 9.182-6.073 12.505-11.566 10.096-23.136-5.49-26.361 4.453-47.956 26.42-62.981 22.987-15.723 47.422-16.146 72.034-3.083 10.269 5.45 14.607 11.564 22.198-2.527 14.222-26.399 34.557-46.727 60.671-61.294 97.46-54.366 228.37 7.568 230.24 132.697.122 8.15 2.412 12.428 9.848 15.894 57.56 26.829 74.456 96.122 35.142 144.497zm-87.789-80.499c-5.848 31.157-34.622 55.096-66.666 55.095-16.953-.001-32.058-6.545-44.079-17.705-27.697-25.713-71.141-74.98-95.937-93.387-20.056-14.888-41.99-12.333-60.272 3.782-49.996 44.071 15.859 121.775 67.063 77.188 4.548-3.96 7.84-9.543 12.744-12.844 8.184-5.509 20.766-.884 13.168 10.622-17.358 26.284-49.33 38.197-78.863 29.301-28.897-8.704-48.84-35.968-48.626-70.179 1.225-22.485 12.364-43.06 35.414-55.965 22.575-12.638 46.369-13.146 66.991 2.474C295.68 280.7 320.467 323.97 352.185 343.47c24.558 15.099 54.254 7.363 68.823-17.506 28.83-49.209-34.592-105.016-78.868-63.46-3.989 3.744-6.917 8.932-11.41 11.72-10.975 6.811-17.333-4.113-12.809-10.353 20.703-28.554 50.464-40.44 83.271-28.214 31.429 11.714 49.108 44.366 42.76 78.186z"]
            },
            faKaggle: {
                prefix: "fab",
                iconName: "kaggle",
                icon: [320, 512, [], "f5fa", "M304.2 501.5L158.4 320.3 298.2 185c2.6-2.7 1.7-10.5-5.3-10.5h-69.2c-3.5 0-7 1.8-10.5 5.3L80.9 313.5V7.5q0-7.5-7.5-7.5H21.5Q14 0 14 7.5v497q0 7.5 7.5 7.5h51.9q7.5 0 7.5-7.5v-109l30.8-29.3 110.5 140.6c3 3.5 6.5 5.3 10.5 5.3h66.9q5.25 0 6-3z"]
            },
            faKeybase: {
                prefix: "fab",
                iconName: "keybase",
                icon: [448, 512, [], "f4f5", "M286.17 419a18 18 0 1 0 18 18 18 18 0 0 0-18-18zm111.92-147.6c-9.5-14.62-39.37-52.45-87.26-73.71q-9.1-4.06-18.38-7.27a78.43 78.43 0 0 0-47.88-104.13c-12.41-4.1-23.33-6-32.41-5.77-.6-2-1.89-11 9.4-35L198.66 32l-5.48 7.56c-8.69 12.06-16.92 23.55-24.34 34.89a51 51 0 0 0-8.29-1.25c-41.53-2.45-39-2.33-41.06-2.33-50.61 0-50.75 52.12-50.75 45.88l-2.36 36.68c-1.61 27 19.75 50.21 47.63 51.85l8.93.54a214 214 0 0 0-46.29 35.54C14 304.66 14 374 14 429.77v33.64l23.32-29.8a148.6 148.6 0 0 0 14.56 37.56c5.78 10.13 14.87 9.45 19.64 7.33 4.21-1.87 10-6.92 3.75-20.11a178.29 178.29 0 0 1-15.76-53.13l46.82-59.83-24.66 74.11c58.23-42.4 157.38-61.76 236.25-38.59 34.2 10.05 67.45.69 84.74-23.84.72-1 1.2-2.16 1.85-3.22a156.09 156.09 0 0 1 2.8 28.43c0 23.3-3.69 52.93-14.88 81.64-2.52 6.46 1.76 14.5 8.6 15.74 7.42 1.57 15.33-3.1 18.37-11.15C429 443 434 414 434 382.32c0-38.58-13-77.46-35.91-110.92zM142.37 128.58l-15.7-.93-1.39 21.79 13.13.78a93 93 0 0 0 .32 19.57l-22.38-1.34a12.28 12.28 0 0 1-11.76-12.79L107 119c1-12.17 13.87-11.27 13.26-11.32l29.11 1.73a144.35 144.35 0 0 0-7 19.17zm148.42 172.18a10.51 10.51 0 0 1-14.35-1.39l-9.68-11.49-34.42 27a8.09 8.09 0 0 1-11.13-1.08l-15.78-18.64a7.38 7.38 0 0 1 1.34-10.34l34.57-27.18-14.14-16.74-17.09 13.45a7.75 7.75 0 0 1-10.59-1s-3.72-4.42-3.8-4.53a7.38 7.38 0 0 1 1.37-10.34L214 225.19s-18.51-22-18.6-22.14a9.56 9.56 0 0 1 1.74-13.42 10.38 10.38 0 0 1 14.3 1.37l81.09 96.32a9.58 9.58 0 0 1-1.74 13.44zM187.44 419a18 18 0 1 0 18 18 18 18 0 0 0-18-18z"]
            },
            faKeycdn: {
                prefix: "fab",
                iconName: "keycdn",
                icon: [512, 512, [], "f3ba", "M63.8 409.3l60.5-59c32.1 42.8 71.1 66 126.6 67.4 30.5.7 60.3-7 86.4-22.4 5.1 5.3 18.5 19.5 20.9 22-32.2 20.7-69.6 31.1-108.1 30.2-43.3-1.1-84.6-16.7-117.7-44.4.3-.6-38.2 37.5-38.6 37.9 9.5 29.8-13.1 62.4-46.3 62.4C20.7 503.3 0 481.7 0 454.9c0-34.3 33.1-56.6 63.8-45.6zm354.9-252.4c19.1 31.3 29.6 67.4 28.7 104-1.1 44.8-19 87.5-48.6 121 .3.3 23.8 25.2 24.1 25.5 9.6-1.3 19.2 2 25.9 9.1 11.3 12 10.9 30.9-1.1 42.4-12 11.3-30.9 10.9-42.4-1.1-6.7-7-9.4-16.8-7.6-26.3-24.9-26.6-44.4-47.2-44.4-47.2 42.7-34.1 63.3-79.6 64.4-124.2.7-28.9-7.2-57.2-21.1-82.2l22.1-21zM104 53.1c6.7 7 9.4 16.8 7.6 26.3l45.9 48.1c-4.7 3.8-13.3 10.4-22.8 21.3-25.4 28.5-39.6 64.8-40.7 102.9-.7 28.9 6.1 57.2 20 82.4l-22 21.5C72.7 324 63.1 287.9 64.2 250.9c1-44.6 18.3-87.6 47.5-121.1l-25.3-26.4c-9.6 1.3-19.2-2-25.9-9.1-11.3-12-10.9-30.9 1.1-42.4C73.5 40.7 92.2 41 104 53.1zM464.9 8c26 0 47.1 22.4 47.1 48.3S490.9 104 464.9 104c-6.3.1-14-1.1-15.9-1.8l-62.9 59.7c-32.7-43.6-76.7-65.9-126.9-67.2-30.5-.7-60.3 6.8-86.2 22.4l-21.1-22C184.1 74.3 221.5 64 260 64.9c43.3 1.1 84.6 16.7 117.7 44.6l41.1-38.6c-1.5-4.7-2.2-9.6-2.2-14.5C416.5 29.7 438.9 8 464.9 8zM256.7 113.4c5.5 0 10.9.4 16.4 1.1 78.1 9.8 133.4 81.1 123.8 159.1-9.8 78.1-81.1 133.4-159.1 123.8-78.1-9.8-133.4-81.1-123.8-159.2 9.3-72.4 70.1-124.6 142.7-124.8zm-59 119.4c.6 22.7 12.2 41.8 32.4 52.2l-11 51.7h73.7l-11-51.7c20.1-10.9 32.1-29 32.4-52.2-.4-32.8-25.8-57.5-58.3-58.3-32.1.8-57.3 24.8-58.2 58.3zM256 160"]
            },
            faKickstarter: {
                prefix: "fab",
                iconName: "kickstarter",
                icon: [448, 512, [], "f3bb", "M400 480H48c-26.4 0-48-21.6-48-48V80c0-26.4 21.6-48 48-48h352c26.4 0 48 21.6 48 48v352c0 26.4-21.6 48-48 48zM199.6 178.5c0-30.7-17.6-45.1-39.7-45.1-25.8 0-40 19.8-40 44.5v154.8c0 25.8 13.7 45.6 40.5 45.6 21.5 0 39.2-14 39.2-45.6v-41.8l60.6 75.7c12.3 14.9 39 16.8 55.8 0 14.6-15.1 14.8-36.8 4-50.4l-49.1-62.8 40.5-58.7c9.4-13.5 9.5-34.5-5.6-49.1-16.4-15.9-44.6-17.3-61.4 7l-44.8 64.7v-38.8z"]
            },
            faKickstarterK: {
                prefix: "fab",
                iconName: "kickstarter-k",
                icon: [384, 512, [], "f3bc", "M147.3 114.4c0-56.2-32.5-82.4-73.4-82.4C26.2 32 0 68.2 0 113.4v283c0 47.3 25.3 83.4 74.9 83.4 39.8 0 72.4-25.6 72.4-83.4v-76.5l112.1 138.3c22.7 27.2 72.1 30.7 103.2 0 27-27.6 27.3-67.4 7.4-92.2l-90.8-114.8 74.9-107.4c17.4-24.7 17.5-63.1-10.4-89.8-30.3-29-82.4-31.6-113.6 12.8L147.3 185v-70.6z"]
            },
            faKorvue: {
                prefix: "fab",
                iconName: "korvue",
                icon: [446, 512, [], "f42f", "M386.5 34h-327C26.8 34 0 60.8 0 93.5v327.1C0 453.2 26.8 480 59.5 480h327.1c33 0 59.5-26.8 59.5-59.5v-327C446 60.8 419.2 34 386.5 34zM87.1 120.8h96v116l61.8-116h110.9l-81.2 132H87.1v-132zm161.8 272.1l-65.7-113.6v113.6h-96V262.1h191.5l88.6 130.8H248.9z"]
            },
            faLaravel: {
                prefix: "fab",
                iconName: "laravel",
                icon: [512, 512, [], "f3bd", "M504.4,115.83a5.72,5.72,0,0,0-.28-.68,8.52,8.52,0,0,0-.53-1.25,6,6,0,0,0-.54-.71,9.36,9.36,0,0,0-.72-.94c-.23-.22-.52-.4-.77-.6a8.84,8.84,0,0,0-.9-.68L404.4,55.55a8,8,0,0,0-8,0L300.12,111h0a8.07,8.07,0,0,0-.88.69,7.68,7.68,0,0,0-.78.6,8.23,8.23,0,0,0-.72.93c-.17.24-.39.45-.54.71a9.7,9.7,0,0,0-.52,1.25c-.08.23-.21.44-.28.68a8.08,8.08,0,0,0-.28,2.08V223.18l-80.22,46.19V63.44a7.8,7.8,0,0,0-.28-2.09c-.06-.24-.2-.45-.28-.68a8.35,8.35,0,0,0-.52-1.24c-.14-.26-.37-.47-.54-.72a9.36,9.36,0,0,0-.72-.94,9.46,9.46,0,0,0-.78-.6,9.8,9.8,0,0,0-.88-.68h0L115.61,1.07a8,8,0,0,0-8,0L11.34,56.49h0a6.52,6.52,0,0,0-.88.69,7.81,7.81,0,0,0-.79.6,8.15,8.15,0,0,0-.71.93c-.18.25-.4.46-.55.72a7.88,7.88,0,0,0-.51,1.24,6.46,6.46,0,0,0-.29.67,8.18,8.18,0,0,0-.28,2.1v329.7a8,8,0,0,0,4,6.95l192.5,110.84a8.83,8.83,0,0,0,1.33.54c.21.08.41.2.63.26a7.92,7.92,0,0,0,4.1,0c.2-.05.37-.16.55-.22a8.6,8.6,0,0,0,1.4-.58L404.4,400.09a8,8,0,0,0,4-6.95V287.88l92.24-53.11a8,8,0,0,0,4-7V117.92A8.63,8.63,0,0,0,504.4,115.83ZM111.6,17.28h0l80.19,46.15-80.2,46.18L31.41,63.44Zm88.25,60V278.6l-46.53,26.79-33.69,19.4V123.5l46.53-26.79Zm0,412.78L23.37,388.5V77.32L57.06,96.7l46.52,26.8V338.68a6.94,6.94,0,0,0,.12.9,8,8,0,0,0,.16,1.18h0a5.92,5.92,0,0,0,.38.9,6.38,6.38,0,0,0,.42,1v0a8.54,8.54,0,0,0,.6.78,7.62,7.62,0,0,0,.66.84l0,0c.23.22.52.38.77.58a8.93,8.93,0,0,0,.86.66l0,0,0,0,92.19,52.18Zm8-106.17-80.06-45.32,84.09-48.41,92.26-53.11,80.13,46.13-58.8,33.56Zm184.52,4.57L215.88,490.11V397.8L346.6,323.2l45.77-26.15Zm0-119.13L358.68,250l-46.53-26.79V131.79l33.69,19.4L392.37,178Zm8-105.28-80.2-46.17,80.2-46.16,80.18,46.15Zm8,105.28V178L455,151.19l33.68-19.4v91.39h0Z"]
            },
            faLastfm: {
                prefix: "fab",
                iconName: "lastfm",
                icon: [512, 512, [], "f202", "M225.8 367.1l-18.8-51s-30.5 34-76.2 34c-40.5 0-69.2-35.2-69.2-91.5 0-72.1 36.4-97.9 72.1-97.9 66.5 0 74.8 53.3 100.9 134.9 18.8 56.9 54 102.6 155.4 102.6 72.7 0 122-22.3 122-80.9 0-72.9-62.7-80.6-115-92.1-25.8-5.9-33.4-16.4-33.4-34 0-19.9 15.8-31.7 41.6-31.7 28.2 0 43.4 10.6 45.7 35.8l58.6-7c-4.7-52.8-41.1-74.5-100.9-74.5-52.8 0-104.4 19.9-104.4 83.9 0 39.9 19.4 65.1 68 76.8 44.9 10.6 79.8 13.8 79.8 45.7 0 21.7-21.1 30.5-61 30.5-59.2 0-83.9-31.1-97.9-73.9-32-96.8-43.6-163-161.3-163C45.7 113.8 0 168.3 0 261c0 89.1 45.7 137.2 127.9 137.2 66.2 0 97.9-31.1 97.9-31.1z"]
            },
            faLastfmSquare: {
                prefix: "fab",
                iconName: "lastfm-square",
                icon: [448, 512, [], "f203", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-92.2 312.9c-63.4 0-85.4-28.6-97.1-64.1-16.3-51-21.5-84.3-63-84.3-22.4 0-45.1 16.1-45.1 61.2 0 35.2 18 57.2 43.3 57.2 28.6 0 47.6-21.3 47.6-21.3l11.7 31.9s-19.8 19.4-61.2 19.4c-51.3 0-79.9-30.1-79.9-85.8 0-57.9 28.6-92 82.5-92 73.5 0 80.8 41.4 100.8 101.9 8.8 26.8 24.2 46.2 61.2 46.2 24.9 0 38.1-5.5 38.1-19.1 0-19.9-21.8-22-49.9-28.6-30.4-7.3-42.5-23.1-42.5-48 0-40 32.3-52.4 65.2-52.4 37.4 0 60.1 13.6 63 46.6l-36.7 4.4c-1.5-15.8-11-22.4-28.6-22.4-16.1 0-26 7.3-26 19.8 0 11 4.8 17.6 20.9 21.3 32.7 7.1 71.8 12 71.8 57.5.1 36.7-30.7 50.6-76.1 50.6z"]
            },
            faLeanpub: {
                prefix: "fab",
                iconName: "leanpub",
                icon: [576, 512, [], "f212", "M386.539 111.485l15.096 248.955-10.979-.275c-36.232-.824-71.64 8.783-102.657 27.997-31.016-19.214-66.424-27.997-102.657-27.997-45.564 0-82.07 10.705-123.516 27.723L93.117 129.6c28.546-11.803 61.484-18.115 92.226-18.115 41.173 0 73.836 13.175 102.657 42.544 27.723-28.271 59.013-41.721 98.539-42.544zM569.07 448c-25.526 0-47.485-5.215-70.542-15.645-34.31-15.645-69.993-24.978-107.871-24.978-38.977 0-74.934 12.901-102.657 40.623-27.723-27.723-63.68-40.623-102.657-40.623-37.878 0-73.561 9.333-107.871 24.978C55.239 442.236 32.731 448 8.303 448H6.93L49.475 98.859C88.726 76.626 136.486 64 181.775 64 218.83 64 256.984 71.685 288 93.095 319.016 71.685 357.17 64 394.225 64c45.289 0 93.049 12.626 132.3 34.859L569.07 448zm-43.368-44.741l-34.036-280.246c-30.742-13.999-67.248-21.41-101.009-21.41-38.428 0-74.385 12.077-102.657 38.702-28.272-26.625-64.228-38.702-102.657-38.702-33.761 0-70.267 7.411-101.009 21.41L50.298 403.259c47.211-19.487 82.894-33.486 135.045-33.486 37.604 0 70.817 9.606 102.657 29.644 31.84-20.038 65.052-29.644 102.657-29.644 52.151 0 87.834 13.999 135.045 33.486z"]
            },
            faLess: {
                prefix: "fab",
                iconName: "less",
                icon: [640, 512, [], "f41d", "M612.7 219c0-20.5 3.2-32.6 3.2-54.6 0-34.2-12.6-45.2-40.5-45.2h-20.5v24.2h6.3c14.2 0 17.3 4.7 17.3 22.1 0 16.3-1.6 32.6-1.6 51.5 0 24.2 7.9 33.6 23.6 37.3v1.6c-15.8 3.7-23.6 13.1-23.6 37.3 0 18.9 1.6 34.2 1.6 51.5 0 17.9-3.7 22.6-17.3 22.6v.5h-6.3V393h20.5c27.8 0 40.5-11 40.5-45.2 0-22.6-3.2-34.2-3.2-54.6 0-11 6.8-22.6 27.3-23.6v-27.3c-20.5-.7-27.3-12.3-27.3-23.3zm-105.6 32c-15.8-6.3-30.5-10-30.5-20.5 0-7.9 6.3-12.6 17.9-12.6s22.1 4.7 33.6 13.1l21-27.8c-13.1-10-31-20.5-55.2-20.5-35.7 0-59.9 20.5-59.9 49.4 0 25.7 22.6 38.9 41.5 46.2 16.3 6.3 32.1 11.6 32.1 22.1 0 7.9-6.3 13.1-20.5 13.1-13.1 0-26.3-5.3-40.5-16.3l-21 30.5c15.8 13.1 39.9 22.1 59.9 22.1 42 0 64.6-22.1 64.6-51s-22.5-41-43-47.8zm-358.9 59.4c-3.7 0-8.4-3.2-8.4-13.1V119.1H65.2c-28.4 0-41 11-41 45.2 0 22.6 3.2 35.2 3.2 54.6 0 11-6.8 22.6-27.3 23.6v27.3c20.5.5 27.3 12.1 27.3 23.1 0 19.4-3.2 31-3.2 53.6 0 34.2 12.6 45.2 40.5 45.2h20.5v-24.2h-6.3c-13.1 0-17.3-5.3-17.3-22.6s1.6-32.1 1.6-51.5c0-24.2-7.9-33.6-23.6-37.3v-1.6c15.8-3.7 23.6-13.1 23.6-37.3 0-18.9-1.6-34.2-1.6-51.5s3.7-22.1 17.3-22.1H93v150.8c0 32.1 11 53.1 43.1 53.1 10 0 17.9-1.6 23.6-3.7l-5.3-34.2c-3.1.8-4.6.8-6.2.8zM379.9 251c-16.3-6.3-31-10-31-20.5 0-7.9 6.3-12.6 17.9-12.6 11.6 0 22.1 4.7 33.6 13.1l21-27.8c-13.1-10-31-20.5-55.2-20.5-35.7 0-59.9 20.5-59.9 49.4 0 25.7 22.6 38.9 41.5 46.2 16.3 6.3 32.1 11.6 32.1 22.1 0 7.9-6.3 13.1-20.5 13.1-13.1 0-26.3-5.3-40.5-16.3l-20.5 30.5c15.8 13.1 39.9 22.1 59.9 22.1 42 0 64.6-22.1 64.6-51 .1-28.9-22.5-41-43-47.8zm-155-68.8c-38.4 0-75.1 32.1-74.1 82.5 0 52 34.2 82.5 79.3 82.5 18.9 0 39.9-6.8 56.2-17.9l-15.8-27.8c-11.6 6.8-22.6 10-34.2 10-21 0-37.3-10-41.5-34.2H290c.5-3.7 1.6-11 1.6-19.4.6-42.6-22.6-75.7-66.7-75.7zm-30 66.2c3.2-21 15.8-31 30.5-31 18.9 0 26.3 13.1 26.3 31h-56.8z"]
            },
            faLine: {
                prefix: "fab",
                iconName: "line",
                icon: [448, 512, [], "f3c0", "M272.1 204.2v71.1c0 1.8-1.4 3.2-3.2 3.2h-11.4c-1.1 0-2.1-.6-2.6-1.3l-32.6-44v42.2c0 1.8-1.4 3.2-3.2 3.2h-11.4c-1.8 0-3.2-1.4-3.2-3.2v-71.1c0-1.8 1.4-3.2 3.2-3.2H219c1 0 2.1.5 2.6 1.4l32.6 44v-42.2c0-1.8 1.4-3.2 3.2-3.2h11.4c1.8-.1 3.3 1.4 3.3 3.1zm-82-3.2h-11.4c-1.8 0-3.2 1.4-3.2 3.2v71.1c0 1.8 1.4 3.2 3.2 3.2h11.4c1.8 0 3.2-1.4 3.2-3.2v-71.1c0-1.7-1.4-3.2-3.2-3.2zm-27.5 59.6h-31.1v-56.4c0-1.8-1.4-3.2-3.2-3.2h-11.4c-1.8 0-3.2 1.4-3.2 3.2v71.1c0 .9.3 1.6.9 2.2.6.5 1.3.9 2.2.9h45.7c1.8 0 3.2-1.4 3.2-3.2v-11.4c0-1.7-1.4-3.2-3.1-3.2zM332.1 201h-45.7c-1.7 0-3.2 1.4-3.2 3.2v71.1c0 1.7 1.4 3.2 3.2 3.2h45.7c1.8 0 3.2-1.4 3.2-3.2v-11.4c0-1.8-1.4-3.2-3.2-3.2H301v-12h31.1c1.8 0 3.2-1.4 3.2-3.2V234c0-1.8-1.4-3.2-3.2-3.2H301v-12h31.1c1.8 0 3.2-1.4 3.2-3.2v-11.4c-.1-1.7-1.5-3.2-3.2-3.2zM448 113.7V399c-.1 44.8-36.8 81.1-81.7 81H81c-44.8-.1-81.1-36.9-81-81.7V113c.1-44.8 36.9-81.1 81.7-81H367c44.8.1 81.1 36.8 81 81.7zm-61.6 122.6c0-73-73.2-132.4-163.1-132.4-89.9 0-163.1 59.4-163.1 132.4 0 65.4 58 120.2 136.4 130.6 19.1 4.1 16.9 11.1 12.6 36.8-.7 4.1-3.3 16.1 14.1 8.8 17.4-7.3 93.9-55.3 128.2-94.7 23.6-26 34.9-52.3 34.9-81.5z"]
            },
            faLinkedin: {
                prefix: "fab",
                iconName: "linkedin",
                icon: [448, 512, [], "f08c", "M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"]
            },
            faLinkedinIn: {
                prefix: "fab",
                iconName: "linkedin-in",
                icon: [448, 512, [], "f0e1", "M100.28 448H7.4V148.9h92.88zM53.79 108.1C24.09 108.1 0 83.5 0 53.8a53.79 53.79 0 0 1 107.58 0c0 29.7-24.1 54.3-53.79 54.3zM447.9 448h-92.68V302.4c0-34.7-.7-79.2-48.29-79.2-48.29 0-55.69 37.7-55.69 76.7V448h-92.78V148.9h89.08v40.8h1.3c12.4-23.5 42.69-48.3 87.88-48.3 94 0 111.28 61.9 111.28 142.3V448z"]
            },
            faLinode: {
                prefix: "fab",
                iconName: "linode",
                icon: [448, 512, [], "f2b8", "M437.4 226.3c-.3-.9-.9-1.4-1.4-2l-70-38.6c-.9-.6-2-.6-3.1 0l-58.9 36c-.9.6-1.4 1.7-1.4 2.6l-.9 31.4-24-16c-.9-.6-2.3-.6-3.1 0L240 260.9l-1.4-35.1c0-.9-.6-2-1.4-2.3l-36-24.3 33.7-17.4c1.1-.6 1.7-1.7 1.7-2.9l-5.7-132.3c0-.9-.9-2-1.7-2.6L138.6.3c-.9-.3-1.7-.3-2.3-.3L12.6 38.6c-1.4.6-2.3 2-2 3.7L38 175.4c.9 3.4 34 27.4 38.6 30.9l-26.9 12.9c-1.4.9-2 2.3-1.7 3.4l20.6 100.3c.6 2.9 23.7 23.1 27.1 26.3l-17.4 10.6c-.9.6-1.7 2-1.4 3.1 1.4 7.1 15.4 77.7 16.9 79.1l65.1 69.1c.6.6 1.4.6 2.3.9.6 0 1.1-.3 1.7-.6l83.7-66.9c.9-.6 1.1-1.4 1.1-2.3l-2-46 28 23.7c1.1.9 2.9.9 4 0l66.9-53.4c.9-.6 1.1-1.4 1.1-2.3l2.3-33.4 20.3 14c1.1.9 2.6.9 3.7 0l54.6-43.7c.6-.3 1.1-1.1 1.1-2 .9-6.5 10.3-70.8 9.7-72.8zm-204.8 4.8l4 92.6-90.6 61.2-14-96.6 100.6-57.2zm-7.7-180l5.4 126-106.6 55.4L104 97.7l120.9-46.6zM44 173.1L18 48l79.7 49.4 19.4 132.9L44 173.1zm30.6 147.8L55.7 230l70 58.3 13.7 93.4-64.8-60.8zm24.3 117.7l-13.7-67.1 61.7 60.9 9.7 67.4-57.7-61.2zm64.5 64.5l-10.6-70.9 85.7-61.4 3.1 70-78.2 62.3zm82-115.1c0-3.4.9-22.9-2-25.1l-24.3-20 22.3-14.9c2.3-1.7 1.1-5.7 1.1-8l29.4 22.6.6 68.3-27.1-22.9zm94.3-25.4l-60.9 48.6-.6-68.6 65.7-46.9-4.2 66.9zm27.7-25.7l-19.1-13.4 2-34c.3-.9-.3-2-1.1-2.6L308 259.7l.6-30 64.6 40.6-5.8 66.6zm54.6-39.8l-48.3 38.3 5.7-65.1 51.1-36.6-8.5 63.4z"]
            },
            faLinux: {
                prefix: "fab",
                iconName: "linux",
                icon: [448, 512, [], "f17c", "M220.8 123.3c1 .5 1.8 1.7 3 1.7 1.1 0 2.8-.4 2.9-1.5.2-1.4-1.9-2.3-3.2-2.9-1.7-.7-3.9-1-5.5-.1-.4.2-.8.7-.6 1.1.3 1.3 2.3 1.1 3.4 1.7zm-21.9 1.7c1.2 0 2-1.2 3-1.7 1.1-.6 3.1-.4 3.5-1.6.2-.4-.2-.9-.6-1.1-1.6-.9-3.8-.6-5.5.1-1.3.6-3.4 1.5-3.2 2.9.1 1 1.8 1.5 2.8 1.4zM420 403.8c-3.6-4-5.3-11.6-7.2-19.7-1.8-8.1-3.9-16.8-10.5-22.4-1.3-1.1-2.6-2.1-4-2.9-1.3-.8-2.7-1.5-4.1-2 9.2-27.3 5.6-54.5-3.7-79.1-11.4-30.1-31.3-56.4-46.5-74.4-17.1-21.5-33.7-41.9-33.4-72C311.1 85.4 315.7.1 234.8 0 132.4-.2 158 103.4 156.9 135.2c-1.7 23.4-6.4 41.8-22.5 64.7-18.9 22.5-45.5 58.8-58.1 96.7-6 17.9-8.8 36.1-6.2 53.3-6.5 5.8-11.4 14.7-16.6 20.2-4.2 4.3-10.3 5.9-17 8.3s-14 6-18.5 14.5c-2.1 3.9-2.8 8.1-2.8 12.4 0 3.9.6 7.9 1.2 11.8 1.2 8.1 2.5 15.7.8 20.8-5.2 14.4-5.9 24.4-2.2 31.7 3.8 7.3 11.4 10.5 20.1 12.3 17.3 3.6 40.8 2.7 59.3 12.5 19.8 10.4 39.9 14.1 55.9 10.4 11.6-2.6 21.1-9.6 25.9-20.2 12.5-.1 26.3-5.4 48.3-6.6 14.9-1.2 33.6 5.3 55.1 4.1.6 2.3 1.4 4.6 2.5 6.7v.1c8.3 16.7 23.8 24.3 40.3 23 16.6-1.3 34.1-11 48.3-27.9 13.6-16.4 36-23.2 50.9-32.2 7.4-4.5 13.4-10.1 13.9-18.3.4-8.2-4.4-17.3-15.5-29.7zM223.7 87.3c9.8-22.2 34.2-21.8 44-.4 6.5 14.2 3.6 30.9-4.3 40.4-1.6-.8-5.9-2.6-12.6-4.9 1.1-1.2 3.1-2.7 3.9-4.6 4.8-11.8-.2-27-9.1-27.3-7.3-.5-13.9 10.8-11.8 23-4.1-2-9.4-3.5-13-4.4-1-6.9-.3-14.6 2.9-21.8zM183 75.8c10.1 0 20.8 14.2 19.1 33.5-3.5 1-7.1 2.5-10.2 4.6 1.2-8.9-3.3-20.1-9.6-19.6-8.4.7-9.8 21.2-1.8 28.1 1 .8 1.9-.2-5.9 5.5-15.6-14.6-10.5-52.1 8.4-52.1zm-13.6 60.7c6.2-4.6 13.6-10 14.1-10.5 4.7-4.4 13.5-14.2 27.9-14.2 7.1 0 15.6 2.3 25.9 8.9 6.3 4.1 11.3 4.4 22.6 9.3 8.4 3.5 13.7 9.7 10.5 18.2-2.6 7.1-11 14.4-22.7 18.1-11.1 3.6-19.8 16-38.2 14.9-3.9-.2-7-1-9.6-2.1-8-3.5-12.2-10.4-20-15-8.6-4.8-13.2-10.4-14.7-15.3-1.4-4.9 0-9 4.2-12.3zm3.3 334c-2.7 35.1-43.9 34.4-75.3 18-29.9-15.8-68.6-6.5-76.5-21.9-2.4-4.7-2.4-12.7 2.6-26.4v-.2c2.4-7.6.6-16-.6-23.9-1.2-7.8-1.8-15 .9-20 3.5-6.7 8.5-9.1 14.8-11.3 10.3-3.7 11.8-3.4 19.6-9.9 5.5-5.7 9.5-12.9 14.3-18 5.1-5.5 10-8.1 17.7-6.9 8.1 1.2 15.1 6.8 21.9 16l19.6 35.6c9.5 19.9 43.1 48.4 41 68.9zm-1.4-25.9c-4.1-6.6-9.6-13.6-14.4-19.6 7.1 0 14.2-2.2 16.7-8.9 2.3-6.2 0-14.9-7.4-24.9-13.5-18.2-38.3-32.5-38.3-32.5-13.5-8.4-21.1-18.7-24.6-29.9s-3-23.3-.3-35.2c5.2-22.9 18.6-45.2 27.2-59.2 2.3-1.7.8 3.2-8.7 20.8-8.5 16.1-24.4 53.3-2.6 82.4.6-20.7 5.5-41.8 13.8-61.5 12-27.4 37.3-74.9 39.3-112.7 1.1.8 4.6 3.2 6.2 4.1 4.6 2.7 8.1 6.7 12.6 10.3 12.4 10 28.5 9.2 42.4 1.2 6.2-3.5 11.2-7.5 15.9-9 9.9-3.1 17.8-8.6 22.3-15 7.7 30.4 25.7 74.3 37.2 95.7 6.1 11.4 18.3 35.5 23.6 64.6 3.3-.1 7 .4 10.9 1.4 13.8-35.7-11.7-74.2-23.3-84.9-4.7-4.6-4.9-6.6-2.6-6.5 12.6 11.2 29.2 33.7 35.2 59 2.8 11.6 3.3 23.7.4 35.7 16.4 6.8 35.9 17.9 30.7 34.8-2.2-.1-3.2 0-4.2 0 3.2-10.1-3.9-17.6-22.8-26.1-19.6-8.6-36-8.6-38.3 12.5-12.1 4.2-18.3 14.7-21.4 27.3-2.8 11.2-3.6 24.7-4.4 39.9-.5 7.7-3.6 18-6.8 29-32.1 22.9-76.7 32.9-114.3 7.2zm257.4-11.5c-.9 16.8-41.2 19.9-63.2 46.5-13.2 15.7-29.4 24.4-43.6 25.5s-26.5-4.8-33.7-19.3c-4.7-11.1-2.4-23.1 1.1-36.3 3.7-14.2 9.2-28.8 9.9-40.6.8-15.2 1.7-28.5 4.2-38.7 2.6-10.3 6.6-17.2 13.7-21.1.3-.2.7-.3 1-.5.8 13.2 7.3 26.6 18.8 29.5 12.6 3.3 30.7-7.5 38.4-16.3 9-.3 15.7-.9 22.6 5.1 9.9 8.5 7.1 30.3 17.1 41.6 10.6 11.6 14 19.5 13.7 24.6zM173.3 148.7c2 1.9 4.7 4.5 8 7.1 6.6 5.2 15.8 10.6 27.3 10.6 11.6 0 22.5-5.9 31.8-10.8 4.9-2.6 10.9-7 14.8-10.4s5.9-6.3 3.1-6.6-2.6 2.6-6 5.1c-4.4 3.2-9.7 7.4-13.9 9.8-7.4 4.2-19.5 10.2-29.9 10.2s-18.7-4.8-24.9-9.7c-3.1-2.5-5.7-5-7.7-6.9-1.5-1.4-1.9-4.6-4.3-4.9-1.4-.1-1.8 3.7 1.7 6.5z"]
            },
            faLyft: {
                prefix: "fab",
                iconName: "lyft",
                icon: [512, 512, [], "f3c3", "M0 81.1h77.8v208.7c0 33.1 15 52.8 27.2 61-12.7 11.1-51.2 20.9-80.2-2.8C7.8 334 0 310.7 0 289V81.1zm485.9 173.5v-22h23.8v-76.8h-26.1c-10.1-46.3-51.2-80.7-100.3-80.7-56.6 0-102.7 46-102.7 102.7V357c16 2.3 35.4-.3 51.7-14 17.1-14 24.8-37.2 24.8-59v-6.7h38.8v-76.8h-38.8v-23.3c0-34.6 52.2-34.6 52.2 0v77.1c0 56.6 46 102.7 102.7 102.7v-76.5c-14.5 0-26.1-11.7-26.1-25.9zm-294.3-99v113c0 15.4-23.8 15.4-23.8 0v-113H91v132.7c0 23.8 8 54 45 63.9 37 9.8 58.2-10.6 58.2-10.6-2.1 13.4-14.5 23.3-34.9 25.3-15.5 1.6-35.2-3.6-45-7.8v70.3c25.1 7.5 51.5 9.8 77.6 4.7 47.1-9.1 76.8-48.4 76.8-100.8V155.1h-77.1v.5z"]
            },
            faMagento: {
                prefix: "fab",
                iconName: "magento",
                icon: [448, 512, [], "f3c4", "M445.7 127.9V384l-63.4 36.5V164.7L223.8 73.1 65.2 164.7l.4 255.9L2.3 384V128.1L224.2 0l221.5 127.9zM255.6 420.5L224 438.9l-31.8-18.2v-256l-63.3 36.6.1 255.9 94.9 54.9 95.1-54.9v-256l-63.4-36.6v255.9z"]
            },
            faMailchimp: {
                prefix: "fab",
                iconName: "mailchimp",
                icon: [448, 512, [], "f59e", "M330.61 243.52a36.15 36.15 0 0 1 9.3 0c1.66-3.83 1.95-10.43.45-17.61-2.23-10.67-5.25-17.14-11.48-16.13s-6.47 8.74-4.24 19.42c1.26 6 3.49 11.14 6 14.32zM277.05 252c4.47 2 7.2 3.26 8.28 2.13 1.89-1.94-3.48-9.39-12.12-13.09a31.44 31.44 0 0 0-30.61 3.68c-3 2.18-5.81 5.22-5.41 7.06.85 3.74 10-2.71 22.6-3.48 7-.44 12.8 1.75 17.26 3.71zm-9 5.13c-9.07 1.42-15 6.53-13.47 10.1.9.34 1.17.81 5.21-.81a37 37 0 0 1 18.72-1.95c2.92.34 4.31.52 4.94-.49 1.46-2.22-5.71-8-15.39-6.85zm54.17 17.1c3.38-6.87-10.9-13.93-14.3-7s10.92 13.88 14.32 6.97zm15.66-20.47c-7.66-.13-7.95 15.8-.26 15.93s7.98-15.81.28-15.96zm-218.79 78.9c-1.32.31-6 1.45-8.47-2.35-5.2-8 11.11-20.38 3-35.77-9.1-17.47-27.82-13.54-35.05-5.54-8.71 9.6-8.72 23.54-5 24.08 4.27.57 4.08-6.47 7.38-11.63a12.83 12.83 0 0 1 17.85-3.72c11.59 7.59 1.37 17.76 2.28 28.62 1.39 16.68 18.42 16.37 21.58 9a2.08 2.08 0 0 0-.2-2.33c.03.89.68-1.3-3.35-.39zm299.72-17.07c-3.35-11.73-2.57-9.22-6.78-20.52 2.45-3.67 15.29-24-3.07-43.25-10.4-10.92-33.9-16.54-41.1-18.54-1.5-11.39 4.65-58.7-21.52-83 20.79-21.55 33.76-45.29 33.73-65.65-.06-39.16-48.15-51-107.42-26.47l-12.55 5.33c-.06-.05-22.71-22.27-23.05-22.57C169.5-18-41.77 216.81 25.78 273.85l14.76 12.51a72.49 72.49 0 0 0-4.1 33.5c3.36 33.4 36 60.42 67.53 60.38 57.73 133.06 267.9 133.28 322.29 3 1.74-4.47 9.11-24.61 9.11-42.38s-10.09-25.27-16.53-25.27zm-316 48.16c-22.82-.61-47.46-21.15-49.91-45.51-6.17-61.31 74.26-75.27 84-12.33 4.54 29.64-4.67 58.49-34.12 57.81zM84.3 249.55C69.14 252.5 55.78 261.09 47.6 273c-4.88-4.07-14-12-15.59-15-13.01-24.85 14.24-73 33.3-100.21C112.42 90.56 186.19 39.68 220.36 48.91c5.55 1.57 23.94 22.89 23.94 22.89s-34.15 18.94-65.8 45.35c-42.66 32.85-74.89 80.59-94.2 132.4zM323.18 350.7s-35.74 5.3-69.51-7.07c6.21-20.16 27 6.1 96.4-13.81 15.29-4.38 35.37-13 51-25.35a102.85 102.85 0 0 1 7.12 24.28c3.66-.66 14.25-.52 11.44 18.1-3.29 19.87-11.73 36-25.93 50.84A106.86 106.86 0 0 1 362.55 421a132.45 132.45 0 0 1-20.34 8.58c-53.51 17.48-108.3-1.74-126-43a66.33 66.33 0 0 1-3.55-9.74c-7.53-27.2-1.14-59.83 18.84-80.37 1.23-1.31 2.48-2.85 2.48-4.79a8.45 8.45 0 0 0-1.92-4.54c-7-10.13-31.19-27.4-26.33-60.83 3.5-24 24.49-40.91 44.07-39.91l5 .29c8.48.5 15.89 1.59 22.88 1.88 11.69.5 22.2-1.19 34.64-11.56 4.2-3.5 7.57-6.54 13.26-7.51a17.45 17.45 0 0 1 13.6 2.24c10 6.64 11.4 22.73 11.92 34.49.29 6.72 1.1 23 1.38 27.63.63 10.67 3.43 12.17 9.11 14 3.19 1.05 6.15 1.83 10.51 3.06 13.21 3.71 21 7.48 26 12.31a16.38 16.38 0 0 1 4.74 9.29c1.56 11.37-8.82 25.4-36.31 38.16-46.71 21.68-93.68 14.45-100.48 13.68-20.15-2.71-31.63 23.32-19.55 41.15 22.64 33.41 122.4 20 151.37-21.35.69-1 .12-1.59-.73-1-41.77 28.58-97.06 38.21-128.46 26-4.77-1.85-14.73-6.44-15.94-16.67 43.6 13.49 71 .74 71 .74s2.03-2.79-.56-2.53zm-68.47-5.7zm-83.4-187.5c16.74-19.35 37.36-36.18 55.83-45.63a.73.73 0 0 1 1 1c-1.46 2.66-4.29 8.34-5.19 12.65a.75.75 0 0 0 1.16.79c11.49-7.83 31.48-16.22 49-17.3a.77.77 0 0 1 .52 1.38 41.86 41.86 0 0 0-7.71 7.74.75.75 0 0 0 .59 1.19c12.31.09 29.66 4.4 41 10.74.76.43.22 1.91-.64 1.72-69.55-15.94-123.08 18.53-134.5 26.83a.76.76 0 0 1-1-1.12z"]
            },
            faMandalorian: {
                prefix: "fab",
                iconName: "mandalorian",
                icon: [448, 512, [], "f50f", "M232.27 511.89c-1-3.26-1.69-15.83-1.39-24.58.55-15.89 1-24.72 1.4-28.76.64-6.2 2.87-20.72 3.28-21.38.6-1 .4-27.87-.24-33.13-.31-2.58-.63-11.9-.69-20.73-.13-16.47-.53-20.12-2.73-24.76-1.1-2.32-1.23-3.84-1-11.43a92.38 92.38 0 0 0-.34-12.71c-2-13-3.46-27.7-3.25-33.9s.43-7.15 2.06-9.67c3.05-4.71 6.51-14 8.62-23.27 2.26-9.86 3.88-17.18 4.59-20.74a109.54 109.54 0 0 1 4.42-15.05c2.27-6.25 2.49-15.39.37-15.39-.3 0-1.38 1.22-2.41 2.71s-4.76 4.8-8.29 7.36c-8.37 6.08-11.7 9.39-12.66 12.58s-1 7.23-.16 7.76c.34.21 1.29 2.4 2.11 4.88a28.83 28.83 0 0 1 .72 15.36c-.39 1.77-1 5.47-1.46 8.23s-1 6.46-1.25 8.22a9.85 9.85 0 0 1-1.55 4.26c-1 1-1.14.91-2.05-.53a14.87 14.87 0 0 1-1.44-4.75c-.25-1.74-1.63-7.11-3.08-11.93-3.28-10.9-3.52-16.15-1-21a14.24 14.24 0 0 0 1.67-4.61c0-2.39-2.2-5.32-7.41-9.89-7-6.18-8.63-7.92-10.23-11.3-1.71-3.6-3.06-4.06-4.54-1.54-1.78 3-2.6 9.11-3 22l-.34 12.19 2 2.25c3.21 3.7 12.07 16.45 13.78 19.83 3.41 6.74 4.34 11.69 4.41 23.56s.95 22.75 2 24.71c.36.66.51 1.35.34 1.52s.41 2.09 1.29 4.27a38.14 38.14 0 0 1 2.06 9 91 91 0 0 0 1.71 10.37c2.23 9.56 2.77 14.08 2.39 20.14-.2 3.27-.53 11.07-.73 17.32-1.31 41.76-1.85 58-2 61.21-.12 2-.39 11.51-.6 21.07-.36 16.3-1.3 27.37-2.42 28.65-.64.73-8.07-4.91-12.52-9.49-3.75-3.87-4-4.79-2.83-9.95.7-3 2.26-18.29 3.33-32.62.36-4.78.81-10.5 1-12.71.83-9.37 1.66-20.35 2.61-34.78.56-8.46 1.33-16.44 1.72-17.73s.89-9.89 1.13-19.11l.43-16.77-2.26-4.3c-1.72-3.28-4.87-6.94-13.22-15.34-6-6.07-11.84-12.3-12.91-13.85l-1.95-2.81.75-10.9c1.09-15.71 1.1-48.57 0-59.06l-.89-8.7-3.28-4.52c-5.86-8.08-5.8-7.75-6.22-33.27-.1-6.07-.38-11.5-.63-12.06-.83-1.87-3.05-2.66-8.54-3.05-8.86-.62-11-1.9-23.85-14.55-6.15-6-12.34-12-13.75-13.19-2.81-2.42-2.79-2-.56-9.63l1.35-4.65-1.69-3a32.22 32.22 0 0 0-2.59-4.07c-1.33-1.51-5.5-10.89-6-13.49a4.24 4.24 0 0 1 .87-3.9c2.23-2.86 3.4-5.68 4.45-10.73 2.33-11.19 7.74-26.09 10.6-29.22 3.18-3.47 7.7-1 9.41 5 1.34 4.79 1.37 9.79.1 18.55a101.2 101.2 0 0 0-1 11.11c0 4 .19 4.69 2.25 7.39 3.33 4.37 7.73 7.41 15.2 10.52a18.67 18.67 0 0 1 4.72 2.85c11.17 10.72 18.62 16.18 22.95 16.85 5.18.8 8 4.54 10 13.39 1.31 5.65 4 11.14 5.46 11.14a9.38 9.38 0 0 0 3.33-1.39c2-1.22 2.25-1.73 2.25-4.18a132.88 132.88 0 0 0-2-17.84c-.37-1.66-.78-4.06-.93-5.35s-.61-3.85-1-5.69c-2.55-11.16-3.65-15.46-4.1-16-1.55-2-4.08-10.2-4.93-15.92-1.64-11.11-4-14.23-12.91-17.39A43.15 43.15 0 0 1 165.24 78c-1.15-1-4-3.22-6.35-5.06s-4.41-3.53-4.6-3.76a22.7 22.7 0 0 0-2.69-2c-6.24-4.22-8.84-7-11.26-12l-2.44-5-.22-13-.22-13 6.91-6.55c3.95-3.75 8.48-7.35 10.59-8.43 3.31-1.69 4.45-1.89 11.37-2 8.53-.19 10.12 0 11.66 1.56s1.36 6.4-.29 8.5a6.66 6.66 0 0 0-1.34 2.32c0 .58-2.61 4.91-5.42 9a30.39 30.39 0 0 0-2.37 6.82c20.44 13.39 21.55 3.77 14.07 29L194 66.92c3.11-8.66 6.47-17.26 8.61-26.22.29-7.63-12-4.19-15.4-8.68-2.33-5.93 3.13-14.18 6.06-19.2 1.6-2.34 6.62-4.7 8.82-4.15.88.22 4.16-.35 7.37-1.28a45.3 45.3 0 0 1 7.55-1.68 29.57 29.57 0 0 0 6-1.29c3.65-1.11 4.5-1.17 6.35-.4a29.54 29.54 0 0 0 5.82 1.36 18.18 18.18 0 0 1 6 1.91 22.67 22.67 0 0 0 5 2.17c2.51.68 3 .57 7.05-1.67l4.35-2.4L268.32 5c10.44-.4 10.81-.47 15.26-2.68L288.16 0l2.46 1.43c1.76 1 3.14 2.73 4.85 6 2.36 4.51 2.38 4.58 1.37 7.37-.88 2.44-.89 3.3-.1 6.39a35.76 35.76 0 0 0 2.1 5.91 13.55 13.55 0 0 1 1.31 4c.31 4.33 0 5.3-2.41 6.92-2.17 1.47-7 7.91-7 9.34a14.77 14.77 0 0 1-1.07 3c-5 11.51-6.76 13.56-14.26 17-9.2 4.2-12.3 5.19-16.21 5.19-3.1 0-4 .25-4.54 1.26a18.33 18.33 0 0 1-4.09 3.71 13.62 13.62 0 0 0-4.38 4.78 5.89 5.89 0 0 1-2.49 2.91 6.88 6.88 0 0 0-2.45 1.71 67.62 67.62 0 0 1-7 5.38c-3.33 2.34-6.87 5-7.87 6A7.27 7.27 0 0 1 224 100a5.76 5.76 0 0 0-2.13 1.65c-1.31 1.39-1.49 2.11-1.14 4.6a36.45 36.45 0 0 0 1.42 5.88c1.32 3.8 1.31 7.86 0 10.57s-.89 6.65 1.35 9.59c2 2.63 2.16 4.56.71 8.84a33.45 33.45 0 0 0-1.06 8.91c0 4.88.22 6.28 1.46 8.38s1.82 2.48 3.24 2.32c2-.23 2.3-1.05 4.71-12.12 2.18-10 3.71-11.92 13.76-17.08 2.94-1.51 7.46-4 10-5.44s6.79-3.69 9.37-4.91a40.09 40.09 0 0 0 15.22-11.67c7.11-8.79 10-16.22 12.85-33.3a18.37 18.37 0 0 1 2.86-7.73 20.39 20.39 0 0 0 2.89-7.31c1-5.3 2.85-9.08 5.58-11.51 4.7-4.18 6-1.09 4.59 10.87-.46 3.86-1.1 10.33-1.44 14.38l-.61 7.36 4.45 4.09 4.45 4.09.11 8.42c.06 4.63.47 9.53.92 10.89l.82 2.47-6.43 6.28c-8.54 8.33-12.88 13.93-16.76 21.61-1.77 3.49-3.74 7.11-4.38 8-2.18 3.11-6.46 13-8.76 20.26l-2.29 7.22-7 6.49c-3.83 3.57-8 7.25-9.17 8.17-3.05 2.32-4.26 5.15-4.26 10a14.62 14.62 0 0 0 1.59 7.26 42 42 0 0 1 2.09 4.83 9.28 9.28 0 0 0 1.57 2.89c1.4 1.59 1.92 16.12.83 23.22-.68 4.48-3.63 12-4.7 12-1.79 0-4.06 9.27-5.07 20.74-.18 2-.62 5.94-1 8.7s-1 10-1.35 16.05c-.77 12.22-.19 18.77 2 23.15 3.41 6.69.52 12.69-11 22.84l-4 3.49.07 5.19a40.81 40.81 0 0 0 1.14 8.87c4.61 16 4.73 16.92 4.38 37.13-.46 26.4-.26 40.27.63 44.15a61.31 61.31 0 0 1 1.08 7c.17 2 .66 5.33 1.08 7.36.47 2.26.78 11 .79 22.74v19.06l-1.81 2.63c-2.71 3.91-15.11 13.54-15.49 12.29zm29.53-45.11c-.18-.3-.33-6.87-.33-14.59 0-14.06-.89-27.54-2.26-34.45-.4-2-.81-9.7-.9-17.06-.15-11.93-1.4-24.37-2.64-26.38-.66-1.07-3-17.66-3-21.3 0-4.23 1-6 5.28-9.13s4.86-3.14 5.48-.72c.28 1.1 1.45 5.62 2.6 10 3.93 15.12 4.14 16.27 4.05 21.74-.1 5.78-.13 6.13-1.74 17.73-1 7.07-1.17 12.39-1 28.43.17 19.4-.64 35.73-2 41.27-.71 2.78-2.8 5.48-3.43 4.43zm-71-37.58a101 101 0 0 1-1.73-10.79 100.5 100.5 0 0 0-1.73-10.79 37.53 37.53 0 0 1-1-6.49c-.31-3.19-.91-7.46-1.33-9.48-1-4.79-3.35-19.35-3.42-21.07 0-.74-.34-4.05-.7-7.36-.67-6.21-.84-27.67-.22-28.29 1-1 6.63 2.76 11.33 7.43l5.28 5.25-.45 6.47c-.25 3.56-.6 10.23-.78 14.83s-.49 9.87-.67 11.71-.61 9.36-.94 16.72c-.79 17.41-1.94 31.29-2.65 32a.62.62 0 0 1-1-.14zm-87.18-266.59c21.07 12.79 17.84 14.15 28.49 17.66 13 4.29 18.87 7.13 23.15 16.87C111.6 233.28 86.25 255 78.55 268c-31 52-6 101.59 62.75 87.21-14.18 29.23-78 28.63-98.68-4.9-24.68-39.95-22.09-118.3 61-187.66zm210.79 179c56.66 6.88 82.32-37.74 46.54-89.23 0 0-26.87-29.34-64.28-68 3-15.45 9.49-32.12 30.57-53.82 89.2 63.51 92 141.61 92.46 149.36 4.3 70.64-78.7 91.18-105.29 61.71z"]
            },
            faMarkdown: {
                prefix: "fab",
                iconName: "markdown",
                icon: [640, 512, [], "f60f", "M593.8 59.1H46.2C20.7 59.1 0 79.8 0 105.2v301.5c0 25.5 20.7 46.2 46.2 46.2h547.7c25.5 0 46.2-20.7 46.1-46.1V105.2c0-25.4-20.7-46.1-46.2-46.1zM338.5 360.6H277v-120l-61.5 76.9-61.5-76.9v120H92.3V151.4h61.5l61.5 76.9 61.5-76.9h61.5v209.2zm135.3 3.1L381.5 256H443V151.4h61.5V256H566z"]
            },
            faMastodon: {
                prefix: "fab",
                iconName: "mastodon",
                icon: [448, 512, [], "f4f6", "M433 179.11c0-97.2-63.71-125.7-63.71-125.7-62.52-28.7-228.56-28.4-290.48 0 0 0-63.72 28.5-63.72 125.7 0 115.7-6.6 259.4 105.63 289.1 40.51 10.7 75.32 13 103.33 11.4 50.81-2.8 79.32-18.1 79.32-18.1l-1.7-36.9s-36.31 11.4-77.12 10.1c-40.41-1.4-83-4.4-89.63-54a102.54 102.54 0 0 1-.9-13.9c85.63 20.9 158.65 9.1 178.75 6.7 56.12-6.7 105-41.3 111.23-72.9 9.8-49.8 9-121.5 9-121.5zm-75.12 125.2h-46.63v-114.2c0-49.7-64-51.6-64 6.9v62.5h-46.33V197c0-58.5-64-56.6-64-6.9v114.2H90.19c0-122.1-5.2-147.9 18.41-175 25.9-28.9 79.82-30.8 103.83 6.1l11.6 19.5 11.6-19.5c24.11-37.1 78.12-34.8 103.83-6.1 23.71 27.3 18.4 53 18.4 175z"]
            },
            faMaxcdn: {
                prefix: "fab",
                iconName: "maxcdn",
                icon: [512, 512, [], "f136", "M461.1 442.7h-97.4L415.6 200c2.3-10.2.9-19.5-4.4-25.7-5-6.1-13.7-9.6-24.2-9.6h-49.3l-59.5 278h-97.4l59.5-278h-83.4l-59.5 278H0l59.5-278-44.6-95.4H387c39.4 0 75.3 16.3 98.3 44.9 23.3 28.6 31.8 67.4 23.6 105.9l-47.8 222.6z"]
            },
            faMdb: {
                prefix: "fab",
                iconName: "mdb",
                icon: [576, 512, [], "f8ca", "M17.37 160.41L7 352h43.91l5.59-79.83L84.43 352h44.71l25.54-77.43 4.79 77.43H205l-12.79-191.59H146.7L106 277.74 63.67 160.41zm281 0h-47.9V352h47.9s95 .8 94.2-95.79c-.78-94.21-94.18-95.78-94.18-95.78zm-1.2 146.46V204.78s46 4.27 46.8 50.57-46.78 51.54-46.78 51.54zm238.29-74.24a56.16 56.16 0 0 0 8-38.31c-5.34-35.76-55.08-34.32-55.08-34.32h-51.9v191.58H482s87 4.79 87-63.85c0-43.14-33.52-55.08-33.52-55.08zm-51.9-31.94s13.57-1.59 16 9.59c1.43 6.66-4 12-4 12h-12v-21.57zm-.1 109.46l.1-24.92V267h.08s41.58-4.73 41.19 22.43c-.33 25.65-41.35 20.74-41.35 20.74z"]
            },
            faMedapps: {
                prefix: "fab",
                iconName: "medapps",
                icon: [320, 512, [], "f3c6", "M118.3 238.4c3.5-12.5 6.9-33.6 13.2-33.6 8.3 1.8 9.6 23.4 18.6 36.6 4.6-23.5 5.3-85.1 14.1-86.7 9-.7 19.7 66.5 22 77.5 9.9 4.1 48.9 6.6 48.9 6.6 1.9 7.3-24 7.6-40 7.8-4.6 14.8-5.4 27.7-11.4 28-4.7.2-8.2-28.8-17.5-49.6l-9.4 65.5c-4.4 13-15.5-22.5-21.9-39.3-3.3-.1-62.4-1.6-47.6-7.8l31-5zM228 448c21.2 0 21.2-32 0-32H92c-21.2 0-21.2 32 0 32h136zm-24 64c21.2 0 21.2-32 0-32h-88c-21.2 0-21.2 32 0 32h88zm34.2-141.5c3.2-18.9 5.2-36.4 11.9-48.8 7.9-14.7 16.1-28.1 24-41 24.6-40.4 45.9-75.2 45.9-125.5C320 69.6 248.2 0 160 0S0 69.6 0 155.2c0 50.2 21.3 85.1 45.9 125.5 7.9 12.9 16 26.3 24 41 6.7 12.5 8.7 29.8 11.9 48.9 3.5 21 36.1 15.7 32.6-5.1-3.6-21.7-5.6-40.7-15.3-58.6C66.5 246.5 33 211.3 33 155.2 33 87.3 90 32 160 32s127 55.3 127 123.2c0 56.1-33.5 91.3-66.1 151.6-9.7 18-11.7 37.4-15.3 58.6-3.4 20.6 29 26.4 32.6 5.1z"]
            },
            faMedium: {
                prefix: "fab",
                iconName: "medium",
                icon: [448, 512, [], "f23a", "M0 32v448h448V32H0zm372.2 106.1l-24 23c-2.1 1.6-3.1 4.2-2.7 6.7v169.3c-.4 2.6.6 5.2 2.7 6.7l23.5 23v5.1h-118V367l24.3-23.6c2.4-2.4 2.4-3.1 2.4-6.7V199.8l-67.6 171.6h-9.1L125 199.8v115c-.7 4.8 1 9.7 4.4 13.2l31.6 38.3v5.1H71.2v-5.1l31.6-38.3c3.4-3.5 4.9-8.4 4.1-13.2v-133c.4-3.7-1-7.3-3.8-9.8L75 138.1V133h87.3l67.4 148L289 133.1h83.2v5z"]
            },
            faMediumM: {
                prefix: "fab",
                iconName: "medium-m",
                icon: [512, 512, [], "f3c7", "M71.5 142.3c.6-5.9-1.7-11.8-6.1-15.8L20.3 72.1V64h140.2l108.4 237.7L364.2 64h133.7v8.1l-38.6 37c-3.3 2.5-5 6.7-4.3 10.8v272c-.7 4.1 1 8.3 4.3 10.8l37.7 37v8.1H307.3v-8.1l39.1-37.9c3.8-3.8 3.8-5 3.8-10.8V171.2L241.5 447.1h-14.7L100.4 171.2v184.9c-1.1 7.8 1.5 15.6 7 21.2l50.8 61.6v8.1h-144v-8L65 377.3c5.4-5.6 7.9-13.5 6.5-21.2V142.3z"]
            },
            faMedrt: {
                prefix: "fab",
                iconName: "medrt",
                icon: [544, 512, [], "f3c8", "M113.7 256c0 121.8 83.9 222.8 193.5 241.1-18.7 4.5-38.2 6.9-58.2 6.9C111.4 504 0 393 0 256S111.4 8 248.9 8c20.1 0 39.6 2.4 58.2 6.9C197.5 33.2 113.7 134.2 113.7 256m297.4 100.3c-77.7 55.4-179.6 47.5-240.4-14.6 5.5 14.1 12.7 27.7 21.7 40.5 61.6 88.2 182.4 109.3 269.7 47 87.3-62.3 108.1-184.3 46.5-272.6-9-12.9-19.3-24.3-30.5-34.2 37.4 78.8 10.7 178.5-67 233.9m-218.8-244c-1.4 1-2.7 2.1-4 3.1 64.3-17.8 135.9 4 178.9 60.5 35.7 47 42.9 106.6 24.4 158 56.7-56.2 67.6-142.1 22.3-201.8-50-65.5-149.1-74.4-221.6-19.8M296 224c-4.4 0-8-3.6-8-8v-40c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v40c0 4.4-3.6 8-8 8h-40c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h40c4.4 0 8 3.6 8 8v40c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-40c0-4.4 3.6-8 8-8h40c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8h-40z"]
            },
            faMeetup: {
                prefix: "fab",
                iconName: "meetup",
                icon: [512, 512, [], "f2e0", "M99 414.3c1.1 5.7-2.3 11.1-8 12.3-5.4 1.1-10.9-2.3-12-8-1.1-5.4 2.3-11.1 7.7-12.3 5.4-1.2 11.1 2.3 12.3 8zm143.1 71.4c-6.3 4.6-8 13.4-3.7 20 4.6 6.6 13.4 8.3 20 3.7 6.3-4.6 8-13.4 3.4-20-4.2-6.5-13.1-8.3-19.7-3.7zm-86-462.3c6.3-1.4 10.3-7.7 8.9-14-1.1-6.6-7.4-10.6-13.7-9.1-6.3 1.4-10.3 7.7-9.1 14 1.4 6.6 7.6 10.6 13.9 9.1zM34.4 226.3c-10-6.9-23.7-4.3-30.6 6-6.9 10-4.3 24 5.7 30.9 10 7.1 23.7 4.6 30.6-5.7 6.9-10.4 4.3-24.1-5.7-31.2zm272-170.9c10.6-6.3 13.7-20 7.7-30.3-6.3-10.6-19.7-14-30-7.7s-13.7 20-7.4 30.6c6 10.3 19.4 13.7 29.7 7.4zm-191.1 58c7.7-5.4 9.4-16 4.3-23.7s-15.7-9.4-23.1-4.3c-7.7 5.4-9.4 16-4.3 23.7 5.1 7.8 15.6 9.5 23.1 4.3zm372.3 156c-7.4 1.7-12.3 9.1-10.6 16.9 1.4 7.4 8.9 12.3 16.3 10.6 7.4-1.4 12.3-8.9 10.6-16.6-1.5-7.4-8.9-12.3-16.3-10.9zm39.7-56.8c-1.1-5.7-6.6-9.1-12-8-5.7 1.1-9.1 6.9-8 12.6 1.1 5.4 6.6 9.1 12.3 8 5.4-1.5 9.1-6.9 7.7-12.6zM447 138.9c-8.6 6-10.6 17.7-4.9 26.3 5.7 8.6 17.4 10.6 26 4.9 8.3-6 10.3-17.7 4.6-26.3-5.7-8.7-17.4-10.9-25.7-4.9zm-6.3 139.4c26.3 43.1 15.1 100-26.3 129.1-17.4 12.3-37.1 17.7-56.9 17.1-12 47.1-69.4 64.6-105.1 32.6-1.1.9-2.6 1.7-3.7 2.9-39.1 27.1-92.3 17.4-119.4-22.3-9.7-14.3-14.6-30.6-15.1-46.9-65.4-10.9-90-94-41.1-139.7-28.3-46.9.6-107.4 53.4-114.9C151.6 70 234.1 38.6 290.1 82c67.4-22.3 136.3 29.4 130.9 101.1 41.1 12.6 52.8 66.9 19.7 95.2zm-70 74.3c-3.1-20.6-40.9-4.6-43.1-27.1-3.1-32 43.7-101.1 40-128-3.4-24-19.4-29.1-33.4-29.4-13.4-.3-16.9 2-21.4 4.6-2.9 1.7-6.6 4.9-11.7-.3-6.3-6-11.1-11.7-19.4-12.9-12.3-2-17.7 2-26.6 9.7-3.4 2.9-12 12.9-20 9.1-3.4-1.7-15.4-7.7-24-11.4-16.3-7.1-40 4.6-48.6 20-12.9 22.9-38 113.1-41.7 125.1-8.6 26.6 10.9 48.6 36.9 47.1 11.1-.6 18.3-4.6 25.4-17.4 4-7.4 41.7-107.7 44.6-112.6 2-3.4 8.9-8 14.6-5.1 5.7 3.1 6.9 9.4 6 15.1-1.1 9.7-28 70.9-28.9 77.7-3.4 22.9 26.9 26.6 38.6 4 3.7-7.1 45.7-92.6 49.4-98.3 4.3-6.3 7.4-8.3 11.7-8 3.1 0 8.3.9 7.1 10.9-1.4 9.4-35.1 72.3-38.9 87.7-4.6 20.6 6.6 41.4 24.9 50.6 11.4 5.7 62.5 15.7 58.5-11.1zm5.7 92.3c-10.3 7.4-12.9 22-5.7 32.6 7.1 10.6 21.4 13.1 32 6 10.6-7.4 13.1-22 6-32.6-7.4-10.6-21.7-13.5-32.3-6z"]
            },
            faMegaport: {
                prefix: "fab",
                iconName: "megaport",
                icon: [496, 512, [], "f5a3", "M214.5 209.6v66.2l33.5 33.5 33.3-33.3v-66.4l-33.4-33.4zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm145.1 414.4L367 441.6l-26-19.2v-65.5l-33.4-33.4-33.4 33.4v65.5L248 441.6l-26.1-19.2v-65.5l-33.4-33.4-33.5 33.4v65.5l-26.1 19.2-26.1-19.2v-87l59.5-59.5V188l59.5-59.5V52.9l26.1-19.2L274 52.9v75.6l59.5 59.5v87.6l59.7 59.7v87.1z"]
            },
            faMendeley: {
                prefix: "fab",
                iconName: "mendeley",
                icon: [640, 512, [], "f7b3", "M624.6 325.2c-12.3-12.4-29.7-19.2-48.4-17.2-43.3-1-49.7-34.9-37.5-98.8 22.8-57.5-14.9-131.5-87.4-130.8-77.4.7-81.7 82-130.9 82-48.1 0-54-81.3-130.9-82-72.9-.8-110.1 73.3-87.4 130.8 12.2 63.9 5.8 97.8-37.5 98.8-21.2-2.3-37 6.5-53 22.5-19.9 19.7-19.3 94.8 42.6 102.6 47.1 5.9 81.6-42.9 61.2-87.8-47.3-103.7 185.9-106.1 146.5-8.2-.1.1-.2.2-.3.4-26.8 42.8 6.8 97.4 58.8 95.2 52.1 2.1 85.4-52.6 58.8-95.2-.1-.2-.2-.3-.3-.4-39.4-97.9 193.8-95.5 146.5 8.2-4.6 10-6.7 21.3-5.7 33 4.9 53.4 68.7 74.1 104.9 35.2 17.8-14.8 23.1-65.6 0-88.3zm-303.9-19.1h-.6c-43.4 0-62.8-37.5-62.8-62.8 0-34.7 28.2-62.8 62.8-62.8h.6c34.7 0 62.8 28.1 62.8 62.8 0 25-19.2 62.8-62.8 62.8z"]
            },
            faMicroblog: {
                prefix: "fab",
                iconName: "microblog",
                icon: [448, 512, [], "e01a", "M399.36,362.23c29.49-34.69,47.1-78.34,47.1-125.79C446.46,123.49,346.86,32,224,32S1.54,123.49,1.54,236.44,101.14,440.87,224,440.87a239.28,239.28,0,0,0,79.44-13.44,7.18,7.18,0,0,1,8.12,2.56c18.58,25.09,47.61,42.74,79.89,49.92a4.42,4.42,0,0,0,5.22-3.43,4.37,4.37,0,0,0-.85-3.62,87,87,0,0,1,3.69-110.69ZM329.52,212.4l-57.3,43.49L293,324.75a6.5,6.5,0,0,1-9.94,7.22L224,290.92,164.94,332a6.51,6.51,0,0,1-9.95-7.22l20.79-68.86-57.3-43.49a6.5,6.5,0,0,1,3.8-11.68l71.88-1.51,23.66-67.92a6.5,6.5,0,0,1,12.28,0l23.66,67.92,71.88,1.51a6.5,6.5,0,0,1,3.88,11.68Z"]
            },
            faMicrosoft: {
                prefix: "fab",
                iconName: "microsoft",
                icon: [448, 512, [], "f3ca", "M0 32h214.6v214.6H0V32zm233.4 0H448v214.6H233.4V32zM0 265.4h214.6V480H0V265.4zm233.4 0H448V480H233.4V265.4z"]
            },
            faMix: {
                prefix: "fab",
                iconName: "mix",
                icon: [448, 512, [], "f3cb", "M0 64v348.9c0 56.2 88 58.1 88 0V174.3c7.9-52.9 88-50.4 88 6.5v175.3c0 57.9 96 58 96 0V240c5.3-54.7 88-52.5 88 4.3v23.8c0 59.9 88 56.6 88 0V64H0z"]
            },
            faMixcloud: {
                prefix: "fab",
                iconName: "mixcloud",
                icon: [640, 512, [], "f289", "M424.43 219.729C416.124 134.727 344.135 68 256.919 68c-72.266 0-136.224 46.516-159.205 114.074-54.545 8.029-96.63 54.822-96.63 111.582 0 62.298 50.668 112.966 113.243 112.966h289.614c52.329 0 94.969-42.362 94.969-94.693 0-45.131-32.118-83.063-74.48-92.2zm-20.489 144.53H114.327c-39.04 0-70.881-31.564-70.881-70.604s31.841-70.604 70.881-70.604c18.827 0 36.548 7.475 49.838 20.766 19.963 19.963 50.133-10.227 30.18-30.18-14.675-14.398-32.672-24.365-52.053-29.349 19.935-44.3 64.79-73.926 114.628-73.926 69.496 0 125.979 56.483 125.979 125.702 0 13.568-2.215 26.857-6.369 39.594-8.943 27.517 32.133 38.939 40.147 13.29 2.769-8.306 4.984-16.889 6.369-25.472 19.381 7.476 33.502 26.303 33.502 48.453 0 28.795-23.535 52.33-52.607 52.33zm235.069-52.33c0 44.024-12.737 86.386-37.102 122.657-4.153 6.092-10.798 9.414-17.72 9.414-16.317 0-27.127-18.826-17.443-32.949 19.381-29.349 29.903-63.682 29.903-99.122s-10.521-69.773-29.903-98.845c-15.655-22.831 19.361-47.24 35.163-23.534 24.366 35.993 37.102 78.356 37.102 122.379zm-70.88 0c0 31.565-9.137 62.021-26.857 88.325-4.153 6.091-10.798 9.136-17.72 9.136-17.201 0-27.022-18.979-17.443-32.948 13.013-19.104 19.658-41.255 19.658-64.513 0-22.981-6.645-45.408-19.658-64.512-15.761-22.986 19.008-47.095 35.163-23.535 17.719 26.026 26.857 56.483 26.857 88.047z"]
            },
            faMixer: {
                prefix: "fab",
                iconName: "mixer",
                icon: [512, 512, [], "e056", "M114.57,76.07a45.71,45.71,0,0,0-67.51-6.41c-17.58,16.18-19,43.52-4.75,62.77l91.78,123L41.76,379.58c-14.23,19.25-13.11,46.59,4.74,62.77A45.71,45.71,0,0,0,114,435.94L242.89,262.7a12.14,12.14,0,0,0,0-14.23ZM470.24,379.58,377.91,255.45l91.78-123c14.22-19.25,12.83-46.59-4.75-62.77a45.71,45.71,0,0,0-67.51,6.41l-128,172.12a12.14,12.14,0,0,0,0,14.23L398,435.94a45.71,45.71,0,0,0,67.51,6.41C483.35,426.17,484.47,398.83,470.24,379.58Z"]
            },
            faMizuni: {
                prefix: "fab",
                iconName: "mizuni",
                icon: [496, 512, [], "f3cc", "M248 8C111 8 0 119.1 0 256c0 137 111 248 248 248s248-111 248-248C496 119.1 385 8 248 8zm-80 351.9c-31.4 10.6-58.8 27.3-80 48.2V136c0-22.1 17.9-40 40-40s40 17.9 40 40v223.9zm120-9.9c-12.9-2-26.2-3.1-39.8-3.1-13.8 0-27.2 1.1-40.2 3.1V136c0-22.1 17.9-40 40-40s40 17.9 40 40v214zm120 57.7c-21.2-20.8-48.6-37.4-80-48V136c0-22.1 17.9-40 40-40s40 17.9 40 40v271.7z"]
            },
            faModx: {
                prefix: "fab",
                iconName: "modx",
                icon: [448, 512, [], "f285", "M356 241.8l36.7 23.7V480l-133-83.8L356 241.8zM440 75H226.3l-23 37.8 153.5 96.5L440 75zm-89 142.8L55.2 32v214.5l46 29L351 217.8zM97 294.2L8 437h213.7l125-200.5L97 294.2z"]
            },
            faMonero: {
                prefix: "fab",
                iconName: "monero",
                icon: [496, 512, [], "f3d0", "M352 384h108.4C417 455.9 338.1 504 248 504S79 455.9 35.6 384H144V256.2L248 361l104-105v128zM88 336V128l159.4 159.4L408 128v208h74.8c8.5-25.1 13.2-52 13.2-80C496 119 385 8 248 8S0 119 0 256c0 28 4.6 54.9 13.2 80H88z"]
            },
            faNapster: {
                prefix: "fab",
                iconName: "napster",
                icon: [496, 512, [], "f3d2", "M298.3 373.6c-14.2 13.6-31.3 24.1-50.4 30.5-19-6.4-36.2-16.9-50.3-30.5h100.7zm44-199.6c20-16.9 43.6-29.2 69.6-36.2V299c0 219.4-328 217.6-328 .3V137.7c25.9 6.9 49.6 19.6 69.5 36.4 56.8-40 132.5-39.9 188.9-.1zm-208.8-58.5c64.4-60 164.3-60.1 228.9-.2-7.1 3.5-13.9 7.3-20.6 11.5-58.7-30.5-129.2-30.4-187.9.1-6.3-4-13.9-8.2-20.4-11.4zM43.8 93.2v69.3c-58.4 36.5-58.4 121.1.1 158.3 26.4 245.1 381.7 240.3 407.6 1.5l.3-1.7c58.7-36.3 58.9-121.7.2-158.2V93.2c-17.3.5-34 3-50.1 7.4-82-91.5-225.5-91.5-307.5.1-16.3-4.4-33.1-7-50.6-7.5zM259.2 352s36-.3 61.3-1.5c10.2-.5 21.1-4 25.5-6.5 26.3-15.1 25.4-39.2 26.2-47.4-79.5-.6-99.9-3.9-113 55.4zm-135.5-55.3c.8 8.2-.1 32.3 26.2 47.4 4.4 2.5 15.2 6 25.5 6.5 25.3 1.1 61.3 1.5 61.3 1.5-13.2-59.4-33.7-56.1-113-55.4zm169.1 123.4c-3.2-5.3-6.9-7.3-6.9-7.3-24.8 7.3-52.2 6.9-75.9 0 0 0-2.9 1.5-6.4 6.6-2.8 4.1-3.7 9.6-3.7 9.6 29.1 17.6 67.1 17.6 96.2 0-.1-.1-.3-4-3.3-8.9z"]
            },
            faNeos: {
                prefix: "fab",
                iconName: "neos",
                icon: [512, 512, [], "f612", "M415.44 512h-95.11L212.12 357.46v91.1L125.69 512H28V29.82L68.47 0h108.05l123.74 176.13V63.45L386.69 0h97.69v461.5zM38.77 35.27V496l72-52.88V194l215.5 307.64h84.79l52.35-38.17h-78.27L69 13zm82.54 466.61l80-58.78v-101l-79.76-114.4v220.94L49 501.89h72.34zM80.63 10.77l310.6 442.57h82.37V10.77h-79.75v317.56L170.91 10.77zM311 191.65l72 102.81V15.93l-72 53v122.72z"]
            },
            faNimblr: {
                prefix: "fab",
                iconName: "nimblr",
                icon: [384, 512, [], "f5a8", "M246.6 299.29c15.57 0 27.15 11.46 27.15 27s-11.62 27-27.15 27c-15.7 0-27.15-11.57-27.15-27s11.55-27 27.15-27zM113 326.25c0-15.61 11.68-27 27.15-27s27.15 11.46 27.15 27-11.47 27-27.15 27c-15.44 0-27.15-11.31-27.15-27M191.76 159C157 159 89.45 178.77 59.25 227L14 0v335.48C14 433.13 93.61 512 191.76 512s177.76-78.95 177.76-176.52S290.13 159 191.76 159zm0 308.12c-73.27 0-132.51-58.9-132.51-131.59s59.24-131.59 132.51-131.59 132.51 58.86 132.51 131.54S265 467.07 191.76 467.07z"]
            },
            faNode: {
                prefix: "fab",
                iconName: "node",
                icon: [640, 512, [], "f419", "M316.3 452c-2.1 0-4.2-.6-6.1-1.6L291 439c-2.9-1.6-1.5-2.2-.5-2.5 3.8-1.3 4.6-1.6 8.7-4 .4-.2 1-.1 1.4.1l14.8 8.8c.5.3 1.3.3 1.8 0L375 408c.5-.3.9-.9.9-1.6v-66.7c0-.7-.3-1.3-.9-1.6l-57.8-33.3c-.5-.3-1.2-.3-1.8 0l-57.8 33.3c-.6.3-.9 1-.9 1.6v66.7c0 .6.4 1.2.9 1.5l15.8 9.1c8.6 4.3 13.9-.8 13.9-5.8v-65.9c0-.9.7-1.7 1.7-1.7h7.3c.9 0 1.7.7 1.7 1.7v65.9c0 11.5-6.2 18-17.1 18-3.3 0-6 0-13.3-3.6l-15.2-8.7c-3.7-2.2-6.1-6.2-6.1-10.5v-66.7c0-4.3 2.3-8.4 6.1-10.5l57.8-33.4c3.7-2.1 8.5-2.1 12.1 0l57.8 33.4c3.7 2.2 6.1 6.2 6.1 10.5v66.7c0 4.3-2.3 8.4-6.1 10.5l-57.8 33.4c-1.7 1.1-3.8 1.7-6 1.7zm46.7-65.8c0-12.5-8.4-15.8-26.2-18.2-18-2.4-19.8-3.6-19.8-7.8 0-3.5 1.5-8.1 14.8-8.1 11.9 0 16.3 2.6 18.1 10.6.2.8.8 1.3 1.6 1.3h7.5c.5 0 .9-.2 1.2-.5.3-.4.5-.8.4-1.3-1.2-13.8-10.3-20.2-28.8-20.2-16.5 0-26.3 7-26.3 18.6 0 12.7 9.8 16.1 25.6 17.7 18.9 1.9 20.4 4.6 20.4 8.3 0 6.5-5.2 9.2-17.4 9.2-15.3 0-18.7-3.8-19.8-11.4-.1-.8-.8-1.4-1.7-1.4h-7.5c-.9 0-1.7.7-1.7 1.7 0 9.7 5.3 21.3 30.6 21.3 18.5 0 29-7.2 29-19.8zm54.5-50.1c0 6.1-5 11.1-11.1 11.1s-11.1-5-11.1-11.1c0-6.3 5.2-11.1 11.1-11.1 6-.1 11.1 4.8 11.1 11.1zm-1.8 0c0-5.2-4.2-9.3-9.4-9.3-5.1 0-9.3 4.1-9.3 9.3 0 5.2 4.2 9.4 9.3 9.4 5.2-.1 9.4-4.3 9.4-9.4zm-4.5 6.2h-2.6c-.1-.6-.5-3.8-.5-3.9-.2-.7-.4-1.1-1.3-1.1h-2.2v5h-2.4v-12.5h4.3c1.5 0 4.4 0 4.4 3.3 0 2.3-1.5 2.8-2.4 3.1 1.7.1 1.8 1.2 2.1 2.8.1 1 .3 2.7.6 3.3zm-2.8-8.8c0-1.7-1.2-1.7-1.8-1.7h-2v3.5h1.9c1.6 0 1.9-1.1 1.9-1.8zM137.3 191c0-2.7-1.4-5.1-3.7-6.4l-61.3-35.3c-1-.6-2.2-.9-3.4-1h-.6c-1.2 0-2.3.4-3.4 1L3.7 184.6C1.4 185.9 0 188.4 0 191l.1 95c0 1.3.7 2.5 1.8 3.2 1.1.7 2.5.7 3.7 0L42 268.3c2.3-1.4 3.7-3.8 3.7-6.4v-44.4c0-2.6 1.4-5.1 3.7-6.4l15.5-8.9c1.2-.7 2.4-1 3.7-1 1.3 0 2.6.3 3.7 1l15.5 8.9c2.3 1.3 3.7 3.8 3.7 6.4v44.4c0 2.6 1.4 5.1 3.7 6.4l36.4 20.9c1.1.7 2.6.7 3.7 0 1.1-.6 1.8-1.9 1.8-3.2l.2-95zM472.5 87.3v176.4c0 2.6-1.4 5.1-3.7 6.4l-61.3 35.4c-2.3 1.3-5.1 1.3-7.4 0l-61.3-35.4c-2.3-1.3-3.7-3.8-3.7-6.4v-70.8c0-2.6 1.4-5.1 3.7-6.4l61.3-35.4c2.3-1.3 5.1-1.3 7.4 0l15.3 8.8c1.7 1 3.9-.3 3.9-2.2v-94c0-2.8 3-4.6 5.5-3.2l36.5 20.4c2.3 1.2 3.8 3.7 3.8 6.4zm-46 128.9c0-.7-.4-1.3-.9-1.6l-21-12.2c-.6-.3-1.3-.3-1.9 0l-21 12.2c-.6.3-.9.9-.9 1.6v24.3c0 .7.4 1.3.9 1.6l21 12.1c.6.3 1.3.3 1.8 0l21-12.1c.6-.3.9-.9.9-1.6v-24.3zm209.8-.7c2.3-1.3 3.7-3.8 3.7-6.4V192c0-2.6-1.4-5.1-3.7-6.4l-60.9-35.4c-2.3-1.3-5.1-1.3-7.4 0l-61.3 35.4c-2.3 1.3-3.7 3.8-3.7 6.4v70.8c0 2.7 1.4 5.1 3.7 6.4l60.9 34.7c2.2 1.3 5 1.3 7.3 0l36.8-20.5c2.5-1.4 2.5-5 0-6.4L550 241.6c-1.2-.7-1.9-1.9-1.9-3.2v-22.2c0-1.3.7-2.5 1.9-3.2l19.2-11.1c1.1-.7 2.6-.7 3.7 0l19.2 11.1c1.1.7 1.9 1.9 1.9 3.2v17.4c0 2.8 3.1 4.6 5.6 3.2l36.7-21.3zM559 219c-.4.3-.7.7-.7 1.2v13.6c0 .5.3 1 .7 1.2l11.8 6.8c.4.3 1 .3 1.4 0L584 235c.4-.3.7-.7.7-1.2v-13.6c0-.5-.3-1-.7-1.2l-11.8-6.8c-.4-.3-1-.3-1.4 0L559 219zm-254.2 43.5v-70.4c0-2.6-1.6-5.1-3.9-6.4l-61.1-35.2c-2.1-1.2-5-1.4-7.4 0l-61.1 35.2c-2.3 1.3-3.9 3.7-3.9 6.4v70.4c0 2.8 1.9 5.2 4 6.4l61.2 35.2c2.4 1.4 5.2 1.3 7.4 0l61-35.2c1.8-1 3.1-2.7 3.6-4.7.1-.5.2-1.1.2-1.7zm-74.3-124.9l-.8.5h1.1l-.3-.5zm76.2 130.2l-.4-.7v.9l.4-.2z"]
            },
            faNodeJs: {
                prefix: "fab",
                iconName: "node-js",
                icon: [448, 512, [], "f3d3", "M224 508c-6.7 0-13.5-1.8-19.4-5.2l-61.7-36.5c-9.2-5.2-4.7-7-1.7-8 12.3-4.3 14.8-5.2 27.9-12.7 1.4-.8 3.2-.5 4.6.4l47.4 28.1c1.7 1 4.1 1 5.7 0l184.7-106.6c1.7-1 2.8-3 2.8-5V149.3c0-2.1-1.1-4-2.9-5.1L226.8 37.7c-1.7-1-4-1-5.7 0L36.6 144.3c-1.8 1-2.9 3-2.9 5.1v213.1c0 2 1.1 4 2.9 4.9l50.6 29.2c27.5 13.7 44.3-2.4 44.3-18.7V167.5c0-3 2.4-5.3 5.4-5.3h23.4c2.9 0 5.4 2.3 5.4 5.3V378c0 36.6-20 57.6-54.7 57.6-10.7 0-19.1 0-42.5-11.6l-48.4-27.9C8.1 389.2.7 376.3.7 362.4V149.3c0-13.8 7.4-26.8 19.4-33.7L204.6 9c11.7-6.6 27.2-6.6 38.8 0l184.7 106.7c12 6.9 19.4 19.8 19.4 33.7v213.1c0 13.8-7.4 26.7-19.4 33.7L243.4 502.8c-5.9 3.4-12.6 5.2-19.4 5.2zm149.1-210.1c0-39.9-27-50.5-83.7-58-57.4-7.6-63.2-11.5-63.2-24.9 0-11.1 4.9-25.9 47.4-25.9 37.9 0 51.9 8.2 57.7 33.8.5 2.4 2.7 4.2 5.2 4.2h24c1.5 0 2.9-.6 3.9-1.7s1.5-2.6 1.4-4.1c-3.7-44.1-33-64.6-92.2-64.6-52.7 0-84.1 22.2-84.1 59.5 0 40.4 31.3 51.6 81.8 56.6 60.5 5.9 65.2 14.8 65.2 26.7 0 20.6-16.6 29.4-55.5 29.4-48.9 0-59.6-12.3-63.2-36.6-.4-2.6-2.6-4.5-5.3-4.5h-23.9c-3 0-5.3 2.4-5.3 5.3 0 31.1 16.9 68.2 97.8 68.2 58.4-.1 92-23.2 92-63.4z"]
            },
            faNpm: {
                prefix: "fab",
                iconName: "npm",
                icon: [576, 512, [], "f3d4", "M288 288h-32v-64h32v64zm288-128v192H288v32H160v-32H0V160h576zm-416 32H32v128h64v-96h32v96h32V192zm160 0H192v160h64v-32h64V192zm224 0H352v128h64v-96h32v96h32v-96h32v96h32V192z"]
            },
            faNs8: {
                prefix: "fab",
                iconName: "ns8",
                icon: [640, 512, [], "f3d5", "M104.324,269.172h26.067V242.994H104.324Zm52.466-26.178-.055-26.178v-.941a39.325,39.325,0,0,0-78.644.941v.166h26.4v-.166a12.98,12.98,0,0,1,25.956,0v26.178Zm52.356,25.846a91.1,91.1,0,0,1-91.1,91.1h-.609a91.1,91.1,0,0,1-91.1-91.1H0v.166A117.33,117.33,0,0,0,117.44,386.28h.775A117.331,117.331,0,0,0,235.49,268.84V242.828H209.146Zm-157.233,0a65.362,65.362,0,0,0,130.723,0H156.292a39.023,39.023,0,0,1-78.035,0V242.883H51.968v-26.62A65.42,65.42,0,0,1,182.8,217.48v25.293h26.344V217.48a91.761,91.761,0,0,0-183.522,0v25.4H51.913Zm418.4-71.173c13.67,0,24.573,6.642,30.052,18.264l.719,1.549,23.245-11.511-.609-1.439c-8.025-19.26-28.5-31.27-53.407-31.27-23.134,0-43.611,11.4-50.972,28.447-.123,26.876-.158,23.9,0,24.85,4.7,11.013,14.555,19.37,28.668,24.241a102.033,102.033,0,0,0,19.813,3.984c5.479.72,10.626,1.384,15.829,3.1,6.364,2.1,10.46,5.257,12.84,9.851v9.851c-3.708,7.527-13.781,12.342-25.791,12.342-14.334,0-25.956-6.918-31.933-19.039l-.72-1.494L415.026,280.9l.553,1.439c7.915,19.426,29.609,32.044,55.289,32.044,23.632,0,44.608-11.4,52.3-28.447l.166-25.9-.166-.664c-4.87-11.014-15.219-19.647-28.944-24.241-7.693-2.712-14.335-3.6-20.7-4.427a83.777,83.777,0,0,1-14.832-2.878c-6.31-1.937-10.4-5.092-12.619-9.63v-8.412C449.45,202.427,458.969,197.667,470.315,197.667ZM287.568,311.344h26.067v-68.4H287.568Zm352.266-53.3c-2.933-6.254-8.3-12.01-15.441-16.714A37.99,37.99,0,0,0,637.4,226l.166-25.347-.166-.664C630.038,184,610.667,173.26,589.25,173.26S548.461,184,541.1,199.992l-.166,25.347.166.664a39.643,39.643,0,0,0,13.006,15.331c-7.2,4.7-12.508,10.46-15.441,16.714l-.166,28.889.166.72c7.582,15.994,27.893,26.731,50.585,26.731s43.057-10.737,50.584-26.731l.166-28.89Zm-73.22-50.806c3.6-6.31,12.563-10.516,22.58-10.516s19.038,4.206,22.636,10.516v13.725c-3.542,6.2-12.563,10.349-22.636,10.349s-19.094-4.15-22.58-10.349Zm47.319,72.169c-3.764,6.641-13.338,10.9-24.683,10.9-11.125,0-20.976-4.372-24.684-10.9V263.25c3.708-6.309,13.5-10.515,24.684-10.515,11.345,0,20.919,4.15,24.683,10.515ZM376.4,265.962l-59.827-89.713h-29v40.623h26.51v.387l62.539,94.085H402.3V176.249H376.4Z"]
            },
            faNutritionix: {
                prefix: "fab",
                iconName: "nutritionix",
                icon: [400, 512, [], "f3d6", "M88 8.1S221.4-.1 209 112.5c0 0 19.1-74.9 103-40.6 0 0-17.7 74-88 56 0 0 14.6-54.6 66.1-56.6 0 0-39.9-10.3-82.1 48.8 0 0-19.8-94.5-93.6-99.7 0 0 75.2 19.4 77.6 107.5 0 .1-106.4 7-104-119.8zm312 315.6c0 48.5-9.7 95.3-32 132.3-42.2 30.9-105 48-168 48-62.9 0-125.8-17.1-168-48C9.7 419 0 372.2 0 323.7 0 275.3 17.7 229 40 192c42.2-30.9 97.1-48.6 160-48.6 63 0 117.8 17.6 160 48.6 22.3 37 40 83.3 40 131.7zM120 428c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zM192 428c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zM264 428c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zM336 428c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm24-39.6c-4.8-22.3-7.4-36.9-16-56-38.8-19.9-90.5-32-144-32S94.8 180.1 56 200c-8.8 19.5-11.2 33.9-16 56 42.2-7.9 98.7-14.8 160-14.8s117.8 6.9 160 14.8z"]
            },
            faOctopusDeploy: {
                prefix: "fab",
                iconName: "octopus-deploy",
                icon: [512, 512, [], "e082", "M455.6,349.2c-45.891-39.09-36.67-77.877-16.095-128.11C475.16,134.04,415.967,34.14,329.93,8.3,237.04-19.6,134.252,24.341,99.677,117.147a180.862,180.862,0,0,0-10.988,73.544c1.733,29.543,14.717,52.97,24.09,80.3,17.2,50.161-28.1,92.743-66.662,117.582-46.806,30.2-36.319,39.857-8.428,41.858,23.378,1.68,44.478-4.548,65.265-15.045,9.2-4.647,40.687-18.931,45.13-28.588C135.9,413.388,111.122,459.5,126.621,488.9c19.1,36.229,67.112-31.77,76.709-45.812,8.591-12.572,42.963-81.279,63.627-46.926,18.865,31.361,8.6,76.391,35.738,104.622,32.854,34.2,51.155-18.312,51.412-44.221.163-16.411-6.1-95.852,29.9-59.944C405.428,418,436.912,467.8,472.568,463.642c38.736-4.516-22.123-67.967-28.262-78.695,5.393,4.279,53.665,34.128,53.818,9.52C498.234,375.678,468.039,359.8,455.6,349.2Z"]
            },
            faOdnoklassniki: {
                prefix: "fab",
                iconName: "odnoklassniki",
                icon: [320, 512, [], "f263", "M275.1 334c-27.4 17.4-65.1 24.3-90 26.9l20.9 20.6 76.3 76.3c27.9 28.6-17.5 73.3-45.7 45.7-19.1-19.4-47.1-47.4-76.3-76.6L84 503.4c-28.2 27.5-73.6-17.6-45.4-45.7 19.4-19.4 47.1-47.4 76.3-76.3l20.6-20.6c-24.6-2.6-62.9-9.1-90.6-26.9-32.6-21-46.9-33.3-34.3-59 7.4-14.6 27.7-26.9 54.6-5.7 0 0 36.3 28.9 94.9 28.9s94.9-28.9 94.9-28.9c26.9-21.1 47.1-8.9 54.6 5.7 12.4 25.7-1.9 38-34.5 59.1zM30.3 129.7C30.3 58 88.6 0 160 0s129.7 58 129.7 129.7c0 71.4-58.3 129.4-129.7 129.4s-129.7-58-129.7-129.4zm66 0c0 35.1 28.6 63.7 63.7 63.7s63.7-28.6 63.7-63.7c0-35.4-28.6-64-63.7-64s-63.7 28.6-63.7 64z"]
            },
            faOdnoklassnikiSquare: {
                prefix: "fab",
                iconName: "odnoklassniki-square",
                icon: [448, 512, [], "f264", "M184.2 177.1c0-22.1 17.9-40 39.8-40s39.8 17.9 39.8 40c0 22-17.9 39.8-39.8 39.8s-39.8-17.9-39.8-39.8zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-305.1 97.1c0 44.6 36.4 80.9 81.1 80.9s81.1-36.2 81.1-80.9c0-44.8-36.4-81.1-81.1-81.1s-81.1 36.2-81.1 81.1zm174.5 90.7c-4.6-9.1-17.3-16.8-34.1-3.6 0 0-22.7 18-59.3 18s-59.3-18-59.3-18c-16.8-13.2-29.5-5.5-34.1 3.6-7.9 16.1 1.1 23.7 21.4 37 17.3 11.1 41.2 15.2 56.6 16.8l-12.9 12.9c-18.2 18-35.5 35.5-47.7 47.7-17.6 17.6 10.7 45.8 28.4 28.6l47.7-47.9c18.2 18.2 35.7 35.7 47.7 47.9 17.6 17.2 46-10.7 28.6-28.6l-47.7-47.7-13-12.9c15.5-1.6 39.1-5.9 56.2-16.8 20.4-13.3 29.3-21 21.5-37z"]
            },
            faOldRepublic: {
                prefix: "fab",
                iconName: "old-republic",
                icon: [496, 512, [], "f510", "M235.76 10.23c7.5-.31 15-.28 22.5-.09 3.61.14 7.2.4 10.79.73 4.92.27 9.79 1.03 14.67 1.62 2.93.43 5.83.98 8.75 1.46 7.9 1.33 15.67 3.28 23.39 5.4 12.24 3.47 24.19 7.92 35.76 13.21 26.56 12.24 50.94 29.21 71.63 49.88 20.03 20.09 36.72 43.55 48.89 69.19 1.13 2.59 2.44 5.1 3.47 7.74 2.81 6.43 5.39 12.97 7.58 19.63 4.14 12.33 7.34 24.99 9.42 37.83.57 3.14 1.04 6.3 1.4 9.47.55 3.83.94 7.69 1.18 11.56.83 8.34.84 16.73.77 25.1-.07 4.97-.26 9.94-.75 14.89-.24 3.38-.51 6.76-.98 10.12-.39 2.72-.63 5.46-1.11 8.17-.9 5.15-1.7 10.31-2.87 15.41-4.1 18.5-10.3 36.55-18.51 53.63-15.77 32.83-38.83 62.17-67.12 85.12a246.503 246.503 0 0 1-56.91 34.86c-6.21 2.68-12.46 5.25-18.87 7.41-3.51 1.16-7.01 2.38-10.57 3.39-6.62 1.88-13.29 3.64-20.04 5-4.66.91-9.34 1.73-14.03 2.48-5.25.66-10.5 1.44-15.79 1.74-6.69.66-13.41.84-20.12.81-6.82.03-13.65-.12-20.45-.79-3.29-.23-6.57-.5-9.83-.95-2.72-.39-5.46-.63-8.17-1.11-4.12-.72-8.25-1.37-12.35-2.22-4.25-.94-8.49-1.89-12.69-3.02-8.63-2.17-17.08-5.01-25.41-8.13-10.49-4.12-20.79-8.75-30.64-14.25-2.14-1.15-4.28-2.29-6.35-3.57-11.22-6.58-21.86-14.1-31.92-22.34-34.68-28.41-61.41-66.43-76.35-108.7-3.09-8.74-5.71-17.65-7.8-26.68-1.48-6.16-2.52-12.42-3.58-18.66-.4-2.35-.61-4.73-.95-7.09-.6-3.96-.75-7.96-1.17-11.94-.8-9.47-.71-18.99-.51-28.49.14-3.51.34-7.01.7-10.51.31-3.17.46-6.37.92-9.52.41-2.81.65-5.65 1.16-8.44.7-3.94 1.3-7.9 2.12-11.82 3.43-16.52 8.47-32.73 15.26-48.18 1.15-2.92 2.59-5.72 3.86-8.59 8.05-16.71 17.9-32.56 29.49-47.06 20-25.38 45.1-46.68 73.27-62.47 7.5-4.15 15.16-8.05 23.07-11.37 15.82-6.88 32.41-11.95 49.31-15.38 3.51-.67 7.04-1.24 10.56-1.85 2.62-.47 5.28-.7 7.91-1.08 3.53-.53 7.1-.68 10.65-1.04 2.46-.24 4.91-.36 7.36-.51m8.64 24.41c-9.23.1-18.43.99-27.57 2.23-7.3 1.08-14.53 2.6-21.71 4.3-13.91 3.5-27.48 8.34-40.46 14.42-10.46 4.99-20.59 10.7-30.18 17.22-4.18 2.92-8.4 5.8-12.34 9.03-5.08 3.97-9.98 8.17-14.68 12.59-2.51 2.24-4.81 4.7-7.22 7.06-28.22 28.79-48.44 65.39-57.5 104.69-2.04 8.44-3.54 17.02-4.44 25.65-1.1 8.89-1.44 17.85-1.41 26.8.11 7.14.38 14.28 1.22 21.37.62 7.12 1.87 14.16 3.2 21.18 1.07 4.65 2.03 9.32 3.33 13.91 6.29 23.38 16.5 45.7 30.07 65.75 8.64 12.98 18.78 24.93 29.98 35.77 16.28 15.82 35.05 29.04 55.34 39.22 7.28 3.52 14.66 6.87 22.27 9.63 5.04 1.76 10.06 3.57 15.22 4.98 11.26 3.23 22.77 5.6 34.39 7.06 2.91.29 5.81.61 8.72.9 13.82 1.08 27.74 1 41.54-.43 4.45-.6 8.92-.99 13.35-1.78 3.63-.67 7.28-1.25 10.87-2.1 4.13-.98 8.28-1.91 12.36-3.07 26.5-7.34 51.58-19.71 73.58-36.2 15.78-11.82 29.96-25.76 42.12-41.28 3.26-4.02 6.17-8.31 9.13-12.55 3.39-5.06 6.58-10.25 9.6-15.54 2.4-4.44 4.74-8.91 6.95-13.45 5.69-12.05 10.28-24.62 13.75-37.49 2.59-10.01 4.75-20.16 5.9-30.45 1.77-13.47 1.94-27.1 1.29-40.65-.29-3.89-.67-7.77-1-11.66-2.23-19.08-6.79-37.91-13.82-55.8-5.95-15.13-13.53-29.63-22.61-43.13-12.69-18.8-28.24-35.68-45.97-49.83-25.05-20-54.47-34.55-85.65-42.08-7.78-1.93-15.69-3.34-23.63-4.45-3.91-.59-7.85-.82-11.77-1.24-7.39-.57-14.81-.72-22.22-.58zM139.26 83.53c13.3-8.89 28.08-15.38 43.3-20.18-3.17 1.77-6.44 3.38-9.53 5.29-11.21 6.68-21.52 14.9-30.38 24.49-6.8 7.43-12.76 15.73-17.01 24.89-3.29 6.86-5.64 14.19-6.86 21.71-.93 4.85-1.3 9.81-1.17 14.75.13 13.66 4.44 27.08 11.29 38.82 5.92 10.22 13.63 19.33 22.36 27.26 4.85 4.36 10.24 8.09 14.95 12.6 2.26 2.19 4.49 4.42 6.43 6.91 2.62 3.31 4.89 6.99 5.99 11.1.9 3.02.66 6.2.69 9.31.02 4.1-.04 8.2.03 12.3.14 3.54-.02 7.09.11 10.63.08 2.38.02 4.76.05 7.14.16 5.77.06 11.53.15 17.3.11 2.91.02 5.82.13 8.74.03 1.63.13 3.28-.03 4.91-.91.12-1.82.18-2.73.16-10.99 0-21.88-2.63-31.95-6.93-6-2.7-11.81-5.89-17.09-9.83-5.75-4.19-11.09-8.96-15.79-14.31-6.53-7.24-11.98-15.39-16.62-23.95-1.07-2.03-2.24-4.02-3.18-6.12-1.16-2.64-2.62-5.14-3.67-7.82-4.05-9.68-6.57-19.94-8.08-30.31-.49-4.44-1.09-8.88-1.2-13.35-.7-15.73.84-31.55 4.67-46.82 2.12-8.15 4.77-16.18 8.31-23.83 6.32-14.2 15.34-27.18 26.3-38.19 6.28-6.2 13.13-11.84 20.53-16.67zm175.37-20.12c2.74.74 5.41 1.74 8.09 2.68 6.36 2.33 12.68 4.84 18.71 7.96 13.11 6.44 25.31 14.81 35.82 24.97 10.2 9.95 18.74 21.6 25.14 34.34 1.28 2.75 2.64 5.46 3.81 8.26 6.31 15.1 10 31.26 11.23 47.57.41 4.54.44 9.09.45 13.64.07 11.64-1.49 23.25-4.3 34.53-1.97 7.27-4.35 14.49-7.86 21.18-3.18 6.64-6.68 13.16-10.84 19.24-6.94 10.47-15.6 19.87-25.82 27.22-10.48 7.64-22.64 13.02-35.4 15.38-3.51.69-7.08 1.08-10.66 1.21-1.85.06-3.72.16-5.56-.1-.28-2.15 0-4.31-.01-6.46-.03-3.73.14-7.45.1-11.17.19-7.02.02-14.05.21-21.07.03-2.38-.03-4.76.03-7.14.17-5.07-.04-10.14.14-15.21.1-2.99-.24-6.04.51-8.96.66-2.5 1.78-4.86 3.09-7.08 4.46-7.31 11.06-12.96 17.68-18.26 5.38-4.18 10.47-8.77 15.02-13.84 7.68-8.37 14.17-17.88 18.78-28.27 2.5-5.93 4.52-12.1 5.55-18.46.86-4.37 1.06-8.83 1.01-13.27-.02-7.85-1.4-15.65-3.64-23.17-1.75-5.73-4.27-11.18-7.09-16.45-3.87-6.93-8.65-13.31-13.96-19.2-9.94-10.85-21.75-19.94-34.6-27.1-1.85-1.02-3.84-1.82-5.63-2.97zm-100.8 58.45c.98-1.18 1.99-2.33 3.12-3.38-.61.93-1.27 1.81-1.95 2.68-3.1 3.88-5.54 8.31-7.03 13.06-.87 3.27-1.68 6.6-1.73 10-.07 2.52-.08 5.07.32 7.57 1.13 7.63 4.33 14.85 8.77 21.12 2 2.7 4.25 5.27 6.92 7.33 1.62 1.27 3.53 2.09 5.34 3.05 3.11 1.68 6.32 3.23 9.07 5.48 2.67 2.09 4.55 5.33 4.4 8.79-.01 73.67 0 147.34-.01 221.02 0 1.35-.08 2.7.04 4.04.13 1.48.82 2.83 1.47 4.15.86 1.66 1.78 3.34 3.18 4.62.85.77 1.97 1.4 3.15 1.24 1.5-.2 2.66-1.35 3.45-2.57.96-1.51 1.68-3.16 2.28-4.85.76-2.13.44-4.42.54-6.63.14-4.03-.02-8.06.14-12.09.03-5.89.03-11.77.06-17.66.14-3.62.03-7.24.11-10.86.15-4.03-.02-8.06.14-12.09.03-5.99.03-11.98.07-17.97.14-3.62.02-7.24.11-10.86.14-3.93-.02-7.86.14-11.78.03-5.99.03-11.98.06-17.97.16-3.94-.01-7.88.19-11.82.29 1.44.13 2.92.22 4.38.19 3.61.42 7.23.76 10.84.32 3.44.44 6.89.86 10.32.37 3.1.51 6.22.95 9.31.57 4.09.87 8.21 1.54 12.29 1.46 9.04 2.83 18.11 5.09 26.99 1.13 4.82 2.4 9.61 4 14.3 2.54 7.9 5.72 15.67 10.31 22.62 1.73 2.64 3.87 4.98 6.1 7.21.27.25.55.51.88.71.6.25 1.31-.07 1.7-.57.71-.88 1.17-1.94 1.7-2.93 4.05-7.8 8.18-15.56 12.34-23.31.7-1.31 1.44-2.62 2.56-3.61 1.75-1.57 3.84-2.69 5.98-3.63 2.88-1.22 5.9-2.19 9.03-2.42 6.58-.62 13.11.75 19.56 1.85 3.69.58 7.4 1.17 11.13 1.41 3.74.1 7.48.05 11.21-.28 8.55-.92 16.99-2.96 24.94-6.25 5.3-2.24 10.46-4.83 15.31-7.93 11.46-7.21 21.46-16.57 30.04-27.01 1.17-1.42 2.25-2.9 3.46-4.28-1.2 3.24-2.67 6.37-4.16 9.48-1.25 2.9-2.84 5.61-4.27 8.42-5.16 9.63-11.02 18.91-17.75 27.52-4.03 5.21-8.53 10.05-13.33 14.57-6.64 6.05-14.07 11.37-22.43 14.76-8.21 3.37-17.31 4.63-26.09 3.29-3.56-.58-7.01-1.69-10.41-2.88-2.79-.97-5.39-2.38-8.03-3.69-3.43-1.71-6.64-3.81-9.71-6.08 2.71 3.06 5.69 5.86 8.7 8.61 4.27 3.76 8.74 7.31 13.63 10.23 3.98 2.45 8.29 4.4 12.84 5.51 1.46.37 2.96.46 4.45.6-1.25 1.1-2.63 2.04-3.99 2.98-9.61 6.54-20.01 11.86-30.69 16.43-20.86 8.7-43.17 13.97-65.74 15.34-4.66.24-9.32.36-13.98.36-4.98-.11-9.97-.13-14.92-.65-11.2-.76-22.29-2.73-33.17-5.43-10.35-2.71-20.55-6.12-30.3-10.55-8.71-3.86-17.12-8.42-24.99-13.79-1.83-1.31-3.74-2.53-5.37-4.08 6.6-1.19 13.03-3.39 18.99-6.48 5.74-2.86 10.99-6.66 15.63-11.07 2.24-2.19 4.29-4.59 6.19-7.09-3.43 2.13-6.93 4.15-10.62 5.78-4.41 2.16-9.07 3.77-13.81 5.02-5.73 1.52-11.74 1.73-17.61 1.14-8.13-.95-15.86-4.27-22.51-8.98-4.32-2.94-8.22-6.43-11.96-10.06-9.93-10.16-18.2-21.81-25.66-33.86-3.94-6.27-7.53-12.75-11.12-19.22-1.05-2.04-2.15-4.05-3.18-6.1 2.85 2.92 5.57 5.97 8.43 8.88 8.99 8.97 18.56 17.44 29.16 24.48 7.55 4.9 15.67 9.23 24.56 11.03 3.11.73 6.32.47 9.47.81 2.77.28 5.56.2 8.34.3 5.05.06 10.11.04 15.16-.16 3.65-.16 7.27-.66 10.89-1.09 2.07-.25 4.11-.71 6.14-1.2 3.88-.95 8.11-.96 11.83.61 4.76 1.85 8.44 5.64 11.38 9.71 2.16 3.02 4.06 6.22 5.66 9.58 1.16 2.43 2.46 4.79 3.55 7.26 1 2.24 2.15 4.42 3.42 6.52.67 1.02 1.4 2.15 2.62 2.55 1.06-.75 1.71-1.91 2.28-3.03 2.1-4.16 3.42-8.65 4.89-13.05 2.02-6.59 3.78-13.27 5.19-20.02 2.21-9.25 3.25-18.72 4.54-28.13.56-3.98.83-7.99 1.31-11.97.87-10.64 1.9-21.27 2.24-31.94.08-1.86.24-3.71.25-5.57.01-4.35.25-8.69.22-13.03-.01-2.38-.01-4.76 0-7.13.05-5.07-.2-10.14-.22-15.21-.2-6.61-.71-13.2-1.29-19.78-.73-5.88-1.55-11.78-3.12-17.51-2.05-7.75-5.59-15.03-9.8-21.82-3.16-5.07-6.79-9.88-11.09-14.03-3.88-3.86-8.58-7.08-13.94-8.45-1.5-.41-3.06-.45-4.59-.64.07-2.99.7-5.93 1.26-8.85 1.59-7.71 3.8-15.3 6.76-22.6 1.52-4.03 3.41-7.9 5.39-11.72 3.45-6.56 7.62-12.79 12.46-18.46zm31.27 1.7c.35-.06.71-.12 1.07-.19.19 1.79.09 3.58.1 5.37v38.13c-.01 1.74.13 3.49-.15 5.22-.36-.03-.71-.05-1.06-.05-.95-3.75-1.72-7.55-2.62-11.31-.38-1.53-.58-3.09-1.07-4.59-1.7-.24-3.43-.17-5.15-.2-5.06-.01-10.13 0-15.19-.01-1.66-.01-3.32.09-4.98-.03-.03-.39-.26-.91.16-1.18 1.28-.65 2.72-.88 4.06-1.35 3.43-1.14 6.88-2.16 10.31-3.31 1.39-.48 2.9-.72 4.16-1.54.04-.56.02-1.13-.05-1.68-1.23-.55-2.53-.87-3.81-1.28-3.13-1.03-6.29-1.96-9.41-3.02-1.79-.62-3.67-1-5.41-1.79-.03-.37-.07-.73-.11-1.09 5.09-.19 10.2.06 15.3-.12 3.36-.13 6.73.08 10.09-.07.12-.39.26-.77.37-1.16 1.08-4.94 2.33-9.83 3.39-14.75zm5.97-.2c.36.05.72.12 1.08.2.98 3.85 1.73 7.76 2.71 11.61.36 1.42.56 2.88 1.03 4.27 2.53.18 5.07-.01 7.61.05 5.16.12 10.33.12 15.49.07.76-.01 1.52.03 2.28.08-.04.36-.07.72-.1 1.08-1.82.83-3.78 1.25-5.67 1.89-3.73 1.23-7.48 2.39-11.22 3.57-.57.17-1.12.42-1.67.64-.15.55-.18 1.12-.12 1.69.87.48 1.82.81 2.77 1.09 4.88 1.52 9.73 3.14 14.63 4.6.38.13.78.27 1.13.49.4.27.23.79.15 1.18-1.66.13-3.31.03-4.97.04-5.17.01-10.33-.01-15.5.01-1.61.03-3.22-.02-4.82.21-.52 1.67-.72 3.42-1.17 5.11-.94 3.57-1.52 7.24-2.54 10.78-.36.01-.71.02-1.06.06-.29-1.73-.15-3.48-.15-5.22v-38.13c.02-1.78-.08-3.58.11-5.37zM65.05 168.33c1.12-2.15 2.08-4.4 3.37-6.46-1.82 7.56-2.91 15.27-3.62 23-.8 7.71-.85 15.49-.54 23.23 1.05 19.94 5.54 39.83 14.23 57.88 2.99 5.99 6.35 11.83 10.5 17.11 6.12 7.47 12.53 14.76 19.84 21.09 4.8 4.1 9.99 7.78 15.54 10.8 3.27 1.65 6.51 3.39 9.94 4.68 5.01 2.03 10.19 3.61 15.42 4.94 3.83.96 7.78 1.41 11.52 2.71 5 1.57 9.47 4.61 13.03 8.43 4.93 5.23 8.09 11.87 10.2 18.67.99 2.9 1.59 5.91 2.17 8.92.15.75.22 1.52.16 2.29-6.5 2.78-13.26 5.06-20.26 6.18-4.11.78-8.29.99-12.46 1.08-10.25.24-20.47-1.76-30.12-5.12-3.74-1.42-7.49-2.85-11.03-4.72-8.06-3.84-15.64-8.7-22.46-14.46-2.92-2.55-5.83-5.13-8.4-8.03-9.16-9.83-16.3-21.41-21.79-33.65-2.39-5.55-4.61-11.18-6.37-16.96-1.17-3.94-2.36-7.89-3.26-11.91-.75-2.94-1.22-5.95-1.87-8.92-.46-2.14-.69-4.32-1.03-6.48-.85-5.43-1.28-10.93-1.33-16.43.11-6.18.25-12.37 1.07-18.5.4-2.86.67-5.74 1.15-8.6.98-5.7 2.14-11.37 3.71-16.93 3.09-11.65 7.48-22.95 12.69-33.84zm363.73-6.44c1.1 1.66 1.91 3.48 2.78 5.26 2.1 4.45 4.24 8.9 6.02 13.49 7.61 18.76 12.3 38.79 13.04 59.05.02 1.76.07 3.52.11 5.29.13 9.57-1.27 19.09-3.18 28.45-.73 3.59-1.54 7.17-2.58 10.69-4.04 14.72-10 29-18.41 41.78-8.21 12.57-19.01 23.55-31.84 31.41-5.73 3.59-11.79 6.64-18.05 9.19-5.78 2.19-11.71 4.03-17.8 5.11-6.4 1.05-12.91 1.52-19.4 1.23-7.92-.48-15.78-2.07-23.21-4.85-1.94-.8-3.94-1.46-5.84-2.33-.21-1.51.25-2.99.53-4.46 1.16-5.74 3.03-11.36 5.7-16.58 2.37-4.51 5.52-8.65 9.46-11.9 2.43-2.05 5.24-3.61 8.16-4.83 3.58-1.5 7.47-1.97 11.24-2.83 7.23-1.71 14.37-3.93 21.15-7 10.35-4.65 19.71-11.38 27.65-19.46 1.59-1.61 3.23-3.18 4.74-4.87 3.37-3.76 6.71-7.57 9.85-11.53 7.48-10.07 12.82-21.59 16.71-33.48 1.58-5.3 3.21-10.6 4.21-16.05.63-2.87 1.04-5.78 1.52-8.68.87-6.09 1.59-12.22 1.68-18.38.12-6.65.14-13.32-.53-19.94-.73-7.99-1.87-15.96-3.71-23.78z"]
            },
            faOpencart: {
                prefix: "fab",
                iconName: "opencart",
                icon: [640, 512, [], "f23d", "M423.3 440.7c0 25.3-20.3 45.6-45.6 45.6s-45.8-20.3-45.8-45.6 20.6-45.8 45.8-45.8c25.4 0 45.6 20.5 45.6 45.8zm-253.9-45.8c-25.3 0-45.6 20.6-45.6 45.8s20.3 45.6 45.6 45.6 45.8-20.3 45.8-45.6-20.5-45.8-45.8-45.8zm291.7-270C158.9 124.9 81.9 112.1 0 25.7c34.4 51.7 53.3 148.9 373.1 144.2 333.3-5 130 86.1 70.8 188.9 186.7-166.7 319.4-233.9 17.2-233.9z"]
            },
            faOpenid: {
                prefix: "fab",
                iconName: "openid",
                icon: [448, 512, [], "f19b", "M271.5 432l-68 32C88.5 453.7 0 392.5 0 318.2c0-71.5 82.5-131 191.7-144.3v43c-71.5 12.5-124 53-124 101.3 0 51 58.5 93.3 135.7 103v-340l68-33.2v384zM448 291l-131.3-28.5 36.8-20.7c-19.5-11.5-43.5-20-70-24.8v-43c46.2 5.5 87.7 19.5 120.3 39.3l35-19.8L448 291z"]
            },
            faOpera: {
                prefix: "fab",
                iconName: "opera",
                icon: [496, 512, [], "f26a", "M313.9 32.7c-170.2 0-252.6 223.8-147.5 355.1 36.5 45.4 88.6 75.6 147.5 75.6 36.3 0 70.3-11.1 99.4-30.4-43.8 39.2-101.9 63-165.3 63-3.9 0-8 0-11.9-.3C104.6 489.6 0 381.1 0 248 0 111 111 0 248 0h.8c63.1.3 120.7 24.1 164.4 63.1-29-19.4-63.1-30.4-99.3-30.4zm101.8 397.7c-40.9 24.7-90.7 23.6-132-5.8 56.2-20.5 97.7-91.6 97.7-176.6 0-84.7-41.2-155.8-97.4-176.6 41.8-29.2 91.2-30.3 132.9-5 105.9 98.7 105.5 265.7-1.2 364z"]
            },
            faOptinMonster: {
                prefix: "fab",
                iconName: "optin-monster",
                icon: [576, 512, [], "f23c", "M572.6 421.4c5.6-9.5 4.7-15.2-5.4-11.6-3-4.9-7-9.5-11.1-13.8 2.9-9.7-.7-14.2-10.8-9.2-4.6-3.2-10.3-6.5-15.9-9.2 0-15.1-11.6-11.6-17.6-5.7-10.4-1.5-18.7-.3-26.8 5.7.3-6.5.3-13 .3-19.7 12.6 0 40.2-11 45.9-36.2 1.4-6.8 1.6-13.8-.3-21.9-3-13.5-14.3-21.3-25.1-25.7-.8-5.9-7.6-14.3-14.9-15.9s-12.4 4.9-14.1 10.3c-8.5 0-19.2 2.8-21.1 8.4-5.4-.5-11.1-1.4-16.8-1.9 2.7-1.9 5.4-3.5 8.4-4.6 5.4-9.2 14.6-11.4 25.7-11.6V256c19.5-.5 43-5.9 53.8-18.1 12.7-13.8 14.6-37.3 12.4-55.1-2.4-17.3-9.7-37.6-24.6-48.1-8.4-5.9-21.6-.8-22.7 9.5-2.2 19.6 1.2 30-38.6 25.1-10.3-23.8-24.6-44.6-42.7-60C341 49.6 242.9 55.5 166.4 71.7c19.7 4.6 41.1 8.6 59.7 16.5-26.2 2.4-52.7 11.3-76.2 23.2-32.8 17-44 29.9-56.7 42.4 14.9-2.2 28.9-5.1 43.8-3.8-9.7 5.4-18.4 12.2-26.5 20-25.8.9-23.8-5.3-26.2-25.9-1.1-10.5-14.3-15.4-22.7-9.7-28.1 19.9-33.5 79.9-12.2 103.5 10.8 12.2 35.1 17.3 54.9 17.8-.3 1.1-.3 1.9-.3 2.7 10.8.5 19.5 2.7 24.6 11.6 3 1.1 5.7 2.7 8.1 4.6-5.4.5-11.1 1.4-16.5 1.9-3.3-6.6-13.7-8.1-21.1-8.1-1.6-5.7-6.5-12.2-14.1-10.3-6.8 1.9-14.1 10-14.9 15.9-22.5 9.5-30.1 26.8-25.1 47.6 5.3 24.8 33 36.2 45.9 36.2v19.7c-6.6-5-14.3-7.5-26.8-5.7-5.5-5.5-17.3-10.1-17.3 5.7-5.9 2.7-11.4 5.9-15.9 9.2-9.8-4.9-13.6-1.7-11.1 9.2-4.1 4.3-7.8 8.6-11.1 13.8-10.2-3.7-11 2.2-5.4 11.6-1.1 3.5-1.6 7-1.9 10.8-.5 31.6 44.6 64 73.5 65.1 17.3.5 34.6-8.4 43-23.5 113.2 4.9 226.7 4.1 340.2 0 8.1 15.1 25.4 24.3 42.7 23.5 29.2-1.1 74.3-33.5 73.5-65.1.2-3.7-.7-7.2-1.7-10.7zm-73.8-254c1.1-3 2.4-8.4 2.4-14.6 0-5.9 6.8-8.1 14.1-.8 11.1 11.6 14.9 40.5 13.8 51.1-4.1-13.6-13-29-30.3-35.7zm-4.6 6.7c19.5 6.2 28.6 27.6 29.7 48.9-1.1 2.7-3 5.4-4.9 7.6-5.7 5.9-15.4 10-26.2 12.2 4.3-21.3.3-47.3-12.7-63 4.9-.8 10.9-2.4 14.1-5.7zm-24.1 6.8c13.8 11.9 20 39.2 14.1 63.5-4.1.5-8.1.8-11.6.8-1.9-21.9-6.8-44-14.3-64.6 3.7.3 8.1.3 11.8.3zM47.5 203c-1.1-10.5 2.4-39.5 13.8-51.1 7-7.3 14.1-5.1 14.1.8 0 6.2 1.4 11.6 2.4 14.6-17.3 6.8-26.2 22.2-30.3 35.7zm9.7 27.6c-1.9-2.2-3.5-4.9-4.9-7.6 1.4-21.3 10.3-42.7 29.7-48.9 3.2 3.2 9.2 4.9 14.1 5.7-13 15.7-17 41.6-12.7 63-10.8-2.2-20.5-6-26.2-12.2zm47.9 14.6c-4.1 0-8.1-.3-12.7-.8-4.6-18.6-1.9-38.9 5.4-53v.3l12.2-5.1c4.9-1.9 9.7-3.8 14.9-4.9-10.7 19.7-17.4 41.3-19.8 63.5zm184-162.7c41.9 0 76.2 34 76.2 75.9 0 42.2-34.3 76.2-76.2 76.2s-76.2-34-76.2-76.2c0-41.8 34.3-75.9 76.2-75.9zm115.6 174.3c-.3 17.8-7 48.9-23 57-13.2 6.6-6.5-7.5-16.5-58.1 13.3.3 26.6.3 39.5 1.1zm-54-1.6c.8 4.9 3.8 40.3-1.6 41.9-11.6 3.5-40 4.3-51.1-1.1-4.1-3-4.6-35.9-4.3-41.1v.3c18.9-.3 38.1-.3 57 0zM278.3 309c-13 3.5-41.6 4.1-54.6-1.6-6.5-2.7-3.8-42.4-1.9-51.6 19.2-.5 38.4-.5 57.8-.8v.3c1.1 8.3 3.3 51.2-1.3 53.7zm-106.5-51.1c12.2-.8 24.6-1.4 36.8-1.6-2.4 15.4-3 43.5-4.9 52.2-1.1 6.8-4.3 6.8-9.7 4.3-21.9-9.8-27.6-35.2-22.2-54.9zm-35.4 31.3c7.8-1.1 15.7-1.9 23.5-2.7 1.6 6.2 3.8 11.9 7 17.6 10 17 44 35.7 45.1 7 6.2 14.9 40.8 12.2 54.9 10.8 15.7-1.4 23.8-1.4 26.8-14.3 12.4 4.3 30.8 4.1 44 3 11.3-.8 20.8-.5 24.6-8.9 1.1 5.1 1.9 11.6 4.6 16.8 10.8 21.3 37.3 1.4 46.8-31.6 8.6.8 17.6 1.9 26.5 2.7-.4 1.3-3.8 7.3 7.3 11.6-47.6 47-95.7 87.8-163.2 107-63.2-20.8-112.1-59.5-155.9-106.5 9.6-3.4 10.4-8.8 8-12.5zm-21.6 172.5c-3.8 17.8-21.9 29.7-39.7 28.9-19.2-.8-46.5-17-59.2-36.5-2.7-31.1 43.8-61.3 66.2-54.6 14.9 4.3 27.8 30.8 33.5 54 0 3-.3 5.7-.8 8.2zm-8.7-66c-.5-13.5-.5-27-.3-40.5h.3c2.7-1.6 5.7-3.8 7.8-6.5 6.5-1.6 13-5.1 15.1-9.2 3.3-7.1-7-7.5-5.4-12.4 2.7-1.1 5.7-2.2 7.8-3.5 29.2 29.2 58.6 56.5 97.3 77-36.8 11.3-72.4 27.6-105.9 47-1.2-18.6-7.7-35.9-16.7-51.9zm337.6 64.6c-103 3.5-206.2 4.1-309.4 0 0 .3 0 .3-.3.3v-.3h.3c35.1-21.6 72.2-39.2 112.4-50.8 11.6 5.1 23 9.5 34.9 13.2 2.2.8 2.2.8 4.3 0 14.3-4.1 28.4-9.2 42.2-15.4 41.5 11.7 78.8 31.7 115.6 53zm10.5-12.4c-35.9-19.5-73-35.9-111.9-47.6 38.1-20 71.9-47.3 103.5-76.7 2.2 1.4 4.6 2.4 7.6 3.2 0 .8.3 1.9.5 2.4-4.6 2.7-7.8 6.2-5.9 10.3 2.2 3.8 8.6 7.6 15.1 8.9 2.4 2.7 5.1 5.1 8.1 6.8 0 13.8-.3 27.6-.8 41.3l.3-.3c-9.3 15.9-15.5 37-16.5 51.7zm105.9 6.2c-12.7 19.5-40 35.7-59.2 36.5-19.3.9-40.5-13.2-40.5-37 5.7-23.2 18.9-49.7 33.5-54 22.7-6.9 69.2 23.4 66.2 54.5zM372.9 75.2c-3.8-72.1-100.8-79.7-126-23.5 44.6-24.3 90.3-15.7 126 23.5zM74.8 407.1c-15.7 1.6-49.5 25.4-49.5 43.2 0 11.6 15.7 19.5 32.2 14.9 12.2-3.2 31.1-17.6 35.9-27.3 6-11.6-3.7-32.7-18.6-30.8zm215.9-176.2c28.6 0 51.9-21.6 51.9-48.4 0-36.1-40.5-58.1-72.2-44.3 9.5 3 16.5 11.6 16.5 21.6 0 23.3-33.3 32-46.5 11.3-7.3 34.1 19.4 59.8 50.3 59.8zM68 474.1c.5 6.5 12.2 12.7 21.6 9.5 6.8-2.7 14.6-10.5 17.3-16.2 3-7-1.1-20-9.7-18.4-8.9 1.6-29.7 16.7-29.2 25.1zm433.2-67c-14.9-1.9-24.6 19.2-18.9 30.8 4.9 9.7 24.1 24.1 36.2 27.3 16.5 4.6 32.2-3.2 32.2-14.9 0-17.8-33.8-41.6-49.5-43.2zM478.8 449c-8.4-1.6-12.4 11.3-9.5 18.4 2.4 5.7 10.3 13.5 17.3 16.2 9.2 3.2 21.1-3 21.3-9.5.9-8.4-20.2-23.5-29.1-25.1z"]
            },
            faOrcid: {
                prefix: "fab",
                iconName: "orcid",
                icon: [512, 512, [], "f8d2", "M294.75 188.19h-45.92V342h47.47c67.62 0 83.12-51.34 83.12-76.91 0-41.64-26.54-76.9-84.67-76.9zM256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm-80.79 360.76h-29.84v-207.5h29.84zm-14.92-231.14a19.57 19.57 0 1 1 19.57-19.57 19.64 19.64 0 0 1-19.57 19.57zM300 369h-81V161.26h80.6c76.73 0 110.44 54.83 110.44 103.85C410 318.39 368.38 369 300 369z"]
            },
            faOsi: {
                prefix: "fab",
                iconName: "osi",
                icon: [512, 512, [], "f41a", "M8 266.44C10.3 130.64 105.4 34 221.8 18.34c138.8-18.6 255.6 75.8 278 201.1 21.3 118.8-44 230-151.6 274-9.3 3.8-14.4 1.7-18-7.7q-26.7-69.45-53.4-139c-3.1-8.1-1-13.2 7-16.8 24.2-11 39.3-29.4 43.3-55.8a71.47 71.47 0 0 0-64.5-82.2c-39-3.4-71.8 23.7-77.5 59.7-5.2 33 11.1 63.7 41.9 77.7 9.6 4.4 11.5 8.6 7.8 18.4q-26.85 69.9-53.7 139.9c-2.6 6.9-8.3 9.3-15.5 6.5-52.6-20.3-101.4-61-130.8-119-24.9-49.2-25.2-87.7-26.8-108.7zm20.9-1.9c.4 6.6.6 14.3 1.3 22.1 6.3 71.9 49.6 143.5 131 183.1 3.2 1.5 4.4.8 5.6-2.3q22.35-58.65 45-117.3c1.3-3.3.6-4.8-2.4-6.7-31.6-19.9-47.3-48.5-45.6-86 1-21.6 9.3-40.5 23.8-56.3 30-32.7 77-39.8 115.5-17.6a91.64 91.64 0 0 1 45.2 90.4c-3.6 30.6-19.3 53.9-45.7 69.8-2.7 1.6-3.5 2.9-2.3 6q22.8 58.8 45.2 117.7c1.2 3.1 2.4 3.8 5.6 2.3 35.5-16.6 65.2-40.3 88.1-72 34.8-48.2 49.1-101.9 42.3-161-13.7-117.5-119.4-214.8-255.5-198-106.1 13-195.3 102.5-197.1 225.8z"]
            },
            faPage4: {
                prefix: "fab",
                iconName: "page4",
                icon: [496, 512, [], "f3d7", "M248 504C111 504 0 393 0 256S111 8 248 8c20.9 0 41.3 2.6 60.7 7.5L42.3 392H248v112zm0-143.6V146.8L98.6 360.4H248zm96 31.6v92.7c45.7-19.2 84.5-51.7 111.4-92.7H344zm57.4-138.2l-21.2 8.4 21.2 8.3v-16.7zm-20.3 54.5c-6.7 0-8 6.3-8 12.9v7.7h16.2v-10c0-5.9-2.3-10.6-8.2-10.6zM496 256c0 37.3-8.2 72.7-23 104.4H344V27.3C433.3 64.8 496 153.1 496 256zM360.4 143.6h68.2V96h-13.9v32.6h-13.9V99h-13.9v29.6h-12.7V96h-13.9v47.6zm68.1 185.3H402v-11c0-15.4-5.6-25.2-20.9-25.2-15.4 0-20.7 10.6-20.7 25.9v25.3h68.2v-15zm0-103l-68.2 29.7V268l68.2 29.5v-16.6l-14.4-5.7v-26.5l14.4-5.9v-16.9zm-4.8-68.5h-35.6V184H402v-12.2h11c8.6 15.8 1.3 35.3-18.6 35.3-22.5 0-28.3-25.3-15.5-37.7l-11.6-10.6c-16.2 17.5-12.2 63.9 27.1 63.9 34 0 44.7-35.9 29.3-65.3z"]
            },
            faPagelines: {
                prefix: "fab",
                iconName: "pagelines",
                icon: [384, 512, [], "f18c", "M384 312.7c-55.1 136.7-187.1 54-187.1 54-40.5 81.8-107.4 134.4-184.6 134.7-16.1 0-16.6-24.4 0-24.4 64.4-.3 120.5-42.7 157.2-110.1-41.1 15.9-118.6 27.9-161.6-82.2 109-44.9 159.1 11.2 178.3 45.5 9.9-24.4 17-50.9 21.6-79.7 0 0-139.7 21.9-149.5-98.1 119.1-47.9 152.6 76.7 152.6 76.7 1.6-16.7 3.3-52.6 3.3-53.4 0 0-106.3-73.7-38.1-165.2 124.6 43 61.4 162.4 61.4 162.4.5 1.6.5 23.8 0 33.4 0 0 45.2-89 136.4-57.5-4.2 134-141.9 106.4-141.9 106.4-4.4 27.4-11.2 53.4-20 77.5 0 0 83-91.8 172-20z"]
            },
            faPalfed: {
                prefix: "fab",
                iconName: "palfed",
                icon: [576, 512, [], "f3d8", "M384.9 193.9c0-47.4-55.2-44.2-95.4-29.8-1.3 39.4-2.5 80.7-3 119.8.7 2.8 2.6 6.2 15.1 6.2 36.8 0 83.4-42.8 83.3-96.2zm-194.5 72.2c.2 0 6.5-2.7 11.2-2.7 26.6 0 20.7 44.1-14.4 44.1-21.5 0-37.1-18.1-37.1-43 0-42 42.9-95.6 100.7-126.5 1-12.4 3-22 10.5-28.2 11.2-9 26.6-3.5 29.5 11.1 72.2-22.2 135.2 1 135.2 72 0 77.9-79.3 152.6-140.1 138.2-.1 39.4.9 74.4 2.7 100v.2c.2 3.4.6 12.5-5.3 19.1-9.6 10.6-33.4 10-36.4-22.3-4.1-44.4.2-206.1 1.4-242.5-21.5 15-58.5 50.3-58.5 75.9.2 2.5.4 4 .6 4.6zM8 181.1s-.1 37.4 38.4 37.4h30l22.4 217.2s0 44.3 44.7 44.3h288.9s44.7-.4 44.7-44.3l22.4-217.2h30s38.4 1.2 38.4-37.4c0 0 .1-37.4-38.4-37.4h-30.1c-7.3-25.6-30.2-74.3-119.4-74.3h-28V50.3s-2.7-18.4-21.1-18.4h-85.8s-21.1 0-21.1 18.4v19.1h-28.1s-105 4.2-120.5 74.3h-29S8 142.5 8 181.1z"]
            },
            faPatreon: {
                prefix: "fab",
                iconName: "patreon",
                icon: [512, 512, [], "f3d9", "M512 194.8c0 101.3-82.4 183.8-183.8 183.8-101.7 0-184.4-82.4-184.4-183.8 0-101.6 82.7-184.3 184.4-184.3C429.6 10.5 512 93.2 512 194.8zM0 501.5h90v-491H0v491z"]
            },
            faPaypal: {
                prefix: "fab",
                iconName: "paypal",
                icon: [384, 512, [], "f1ed", "M111.4 295.9c-3.5 19.2-17.4 108.7-21.5 134-.3 1.8-1 2.5-3 2.5H12.3c-7.6 0-13.1-6.6-12.1-13.9L58.8 46.6c1.5-9.6 10.1-16.9 20-16.9 152.3 0 165.1-3.7 204 11.4 60.1 23.3 65.6 79.5 44 140.3-21.5 62.6-72.5 89.5-140.1 90.3-43.4.7-69.5-7-75.3 24.2zM357.1 152c-1.8-1.3-2.5-1.8-3 1.3-2 11.4-5.1 22.5-8.8 33.6-39.9 113.8-150.5 103.9-204.5 103.9-6.1 0-10.1 3.3-10.9 9.4-22.6 140.4-27.1 169.7-27.1 169.7-1 7.1 3.5 12.9 10.6 12.9h63.5c8.6 0 15.7-6.3 17.4-14.9.7-5.4-1.1 6.1 14.4-91.3 4.6-22 14.3-19.7 29.3-19.7 71 0 126.4-28.8 142.9-112.3 6.5-34.8 4.6-71.4-23.8-92.6z"]
            },
            faPennyArcade: {
                prefix: "fab",
                iconName: "penny-arcade",
                icon: [640, 512, [], "f704", "M421.91 164.27c-4.49 19.45-1.4 6.06-15.1 65.29l39.73-10.61c-22.34-49.61-17.29-38.41-24.63-54.68zm-206.09 51.11c-20.19 5.4-11.31 3.03-39.63 10.58l4.46 46.19c28.17-7.59 20.62-5.57 34.82-9.34 42.3-9.79 32.85-56.42.35-47.43zm326.16-26.19l-45.47-99.2c-5.69-12.37-19.46-18.84-32.62-15.33-70.27 18.75-38.72 10.32-135.59 36.23a27.618 27.618 0 0 0-18.89 17.41C144.26 113.27 0 153.75 0 226.67c0 33.5 30.67 67.11 80.9 95.37l1.74 17.88a27.891 27.891 0 0 0-17.77 28.67l4.3 44.48c1.39 14.31 13.43 25.21 27.8 25.2 5.18-.01-3.01 1.78 122.53-31.76 12.57-3.37 21.12-15.02 20.58-28.02 216.59 45.5 401.99-5.98 399.89-84.83.01-28.15-22.19-66.56-97.99-104.47zM255.14 298.3l-21.91 5.88-48.44 12.91 2.46 23.55 20.53-5.51 4.51 44.51-115.31 30.78-4.3-44.52 20.02-5.35-11.11-114.64-20.12 5.39-4.35-44.5c178.15-47.54 170.18-46.42 186.22-46.65 56.66-1.13 64.15 71.84 42.55 104.43a86.7 86.7 0 0 1-50.75 33.72zm199.18 16.62l-3.89-39.49 14.9-3.98-6.61-14.68-57.76 15.42-4.1 17.54 19.2-5.12 4.05 39.54-112.85 30.07-4.46-44.43 20.99-5.59 33.08-126.47-17.15 4.56-4.2-44.48c93.36-24.99 65.01-17.41 135.59-36.24l66.67 145.47 20.79-5.56 4.3 44.48-108.55 28.96z"]
            },
            faPerbyte: {
                prefix: "fab",
                iconName: "perbyte",
                icon: [448, 512, [], "e083", "M305.314,284.578H246.6V383.3h58.711q24.423,0,38.193-13.77t13.77-36.11q0-21.826-14.032-35.335T305.314,284.578ZM149.435,128.7H90.724v98.723h58.711q24.42,0,38.19-13.773t13.77-36.107q0-21.826-14.029-35.338T149.435,128.7ZM366.647,32H81.353A81.445,81.445,0,0,0,0,113.352V398.647A81.445,81.445,0,0,0,81.353,480H366.647A81.445,81.445,0,0,0,448,398.647V113.352A81.445,81.445,0,0,0,366.647,32Zm63.635,366.647a63.706,63.706,0,0,1-63.635,63.635H81.353a63.706,63.706,0,0,1-63.635-63.635V113.352A63.706,63.706,0,0,1,81.353,49.718H366.647a63.706,63.706,0,0,1,63.635,63.634ZM305.314,128.7H246.6v98.723h58.711q24.423,0,38.193-13.773t13.77-36.107q0-21.826-14.032-35.338T305.314,128.7Z"]
            },
            faPeriscope: {
                prefix: "fab",
                iconName: "periscope",
                icon: [448, 512, [], "f3da", "M370 63.6C331.4 22.6 280.5 0 226.6 0 111.9 0 18.5 96.2 18.5 214.4c0 75.1 57.8 159.8 82.7 192.7C137.8 455.5 192.6 512 226.6 512c41.6 0 112.9-94.2 120.9-105 24.6-33.1 82-118.3 82-192.6 0-56.5-21.1-110.1-59.5-150.8zM226.6 493.9c-42.5 0-190-167.3-190-279.4 0-107.4 83.9-196.3 190-196.3 100.8 0 184.7 89 184.7 196.3.1 112.1-147.4 279.4-184.7 279.4zM338 206.8c0 59.1-51.1 109.7-110.8 109.7-100.6 0-150.7-108.2-92.9-181.8v.4c0 24.5 20.1 44.4 44.8 44.4 24.7 0 44.8-19.9 44.8-44.4 0-18.2-11.1-33.8-26.9-40.7 76.6-19.2 141 39.3 141 112.4z"]
            },
            faPhabricator: {
                prefix: "fab",
                iconName: "phabricator",
                icon: [496, 512, [], "f3db", "M323 262.1l-.1-13s21.7-19.8 21.1-21.2l-9.5-20c-.6-1.4-29.5-.5-29.5-.5l-9.4-9.3s.2-28.5-1.2-29.1l-20.1-9.2c-1.4-.6-20.7 21-20.7 21l-13.1-.2s-20.5-21.4-21.9-20.8l-20 8.3c-1.4.5.2 28.9.2 28.9l-9.1 9.1s-29.2-.9-29.7.4l-8.1 19.8c-.6 1.4 21 21 21 21l.1 12.9s-21.7 19.8-21.1 21.2l9.5 20c.6 1.4 29.5.5 29.5.5l9.4 9.3s-.2 31.8 1.2 32.3l20.1 8.3c1.4.6 20.7-23.5 20.7-23.5l13.1.2s20.5 23.8 21.8 23.3l20-7.5c1.4-.6-.2-32.1-.2-32.1l9.1-9.1s29.2.9 29.7-.5l8.1-19.8c.7-1.1-20.9-20.7-20.9-20.7zm-44.9-8.7c.7 17.1-12.8 31.6-30.1 32.4-17.3.8-32.1-12.5-32.8-29.6-.7-17.1 12.8-31.6 30.1-32.3 17.3-.8 32.1 12.5 32.8 29.5zm201.2-37.9l-97-97-.1.1c-75.1-73.3-195.4-72.8-269.8 1.6-50.9 51-27.8 27.9-95.7 95.3-22.3 22.3-22.3 58.7 0 81 69.9 69.4 46.4 46 97.4 97l.1-.1c75.1 73.3 195.4 72.9 269.8-1.6 51-50.9 27.9-27.9 95.3-95.3 22.3-22.3 22.3-58.7 0-81zM140.4 363.8c-59.6-59.5-59.6-156 0-215.5 59.5-59.6 156-59.5 215.6 0 59.5 59.5 59.6 156 0 215.6-59.6 59.5-156 59.4-215.6-.1z"]
            },
            faPhoenixFramework: {
                prefix: "fab",
                iconName: "phoenix-framework",
                icon: [640, 512, [], "f3dc", "M212.9 344.3c3.8-.1 22.8-1.4 25.6-2.2-2.4-2.6-43.6-1-68-49.6-4.3-8.6-7.5-17.6-6.4-27.6 2.9-25.5 32.9-30 52-18.5 36 21.6 63.3 91.3 113.7 97.5 37 4.5 84.6-17 108.2-45.4-.6-.1-.8-.2-1-.1-.4.1-.8.2-1.1.3-33.3 12.1-94.3 9.7-134.7-14.8-37.6-22.8-53.1-58.7-51.8-74.6 1.8-21.3 22.9-23.2 35.9-19.6 14.4 3.9 24.4 17.6 38.9 27.4 15.6 10.4 32.9 13.7 51.3 10.3 14.9-2.7 34.4-12.3 36.5-14.5-1.1-.1-1.8-.1-2.5-.2-6.2-.6-12.4-.8-18.5-1.7C279.8 194.5 262.1 47.4 138.5 37.9 94.2 34.5 39.1 46 2.2 72.9c-.8.6-1.5 1.2-2.2 1.8.1.2.1.3.2.5.8 0 1.6-.1 2.4-.2 6.3-1 12.5-.8 18.7.3 23.8 4.3 47.7 23.1 55.9 76.5 5.3 34.3-.7 50.8 8 86.1 19 77.1 91 107.6 127.7 106.4zM75.3 64.9c-.9-1-.9-1.2-1.3-2 12.1-2.6 24.2-4.1 36.6-4.8-1.1 14.7-22.2 21.3-35.3 6.8zm196.9 350.5c-42.8 1.2-92-26.7-123.5-61.4-4.6-5-16.8-20.2-18.6-23.4l.4-.4c6.6 4.1 25.7 18.6 54.8 27 24.2 7 48.1 6.3 71.6-3.3 22.7-9.3 41-.5 43.1 2.9-18.5 3.8-20.1 4.4-24 7.9-5.1 4.4-4.6 11.7 7 17.2 26.2 12.4 63-2.8 97.2 25.4 2.4 2 8.1 7.8 10.1 10.7-.1.2-.3.3-.4.5-4.8-1.5-16.4-7.5-40.2-9.3-24.7-2-46.3 5.3-77.5 6.2zm174.8-252c16.4-5.2 41.3-13.4 66.5-3.3 16.1 6.5 26.2 18.7 32.1 34.6 3.5 9.4 5.1 19.7 5.1 28.7-.2 0-.4 0-.6.1-.2-.4-.4-.9-.5-1.3-5-22-29.9-43.8-67.6-29.9-50.2 18.6-130.4 9.7-176.9-48-.7-.9-2.4-1.7-1.3-3.2.1-.2 2.1.6 3 1.3 18.1 13.4 38.3 21.9 60.3 26.2 30.5 6.1 54.6 2.9 79.9-5.2zm102.7 117.5c-32.4.2-33.8 50.1-103.6 64.4-18.2 3.7-38.7 4.6-44.9 4.2v-.4c2.8-1.5 14.7-2.6 29.7-16.6 7.9-7.3 15.3-15.1 22.8-22.9 19.5-20.2 41.4-42.2 81.9-39 23.1 1.8 29.3 8.2 36.1 12.7.3.2.4.5.7.9-.5 0-.7.1-.9 0-7-2.7-14.3-3.3-21.8-3.3zm-12.3-24.1c-.1.2-.1.4-.2.6-28.9-4.4-48-7.9-68.5 4-17 9.9-31.4 20.5-62 24.4-27.1 3.4-45.1 2.4-66.1-8-.3-.2-.6-.4-1-.6 0-.2.1-.3.1-.5 24.9 3.8 36.4 5.1 55.5-5.8 22.3-12.9 40.1-26.6 71.3-31 29.6-4.1 51.3 2.5 70.9 16.9zM268.6 97.3c-.6-.6-1.1-1.2-2.1-2.3 7.6 0 29.7-1.2 53.4 8.4 19.7 8 32.2 21 50.2 32.9 11.1 7.3 23.4 9.3 36.4 8.1 4.3-.4 8.5-1.2 12.8-1.7.4-.1.9 0 1.5.3-.6.4-1.2.9-1.8 1.2-8.1 4-16.7 6.3-25.6 7.1-26.1 2.6-50.3-3.7-73.4-15.4-19.3-9.9-36.4-22.9-51.4-38.6zM640 335.7c-3.5 3.1-22.7 11.6-42.7 5.3-12.3-3.9-19.5-14.9-31.6-24.1-10-7.6-20.9-7.9-28.1-8.4.6-.8.9-1.2 1.2-1.4 14.8-9.2 30.5-12.2 47.3-6.5 12.5 4.2 19.2 13.5 30.4 24.2 10.8 10.4 21 9.9 23.1 10.5.1-.1.2 0 .4.4zm-212.5 137c2.2 1.2 1.6 1.5 1.5 2-18.5-1.4-33.9-7.6-46.8-22.2-21.8-24.7-41.7-27.9-48.6-29.7.5-.2.8-.4 1.1-.4 13.1.1 26.1.7 38.9 3.9 25.3 6.4 35 25.4 41.6 35.3 3.2 4.8 7.3 8.3 12.3 11.1z"]
            },
            faPhoenixSquadron: {
                prefix: "fab",
                iconName: "phoenix-squadron",
                icon: [512, 512, [], "f511", "M96 63.38C142.49 27.25 201.55 7.31 260.51 8.81c29.58-.38 59.11 5.37 86.91 15.33-24.13-4.63-49-6.34-73.38-2.45C231.17 27 191 48.84 162.21 80.87c5.67-1 10.78-3.67 16-5.86 18.14-7.87 37.49-13.26 57.23-14.83 19.74-2.13 39.64-.43 59.28 1.92-14.42 2.79-29.12 4.57-43 9.59-34.43 11.07-65.27 33.16-86.3 62.63-13.8 19.71-23.63 42.86-24.67 67.13-.35 16.49 5.22 34.81 19.83 44a53.27 53.27 0 0 0 37.52 6.74c15.45-2.46 30.07-8.64 43.6-16.33 11.52-6.82 22.67-14.55 32-24.25 3.79-3.22 2.53-8.45 2.62-12.79-2.12-.34-4.38-1.11-6.3.3a203 203 0 0 1-35.82 15.37c-20 6.17-42.16 8.46-62.1.78 12.79 1.73 26.06.31 37.74-5.44 20.23-9.72 36.81-25.2 54.44-38.77a526.57 526.57 0 0 1 88.9-55.31c25.71-12 52.94-22.78 81.57-24.12-15.63 13.72-32.15 26.52-46.78 41.38-14.51 14-27.46 29.5-40.11 45.18-3.52 4.6-8.95 6.94-13.58 10.16a150.7 150.7 0 0 0-51.89 60.1c-9.33 19.68-14.5 41.85-11.77 63.65 1.94 13.69 8.71 27.59 20.9 34.91 12.9 8 29.05 8.07 43.48 5.1 32.8-7.45 61.43-28.89 81-55.84 20.44-27.52 30.52-62.2 29.16-96.35-.52-7.5-1.57-15-1.66-22.49 8 19.48 14.82 39.71 16.65 60.83 2 14.28.75 28.76-1.62 42.9-1.91 11-5.67 21.51-7.78 32.43a165 165 0 0 0 39.34-81.07 183.64 183.64 0 0 0-14.21-104.64c20.78 32 32.34 69.58 35.71 107.48.49 12.73.49 25.51 0 38.23A243.21 243.21 0 0 1 482 371.34c-26.12 47.34-68 85.63-117.19 108-78.29 36.23-174.68 31.32-248-14.68A248.34 248.34 0 0 1 25.36 366 238.34 238.34 0 0 1 0 273.08v-31.34C3.93 172 40.87 105.82 96 63.38m222 80.33a79.13 79.13 0 0 0 16-4.48c5-1.77 9.24-5.94 10.32-11.22-8.96 4.99-17.98 9.92-26.32 15.7z"]
            },
            faPhp: {
                prefix: "fab",
                iconName: "php",
                icon: [640, 512, [], "f457", "M320 104.5c171.4 0 303.2 72.2 303.2 151.5S491.3 407.5 320 407.5c-171.4 0-303.2-72.2-303.2-151.5S148.7 104.5 320 104.5m0-16.8C143.3 87.7 0 163 0 256s143.3 168.3 320 168.3S640 349 640 256 496.7 87.7 320 87.7zM218.2 242.5c-7.9 40.5-35.8 36.3-70.1 36.3l13.7-70.6c38 0 63.8-4.1 56.4 34.3zM97.4 350.3h36.7l8.7-44.8c41.1 0 66.6 3 90.2-19.1 26.1-24 32.9-66.7 14.3-88.1-9.7-11.2-25.3-16.7-46.5-16.7h-70.7L97.4 350.3zm185.7-213.6h36.5l-8.7 44.8c31.5 0 60.7-2.3 74.8 10.7 14.8 13.6 7.7 31-8.3 113.1h-37c15.4-79.4 18.3-86 12.7-92-5.4-5.8-17.7-4.6-47.4-4.6l-18.8 96.6h-36.5l32.7-168.6zM505 242.5c-8 41.1-36.7 36.3-70.1 36.3l13.7-70.6c38.2 0 63.8-4.1 56.4 34.3zM384.2 350.3H421l8.7-44.8c43.2 0 67.1 2.5 90.2-19.1 26.1-24 32.9-66.7 14.3-88.1-9.7-11.2-25.3-16.7-46.5-16.7H417l-32.8 168.7z"]
            },
            faPiedPiper: {
                prefix: "fab",
                iconName: "pied-piper",
                icon: [480, 512, [], "f2ae", "M455.93,23.2C429.23,30,387.79,51.69,341.35,90.66A206,206,0,0,0,240,64C125.13,64,32,157.12,32,272s93.13,208,208,208,208-93.13,208-208a207.25,207.25,0,0,0-58.75-144.81,155.35,155.35,0,0,0-17,27.4A176.16,176.16,0,0,1,417.1,272c0,97.66-79.44,177.11-177.09,177.11a175.81,175.81,0,0,1-87.63-23.4c82.94-107.33,150.79-37.77,184.31-226.65,5.79-32.62,28-94.26,126.23-160.18C471,33.45,465.35,20.8,455.93,23.2ZM125,406.4A176.66,176.66,0,0,1,62.9,272C62.9,174.34,142.35,94.9,240,94.9a174,174,0,0,1,76.63,17.75C250.64,174.76,189.77,265.52,125,406.4Z"]
            },
            faPiedPiperAlt: {
                prefix: "fab",
                iconName: "pied-piper-alt",
                icon: [576, 512, [], "f1a8", "M244 246c-3.2-2-6.3-2.9-10.1-2.9-6.6 0-12.6 3.2-19.3 3.7l1.7 4.9zm135.9 197.9c-19 0-64.1 9.5-79.9 19.8l6.9 45.1c35.7 6.1 70.1 3.6 106-9.8-4.8-10-23.5-55.1-33-55.1zM340.8 177c6.6 2.8 11.5 9.2 22.7 22.1 2-1.4 7.5-5.2 7.5-8.6 0-4.9-11.8-13.2-13.2-23 11.2-5.7 25.2-6 37.6-8.9 68.1-16.4 116.3-52.9 146.8-116.7C548.3 29.3 554 16.1 554.6 2l-2 2.6c-28.4 50-33 63.2-81.3 100-31.9 24.4-69.2 40.2-106.6 54.6l-6.3-.3v-21.8c-19.6 1.6-19.7-14.6-31.6-23-18.7 20.6-31.6 40.8-58.9 51.1-12.7 4.8-19.6 10-25.9 21.8 34.9-16.4 91.2-13.5 98.8-10zM555.5 0l-.6 1.1-.3.9.6-.6zm-59.2 382.1c-33.9-56.9-75.3-118.4-150-115.5l-.3-6c-1.1-13.5 32.8 3.2 35.1-31l-14.4 7.2c-19.8-45.7-8.6-54.3-65.5-54.3-14.7 0-26.7 1.7-41.4 4.6 2.9 18.6 2.2 36.7-10.9 50.3l19.5 5.5c-1.7 3.2-2.9 6.3-2.9 9.8 0 21 42.8 2.9 42.8 33.6 0 18.4-36.8 60.1-54.9 60.1-8 0-53.7-50-53.4-60.1l.3-4.6 52.3-11.5c13-2.6 12.3-22.7-2.9-22.7-3.7 0-43.1 9.2-49.4 10.6-2-5.2-7.5-14.1-13.8-14.1-3.2 0-6.3 3.2-9.5 4-9.2 2.6-31 2.9-21.5 20.1L15.9 298.5c-5.5 1.1-8.9 6.3-8.9 11.8 0 6 5.5 10.9 11.5 10.9 8 0 131.3-28.4 147.4-32.2 2.6 3.2 4.6 6.3 7.8 8.6 20.1 14.4 59.8 85.9 76.4 85.9 24.1 0 58-22.4 71.3-41.9 3.2-4.3 6.9-7.5 12.4-6.9.6 13.8-31.6 34.2-33 43.7-1.4 10.2-1 35.2-.3 41.1 26.7 8.1 52-3.6 77.9-2.9 4.3-21 10.6-41.9 9.8-63.5l-.3-9.5c-1.4-34.2-10.9-38.5-34.8-58.6-1.1-1.1-2.6-2.6-3.7-4 2.2-1.4 1.1-1 4.6-1.7 88.5 0 56.3 183.6 111.5 229.9 33.1-15 72.5-27.9 103.5-47.2-29-25.6-52.6-45.7-72.7-79.9zm-196.2 46.1v27.2l11.8-3.4-2.9-23.8zm-68.7-150.4l24.1 61.2 21-13.8-31.3-50.9zm84.4 154.9l2 12.4c9-1.5 58.4-6.6 58.4-14.1 0-1.4-.6-3.2-.9-4.6-26.8 0-36.9 3.8-59.5 6.3z"]
            },
            faPiedPiperHat: {
                prefix: "fab",
                iconName: "pied-piper-hat",
                icon: [640, 512, [], "f4e5", "M640 24.9c-80.8 53.6-89.4 92.5-96.4 104.4-6.7 12.2-11.7 60.3-23.3 83.6-11.7 23.6-54.2 42.2-66.1 50-11.7 7.8-28.3 38.1-41.9 64.2-108.1-4.4-167.4 38.8-259.2 93.6 29.4-9.7 43.3-16.7 43.3-16.7 94.2-36 139.3-68.3 281.1-49.2 1.1 0 1.9.6 2.8.8 3.9 2.2 5.3 6.9 3.1 10.8l-53.9 95.8c-2.5 4.7-7.8 7.2-13.1 6.1-126.8-23.8-226.9 17.3-318.9 18.6C24.1 488 0 453.4 0 451.8c0-1.1.6-1.7 1.7-1.7 0 0 38.3 0 103.1-15.3C178.4 294.5 244 245.4 315.4 245.4c0 0 71.7 0 90.6 61.9 22.8-39.7 28.3-49.2 28.3-49.2 5.3-9.4 35-77.2 86.4-141.4 51.5-64 90.4-79.9 119.3-91.8z"]
            },
            faPiedPiperPp: {
                prefix: "fab",
                iconName: "pied-piper-pp",
                icon: [448, 512, [], "f1a7", "M205.3 174.6c0 21.1-14.2 38.1-31.7 38.1-7.1 0-12.8-1.2-17.2-3.7v-68c4.4-2.7 10.1-4.2 17.2-4.2 17.5 0 31.7 16.9 31.7 37.8zm52.6 67c-7.1 0-12.8 1.5-17.2 4.2v68c4.4 2.5 10.1 3.7 17.2 3.7 17.4 0 31.7-16.9 31.7-37.8 0-21.1-14.3-38.1-31.7-38.1zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zM185 255.1c41 0 74.2-35.6 74.2-79.6 0-44-33.2-79.6-74.2-79.6-12 0-24.1 3.2-34.6 8.8h-45.7V311l51.8-10.1v-50.6c8.6 3.1 18.1 4.8 28.5 4.8zm158.4 25.3c0-44-33.2-79.6-73.9-79.6-3.2 0-6.4.2-9.6.7-3.7 12.5-10.1 23.8-19.2 33.4-13.8 15-32.2 23.8-51.8 24.8V416l51.8-10.1v-50.6c8.6 3.2 18.2 4.7 28.7 4.7 40.8 0 74-35.6 74-79.6z"]
            },
            faPiedPiperSquare: {
                prefix: "fab",
                iconName: "pied-piper-square",
                icon: [448, 512, [], "e01e", "M32 419L0 479.2l.8-328C.8 85.3 54 32 120 32h327.2c-93 28.9-189.9 94.2-253.9 168.6C122.7 282 82.6 338 32 419M448 32S305.2 98.8 261.6 199.1c-23.2 53.6-28.9 118.1-71 158.6-28.9 27.8-69.8 38.2-105.3 56.3-23.2 12-66.4 40.5-84.9 66h328.4c66 0 119.3-53.3 119.3-119.2-.1 0-.1-328.8-.1-328.8z"]
            },
            faPinterest: {
                prefix: "fab",
                iconName: "pinterest",
                icon: [496, 512, [], "f0d2", "M496 256c0 137-111 248-248 248-25.6 0-50.2-3.9-73.4-11.1 10.1-16.5 25.2-43.5 30.8-65 3-11.6 15.4-59 15.4-59 8.1 15.4 31.7 28.5 56.8 28.5 74.8 0 128.7-68.8 128.7-154.3 0-81.9-66.9-143.2-152.9-143.2-107 0-163.9 71.8-163.9 150.1 0 36.4 19.4 81.7 50.3 96.1 4.7 2.2 7.2 1.2 8.3-3.3.8-3.4 5-20.3 6.9-28.1.6-2.5.3-4.7-1.7-7.1-10.1-12.5-18.3-35.3-18.3-56.6 0-54.7 41.4-107.6 112-107.6 60.9 0 103.6 41.5 103.6 100.9 0 67.1-33.9 113.6-78 113.6-24.3 0-42.6-20.1-36.7-44.8 7-29.5 20.5-61.3 20.5-82.6 0-19-10.2-34.9-31.4-34.9-24.9 0-44.9 25.7-44.9 60.2 0 22 7.4 36.8 7.4 36.8s-24.5 103.8-29 123.2c-5 21.4-3 51.6-.9 71.2C65.4 450.9 0 361.1 0 256 0 119 111 8 248 8s248 111 248 248z"]
            },
            faPinterestP: {
                prefix: "fab",
                iconName: "pinterest-p",
                icon: [384, 512, [], "f231", "M204 6.5C101.4 6.5 0 74.9 0 185.6 0 256 39.6 296 63.6 296c9.9 0 15.6-27.6 15.6-35.4 0-9.3-23.7-29.1-23.7-67.8 0-80.4 61.2-137.4 140.4-137.4 68.1 0 118.5 38.7 118.5 109.8 0 53.1-21.3 152.7-90.3 152.7-24.9 0-46.2-18-46.2-43.8 0-37.8 26.4-74.4 26.4-113.4 0-66.2-93.9-54.2-93.9 25.8 0 16.8 2.1 35.4 9.6 50.7-13.8 59.4-42 147.9-42 209.1 0 18.9 2.7 37.5 4.5 56.4 3.4 3.8 1.7 3.4 6.9 1.5 50.4-69 48.6-82.5 71.4-172.8 12.3 23.4 44.1 36 69.3 36 106.2 0 153.9-103.5 153.9-196.8C384 71.3 298.2 6.5 204 6.5z"]
            },
            faPinterestSquare: {
                prefix: "fab",
                iconName: "pinterest-square",
                icon: [448, 512, [], "f0d3", "M448 80v352c0 26.5-21.5 48-48 48H154.4c9.8-16.4 22.4-40 27.4-59.3 3-11.5 15.3-58.4 15.3-58.4 8 15.3 31.4 28.2 56.3 28.2 74.1 0 127.4-68.1 127.4-152.7 0-81.1-66.2-141.8-151.4-141.8-106 0-162.2 71.1-162.2 148.6 0 36 19.2 80.8 49.8 95.1 4.7 2.2 7.1 1.2 8.2-3.3.8-3.4 5-20.1 6.8-27.8.6-2.5.3-4.6-1.7-7-10.1-12.3-18.3-34.9-18.3-56 0-54.2 41-106.6 110.9-106.6 60.3 0 102.6 41.1 102.6 99.9 0 66.4-33.5 112.4-77.2 112.4-24.1 0-42.1-19.9-36.4-44.4 6.9-29.2 20.3-60.7 20.3-81.8 0-53-75.5-45.7-75.5 25 0 21.7 7.3 36.5 7.3 36.5-31.4 132.8-36.1 134.5-29.6 192.6l2.2.8H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48z"]
            },
            faPlaystation: {
                prefix: "fab",
                iconName: "playstation",
                icon: [576, 512, [], "f3df", "M570.9 372.3c-11.3 14.2-38.8 24.3-38.8 24.3L327 470.2v-54.3l150.9-53.8c17.1-6.1 19.8-14.8 5.8-19.4-13.9-4.6-39.1-3.3-56.2 2.9L327 381.1v-56.4c23.2-7.8 47.1-13.6 75.7-16.8 40.9-4.5 90.9.6 130.2 15.5 44.2 14 49.2 34.7 38 48.9zm-224.4-92.5v-139c0-16.3-3-31.3-18.3-35.6-11.7-3.8-19 7.1-19 23.4v347.9l-93.8-29.8V32c39.9 7.4 98 24.9 129.2 35.4C424.1 94.7 451 128.7 451 205.2c0 74.5-46 102.8-104.5 74.6zM43.2 410.2c-45.4-12.8-53-39.5-32.3-54.8 19.1-14.2 51.7-24.9 51.7-24.9l134.5-47.8v54.5l-96.8 34.6c-17.1 6.1-19.7 14.8-5.8 19.4 13.9 4.6 39.1 3.3 56.2-2.9l46.4-16.9v48.8c-51.6 9.3-101.4 7.3-153.9-10z"]
            },
            faProductHunt: {
                prefix: "fab",
                iconName: "product-hunt",
                icon: [512, 512, [], "f288", "M326.3 218.8c0 20.5-16.7 37.2-37.2 37.2h-70.3v-74.4h70.3c20.5 0 37.2 16.7 37.2 37.2zM504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-128.1-37.2c0-47.9-38.9-86.8-86.8-86.8H169.2v248h49.6v-74.4h70.3c47.9 0 86.8-38.9 86.8-86.8z"]
            },
            faPushed: {
                prefix: "fab",
                iconName: "pushed",
                icon: [432, 512, [], "f3e1", "M407 111.9l-98.5-9 14-33.4c10.4-23.5-10.8-40.4-28.7-37L22.5 76.9c-15.1 2.7-26 18.3-21.4 36.6l105.1 348.3c6.5 21.3 36.7 24.2 47.7 7l35.3-80.8 235.2-231.3c16.4-16.8 4.3-42.9-17.4-44.8zM297.6 53.6c5.1-.7 7.5 2.5 5.2 7.4L286 100.9 108.6 84.6l189-31zM22.7 107.9c-3.1-5.1 1-10 6.1-9.1l248.7 22.7-96.9 230.7L22.7 107.9zM136 456.4c-2.6 4-7.9 3.1-9.4-1.2L43.5 179.7l127.7 197.6c-7 15-35.2 79.1-35.2 79.1zm272.8-314.5L210.1 337.3l89.7-213.7 106.4 9.7c4 1.1 5.7 5.3 2.6 8.6z"]
            },
            faPython: {
                prefix: "fab",
                iconName: "python",
                icon: [448, 512, [], "f3e2", "M439.8 200.5c-7.7-30.9-22.3-54.2-53.4-54.2h-40.1v47.4c0 36.8-31.2 67.8-66.8 67.8H172.7c-29.2 0-53.4 25-53.4 54.3v101.8c0 29 25.2 46 53.4 54.3 33.8 9.9 66.3 11.7 106.8 0 26.9-7.8 53.4-23.5 53.4-54.3v-40.7H226.2v-13.6h160.2c31.1 0 42.6-21.7 53.4-54.2 11.2-33.5 10.7-65.7 0-108.6zM286.2 404c11.1 0 20.1 9.1 20.1 20.3 0 11.3-9 20.4-20.1 20.4-11 0-20.1-9.2-20.1-20.4.1-11.3 9.1-20.3 20.1-20.3zM167.8 248.1h106.8c29.7 0 53.4-24.5 53.4-54.3V91.9c0-29-24.4-50.7-53.4-55.6-35.8-5.9-74.7-5.6-106.8.1-45.2 8-53.4 24.7-53.4 55.6v40.7h106.9v13.6h-147c-31.1 0-58.3 18.7-66.8 54.2-9.8 40.7-10.2 66.1 0 108.6 7.6 31.6 25.7 54.2 56.8 54.2H101v-48.8c0-35.3 30.5-66.4 66.8-66.4zm-6.7-142.6c-11.1 0-20.1-9.1-20.1-20.3.1-11.3 9-20.4 20.1-20.4 11 0 20.1 9.2 20.1 20.4s-9 20.3-20.1 20.3z"]
            },
            faQq: {
                prefix: "fab",
                iconName: "qq",
                icon: [448, 512, [], "f1d6", "M433.754 420.445c-11.526 1.393-44.86-52.741-44.86-52.741 0 31.345-16.136 72.247-51.051 101.786 16.842 5.192 54.843 19.167 45.803 34.421-7.316 12.343-125.51 7.881-159.632 4.037-34.122 3.844-152.316 8.306-159.632-4.037-9.045-15.25 28.918-29.214 45.783-34.415-34.92-29.539-51.059-70.445-51.059-101.792 0 0-33.334 54.134-44.859 52.741-5.37-.65-12.424-29.644 9.347-99.704 10.261-33.024 21.995-60.478 40.144-105.779C60.683 98.063 108.982.006 224 0c113.737.006 163.156 96.133 160.264 214.963 18.118 45.223 29.912 72.85 40.144 105.778 21.768 70.06 14.716 99.053 9.346 99.704z"]
            },
            faQuinscape: {
                prefix: "fab",
                iconName: "quinscape",
                icon: [512, 512, [], "f459", "M313.6 474.6h-1a158.1 158.1 0 0 1 0-316.2c94.9 0 168.2 83.1 157 176.6 4 5.1 8.2 9.6 11.2 15.3 13.4-30.3 20.3-62.4 20.3-97.7C501.1 117.5 391.6 8 256.5 8S12 117.5 12 252.6s109.5 244.6 244.5 244.6a237.36 237.36 0 0 0 70.4-10.1c-5.2-3.5-8.9-8.1-13.3-12.5zm-.1-.1l.4.1zm78.4-168.9a99.2 99.2 0 1 0 99.2 99.2 99.18 99.18 0 0 0-99.2-99.2z"]
            },
            faQuora: {
                prefix: "fab",
                iconName: "quora",
                icon: [448, 512, [], "f2c4", "M440.5 386.7h-29.3c-1.5 13.5-10.5 30.8-33 30.8-20.5 0-35.3-14.2-49.5-35.8 44.2-34.2 74.7-87.5 74.7-153C403.5 111.2 306.8 32 205 32 105.3 32 7.3 111.7 7.3 228.7c0 134.1 131.3 221.6 249 189C276 451.3 302 480 351.5 480c81.8 0 90.8-75.3 89-93.3zM297 329.2C277.5 300 253.3 277 205.5 277c-30.5 0-54.3 10-69 22.8l12.2 24.3c6.2-3 13-4 19.8-4 35.5 0 53.7 30.8 69.2 61.3-10 3-20.7 4.2-32.7 4.2-75 0-107.5-53-107.5-156.7C97.5 124.5 130 71 205 71c76.2 0 108.7 53.5 108.7 157.7.1 41.8-5.4 75.6-16.7 100.5z"]
            },
            faRProject: {
                prefix: "fab",
                iconName: "r-project",
                icon: [581, 512, [], "f4f7", "M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z"]
            },
            faRaspberryPi: {
                prefix: "fab",
                iconName: "raspberry-pi",
                icon: [407, 512, [], "f7bb", "M372 232.5l-3.7-6.5c.1-46.4-21.4-65.3-46.5-79.7 7.6-2 15.4-3.6 17.6-13.2 13.1-3.3 15.8-9.4 17.1-15.8 3.4-2.3 14.8-8.7 13.6-19.7 6.4-4.4 10-10.1 8.1-18.1 6.9-7.5 8.7-13.7 5.8-19.4 8.3-10.3 4.6-15.6 1.1-20.9 6.2-11.2.7-23.2-16.6-21.2-6.9-10.1-21.9-7.8-24.2-7.8-2.6-3.2-6-6-16.5-4.7-6.8-6.1-14.4-5-22.3-2.1-9.3-7.3-15.5-1.4-22.6.8C271.6.6 269 5.5 263.5 7.6c-12.3-2.6-16.1 3-22 8.9l-6.9-.1c-18.6 10.8-27.8 32.8-31.1 44.1-3.3-11.3-12.5-33.3-31.1-44.1l-6.9.1c-5.9-5.9-9.7-11.5-22-8.9-5.6-2-8.1-7-19.4-3.4-4.6-1.4-8.9-4.4-13.9-4.3-2.6.1-5.5 1-8.7 3.5-7.9-3-15.5-4-22.3 2.1-10.5-1.3-14 1.4-16.5 4.7-2.3 0-17.3-2.3-24.2 7.8C21.2 16 15.8 28 22 39.2c-3.5 5.4-7.2 10.7 1.1 20.9-2.9 5.7-1.1 11.9 5.8 19.4-1.8 8 1.8 13.7 8.1 18.1-1.2 11 10.2 17.4 13.6 19.7 1.3 6.4 4 12.4 17.1 15.8 2.2 9.5 10 11.2 17.6 13.2-25.1 14.4-46.6 33.3-46.5 79.7l-3.7 6.5c-28.8 17.2-54.7 72.7-14.2 117.7 2.6 14.1 7.1 24.2 11 35.4 5.9 45.2 44.5 66.3 54.6 68.8 14.9 11.2 30.8 21.8 52.2 29.2C159 504.2 181 512 203 512h1c22.1 0 44-7.8 64.2-28.4 21.5-7.4 37.3-18 52.2-29.2 10.2-2.5 48.7-23.6 54.6-68.8 3.9-11.2 8.4-21.3 11-35.4 40.6-45.1 14.7-100.5-14-117.7zm-22.2-8c-1.5 18.7-98.9-65.1-82.1-67.9 45.7-7.5 83.6 19.2 82.1 67.9zm-43 93.1c-24.5 15.8-59.8 5.6-78.8-22.8s-14.6-64.2 9.9-80c24.5-15.8 59.8-5.6 78.8 22.8s14.6 64.2-9.9 80zM238.9 29.3c.8 4.2 1.8 6.8 2.9 7.6 5.4-5.8 9.8-11.7 16.8-17.3 0 3.3-1.7 6.8 2.5 9.4 3.7-5 8.8-9.5 15.5-13.3-3.2 5.6-.6 7.3 1.2 9.6 5.1-4.4 10-8.8 19.4-12.3-2.6 3.1-6.2 6.2-2.4 9.8 5.3-3.3 10.6-6.6 23.1-8.9-2.8 3.1-8.7 6.3-5.1 9.4 6.6-2.5 14-4.4 22.1-5.4-3.9 3.2-7.1 6.3-3.9 8.8 7.1-2.2 16.9-5.1 26.4-2.6l-6 6.1c-.7.8 14.1.6 23.9.8-3.6 5-7.2 9.7-9.3 18.2 1 1 5.8.4 10.4 0-4.7 9.9-12.8 12.3-14.7 16.6 2.9 2.2 6.8 1.6 11.2.1-3.4 6.9-10.4 11.7-16 17.3 1.4 1 3.9 1.6 9.7.9-5.2 5.5-11.4 10.5-18.8 15 1.3 1.5 5.8 1.5 10 1.6-6.7 6.5-15.3 9.9-23.4 14.2 4 2.7 6.9 2.1 10 2.1-5.7 4.7-15.4 7.1-24.4 10 1.7 2.7 3.4 3.4 7.1 4.1-9.5 5.3-23.2 2.9-27 5.6.9 2.7 3.6 4.4 6.7 5.8-15.4.9-57.3-.6-65.4-32.3 15.7-17.3 44.4-37.5 93.7-62.6-38.4 12.8-73 30-102 53.5-34.3-15.9-10.8-55.9 5.8-71.8zm-34.4 114.6c24.2-.3 54.1 17.8 54 34.7-.1 15-21 27.1-53.8 26.9-32.1-.4-53.7-15.2-53.6-29.8 0-11.9 26.2-32.5 53.4-31.8zm-123-12.8c3.7-.7 5.4-1.5 7.1-4.1-9-2.8-18.7-5.3-24.4-10 3.1 0 6 .7 10-2.1-8.1-4.3-16.7-7.7-23.4-14.2 4.2-.1 8.7 0 10-1.6-7.4-4.5-13.6-9.5-18.8-15 5.8.7 8.3.1 9.7-.9-5.6-5.6-12.7-10.4-16-17.3 4.3 1.5 8.3 2 11.2-.1-1.9-4.2-10-6.7-14.7-16.6 4.6.4 9.4 1 10.4 0-2.1-8.5-5.8-13.3-9.3-18.2 9.8-.1 24.6 0 23.9-.8l-6-6.1c9.5-2.5 19.3.4 26.4 2.6 3.2-2.5-.1-5.6-3.9-8.8 8.1 1.1 15.4 2.9 22.1 5.4 3.5-3.1-2.3-6.3-5.1-9.4 12.5 2.3 17.8 5.6 23.1 8.9 3.8-3.6.2-6.7-2.4-9.8 9.4 3.4 14.3 7.9 19.4 12.3 1.7-2.3 4.4-4 1.2-9.6 6.7 3.8 11.8 8.3 15.5 13.3 4.1-2.6 2.5-6.2 2.5-9.4 7 5.6 11.4 11.5 16.8 17.3 1.1-.8 2-3.4 2.9-7.6 16.6 15.9 40.1 55.9 6 71.8-29-23.5-63.6-40.7-102-53.5 49.3 25 78 45.3 93.7 62.6-8 31.8-50 33.2-65.4 32.3 3.1-1.4 5.8-3.2 6.7-5.8-4-2.8-17.6-.4-27.2-5.6zm60.1 24.1c16.8 2.8-80.6 86.5-82.1 67.9-1.5-48.7 36.5-75.5 82.1-67.9zM38.2 342c-23.7-18.8-31.3-73.7 12.6-98.3 26.5-7 9 107.8-12.6 98.3zm91 98.2c-13.3 7.9-45.8 4.7-68.8-27.9-15.5-27.4-13.5-55.2-2.6-63.4 16.3-9.8 41.5 3.4 60.9 25.6 16.9 20 24.6 55.3 10.5 65.7zm-26.4-119.7c-24.5-15.8-28.9-51.6-9.9-80s54.3-38.6 78.8-22.8 28.9 51.6 9.9 80c-19.1 28.4-54.4 38.6-78.8 22.8zM205 496c-29.4 1.2-58.2-23.7-57.8-32.3-.4-12.7 35.8-22.6 59.3-22 23.7-1 55.6 7.5 55.7 18.9.5 11-28.8 35.9-57.2 35.4zm58.9-124.9c.2 29.7-26.2 53.8-58.8 54-32.6.2-59.2-23.8-59.4-53.4v-.6c-.2-29.7 26.2-53.8 58.8-54 32.6-.2 59.2 23.8 59.4 53.4v.6zm82.2 42.7c-25.3 34.6-59.6 35.9-72.3 26.3-13.3-12.4-3.2-50.9 15.1-72 20.9-23.3 43.3-38.5 58.9-26.6 10.5 10.3 16.7 49.1-1.7 72.3zm22.9-73.2c-21.5 9.4-39-105.3-12.6-98.3 43.9 24.7 36.3 79.6 12.6 98.3z"]
            },
            faRavelry: {
                prefix: "fab",
                iconName: "ravelry",
                icon: [512, 512, [], "f2d9", "M498.252,234.223c-1.208-10.34-1.7-20.826-3.746-31a310.306,310.306,0,0,0-9.622-36.6,184.068,184.068,0,0,0-30.874-57.5,251.154,251.154,0,0,0-18.818-21.689,237.362,237.362,0,0,0-47.113-36.116A240.8,240.8,0,0,0,331.356,26.65c-11.018-3.1-22.272-5.431-33.515-7.615-6.78-1.314-13.749-1.667-20.627-2.482-.316-.036-.6-.358-.9-.553q-16.143.009-32.288.006c-2.41.389-4.808.925-7.236,1.15a179.331,179.331,0,0,0-34.256,7.1,221.5,221.5,0,0,0-39.768,16.355,281.385,281.385,0,0,0-38.08,24.158c-6.167,4.61-12.268,9.36-17.974,14.518C96.539,88.494,86.34,97.72,76.785,107.555a243.878,243.878,0,0,0-33.648,43.95,206.488,206.488,0,0,0-20.494,44.6,198.2,198.2,0,0,0-7.691,34.759A201.13,201.13,0,0,0,13.4,266.385a299.716,299.716,0,0,0,4.425,40.24,226.865,226.865,0,0,0,16.73,53.3,210.543,210.543,0,0,0,24,39.528,213.589,213.589,0,0,0,26.358,28.416A251.313,251.313,0,0,0,126.7,458.455a287.831,287.831,0,0,0,55.9,25.277,269.5,269.5,0,0,0,40.641,9.835c6.071,1.01,12.275,1.253,18.412,1.873a4.149,4.149,0,0,1,1.19.56h32.289c2.507-.389,5-.937,7.527-1.143,16.336-1.332,32.107-5.335,47.489-10.717A219.992,219.992,0,0,0,379.1,460.322c9.749-6.447,19.395-13.077,28.737-20.1,5.785-4.348,10.988-9.5,16.3-14.457,3.964-3.7,7.764-7.578,11.51-11.5a232.162,232.162,0,0,0,31.427-41.639c9.542-16.045,17.355-32.905,22.3-50.926,2.859-10.413,4.947-21.045,7.017-31.652,1.032-5.279,1.251-10.723,1.87-16.087.036-.317.358-.6.552-.9V236.005A9.757,9.757,0,0,1,498.252,234.223Zm-161.117-1.15s-16.572-2.98-28.47-2.98c-27.2,0-33.57,14.9-33.57,37.04V360.8H201.582V170.062H275.1v31.931c8.924-26.822,26.771-36.189,62.04-36.189Z"]
            },
            faReact: {
                prefix: "fab",
                iconName: "react",
                icon: [512, 512, [], "f41b", "M418.2 177.2c-5.4-1.8-10.8-3.5-16.2-5.1.9-3.7 1.7-7.4 2.5-11.1 12.3-59.6 4.2-107.5-23.1-123.3-26.3-15.1-69.2.6-112.6 38.4-4.3 3.7-8.5 7.6-12.5 11.5-2.7-2.6-5.5-5.2-8.3-7.7-45.5-40.4-91.1-57.4-118.4-41.5-26.2 15.2-34 60.3-23 116.7 1.1 5.6 2.3 11.1 3.7 16.7-6.4 1.8-12.7 3.8-18.6 5.9C38.3 196.2 0 225.4 0 255.6c0 31.2 40.8 62.5 96.3 81.5 4.5 1.5 9 3 13.6 4.3-1.5 6-2.8 11.9-4 18-10.5 55.5-2.3 99.5 23.9 114.6 27 15.6 72.4-.4 116.6-39.1 3.5-3.1 7-6.3 10.5-9.7 4.4 4.3 9 8.4 13.6 12.4 42.8 36.8 85.1 51.7 111.2 36.6 27-15.6 35.8-62.9 24.4-120.5-.9-4.4-1.9-8.9-3-13.5 3.2-.9 6.3-1.9 9.4-2.9 57.7-19.1 99.5-50 99.5-81.7 0-30.3-39.4-59.7-93.8-78.4zM282.9 92.3c37.2-32.4 71.9-45.1 87.7-36 16.9 9.7 23.4 48.9 12.8 100.4-.7 3.4-1.4 6.7-2.3 10-22.2-5-44.7-8.6-67.3-10.6-13-18.6-27.2-36.4-42.6-53.1 3.9-3.7 7.7-7.2 11.7-10.7zM167.2 307.5c5.1 8.7 10.3 17.4 15.8 25.9-15.6-1.7-31.1-4.2-46.4-7.5 4.4-14.4 9.9-29.3 16.3-44.5 4.6 8.8 9.3 17.5 14.3 26.1zm-30.3-120.3c14.4-3.2 29.7-5.8 45.6-7.8-5.3 8.3-10.5 16.8-15.4 25.4-4.9 8.5-9.7 17.2-14.2 26-6.3-14.9-11.6-29.5-16-43.6zm27.4 68.9c6.6-13.8 13.8-27.3 21.4-40.6s15.8-26.2 24.4-38.9c15-1.1 30.3-1.7 45.9-1.7s31 .6 45.9 1.7c8.5 12.6 16.6 25.5 24.3 38.7s14.9 26.7 21.7 40.4c-6.7 13.8-13.9 27.4-21.6 40.8-7.6 13.3-15.7 26.2-24.2 39-14.9 1.1-30.4 1.6-46.1 1.6s-30.9-.5-45.6-1.4c-8.7-12.7-16.9-25.7-24.6-39s-14.8-26.8-21.5-40.6zm180.6 51.2c5.1-8.8 9.9-17.7 14.6-26.7 6.4 14.5 12 29.2 16.9 44.3-15.5 3.5-31.2 6.2-47 8 5.4-8.4 10.5-17 15.5-25.6zm14.4-76.5c-4.7-8.8-9.5-17.6-14.5-26.2-4.9-8.5-10-16.9-15.3-25.2 16.1 2 31.5 4.7 45.9 8-4.6 14.8-10 29.2-16.1 43.4zM256.2 118.3c10.5 11.4 20.4 23.4 29.6 35.8-19.8-.9-39.7-.9-59.5 0 9.8-12.9 19.9-24.9 29.9-35.8zM140.2 57c16.8-9.8 54.1 4.2 93.4 39 2.5 2.2 5 4.6 7.6 7-15.5 16.7-29.8 34.5-42.9 53.1-22.6 2-45 5.5-67.2 10.4-1.3-5.1-2.4-10.3-3.5-15.5-9.4-48.4-3.2-84.9 12.6-94zm-24.5 263.6c-4.2-1.2-8.3-2.5-12.4-3.9-21.3-6.7-45.5-17.3-63-31.2-10.1-7-16.9-17.8-18.8-29.9 0-18.3 31.6-41.7 77.2-57.6 5.7-2 11.5-3.8 17.3-5.5 6.8 21.7 15 43 24.5 63.6-9.6 20.9-17.9 42.5-24.8 64.5zm116.6 98c-16.5 15.1-35.6 27.1-56.4 35.3-11.1 5.3-23.9 5.8-35.3 1.3-15.9-9.2-22.5-44.5-13.5-92 1.1-5.6 2.3-11.2 3.7-16.7 22.4 4.8 45 8.1 67.9 9.8 13.2 18.7 27.7 36.6 43.2 53.4-3.2 3.1-6.4 6.1-9.6 8.9zm24.5-24.3c-10.2-11-20.4-23.2-30.3-36.3 9.6.4 19.5.6 29.5.6 10.3 0 20.4-.2 30.4-.7-9.2 12.7-19.1 24.8-29.6 36.4zm130.7 30c-.9 12.2-6.9 23.6-16.5 31.3-15.9 9.2-49.8-2.8-86.4-34.2-4.2-3.6-8.4-7.5-12.7-11.5 15.3-16.9 29.4-34.8 42.2-53.6 22.9-1.9 45.7-5.4 68.2-10.5 1 4.1 1.9 8.2 2.7 12.2 4.9 21.6 5.7 44.1 2.5 66.3zm18.2-107.5c-2.8.9-5.6 1.8-8.5 2.6-7-21.8-15.6-43.1-25.5-63.8 9.6-20.4 17.7-41.4 24.5-62.9 5.2 1.5 10.2 3.1 15 4.7 46.6 16 79.3 39.8 79.3 58 0 19.6-34.9 44.9-84.8 61.4zm-149.7-15c25.3 0 45.8-20.5 45.8-45.8s-20.5-45.8-45.8-45.8c-25.3 0-45.8 20.5-45.8 45.8s20.5 45.8 45.8 45.8z"]
            },
            faReacteurope: {
                prefix: "fab",
                iconName: "reacteurope",
                icon: [576, 512, [], "f75d", "M250.6 211.74l5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3-7.1-.1-2.3-6.8-2.3 6.8-7.2.1 5.7 4.3zm63.7 0l5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3-7.2-.1-2.3-6.8-2.3 6.8-7.2.1 5.7 4.3zm-91.3 50.5h-3.4c-4.8 0-3.8 4-3.8 12.1 0 4.7-2.3 6.1-5.8 6.1s-5.8-1.4-5.8-6.1v-36.6c0-4.7 2.3-6.1 5.8-6.1s5.8 1.4 5.8 6.1c0 7.2-.7 10.5 3.8 10.5h3.4c4.7-.1 3.8-3.9 3.8-12.3 0-9.9-6.7-14.1-16.8-14.1h-.2c-10.1 0-16.8 4.2-16.8 14.1V276c0 10.4 6.7 14.1 16.8 14.1h.2c10.1 0 16.8-3.8 16.8-14.1 0-9.86 1.1-13.76-3.8-13.76zm-80.7 17.4h-14.7v-19.3H139c2.5 0 3.8-1.3 3.8-3.8v-2.1c0-2.5-1.3-3.8-3.8-3.8h-11.4v-18.3H142c2.5 0 3.8-1.3 3.8-3.8v-2.1c0-2.5-1.3-3.8-3.8-3.8h-21.7c-2.4-.1-3.7 1.3-3.7 3.8v59.1c0 2.5 1.3 3.8 3.8 3.8h21.9c2.5 0 3.8-1.3 3.8-3.8v-2.1c0-2.5-1.3-3.8-3.8-3.8zm-42-18.5c4.6-2 7.3-6 7.3-12.4v-11.9c0-10.1-6.7-14.1-16.8-14.1H77.4c-2.5 0-3.8 1.3-3.8 3.8v59.1c0 2.5 1.3 3.8 3.8 3.8h3.4c2.5 0 3.8-1.3 3.8-3.8v-22.9h5.6l7.4 23.5a4.1 4.1 0 0 0 4.3 3.2h3.3c2.8 0 4-1.8 3.2-4.4zm-3.8-14c0 4.8-2.5 6.1-6.1 6.1h-5.8v-20.9h5.8c3.6 0 6.1 1.3 6.1 6.1zM176 226a3.82 3.82 0 0 0-4.2-3.4h-6.9a3.68 3.68 0 0 0-4 3.4l-11 59.2c-.5 2.7.9 4.1 3.4 4.1h3a3.74 3.74 0 0 0 4.1-3.5l1.8-11.3h12.2l1.8 11.3a3.74 3.74 0 0 0 4.1 3.5h3.5c2.6 0 3.9-1.4 3.4-4.1zm-12.3 39.3l4.7-29.7 4.7 29.7zm89.3 20.2v-53.2h7.5c2.5 0 3.8-1.3 3.8-3.8v-2.1c0-2.5-1.3-3.8-3.8-3.8h-25.8c-2.5 0-3.8 1.3-3.8 3.8v2.1c0 2.5 1.3 3.8 3.8 3.8h7.3v53.2c0 2.5 1.3 3.8 3.8 3.8h3.4c2.5.04 3.8-1.3 3.8-3.76zm248-.8h-19.4V258h16.1a1.89 1.89 0 0 0 2-2v-.8a1.89 1.89 0 0 0-2-2h-16.1v-25.8h19.1a1.89 1.89 0 0 0 2-2v-.8a1.77 1.77 0 0 0-2-1.9h-22.2a1.62 1.62 0 0 0-2 1.8v63a1.81 1.81 0 0 0 2 1.9H501a1.81 1.81 0 0 0 2-1.9v-.8a1.84 1.84 0 0 0-2-1.96zm-93.1-62.9h-.8c-10.1 0-15.3 4.7-15.3 14.1V276c0 9.3 5.2 14.1 15.3 14.1h.8c10.1 0 15.3-4.8 15.3-14.1v-40.1c0-9.36-5.2-14.06-15.3-14.06zm10.2 52.4c-.1 8-3 11.1-10.5 11.1s-10.5-3.1-10.5-11.1v-36.6c0-7.9 3-11.1 10.5-11.1s10.5 3.2 10.5 11.1zm-46.5-14.5c6.1-1.6 9.2-6.1 9.2-13.3v-9.7c0-9.4-5.2-14.1-15.3-14.1h-13.7a1.81 1.81 0 0 0-2 1.9v63a1.81 1.81 0 0 0 2 1.9h1.2a1.74 1.74 0 0 0 1.9-1.9v-26.9h11.6l10.4 27.2a2.32 2.32 0 0 0 2.3 1.5h1.5c1.4 0 2-1 1.5-2.3zm-6.4-3.9H355v-28.5h10.2c7.5 0 10.5 3.1 10.5 11.1v6.4c0 7.84-3 11.04-10.5 11.04zm85.9-33.1h-13.7a1.62 1.62 0 0 0-2 1.8v63a1.81 1.81 0 0 0 2 1.9h1.2a1.74 1.74 0 0 0 1.9-1.9v-26.1h10.6c10.1 0 15.3-4.8 15.3-14.1v-10.5c0-9.4-5.2-14.1-15.3-14.1zm10.2 22.8c0 7.9-3 11.1-10.5 11.1h-10.2v-29.2h10.2c7.5-.1 10.5 3.1 10.5 11zM259.5 308l-2.3-6.8-2.3 6.8-7.1.1 5.7 4.3-2.1 6.8 5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3zm227.6-136.1a364.42 364.42 0 0 0-35.6-11.3c19.6-78 11.6-134.7-22.3-153.9C394.7-12.66 343.3 11 291 61.94q5.1 4.95 10.2 10.2c82.5-80 119.6-53.5 120.9-52.8 22.4 12.7 36 55.8 15.5 137.8a587.83 587.83 0 0 0-84.6-13C281.1 43.64 212.4 2 170.8 2 140 2 127 23 123.2 29.74c-18.1 32-13.3 84.2.1 133.8-70.5 20.3-120.7 54.1-120.3 95 .5 59.6 103.2 87.8 122.1 92.8-20.5 81.9-10.1 135.6 22.3 153.9 28 15.8 75.1 6 138.2-55.2q-5.1-4.95-10.2-10.2c-82.5 80-119.7 53.5-120.9 52.8-22.3-12.6-36-55.6-15.5-137.9 12.4 2.9 41.8 9.5 84.6 13 71.9 100.4 140.6 142 182.1 142 30.8 0 43.8-21 47.6-27.7 18-31.9 13.3-84.1-.1-133.8 152.3-43.8 156.2-130.2 33.9-176.3zM135.9 36.84c2.9-5.1 11.9-20.3 34.9-20.3 36.8 0 98.8 39.6 163.3 126.2a714 714 0 0 0-93.9.9 547.76 547.76 0 0 1 42.2-52.4Q277.3 86 272.2 81a598.25 598.25 0 0 0-50.7 64.2 569.69 569.69 0 0 0-84.4 14.6c-.2-1.4-24.3-82.2-1.2-123zm304.8 438.3c-2.9 5.1-11.8 20.3-34.9 20.3-36.7 0-98.7-39.4-163.3-126.2a695.38 695.38 0 0 0 93.9-.9 547.76 547.76 0 0 1-42.2 52.4q5.1 5.25 10.2 10.2a588.47 588.47 0 0 0 50.7-64.2c47.3-4.7 80.3-13.5 84.4-14.6 22.7 84.4 4.5 117 1.2 123zm9.1-138.6c-3.6-11.9-7.7-24.1-12.4-36.4a12.67 12.67 0 0 1-10.7-5.7l-.1.1a19.61 19.61 0 0 1-5.4 3.6c5.7 14.3 10.6 28.4 14.7 42.2a535.3 535.3 0 0 1-72 13c3.5-5.3 17.2-26.2 32.2-54.2a24.6 24.6 0 0 1-6-3.2c-1.1 1.2-3.6 4.2-10.9 4.2-6.2 11.2-17.4 30.9-33.9 55.2a711.91 711.91 0 0 1-112.4 1c-7.9-11.2-21.5-31.1-36.8-57.8a21 21 0 0 1-3-1.5c-1.9 1.6-3.9 3.2-12.6 3.2 6.3 11.2 17.5 30.7 33.8 54.6a548.81 548.81 0 0 1-72.2-11.7q5.85-21 14.1-42.9c-3.2 0-5.4.2-8.4-1a17.58 17.58 0 0 1-6.9 1c-4.9 13.4-9.1 26.5-12.7 39.4C-31.7 297-12.1 216 126.7 175.64c3.6 11.9 7.7 24.1 12.4 36.4 10.4 0 12.9 3.4 14.4 5.3a12 12 0 0 1 2.3-2.2c-5.8-14.7-10.9-29.2-15.2-43.3 7-1.8 32.4-8.4 72-13-15.9 24.3-26.7 43.9-32.8 55.3a14.22 14.22 0 0 1 6.4 8 23.42 23.42 0 0 1 10.2-8.4c6.5-11.7 17.9-31.9 34.8-56.9a711.72 711.72 0 0 1 112.4-1c31.5 44.6 28.9 48.1 42.5 64.5a21.42 21.42 0 0 1 10.4-7.4c-6.4-11.4-17.6-31-34.3-55.5 40.4 4.1 65 10 72.2 11.7-4 14.4-8.9 29.2-14.6 44.2a20.74 20.74 0 0 1 6.8 4.3l.1.1a12.72 12.72 0 0 1 8.9-5.6c4.9-13.4 9.2-26.6 12.8-39.5a359.71 359.71 0 0 1 34.5 11c106.1 39.9 74 87.9 72.6 90.4-19.8 35.1-80.1 55.2-105.7 62.5zm-114.4-114h-1.2a1.74 1.74 0 0 0-1.9 1.9v49.8c0 7.9-2.6 11.1-10.1 11.1s-10.1-3.1-10.1-11.1v-49.8a1.69 1.69 0 0 0-1.9-1.9H309a1.81 1.81 0 0 0-2 1.9v51.5c0 9.6 5 14.1 15.1 14.1h.4c10.1 0 15.1-4.6 15.1-14.1v-51.5a2 2 0 0 0-2.2-1.9zM321.7 308l-2.3-6.8-2.3 6.8-7.1.1 5.7 4.3-2.1 6.8 5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3zm-31.1 7.4l-2.3-6.8-2.3 6.8-7.1.1 5.7 4.3-2.1 6.8 5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3zm5.1-30.8h-19.4v-26.7h16.1a1.89 1.89 0 0 0 2-2v-.8a1.89 1.89 0 0 0-2-2h-16.1v-25.8h19.1a1.89 1.89 0 0 0 2-2v-.8a1.77 1.77 0 0 0-2-1.9h-22.2a1.81 1.81 0 0 0-2 1.9v63a1.81 1.81 0 0 0 2 1.9h22.5a1.77 1.77 0 0 0 2-1.9v-.8a1.83 1.83 0 0 0-2-2.06zm-7.4-99.4L286 192l-7.1.1 5.7 4.3-2.1 6.8 5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3-7.1-.1z"]
            },
            faReadme: {
                prefix: "fab",
                iconName: "readme",
                icon: [576, 512, [], "f4d5", "M528.3 46.5H388.5c-48.1 0-89.9 33.3-100.4 80.3-10.6-47-52.3-80.3-100.4-80.3H48c-26.5 0-48 21.5-48 48v245.8c0 26.5 21.5 48 48 48h89.7c102.2 0 132.7 24.4 147.3 75 .7 2.8 5.2 2.8 6 0 14.7-50.6 45.2-75 147.3-75H528c26.5 0 48-21.5 48-48V94.6c0-26.4-21.3-47.9-47.7-48.1zM242 311.9c0 1.9-1.5 3.5-3.5 3.5H78.2c-1.9 0-3.5-1.5-3.5-3.5V289c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5v22.9zm0-60.9c0 1.9-1.5 3.5-3.5 3.5H78.2c-1.9 0-3.5-1.5-3.5-3.5v-22.9c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5V251zm0-60.9c0 1.9-1.5 3.5-3.5 3.5H78.2c-1.9 0-3.5-1.5-3.5-3.5v-22.9c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5v22.9zm259.3 121.7c0 1.9-1.5 3.5-3.5 3.5H337.5c-1.9 0-3.5-1.5-3.5-3.5v-22.9c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5v22.9zm0-60.9c0 1.9-1.5 3.5-3.5 3.5H337.5c-1.9 0-3.5-1.5-3.5-3.5V228c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5v22.9zm0-60.9c0 1.9-1.5 3.5-3.5 3.5H337.5c-1.9 0-3.5-1.5-3.5-3.5v-22.8c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5V190z"]
            },
            faRebel: {
                prefix: "fab",
                iconName: "rebel",
                icon: [512, 512, [], "f1d0", "M256.5 504C117.2 504 9 387.8 13.2 249.9 16 170.7 56.4 97.7 129.7 49.5c.3 0 1.9-.6 1.1.8-5.8 5.5-111.3 129.8-14.1 226.4 49.8 49.5 90 2.5 90 2.5 38.5-50.1-.6-125.9-.6-125.9-10-24.9-45.7-40.1-45.7-40.1l28.8-31.8c24.4 10.5 43.2 38.7 43.2 38.7.8-29.6-21.9-61.4-21.9-61.4L255.1 8l44.3 50.1c-20.5 28.8-21.9 62.6-21.9 62.6 13.8-23 43.5-39.3 43.5-39.3l28.5 31.8c-27.4 8.9-45.4 39.9-45.4 39.9-15.8 28.5-27.1 89.4.6 127.3 32.4 44.6 87.7-2.8 87.7-2.8 102.7-91.9-10.5-225-10.5-225-6.1-5.5.8-2.8.8-2.8 50.1 36.5 114.6 84.4 116.2 204.8C500.9 400.2 399 504 256.5 504z"]
            },
            faRedRiver: {
                prefix: "fab",
                iconName: "red-river",
                icon: [448, 512, [], "f3e3", "M353.2 32H94.8C42.4 32 0 74.4 0 126.8v258.4C0 437.6 42.4 480 94.8 480h258.4c52.4 0 94.8-42.4 94.8-94.8V126.8c0-52.4-42.4-94.8-94.8-94.8zM144.9 200.9v56.3c0 27-21.9 48.9-48.9 48.9V151.9c0-13.2 10.7-23.9 23.9-23.9h154.2c0 27-21.9 48.9-48.9 48.9h-56.3c-12.3-.6-24.6 11.6-24 24zm176.3 72h-56.3c-12.3-.6-24.6 11.6-24 24v56.3c0 27-21.9 48.9-48.9 48.9V247.9c0-13.2 10.7-23.9 23.9-23.9h154.2c0 27-21.9 48.9-48.9 48.9z"]
            },
            faReddit: {
                prefix: "fab",
                iconName: "reddit",
                icon: [512, 512, [], "f1a1", "M201.5 305.5c-13.8 0-24.9-11.1-24.9-24.6 0-13.8 11.1-24.9 24.9-24.9 13.6 0 24.6 11.1 24.6 24.9 0 13.6-11.1 24.6-24.6 24.6zM504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-132.3-41.2c-9.4 0-17.7 3.9-23.8 10-22.4-15.5-52.6-25.5-86.1-26.6l17.4-78.3 55.4 12.5c0 13.6 11.1 24.6 24.6 24.6 13.8 0 24.9-11.3 24.9-24.9s-11.1-24.9-24.9-24.9c-9.7 0-18 5.8-22.1 13.8l-61.2-13.6c-3-.8-6.1 1.4-6.9 4.4l-19.1 86.4c-33.2 1.4-63.1 11.3-85.5 26.8-6.1-6.4-14.7-10.2-24.1-10.2-34.9 0-46.3 46.9-14.4 62.8-1.1 5-1.7 10.2-1.7 15.5 0 52.6 59.2 95.2 132 95.2 73.1 0 132.3-42.6 132.3-95.2 0-5.3-.6-10.8-1.9-15.8 31.3-16 19.8-62.5-14.9-62.5zM302.8 331c-18.2 18.2-76.1 17.9-93.6 0-2.2-2.2-6.1-2.2-8.3 0-2.5 2.5-2.5 6.4 0 8.6 22.8 22.8 87.3 22.8 110.2 0 2.5-2.2 2.5-6.1 0-8.6-2.2-2.2-6.1-2.2-8.3 0zm7.7-75c-13.6 0-24.6 11.1-24.6 24.9 0 13.6 11.1 24.6 24.6 24.6 13.8 0 24.9-11.1 24.9-24.6 0-13.8-11-24.9-24.9-24.9z"]
            },
            faRedditAlien: {
                prefix: "fab",
                iconName: "reddit-alien",
                icon: [512, 512, [], "f281", "M440.3 203.5c-15 0-28.2 6.2-37.9 15.9-35.7-24.7-83.8-40.6-137.1-42.3L293 52.3l88.2 19.8c0 21.6 17.6 39.2 39.2 39.2 22 0 39.7-18.1 39.7-39.7s-17.6-39.7-39.7-39.7c-15.4 0-28.7 9.3-35.3 22l-97.4-21.6c-4.9-1.3-9.7 2.2-11 7.1L246.3 177c-52.9 2.2-100.5 18.1-136.3 42.8-9.7-10.1-23.4-16.3-38.4-16.3-55.6 0-73.8 74.6-22.9 100.1-1.8 7.9-2.6 16.3-2.6 24.7 0 83.8 94.4 151.7 210.3 151.7 116.4 0 210.8-67.9 210.8-151.7 0-8.4-.9-17.2-3.1-25.1 49.9-25.6 31.5-99.7-23.8-99.7zM129.4 308.9c0-22 17.6-39.7 39.7-39.7 21.6 0 39.2 17.6 39.2 39.7 0 21.6-17.6 39.2-39.2 39.2-22 .1-39.7-17.6-39.7-39.2zm214.3 93.5c-36.4 36.4-139.1 36.4-175.5 0-4-3.5-4-9.7 0-13.7 3.5-3.5 9.7-3.5 13.2 0 27.8 28.5 120 29 149 0 3.5-3.5 9.7-3.5 13.2 0 4.1 4 4.1 10.2.1 13.7zm-.8-54.2c-21.6 0-39.2-17.6-39.2-39.2 0-22 17.6-39.7 39.2-39.7 22 0 39.7 17.6 39.7 39.7-.1 21.5-17.7 39.2-39.7 39.2z"]
            },
            faRedditSquare: {
                prefix: "fab",
                iconName: "reddit-square",
                icon: [448, 512, [], "f1a2", "M283.2 345.5c2.7 2.7 2.7 6.8 0 9.2-24.5 24.5-93.8 24.6-118.4 0-2.7-2.4-2.7-6.5 0-9.2 2.4-2.4 6.5-2.4 8.9 0 18.7 19.2 81 19.6 100.5 0 2.4-2.3 6.6-2.3 9 0zm-91.3-53.8c0-14.9-11.9-26.8-26.5-26.8-14.9 0-26.8 11.9-26.8 26.8 0 14.6 11.9 26.5 26.8 26.5 14.6 0 26.5-11.9 26.5-26.5zm90.7-26.8c-14.6 0-26.5 11.9-26.5 26.8 0 14.6 11.9 26.5 26.5 26.5 14.9 0 26.8-11.9 26.8-26.5 0-14.9-11.9-26.8-26.8-26.8zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-99.7 140.6c-10.1 0-19 4.2-25.6 10.7-24.1-16.7-56.5-27.4-92.5-28.6l18.7-84.2 59.5 13.4c0 14.6 11.9 26.5 26.5 26.5 14.9 0 26.8-12.2 26.8-26.8 0-14.6-11.9-26.8-26.8-26.8-10.4 0-19.3 6.2-23.8 14.9l-65.7-14.6c-3.3-.9-6.5 1.5-7.4 4.8l-20.5 92.8c-35.7 1.5-67.8 12.2-91.9 28.9-6.5-6.8-15.8-11-25.9-11-37.5 0-49.8 50.4-15.5 67.5-1.2 5.4-1.8 11-1.8 16.7 0 56.5 63.7 102.3 141.9 102.3 78.5 0 142.2-45.8 142.2-102.3 0-5.7-.6-11.6-2.1-17 33.6-17.2 21.2-67.2-16.1-67.2z"]
            },
            faRedhat: {
                prefix: "fab",
                iconName: "redhat",
                icon: [512, 512, [], "f7bc", "M341.52 285.56c33.65 0 82.34-6.94 82.34-47 .22-6.74.86-1.82-20.88-96.24-4.62-19.15-8.68-27.84-42.31-44.65-26.09-13.34-82.92-35.37-99.73-35.37-15.66 0-20.2 20.17-38.87 20.17-18 0-31.31-15.06-48.12-15.06-16.14 0-26.66 11-34.78 33.62-27.5 77.55-26.28 74.27-26.12 78.27 0 24.8 97.64 106.11 228.47 106.11M429 254.84c4.65 22 4.65 24.35 4.65 27.25 0 37.66-42.33 58.56-98 58.56-125.74.08-235.91-73.65-235.91-122.33a49.55 49.55 0 0 1 4.06-19.72C58.56 200.86 0 208.93 0 260.63c0 84.67 200.63 189 359.49 189 121.79 0 152.51-55.08 152.51-98.58 0-34.21-29.59-73.05-82.93-96.24"]
            },
            faRenren: {
                prefix: "fab",
                iconName: "renren",
                icon: [512, 512, [], "f18b", "M214 169.1c0 110.4-61 205.4-147.6 247.4C30 373.2 8 317.7 8 256.6 8 133.9 97.1 32.2 214 12.5v156.6zM255 504c-42.9 0-83.3-11-118.5-30.4C193.7 437.5 239.9 382.9 255 319c15.5 63.9 61.7 118.5 118.8 154.7C338.7 493 298.3 504 255 504zm190.6-87.5C359 374.5 298 279.6 298 169.1V12.5c116.9 19.7 206 121.4 206 244.1 0 61.1-22 116.6-58.4 159.9z"]
            },
            faReplyd: {
                prefix: "fab",
                iconName: "replyd",
                icon: [448, 512, [], "f3e6", "M320 480H128C57.6 480 0 422.4 0 352V160C0 89.6 57.6 32 128 32h192c70.4 0 128 57.6 128 128v192c0 70.4-57.6 128-128 128zM193.4 273.2c-6.1-2-11.6-3.1-16.4-3.1-7.2 0-13.5 1.9-18.9 5.6-5.4 3.7-9.6 9-12.8 15.8h-1.1l-4.2-18.3h-28v138.9h36.1v-89.7c1.5-5.4 4.4-9.8 8.7-13.2 4.3-3.4 9.8-5.1 16.2-5.1 4.6 0 9.8 1 15.6 3.1l4.8-34zm115.2 103.4c-3.2 2.4-7.7 4.8-13.7 7.1-6 2.3-12.8 3.5-20.4 3.5-12.2 0-21.1-3-26.5-8.9-5.5-5.9-8.5-14.7-9-26.4h83.3c.9-4.8 1.6-9.4 2.1-13.9.5-4.4.7-8.6.7-12.5 0-10.7-1.6-19.7-4.7-26.9-3.2-7.2-7.3-13-12.5-17.2-5.2-4.3-11.1-7.3-17.8-9.2-6.7-1.8-13.5-2.8-20.6-2.8-21.1 0-37.5 6.1-49.2 18.3s-17.5 30.5-17.5 55c0 22.8 5.2 40.7 15.6 53.7 10.4 13.1 26.8 19.6 49.2 19.6 10.7 0 20.9-1.5 30.4-4.6 9.5-3.1 17.1-6.8 22.6-11.2l-12-23.6zm-21.8-70.3c3.8 5.4 5.3 13.1 4.6 23.1h-51.7c.9-9.4 3.7-17 8.2-22.6 4.5-5.6 11.5-8.5 21-8.5 8.2-.1 14.1 2.6 17.9 8zm79.9 2.5c4.1 3.9 9.4 5.8 16.1 5.8 7 0 12.6-1.9 16.7-5.8s6.1-9.1 6.1-15.6-2-11.6-6.1-15.4c-4.1-3.8-9.6-5.7-16.7-5.7-6.7 0-12 1.9-16.1 5.7-4.1 3.8-6.1 8.9-6.1 15.4s2 11.7 6.1 15.6zm0 100.5c4.1 3.9 9.4 5.8 16.1 5.8 7 0 12.6-1.9 16.7-5.8s6.1-9.1 6.1-15.6-2-11.6-6.1-15.4c-4.1-3.8-9.6-5.7-16.7-5.7-6.7 0-12 1.9-16.1 5.7-4.1 3.8-6.1 8.9-6.1 15.4 0 6.6 2 11.7 6.1 15.6z"]
            },
            faResearchgate: {
                prefix: "fab",
                iconName: "researchgate",
                icon: [448, 512, [], "f4f8", "M0 32v448h448V32H0zm262.2 334.4c-6.6 3-33.2 6-50-14.2-9.2-10.6-25.3-33.3-42.2-63.6-8.9 0-14.7 0-21.4-.6v46.4c0 23.5 6 21.2 25.8 23.9v8.1c-6.9-.3-23.1-.8-35.6-.8-13.1 0-26.1.6-33.6.8v-8.1c15.5-2.9 22-1.3 22-23.9V225c0-22.6-6.4-21-22-23.9V193c25.8 1 53.1-.6 70.9-.6 31.7 0 55.9 14.4 55.9 45.6 0 21.1-16.7 42.2-39.2 47.5 13.6 24.2 30 45.6 42.2 58.9 7.2 7.8 17.2 14.7 27.2 14.7v7.3zm22.9-135c-23.3 0-32.2-15.7-32.2-32.2V167c0-12.2 8.8-30.4 34-30.4s30.4 17.9 30.4 17.9l-10.7 7.2s-5.5-12.5-19.7-12.5c-7.9 0-19.7 7.3-19.7 19.7v26.8c0 13.4 6.6 23.3 17.9 23.3 14.1 0 21.5-10.9 21.5-26.8h-17.9v-10.7h30.4c0 20.5 4.7 49.9-34 49.9zm-116.5 44.7c-9.4 0-13.6-.3-20-.8v-69.7c6.4-.6 15-.6 22.5-.6 23.3 0 37.2 12.2 37.2 34.5 0 21.9-15 36.6-39.7 36.6z"]
            },
            faResolving: {
                prefix: "fab",
                iconName: "resolving",
                icon: [496, 512, [], "f3e7", "M281.2 278.2c46-13.3 49.6-23.5 44-43.4L314 195.5c-6.1-20.9-18.4-28.1-71.1-12.8L54.7 236.8l28.6 98.6 197.9-57.2zM248.5 8C131.4 8 33.2 88.7 7.2 197.5l221.9-63.9c34.8-10.2 54.2-11.7 79.3-8.2 36.3 6.1 52.7 25 61.4 55.2l10.7 37.8c8.2 28.1 1 50.6-23.5 73.6-19.4 17.4-31.2 24.5-61.4 33.2L203 351.8l220.4 27.1 9.7 34.2-48.1 13.3-286.8-37.3 23 80.2c36.8 22 80.3 34.7 126.3 34.7 137 0 248.5-111.4 248.5-248.3C497 119.4 385.5 8 248.5 8zM38.3 388.6L0 256.8c0 48.5 14.3 93.4 38.3 131.8z"]
            },
            faRev: {
                prefix: "fab",
                iconName: "rev",
                icon: [448, 512, [], "f5b2", "M289.67 274.89a65.57 65.57 0 1 1-65.56-65.56 65.64 65.64 0 0 1 65.56 65.56zm139.55-5.05h-.13a204.69 204.69 0 0 0-74.32-153l-45.38 26.2a157.07 157.07 0 0 1 71.81 131.84C381.2 361.5 310.73 432 224.11 432S67 361.5 67 274.88c0-81.88 63-149.27 143-156.43v39.12l108.77-62.79L210 32v38.32c-106.7 7.25-191 96-191 204.57 0 111.59 89.12 202.29 200.06 205v.11h210.16V269.84z"]
            },
            faRocketchat: {
                prefix: "fab",
                iconName: "rocketchat",
                icon: [576, 512, [], "f3e8", "M284.046,224.8a34.114,34.114,0,1,0,34.317,34.113A34.217,34.217,0,0,0,284.046,224.8Zm-110.45,0a34.114,34.114,0,1,0,34.317,34.113A34.217,34.217,0,0,0,173.6,224.8Zm220.923,0a34.114,34.114,0,1,0,34.317,34.113A34.215,34.215,0,0,0,394.519,224.8Zm153.807-55.319c-15.535-24.172-37.31-45.57-64.681-63.618-52.886-34.817-122.374-54-195.666-54a405.975,405.975,0,0,0-72.032,6.357,238.524,238.524,0,0,0-49.51-36.588C99.684-11.7,40.859.711,11.135,11.421A14.291,14.291,0,0,0,5.58,34.782C26.542,56.458,61.222,99.3,52.7,138.252c-33.142,33.9-51.112,74.776-51.112,117.337,0,43.372,17.97,84.248,51.112,118.148,8.526,38.956-26.154,81.816-47.116,103.491a14.284,14.284,0,0,0,5.555,23.34c29.724,10.709,88.549,23.147,155.324-10.2a238.679,238.679,0,0,0,49.51-36.589A405.972,405.972,0,0,0,288,460.14c73.313,0,142.8-19.159,195.667-53.975,27.371-18.049,49.145-39.426,64.679-63.619,17.309-26.923,26.07-55.916,26.07-86.125C574.394,225.4,565.634,196.43,548.326,169.485ZM284.987,409.9a345.65,345.65,0,0,1-89.446-11.5l-20.129,19.393a184.366,184.366,0,0,1-37.138,27.585,145.767,145.767,0,0,1-52.522,14.87c.983-1.771,1.881-3.563,2.842-5.356q30.258-55.68,16.325-100.078c-32.992-25.962-52.778-59.2-52.778-95.4,0-83.1,104.254-150.469,232.846-150.469s232.867,67.373,232.867,150.469C517.854,342.525,413.6,409.9,284.987,409.9Z"]
            },
            faRockrms: {
                prefix: "fab",
                iconName: "rockrms",
                icon: [496, 512, [], "f3e9", "M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm157.4 419.5h-90l-112-131.3c-17.9-20.4-3.9-56.1 26.6-56.1h75.3l-84.6-99.3-84.3 98.9h-90L193.5 67.2c14.4-18.4 41.3-17.3 54.5 0l157.7 185.1c19 22.8 2 57.2-27.6 56.1-.6 0-74.2.2-74.2.2l101.5 118.9z"]
            },
            faRust: {
                prefix: "fab",
                iconName: "rust",
                icon: [512, 512, [], "e07a", "M508.52,249.75,486.7,236.24c-.17-2-.34-3.93-.55-5.88l18.72-17.5a7.35,7.35,0,0,0-2.44-12.25l-24-9c-.54-1.88-1.08-3.78-1.67-5.64l15-20.83a7.35,7.35,0,0,0-4.79-11.54l-25.42-4.15c-.9-1.73-1.79-3.45-2.73-5.15l10.68-23.42a7.35,7.35,0,0,0-6.95-10.39l-25.82.91q-1.79-2.22-3.61-4.4L439,81.84A7.36,7.36,0,0,0,430.16,73L405,78.93q-2.17-1.83-4.4-3.61l.91-25.82a7.35,7.35,0,0,0-10.39-7L367.7,53.23c-1.7-.94-3.43-1.84-5.15-2.73L358.4,25.08a7.35,7.35,0,0,0-11.54-4.79L326,35.26c-1.86-.59-3.75-1.13-5.64-1.67l-9-24a7.35,7.35,0,0,0-12.25-2.44l-17.5,18.72c-1.95-.21-3.91-.38-5.88-.55L262.25,3.48a7.35,7.35,0,0,0-12.5,0L236.24,25.3c-2,.17-3.93.34-5.88.55L212.86,7.13a7.35,7.35,0,0,0-12.25,2.44l-9,24c-1.89.55-3.79,1.08-5.66,1.68l-20.82-15a7.35,7.35,0,0,0-11.54,4.79l-4.15,25.41c-1.73.9-3.45,1.79-5.16,2.73L120.88,42.55a7.35,7.35,0,0,0-10.39,7l.92,25.81c-1.49,1.19-3,2.39-4.42,3.61L81.84,73A7.36,7.36,0,0,0,73,81.84L78.93,107c-1.23,1.45-2.43,2.93-3.62,4.41l-25.81-.91a7.42,7.42,0,0,0-6.37,3.26,7.35,7.35,0,0,0-.57,7.13l10.66,23.41c-.94,1.7-1.83,3.43-2.73,5.16L25.08,153.6a7.35,7.35,0,0,0-4.79,11.54l15,20.82c-.59,1.87-1.13,3.77-1.68,5.66l-24,9a7.35,7.35,0,0,0-2.44,12.25l18.72,17.5c-.21,1.95-.38,3.91-.55,5.88L3.48,249.75a7.35,7.35,0,0,0,0,12.5L25.3,275.76c.17,2,.34,3.92.55,5.87L7.13,299.13a7.35,7.35,0,0,0,2.44,12.25l24,9c.55,1.89,1.08,3.78,1.68,5.65l-15,20.83a7.35,7.35,0,0,0,4.79,11.54l25.42,4.15c.9,1.72,1.79,3.45,2.73,5.14L42.56,391.12a7.35,7.35,0,0,0,.57,7.13,7.13,7.13,0,0,0,6.37,3.26l25.83-.91q1.77,2.22,3.6,4.4L73,430.16A7.36,7.36,0,0,0,81.84,439L107,433.07q2.18,1.83,4.41,3.61l-.92,25.82a7.35,7.35,0,0,0,10.39,6.95l23.43-10.68c1.69.94,3.42,1.83,5.14,2.73l4.15,25.42a7.34,7.34,0,0,0,11.54,4.78l20.83-15c1.86.6,3.76,1.13,5.65,1.68l9,24a7.36,7.36,0,0,0,12.25,2.44l17.5-18.72c1.95.21,3.92.38,5.88.55l13.51,21.82a7.35,7.35,0,0,0,12.5,0l13.51-21.82c2-.17,3.93-.34,5.88-.56l17.5,18.73a7.36,7.36,0,0,0,12.25-2.44l9-24c1.89-.55,3.78-1.08,5.65-1.68l20.82,15a7.34,7.34,0,0,0,11.54-4.78l4.15-25.42c1.72-.9,3.45-1.79,5.15-2.73l23.42,10.68a7.35,7.35,0,0,0,10.39-6.95l-.91-25.82q2.22-1.79,4.4-3.61L430.16,439a7.36,7.36,0,0,0,8.84-8.84L433.07,405q1.83-2.17,3.61-4.4l25.82.91a7.23,7.23,0,0,0,6.37-3.26,7.35,7.35,0,0,0,.58-7.13L458.77,367.7c.94-1.7,1.83-3.43,2.73-5.15l25.42-4.15a7.35,7.35,0,0,0,4.79-11.54l-15-20.83c.59-1.87,1.13-3.76,1.67-5.65l24-9a7.35,7.35,0,0,0,2.44-12.25l-18.72-17.5c.21-1.95.38-3.91.55-5.87l21.82-13.51a7.35,7.35,0,0,0,0-12.5Zm-151,129.08A13.91,13.91,0,0,0,341,389.51l-7.64,35.67A187.51,187.51,0,0,1,177,424.44l-7.64-35.66a13.87,13.87,0,0,0-16.46-10.68l-31.51,6.76a187.38,187.38,0,0,1-16.26-19.21H258.3c1.72,0,2.89-.29,2.89-1.91V309.55c0-1.57-1.17-1.91-2.89-1.91H213.47l.05-34.35H262c4.41,0,23.66,1.28,29.79,25.87,1.91,7.55,6.17,32.14,9.06,40,2.89,8.82,14.6,26.46,27.1,26.46H407a187.3,187.3,0,0,1-17.34,20.09Zm25.77,34.49A15.24,15.24,0,1,1,368,398.08h.44A15.23,15.23,0,0,1,383.24,413.32Zm-225.62-.68a15.24,15.24,0,1,1-15.25-15.25h.45A15.25,15.25,0,0,1,157.62,412.64ZM69.57,234.15l32.83-14.6a13.88,13.88,0,0,0,7.06-18.33L102.69,186h26.56V305.73H75.65A187.65,187.65,0,0,1,69.57,234.15ZM58.31,198.09a15.24,15.24,0,0,1,15.23-15.25H74a15.24,15.24,0,1,1-15.67,15.24Zm155.16,24.49.05-35.32h63.26c3.28,0,23.07,3.77,23.07,18.62,0,12.29-15.19,16.7-27.68,16.7ZM399,306.71c-9.8,1.13-20.63-4.12-22-10.09-5.78-32.49-15.39-39.4-30.57-51.4,18.86-11.95,38.46-29.64,38.46-53.26,0-25.52-17.49-41.59-29.4-49.48-16.76-11-35.28-13.23-40.27-13.23H116.32A187.49,187.49,0,0,1,221.21,70.06l23.47,24.6a13.82,13.82,0,0,0,19.6.44l26.26-25a187.51,187.51,0,0,1,128.37,91.43l-18,40.57A14,14,0,0,0,408,220.43l34.59,15.33a187.12,187.12,0,0,1,.4,32.54H423.71c-1.91,0-2.69,1.27-2.69,3.13v8.82C421,301,409.31,305.58,399,306.71ZM240,60.21A15.24,15.24,0,0,1,255.21,45h.45A15.24,15.24,0,1,1,240,60.21ZM436.84,214a15.24,15.24,0,1,1,0-30.48h.44a15.24,15.24,0,0,1-.44,30.48Z"]
            },
            faSafari: {
                prefix: "fab",
                iconName: "safari",
                icon: [512, 512, [], "f267", "M274.69,274.69l-37.38-37.38L166,346ZM256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8ZM411.85,182.79l14.78-6.13A8,8,0,0,1,437.08,181h0a8,8,0,0,1-4.33,10.46L418,197.57a8,8,0,0,1-10.45-4.33h0A8,8,0,0,1,411.85,182.79ZM314.43,94l6.12-14.78A8,8,0,0,1,331,74.92h0a8,8,0,0,1,4.33,10.45l-6.13,14.78a8,8,0,0,1-10.45,4.33h0A8,8,0,0,1,314.43,94ZM256,60h0a8,8,0,0,1,8,8V84a8,8,0,0,1-8,8h0a8,8,0,0,1-8-8V68A8,8,0,0,1,256,60ZM181,74.92a8,8,0,0,1,10.46,4.33L197.57,94a8,8,0,1,1-14.78,6.12l-6.13-14.78A8,8,0,0,1,181,74.92Zm-63.58,42.49h0a8,8,0,0,1,11.31,0L140,128.72A8,8,0,0,1,140,140h0a8,8,0,0,1-11.31,0l-11.31-11.31A8,8,0,0,1,117.41,117.41ZM60,256h0a8,8,0,0,1,8-8H84a8,8,0,0,1,8,8h0a8,8,0,0,1-8,8H68A8,8,0,0,1,60,256Zm40.15,73.21-14.78,6.13A8,8,0,0,1,74.92,331h0a8,8,0,0,1,4.33-10.46L94,314.43a8,8,0,0,1,10.45,4.33h0A8,8,0,0,1,100.15,329.21Zm4.33-136h0A8,8,0,0,1,94,197.57l-14.78-6.12A8,8,0,0,1,74.92,181h0a8,8,0,0,1,10.45-4.33l14.78,6.13A8,8,0,0,1,104.48,193.24ZM197.57,418l-6.12,14.78a8,8,0,0,1-14.79-6.12l6.13-14.78A8,8,0,1,1,197.57,418ZM264,444a8,8,0,0,1-8,8h0a8,8,0,0,1-8-8V428a8,8,0,0,1,8-8h0a8,8,0,0,1,8,8Zm67-6.92h0a8,8,0,0,1-10.46-4.33L314.43,418a8,8,0,0,1,4.33-10.45h0a8,8,0,0,1,10.45,4.33l6.13,14.78A8,8,0,0,1,331,437.08Zm63.58-42.49h0a8,8,0,0,1-11.31,0L372,383.28A8,8,0,0,1,372,372h0a8,8,0,0,1,11.31,0l11.31,11.31A8,8,0,0,1,394.59,394.59ZM286.25,286.25,110.34,401.66,225.75,225.75,401.66,110.34ZM437.08,331h0a8,8,0,0,1-10.45,4.33l-14.78-6.13a8,8,0,0,1-4.33-10.45h0A8,8,0,0,1,418,314.43l14.78,6.12A8,8,0,0,1,437.08,331ZM444,264H428a8,8,0,0,1-8-8h0a8,8,0,0,1,8-8h16a8,8,0,0,1,8,8h0A8,8,0,0,1,444,264Z"]
            },
            faSalesforce: {
                prefix: "fab",
                iconName: "salesforce",
                icon: [640, 512, [], "f83b", "M248.89 245.64h-26.35c.69-5.16 3.32-14.12 13.64-14.12 6.75 0 11.97 3.82 12.71 14.12zm136.66-13.88c-.47 0-14.11-1.77-14.11 20s13.63 20 14.11 20c13 0 14.11-13.54 14.11-20 0-21.76-13.66-20-14.11-20zm-243.22 23.76a8.63 8.63 0 0 0-3.29 7.29c0 4.78 2.08 6.05 3.29 7.05 4.7 3.7 15.07 2.12 20.93.95v-16.94c-5.32-1.07-16.73-1.96-20.93 1.65zM640 232c0 87.58-80 154.39-165.36 136.43-18.37 33-70.73 70.75-132.2 41.63-41.16 96.05-177.89 92.18-213.81-5.17C8.91 428.78-50.19 266.52 53.36 205.61 18.61 126.18 76 32 167.67 32a124.24 124.24 0 0 1 98.56 48.7c20.7-21.4 49.4-34.81 81.15-34.81 42.34 0 79 23.52 98.8 58.57C539 63.78 640 132.69 640 232zm-519.55 31.8c0-11.76-11.69-15.17-17.87-17.17-5.27-2.11-13.41-3.51-13.41-8.94 0-9.46 17-6.66 25.17-2.12 0 0 1.17.71 1.64-.47.24-.7 2.36-6.58 2.59-7.29a1.13 1.13 0 0 0-.7-1.41c-12.33-7.63-40.7-8.51-40.7 12.7 0 12.46 11.49 15.44 17.88 17.17 4.72 1.58 13.17 3 13.17 8.7 0 4-3.53 7.06-9.17 7.06a31.76 31.76 0 0 1-19-6.35c-.47-.23-1.42-.71-1.65.71l-2.4 7.47c-.47.94.23 1.18.23 1.41 1.75 1.4 10.3 6.59 22.82 6.59 13.17 0 21.4-7.06 21.4-18.11zm32-42.58c-10.13 0-18.66 3.17-21.4 5.18a1 1 0 0 0-.24 1.41l2.59 7.06a1 1 0 0 0 1.18.7c.65 0 6.8-4 16.93-4 4 0 7.06.71 9.18 2.36 3.6 2.8 3.06 8.29 3.06 10.58-4.79-.3-19.11-3.44-29.41 3.76a16.92 16.92 0 0 0-7.34 14.54c0 5.9 1.51 10.4 6.59 14.35 12.24 8.16 36.28 2 38.1 1.41 1.58-.32 3.53-.66 3.53-1.88v-33.88c.04-4.61.32-21.64-22.78-21.64zM199 200.24a1.11 1.11 0 0 0-1.18-1.18H188a1.11 1.11 0 0 0-1.17 1.18v79a1.11 1.11 0 0 0 1.17 1.18h9.88a1.11 1.11 0 0 0 1.18-1.18zm55.75 28.93c-2.1-2.31-6.79-7.53-17.65-7.53-3.51 0-14.16.23-20.7 8.94-6.35 7.63-6.58 18.11-6.58 21.41 0 3.12.15 14.26 7.06 21.17 2.64 2.91 9.06 8.23 22.81 8.23 10.82 0 16.47-2.35 18.58-3.76.47-.24.71-.71.24-1.88l-2.35-6.83a1.26 1.26 0 0 0-1.41-.7c-2.59.94-6.35 2.82-15.29 2.82-17.42 0-16.85-14.74-16.94-16.7h37.17a1.23 1.23 0 0 0 1.17-.94c-.29 0 2.07-14.7-6.09-24.23zm36.69 52.69c13.17 0 21.41-7.06 21.41-18.11 0-11.76-11.7-15.17-17.88-17.17-4.14-1.66-13.41-3.38-13.41-8.94 0-3.76 3.29-6.35 8.47-6.35a38.11 38.11 0 0 1 16.7 4.23s1.18.71 1.65-.47c.23-.7 2.35-6.58 2.58-7.29a1.13 1.13 0 0 0-.7-1.41c-7.91-4.9-16.74-4.94-20.23-4.94-12 0-20.46 7.29-20.46 17.64 0 12.46 11.48 15.44 17.87 17.17 6.11 2 13.17 3.26 13.17 8.7 0 4-3.52 7.06-9.17 7.06a31.8 31.8 0 0 1-19-6.35 1 1 0 0 0-1.65.71l-2.35 7.52c-.47.94.23 1.18.23 1.41 1.72 1.4 10.33 6.59 22.79 6.59zM357.09 224c0-.71-.24-1.18-1.18-1.18h-11.76c0-.14.94-8.94 4.47-12.47 4.16-4.15 11.76-1.64 12-1.64 1.17.47 1.41 0 1.64-.47l2.83-7.77c.7-.94 0-1.17-.24-1.41-5.09-2-17.35-2.87-24.46 4.24-5.48 5.48-7 13.92-8 19.52h-8.47a1.28 1.28 0 0 0-1.17 1.18l-1.42 7.76c0 .7.24 1.17 1.18 1.17h8.23c-8.51 47.9-8.75 50.21-10.35 55.52-1.08 3.62-3.29 6.9-5.88 7.76-.09 0-3.88 1.68-9.64-.24 0 0-.94-.47-1.41.71-.24.71-2.59 6.82-2.83 7.53s0 1.41.47 1.41c5.11 2 13 1.77 17.88 0 6.28-2.28 9.72-7.89 11.53-12.94 2.75-7.71 2.81-9.79 11.76-59.74h12.23a1.29 1.29 0 0 0 1.18-1.18zm53.39 16c-.56-1.68-5.1-18.11-25.17-18.11-15.25 0-23 10-25.16 18.11-1 3-3.18 14 0 23.52.09.3 4.41 18.12 25.16 18.12 14.95 0 22.9-9.61 25.17-18.12 3.21-9.61 1.01-20.52 0-23.52zm45.4-16.7c-5-1.65-16.62-1.9-22.11 5.41v-4.47a1.11 1.11 0 0 0-1.18-1.17h-9.4a1.11 1.11 0 0 0-1.18 1.17v55.28a1.12 1.12 0 0 0 1.18 1.18h9.64a1.12 1.12 0 0 0 1.18-1.18v-27.77c0-2.91.05-11.37 4.46-15.05 4.9-4.9 12-3.36 13.41-3.06a1.57 1.57 0 0 0 1.41-.94 74 74 0 0 0 3.06-8 1.16 1.16 0 0 0-.47-1.41zm46.81 54.1l-2.12-7.29c-.47-1.18-1.41-.71-1.41-.71-4.23 1.82-10.15 1.89-11.29 1.89-4.64 0-17.17-1.13-17.17-19.76 0-6.23 1.85-19.76 16.47-19.76a34.85 34.85 0 0 1 11.52 1.65s.94.47 1.18-.71c.94-2.59 1.64-4.47 2.59-7.53.23-.94-.47-1.17-.71-1.17-11.59-3.87-22.34-2.53-27.76 0-1.59.74-16.23 6.49-16.23 27.52 0 2.9-.58 30.11 28.94 30.11a44.45 44.45 0 0 0 15.52-2.83 1.3 1.3 0 0 0 .47-1.42zm53.87-39.52c-.8-3-5.37-16.23-22.35-16.23-16 0-23.52 10.11-25.64 18.59a38.58 38.58 0 0 0-1.65 11.76c0 25.87 18.84 29.4 29.88 29.4 10.82 0 16.46-2.35 18.58-3.76.47-.24.71-.71.24-1.88l-2.36-6.83a1.26 1.26 0 0 0-1.41-.7c-2.59.94-6.35 2.82-15.29 2.82-17.42 0-16.85-14.74-16.93-16.7h37.16a1.25 1.25 0 0 0 1.18-.94c-.24-.01.94-7.07-1.41-15.54zm-23.29-6.35c-10.33 0-13 9-13.64 14.12H546c-.88-11.92-7.62-14.13-12.73-14.13z"]
            },
            faSass: {
                prefix: "fab",
                iconName: "sass",
                icon: [640, 512, [], "f41e", "M301.84 378.92c-.3.6-.6 1.08 0 0zm249.13-87a131.16 131.16 0 0 0-58 13.5c-5.9-11.9-12-22.3-13-30.1-1.2-9.1-2.5-14.5-1.1-25.3s7.7-26.1 7.6-27.2-1.4-6.6-14.3-6.7-24 2.5-25.29 5.9a122.83 122.83 0 0 0-5.3 19.1c-2.3 11.7-25.79 53.5-39.09 75.3-4.4-8.5-8.1-16-8.9-22-1.2-9.1-2.5-14.5-1.1-25.3s7.7-26.1 7.6-27.2-1.4-6.6-14.29-6.7-24 2.5-25.3 5.9-2.7 11.4-5.3 19.1-33.89 77.3-42.08 95.4c-4.2 9.2-7.8 16.6-10.4 21.6-.4.8-.7 1.3-.9 1.7.3-.5.5-1 .5-.8-2.2 4.3-3.5 6.7-3.5 6.7v.1c-1.7 3.2-3.6 6.1-4.5 6.1-.6 0-1.9-8.4.3-19.9 4.7-24.2 15.8-61.8 15.7-63.1-.1-.7 2.1-7.2-7.3-10.7-9.1-3.3-12.4 2.2-13.2 2.2s-1.4 2-1.4 2 10.1-42.4-19.39-42.4c-18.4 0-44 20.2-56.58 38.5-7.9 4.3-25 13.6-43 23.5-6.9 3.8-14 7.7-20.7 11.4-.5-.5-.9-1-1.4-1.5-35.79-38.2-101.87-65.2-99.07-116.5 1-18.7 7.5-67.8 127.07-127.4 98-48.8 176.35-35.4 189.84-5.6 19.4 42.5-41.89 121.6-143.66 133-38.79 4.3-59.18-10.7-64.28-16.3-5.3-5.9-6.1-6.2-8.1-5.1-3.3 1.8-1.2 7 0 10.1 3 7.9 15.5 21.9 36.79 28.9 18.7 6.1 64.18 9.5 119.17-11.8 61.78-23.8 109.87-90.1 95.77-145.6C386.52 18.32 293-.18 204.57 31.22c-52.69 18.7-109.67 48.1-150.66 86.4-48.69 45.6-56.48 85.3-53.28 101.9 11.39 58.9 92.57 97.3 125.06 125.7-1.6.9-3.1 1.7-4.5 2.5-16.29 8.1-78.18 40.5-93.67 74.7-17.5 38.8 2.9 66.6 16.29 70.4 41.79 11.6 84.58-9.3 107.57-43.6s20.2-79.1 9.6-99.5c-.1-.3-.3-.5-.4-.8 4.2-2.5 8.5-5 12.8-7.5 8.29-4.9 16.39-9.4 23.49-13.3-4 10.8-6.9 23.8-8.4 42.6-1.8 22 7.3 50.5 19.1 61.7 5.2 4.9 11.49 5 15.39 5 13.8 0 20-11.4 26.89-25 8.5-16.6 16-35.9 16-35.9s-9.4 52.2 16.3 52.2c9.39 0 18.79-12.1 23-18.3v.1s.2-.4.7-1.2c1-1.5 1.5-2.4 1.5-2.4v-.3c3.8-6.5 12.1-21.4 24.59-46 16.2-31.8 31.69-71.5 31.69-71.5a201.24 201.24 0 0 0 6.2 25.8c2.8 9.5 8.7 19.9 13.4 30-3.8 5.2-6.1 8.2-6.1 8.2a.31.31 0 0 0 .1.2c-3 4-6.4 8.3-9.9 12.5-12.79 15.2-28 32.6-30 37.6-2.4 5.9-1.8 10.3 2.8 13.7 3.4 2.6 9.4 3 15.69 2.5 11.5-.8 19.6-3.6 23.5-5.4a82.2 82.2 0 0 0 20.19-10.6c12.5-9.2 20.1-22.4 19.4-39.8-.4-9.6-3.5-19.2-7.3-28.2 1.1-1.6 2.3-3.3 3.4-5C434.8 301.72 450.1 270 450.1 270a201.24 201.24 0 0 0 6.2 25.8c2.4 8.1 7.09 17 11.39 25.7-18.59 15.1-30.09 32.6-34.09 44.1-7.4 21.3-1.6 30.9 9.3 33.1 4.9 1 11.9-1.3 17.1-3.5a79.46 79.46 0 0 0 21.59-11.1c12.5-9.2 24.59-22.1 23.79-39.6-.3-7.9-2.5-15.8-5.4-23.4 15.7-6.6 36.09-10.2 62.09-7.2 55.68 6.5 66.58 41.3 64.48 55.8s-13.8 22.6-17.7 25-5.1 3.3-4.8 5.1c.5 2.6 2.3 2.5 5.6 1.9 4.6-.8 29.19-11.8 30.29-38.7 1.6-34-31.09-71.4-89-71.1zm-429.18 144.7c-18.39 20.1-44.19 27.7-55.28 21.3C54.61 451 59.31 421.42 82 400c13.8-13 31.59-25 43.39-32.4 2.7-1.6 6.6-4 11.4-6.9.8-.5 1.2-.7 1.2-.7.9-.6 1.9-1.1 2.9-1.7 8.29 30.4.3 57.2-19.1 78.3zm134.36-91.4c-6.4 15.7-19.89 55.7-28.09 53.6-7-1.8-11.3-32.3-1.4-62.3 5-15.1 15.6-33.1 21.9-40.1 10.09-11.3 21.19-14.9 23.79-10.4 3.5 5.9-12.2 49.4-16.2 59.2zm111 53c-2.7 1.4-5.2 2.3-6.4 1.6-.9-.5 1.1-2.4 1.1-2.4s13.9-14.9 19.4-21.7c3.2-4 6.9-8.7 10.89-13.9 0 .5.1 1 .1 1.6-.13 17.9-17.32 30-25.12 34.8zm85.58-19.5c-2-1.4-1.7-6.1 5-20.7 2.6-5.7 8.59-15.3 19-24.5a36.18 36.18 0 0 1 1.9 10.8c-.1 22.5-16.2 30.9-25.89 34.4z"]
            },
            faSchlix: {
                prefix: "fab",
                iconName: "schlix",
                icon: [448, 512, [], "f3ea", "M350.5 157.7l-54.2-46.1 73.4-39 78.3 44.2-97.5 40.9zM192 122.1l45.7-28.2 34.7 34.6-55.4 29-25-35.4zm-65.1 6.6l31.9-22.1L176 135l-36.7 22.5-12.4-28.8zm-23.3 88.2l-8.8-34.8 29.6-18.3 13.1 35.3-33.9 17.8zm-21.2-83.7l23.9-18.1 8.9 24-26.7 18.3-6.1-24.2zM59 206.5l-3.6-28.4 22.3-15.5 6.1 28.7L59 206.5zm-30.6 16.6l20.8-12.8 3.3 33.4-22.9 12-1.2-32.6zM1.4 268l19.2-10.2.4 38.2-21 8.8L1.4 268zm59.1 59.3l-28.3 8.3-1.6-46.8 25.1-10.7 4.8 49.2zM99 263.2l-31.1 13-5.2-40.8L90.1 221l8.9 42.2zM123.2 377l-41.6 5.9-8.1-63.5 35.2-10.8 14.5 68.4zm28.5-139.9l21.2 57.1-46.2 13.6-13.7-54.1 38.7-16.6zm85.7 230.5l-70.9-3.3-24.3-95.8 55.2-8.6 40 107.7zm-84.9-279.7l42.2-22.4 28 45.9-50.8 21.3-19.4-44.8zm41 94.9l61.3-18.7 52.8 86.6-79.8 11.3-34.3-79.2zm51.4-85.6l67.3-28.8 65.5 65.4-88.6 26.2-44.2-62.8z"]
            },
            faScribd: {
                prefix: "fab",
                iconName: "scribd",
                icon: [384, 512, [], "f28a", "M42.3 252.7c-16.1-19-24.7-45.9-24.8-79.9 0-100.4 75.2-153.1 167.2-153.1 98.6-1.6 156.8 49 184.3 70.6l-50.5 72.1-37.3-24.6 26.9-38.6c-36.5-24-79.4-36.5-123-35.8-50.7-.8-111.7 27.2-111.7 76.2 0 18.7 11.2 20.7 28.6 15.6 23.3-5.3 41.9.6 55.8 14 26.4 24.3 23.2 67.6-.7 91.9-29.2 29.5-85.2 27.3-114.8-8.4zm317.7 5.9c-15.5-18.8-38.9-29.4-63.2-28.6-38.1-2-71.1 28-70.5 67.2-.7 16.8 6 33 18.4 44.3 14.1 13.9 33 19.7 56.3 14.4 17.4-5.1 28.6-3.1 28.6 15.6 0 4.3-.5 8.5-1.4 12.7-16.7 40.9-59.5 64.4-121.4 64.4-51.9.2-102.4-16.4-144.1-47.3l33.7-39.4-35.6-27.4L0 406.3l15.4 13.8c52.5 46.8 120.4 72.5 190.7 72.2 51.4 0 94.4-10.5 133.6-44.1 57.1-51.4 54.2-149.2 20.3-189.6z"]
            },
            faSearchengin: {
                prefix: "fab",
                iconName: "searchengin",
                icon: [460, 512, [], "f3eb", "M220.6 130.3l-67.2 28.2V43.2L98.7 233.5l54.7-24.2v130.3l67.2-209.3zm-83.2-96.7l-1.3 4.7-15.2 52.9C80.6 106.7 52 145.8 52 191.5c0 52.3 34.3 95.9 83.4 105.5v53.6C57.5 340.1 0 272.4 0 191.6c0-80.5 59.8-147.2 137.4-158zm311.4 447.2c-11.2 11.2-23.1 12.3-28.6 10.5-5.4-1.8-27.1-19.9-60.4-44.4-33.3-24.6-33.6-35.7-43-56.7-9.4-20.9-30.4-42.6-57.5-52.4l-9.7-14.7c-24.7 16.9-53 26.9-81.3 28.7l2.1-6.6 15.9-49.5c46.5-11.9 80.9-54 80.9-104.2 0-54.5-38.4-102.1-96-107.1V32.3C254.4 37.4 320 106.8 320 191.6c0 33.6-11.2 64.7-29 90.4l14.6 9.6c9.8 27.1 31.5 48 52.4 57.4s32.2 9.7 56.8 43c24.6 33.2 42.7 54.9 44.5 60.3s.7 17.3-10.5 28.5zm-9.9-17.9c0-4.4-3.6-8-8-8s-8 3.6-8 8 3.6 8 8 8 8-3.6 8-8z"]
            },
            faSellcast: {
                prefix: "fab",
                iconName: "sellcast",
                icon: [448, 512, [], "f2da", "M353.4 32H94.7C42.6 32 0 74.6 0 126.6v258.7C0 437.4 42.6 480 94.7 480h258.7c52.1 0 94.7-42.6 94.7-94.6V126.6c0-52-42.6-94.6-94.7-94.6zm-50 316.4c-27.9 48.2-89.9 64.9-138.2 37.2-22.9 39.8-54.9 8.6-42.3-13.2l15.7-27.2c5.9-10.3 19.2-13.9 29.5-7.9 18.6 10.8-.1-.1 18.5 10.7 27.6 15.9 63.4 6.3 79.4-21.3 15.9-27.6 6.3-63.4-21.3-79.4-17.8-10.2-.6-.4-18.6-10.6-24.6-14.2-3.4-51.9 21.6-37.5 18.6 10.8-.1-.1 18.5 10.7 48.4 28 65.1 90.3 37.2 138.5zm21.8-208.8c-17 29.5-16.3 28.8-19 31.5-6.5 6.5-16.3 8.7-26.5 3.6-18.6-10.8.1.1-18.5-10.7-27.6-15.9-63.4-6.3-79.4 21.3s-6.3 63.4 21.3 79.4c0 0 18.5 10.6 18.6 10.6 24.6 14.2 3.4 51.9-21.6 37.5-18.6-10.8.1.1-18.5-10.7-48.2-27.8-64.9-90.1-37.1-138.4 27.9-48.2 89.9-64.9 138.2-37.2l4.8-8.4c14.3-24.9 52-3.3 37.7 21.5z"]
            },
            faSellsy: {
                prefix: "fab",
                iconName: "sellsy",
                icon: [640, 512, [], "f213", "M539.71 237.308c3.064-12.257 4.29-24.821 4.29-37.384C544 107.382 468.618 32 376.076 32c-77.22 0-144.634 53.012-163.02 127.781-15.322-13.176-34.934-20.53-55.157-20.53-46.271 0-83.962 37.69-83.962 83.961 0 7.354.92 15.015 3.065 22.369-42.9 20.225-70.785 63.738-70.785 111.234C6.216 424.843 61.68 480 129.401 480h381.198c67.72 0 123.184-55.157 123.184-123.184.001-56.384-38.916-106.025-94.073-119.508zM199.88 401.554c0 8.274-7.048 15.321-15.321 15.321H153.61c-8.274 0-15.321-7.048-15.321-15.321V290.626c0-8.273 7.048-15.321 15.321-15.321h30.949c8.274 0 15.321 7.048 15.321 15.321v110.928zm89.477 0c0 8.274-7.048 15.321-15.322 15.321h-30.949c-8.274 0-15.321-7.048-15.321-15.321V270.096c0-8.274 7.048-15.321 15.321-15.321h30.949c8.274 0 15.322 7.048 15.322 15.321v131.458zm89.477 0c0 8.274-7.047 15.321-15.321 15.321h-30.949c-8.274 0-15.322-7.048-15.322-15.321V238.84c0-8.274 7.048-15.321 15.322-15.321h30.949c8.274 0 15.321 7.048 15.321 15.321v162.714zm87.027 0c0 8.274-7.048 15.321-15.322 15.321h-28.497c-8.274 0-15.321-7.048-15.321-15.321V176.941c0-8.579 7.047-15.628 15.321-15.628h28.497c8.274 0 15.322 7.048 15.322 15.628v224.613z"]
            },
            faServicestack: {
                prefix: "fab",
                iconName: "servicestack",
                icon: [496, 512, [], "f3ec", "M88 216c81.7 10.2 273.7 102.3 304 232H0c99.5-8.1 184.5-137 88-232zm32-152c32.3 35.6 47.7 83.9 46.4 133.6C249.3 231.3 373.7 321.3 400 448h96C455.3 231.9 222.8 79.5 120 64z"]
            },
            faShirtsinbulk: {
                prefix: "fab",
                iconName: "shirtsinbulk",
                icon: [448, 512, [], "f214", "M100 410.3l30.6 13.4 4.4-9.9-30.6-13.4zm39.4 17.5l30.6 13.4 4.4-9.9-30.6-13.4zm172.1-14l4.4 9.9 30.6-13.4-4.4-9.9zM179.1 445l30.3 13.7 4.4-9.9-30.3-13.4zM60.4 392.8L91 406.2l4.4-9.6-30.6-13.7zm211.4 38.5l4.4 9.9 30.6-13.4-4.4-9.9zm-39.3 17.5l4.4 9.9 30.6-13.7-4.4-9.6zm118.4-52.2l4.4 9.6 30.6-13.4-4.4-9.9zM170 46.6h-33.5v10.5H170zm-47.2 0H89.2v10.5h33.5zm-47.3 0H42.3v10.5h33.3zm141.5 0h-33.2v10.5H217zm94.5 0H278v10.5h33.5zm47.3 0h-33.5v10.5h33.5zm-94.6 0H231v10.5h33.2zm141.5 0h-33.3v10.5h33.3zM52.8 351.1H42v33.5h10.8zm70-215.9H89.2v10.5h33.5zm-70 10.6h22.8v-10.5H42v33.5h10.8zm168.9 228.6c50.5 0 91.3-40.8 91.3-91.3 0-50.2-40.8-91.3-91.3-91.3-50.2 0-91.3 41.1-91.3 91.3 0 50.5 41.1 91.3 91.3 91.3zm-48.2-111.1c0-25.4 29.5-31.8 49.6-31.8 16.9 0 29.2 5.8 44.3 12l-8.8 16.9h-.9c-6.4-9.9-24.8-13.1-35.6-13.1-9 0-29.8 1.8-29.8 14.9 0 21.6 78.5-10.2 78.5 37.9 0 25.4-31.5 31.2-51 31.2-18.1 0-32.4-2.9-47.2-12.2l9-18.4h.9c6.1 12.2 23.6 14.9 35.9 14.9 8.7 0 32.7-1.2 32.7-14.3 0-26.1-77.6 6.3-77.6-38zM52.8 178.4H42V212h10.8zm342.4 206.2H406v-33.5h-10.8zM52.8 307.9H42v33.5h10.8zM0 3.7v406l221.7 98.6L448 409.7V3.7zm418.8 387.1L222 476.5 29.2 390.8V120.7h389.7v270.1zm0-299.3H29.2V32.9h389.7v58.6zm-366 130.1H42v33.5h10.8zm0 43.2H42v33.5h10.8zM170 135.2h-33.5v10.5H170zm225.2 163.1H406v-33.5h-10.8zm0-43.2H406v-33.5h-10.8zM217 135.2h-33.2v10.5H217zM395.2 212H406v-33.5h-10.8zm0 129.5H406V308h-10.8zm-131-206.3H231v10.5h33.2zm47.3 0H278v10.5h33.5zm83.7 33.6H406v-33.5h-33.5v10.5h22.8zm-36.4-33.6h-33.5v10.5h33.5z"]
            },
            faShopify: {
                prefix: "fab",
                iconName: "shopify",
                icon: [448, 512, [], "e057", "M388.32,104.1a4.66,4.66,0,0,0-4.4-4c-2,0-37.23-.8-37.23-.8s-21.61-20.82-29.62-28.83V503.2L442.76,472S388.72,106.5,388.32,104.1ZM288.65,70.47a116.67,116.67,0,0,0-7.21-17.61C271,32.85,255.42,22,237,22a15,15,0,0,0-4,.4c-.4-.8-1.2-1.2-1.6-2C223.4,11.63,213,7.63,200.58,8c-24,.8-48,18-67.25,48.83-13.61,21.62-24,48.84-26.82,70.06-27.62,8.4-46.83,14.41-47.23,14.81-14,4.4-14.41,4.8-16,18-1.2,10-38,291.82-38,291.82L307.86,504V65.67a41.66,41.66,0,0,0-4.4.4S297.86,67.67,288.65,70.47ZM233.41,87.69c-16,4.8-33.63,10.4-50.84,15.61,4.8-18.82,14.41-37.63,25.62-50,4.4-4.4,10.41-9.61,17.21-12.81C232.21,54.86,233.81,74.48,233.41,87.69ZM200.58,24.44A27.49,27.49,0,0,1,215,28c-6.4,3.2-12.81,8.41-18.81,14.41-15.21,16.42-26.82,42-31.62,66.45-14.42,4.41-28.83,8.81-42,12.81C131.33,83.28,163.75,25.24,200.58,24.44ZM154.15,244.61c1.6,25.61,69.25,31.22,73.25,91.66,2.8,47.64-25.22,80.06-65.65,82.47-48.83,3.2-75.65-25.62-75.65-25.62l10.4-44s26.82,20.42,48.44,18.82c14-.8,19.22-12.41,18.81-20.42-2-33.62-57.24-31.62-60.84-86.86-3.2-46.44,27.22-93.27,94.47-97.68,26-1.6,39.23,4.81,39.23,4.81L221.4,225.39s-17.21-8-37.63-6.4C154.15,221,153.75,239.8,154.15,244.61ZM249.42,82.88c0-12-1.6-29.22-7.21-43.63,18.42,3.6,27.22,24,31.23,36.43Q262.63,78.68,249.42,82.88Z"]
            },
            faShopware: {
                prefix: "fab",
                iconName: "shopware",
                icon: [512, 512, [], "f5b5", "M403.5 455.41A246.17 246.17 0 0 1 256 504C118.81 504 8 393 8 256 8 118.81 119 8 256 8a247.39 247.39 0 0 1 165.7 63.5 3.57 3.57 0 0 1-2.86 6.18A418.62 418.62 0 0 0 362.13 74c-129.36 0-222.4 53.47-222.4 155.35 0 109 92.13 145.88 176.83 178.73 33.64 13 65.4 25.36 87 41.59a3.58 3.58 0 0 1 0 5.72zM503 233.09a3.64 3.64 0 0 0-1.27-2.44c-51.76-43-93.62-60.48-144.48-60.48-84.13 0-80.25 52.17-80.25 53.63 0 42.6 52.06 62 112.34 84.49 31.07 11.59 63.19 23.57 92.68 39.93a3.57 3.57 0 0 0 5-1.82A249 249 0 0 0 503 233.09z"]
            },
            faSimplybuilt: {
                prefix: "fab",
                iconName: "simplybuilt",
                icon: [512, 512, [], "f215", "M481.2 64h-106c-14.5 0-26.6 11.8-26.6 26.3v39.6H163.3V90.3c0-14.5-12-26.3-26.6-26.3h-106C16.1 64 4.3 75.8 4.3 90.3v331.4c0 14.5 11.8 26.3 26.6 26.3h450.4c14.8 0 26.6-11.8 26.6-26.3V90.3c-.2-14.5-12-26.3-26.7-26.3zM149.8 355.8c-36.6 0-66.4-29.7-66.4-66.4 0-36.9 29.7-66.6 66.4-66.6 36.9 0 66.6 29.7 66.6 66.6 0 36.7-29.7 66.4-66.6 66.4zm212.4 0c-36.9 0-66.6-29.7-66.6-66.6 0-36.6 29.7-66.4 66.6-66.4 36.6 0 66.4 29.7 66.4 66.4 0 36.9-29.8 66.6-66.4 66.6z"]
            },
            faSistrix: {
                prefix: "fab",
                iconName: "sistrix",
                icon: [448, 512, [], "f3ee", "M448 449L301.2 300.2c20-27.9 31.9-62.2 31.9-99.2 0-93.1-74.7-168.9-166.5-168.9C74.7 32 0 107.8 0 200.9s74.7 168.9 166.5 168.9c39.8 0 76.3-14.2 105-37.9l146 148.1 30.5-31zM166.5 330.8c-70.6 0-128.1-58.3-128.1-129.9S95.9 71 166.5 71s128.1 58.3 128.1 129.9-57.4 129.9-128.1 129.9z"]
            },
            faSith: {
                prefix: "fab",
                iconName: "sith",
                icon: [448, 512, [], "f512", "M0 32l69.71 118.75-58.86-11.52 69.84 91.03a146.741 146.741 0 0 0 0 51.45l-69.84 91.03 58.86-11.52L0 480l118.75-69.71-11.52 58.86 91.03-69.84c17.02 3.04 34.47 3.04 51.48 0l91.03 69.84-11.52-58.86L448 480l-69.71-118.78 58.86 11.52-69.84-91.03c3.03-17.01 3.04-34.44 0-51.45l69.84-91.03-58.86 11.52L448 32l-118.75 69.71 11.52-58.9-91.06 69.87c-8.5-1.52-17.1-2.29-25.71-2.29s-17.21.78-25.71 2.29l-91.06-69.87 11.52 58.9L0 32zm224 99.78c31.8 0 63.6 12.12 87.85 36.37 48.5 48.5 48.49 127.21 0 175.7s-127.2 48.46-175.7-.03c-48.5-48.5-48.49-127.21 0-175.7 24.24-24.25 56.05-36.34 87.85-36.34zm0 36.66c-22.42 0-44.83 8.52-61.92 25.61-34.18 34.18-34.19 89.68 0 123.87s89.65 34.18 123.84 0c34.18-34.18 34.19-89.68 0-123.87-17.09-17.09-39.5-25.61-61.92-25.61z"]
            },
            faSketch: {
                prefix: "fab",
                iconName: "sketch",
                icon: [512, 512, [], "f7c6", "M27.5 162.2L9 187.1h90.5l6.9-130.7-78.9 105.8zM396.3 45.7L267.7 32l135.7 147.2-7.1-133.5zM112.2 218.3l-11.2-22H9.9L234.8 458zm2-31.2h284l-81.5-88.5L256.3 33zm297.3 9.1L277.6 458l224.8-261.7h-90.9zM415.4 69L406 56.4l.9 17.3 6.1 113.4h90.3zM113.5 93.5l-4.6 85.6L244.7 32 116.1 45.7zm287.7 102.7h-290l42.4 82.9L256.3 480l144.9-283.8z"]
            },
            faSkyatlas: {
                prefix: "fab",
                iconName: "skyatlas",
                icon: [640, 512, [], "f216", "M640 329.3c0 65.9-52.5 114.4-117.5 114.4-165.9 0-196.6-249.7-359.7-249.7-146.9 0-147.1 212.2 5.6 212.2 42.5 0 90.9-17.8 125.3-42.5 5.6-4.1 16.9-16.3 22.8-16.3s10.9 5 10.9 10.9c0 7.8-13.1 19.1-18.7 24.1-40.9 35.6-100.3 61.2-154.7 61.2-83.4.1-154-59-154-144.9s67.5-149.1 152.8-149.1c185.3 0 222.5 245.9 361.9 245.9 99.9 0 94.8-139.7 3.4-139.7-17.5 0-35 11.6-46.9 11.6-8.4 0-15.9-7.2-15.9-15.6 0-11.6 5.3-23.7 5.3-36.3 0-66.6-50.9-114.7-116.9-114.7-53.1 0-80 36.9-88.8 36.9-6.2 0-11.2-5-11.2-11.2 0-5.6 4.1-10.3 7.8-14.4 25.3-28.8 64.7-43.7 102.8-43.7 79.4 0 139.1 58.4 139.1 137.8 0 6.9-.3 13.7-1.2 20.6 11.9-3.1 24.1-4.7 35.9-4.7 60.7 0 111.9 45.3 111.9 107.2z"]
            },
            faSkype: {
                prefix: "fab",
                iconName: "skype",
                icon: [448, 512, [], "f17e", "M424.7 299.8c2.9-14 4.7-28.9 4.7-43.8 0-113.5-91.9-205.3-205.3-205.3-14.9 0-29.7 1.7-43.8 4.7C161.3 40.7 137.7 32 112 32 50.2 32 0 82.2 0 144c0 25.7 8.7 49.3 23.3 68.2-2.9 14-4.7 28.9-4.7 43.8 0 113.5 91.9 205.3 205.3 205.3 14.9 0 29.7-1.7 43.8-4.7 19 14.6 42.6 23.3 68.2 23.3 61.8 0 112-50.2 112-112 .1-25.6-8.6-49.2-23.2-68.1zm-194.6 91.5c-65.6 0-120.5-29.2-120.5-65 0-16 9-30.6 29.5-30.6 31.2 0 34.1 44.9 88.1 44.9 25.7 0 42.3-11.4 42.3-26.3 0-18.7-16-21.6-42-28-62.5-15.4-117.8-22-117.8-87.2 0-59.2 58.6-81.1 109.1-81.1 55.1 0 110.8 21.9 110.8 55.4 0 16.9-11.4 31.8-30.3 31.8-28.3 0-29.2-33.5-75-33.5-25.7 0-42 7-42 22.5 0 19.8 20.8 21.8 69.1 33 41.4 9.3 90.7 26.8 90.7 77.6 0 59.1-57.1 86.5-112 86.5z"]
            },
            faSlack: {
                prefix: "fab",
                iconName: "slack",
                icon: [448, 512, [], "f198", "M94.12 315.1c0 25.9-21.16 47.06-47.06 47.06S0 341 0 315.1c0-25.9 21.16-47.06 47.06-47.06h47.06v47.06zm23.72 0c0-25.9 21.16-47.06 47.06-47.06s47.06 21.16 47.06 47.06v117.84c0 25.9-21.16 47.06-47.06 47.06s-47.06-21.16-47.06-47.06V315.1zm47.06-188.98c-25.9 0-47.06-21.16-47.06-47.06S139 32 164.9 32s47.06 21.16 47.06 47.06v47.06H164.9zm0 23.72c25.9 0 47.06 21.16 47.06 47.06s-21.16 47.06-47.06 47.06H47.06C21.16 243.96 0 222.8 0 196.9s21.16-47.06 47.06-47.06H164.9zm188.98 47.06c0-25.9 21.16-47.06 47.06-47.06 25.9 0 47.06 21.16 47.06 47.06s-21.16 47.06-47.06 47.06h-47.06V196.9zm-23.72 0c0 25.9-21.16 47.06-47.06 47.06-25.9 0-47.06-21.16-47.06-47.06V79.06c0-25.9 21.16-47.06 47.06-47.06 25.9 0 47.06 21.16 47.06 47.06V196.9zM283.1 385.88c25.9 0 47.06 21.16 47.06 47.06 0 25.9-21.16 47.06-47.06 47.06-25.9 0-47.06-21.16-47.06-47.06v-47.06h47.06zm0-23.72c-25.9 0-47.06-21.16-47.06-47.06 0-25.9 21.16-47.06 47.06-47.06h117.84c25.9 0 47.06 21.16 47.06 47.06 0 25.9-21.16 47.06-47.06 47.06H283.1z"]
            },
            faSlackHash: {
                prefix: "fab",
                iconName: "slack-hash",
                icon: [448, 512, [], "f3ef", "M446.2 270.4c-6.2-19-26.9-29.1-46-22.9l-45.4 15.1-30.3-90 45.4-15.1c19.1-6.2 29.1-26.8 23-45.9-6.2-19-26.9-29.1-46-22.9l-45.4 15.1-15.7-47c-6.2-19-26.9-29.1-46-22.9-19.1 6.2-29.1 26.8-23 45.9l15.7 47-93.4 31.2-15.7-47c-6.2-19-26.9-29.1-46-22.9-19.1 6.2-29.1 26.8-23 45.9l15.7 47-45.3 15c-19.1 6.2-29.1 26.8-23 45.9 5 14.5 19.1 24 33.6 24.6 6.8 1 12-1.6 57.7-16.8l30.3 90L78 354.8c-19 6.2-29.1 26.9-23 45.9 5 14.5 19.1 24 33.6 24.6 6.8 1 12-1.6 57.7-16.8l15.7 47c5.9 16.9 24.7 29 46 22.9 19.1-6.2 29.1-26.8 23-45.9l-15.7-47 93.6-31.3 15.7 47c5.9 16.9 24.7 29 46 22.9 19.1-6.2 29.1-26.8 23-45.9l-15.7-47 45.4-15.1c19-6 29.1-26.7 22.9-45.7zm-254.1 47.2l-30.3-90.2 93.5-31.3 30.3 90.2-93.5 31.3z"]
            },
            faSlideshare: {
                prefix: "fab",
                iconName: "slideshare",
                icon: [512, 512, [], "f1e7", "M187.7 153.7c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7s61.7-26 61.7-57.7c0-32-27.7-57.7-61.7-57.7zm143.4 0c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7 34.3 0 61.7-26 61.7-57.7.1-32-27.4-57.7-61.7-57.7zm156.6 90l-6 4.3V49.7c0-27.4-20.6-49.7-46-49.7H76.6c-25.4 0-46 22.3-46 49.7V248c-2-1.4-4.3-2.9-6.3-4.3-15.1-10.6-25.1 4-16 17.7 18.3 22.6 53.1 50.3 106.3 72C58.3 525.1 252 555.7 248.9 457.5c0-.7.3-56.6.3-96.6 5.1 1.1 9.4 2.3 13.7 3.1 0 39.7.3 92.8.3 93.5-3.1 98.3 190.6 67.7 134.3-124 53.1-21.7 88-49.4 106.3-72 9.1-13.8-.9-28.3-16.1-17.8zm-30.5 19.2c-68.9 37.4-128.3 31.1-160.6 29.7-23.7-.9-32.6 9.1-33.7 24.9-10.3-7.7-18.6-15.5-20.3-17.1-5.1-5.4-13.7-8-27.1-7.7-31.7 1.1-89.7 7.4-157.4-28V72.3c0-34.9 8.9-45.7 40.6-45.7h317.7c30.3 0 40.9 12.9 40.9 45.7v190.6z"]
            },
            faSnapchat: {
                prefix: "fab",
                iconName: "snapchat",
                icon: [496, 512, [], "f2ab", "M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm169.5 338.9c-3.5 8.1-18.1 14-44.8 18.2-1.4 1.9-2.5 9.8-4.3 15.9-1.1 3.7-3.7 5.9-8.1 5.9h-.2c-6.2 0-12.8-2.9-25.8-2.9-17.6 0-23.7 4-37.4 13.7-14.5 10.3-28.4 19.1-49.2 18.2-21 1.6-38.6-11.2-48.5-18.2-13.8-9.7-19.8-13.7-37.4-13.7-12.5 0-20.4 3.1-25.8 3.1-5.4 0-7.5-3.3-8.3-6-1.8-6.1-2.9-14.1-4.3-16-13.8-2.1-44.8-7.5-45.5-21.4-.2-3.6 2.3-6.8 5.9-7.4 46.3-7.6 67.1-55.1 68-57.1 0-.1.1-.2.2-.3 2.5-5 3-9.2 1.6-12.5-3.4-7.9-17.9-10.7-24-13.2-15.8-6.2-18-13.4-17-18.3 1.6-8.5 14.4-13.8 21.9-10.3 5.9 2.8 11.2 4.2 15.7 4.2 3.3 0 5.5-.8 6.6-1.4-1.4-23.9-4.7-58 3.8-77.1C183.1 100 230.7 96 244.7 96c.6 0 6.1-.1 6.7-.1 34.7 0 68 17.8 84.3 54.3 8.5 19.1 5.2 53.1 3.8 77.1 1.1.6 2.9 1.3 5.7 1.4 4.3-.2 9.2-1.6 14.7-4.2 4-1.9 9.6-1.6 13.6 0 6.3 2.3 10.3 6.8 10.4 11.9.1 6.5-5.7 12.1-17.2 16.6-1.4.6-3.1 1.1-4.9 1.7-6.5 2.1-16.4 5.2-19 11.5-1.4 3.3-.8 7.5 1.6 12.5.1.1.1.2.2.3.9 2 21.7 49.5 68 57.1 4 1 7.1 5.5 4.9 10.8z"]
            },
            faSnapchatGhost: {
                prefix: "fab",
                iconName: "snapchat-ghost",
                icon: [512, 512, [], "f2ac", "M510.846 392.673c-5.211 12.157-27.239 21.089-67.36 27.318-2.064 2.786-3.775 14.686-6.507 23.956-1.625 5.566-5.623 8.869-12.128 8.869l-.297-.005c-9.395 0-19.203-4.323-38.852-4.323-26.521 0-35.662 6.043-56.254 20.588-21.832 15.438-42.771 28.764-74.027 27.399-31.646 2.334-58.025-16.908-72.871-27.404-20.714-14.643-29.828-20.582-56.241-20.582-18.864 0-30.736 4.72-38.852 4.72-8.073 0-11.213-4.922-12.422-9.04-2.703-9.189-4.404-21.263-6.523-24.13-20.679-3.209-67.31-11.344-68.498-32.15a10.627 10.627 0 0 1 8.877-11.069c69.583-11.455 100.924-82.901 102.227-85.934.074-.176.155-.344.237-.515 3.713-7.537 4.544-13.849 2.463-18.753-5.05-11.896-26.872-16.164-36.053-19.796-23.715-9.366-27.015-20.128-25.612-27.504 2.437-12.836 21.725-20.735 33.002-15.453 8.919 4.181 16.843 6.297 23.547 6.297 5.022 0 8.212-1.204 9.96-2.171-2.043-35.936-7.101-87.29 5.687-115.969C158.122 21.304 229.705 15.42 250.826 15.42c.944 0 9.141-.089 10.11-.089 52.148 0 102.254 26.78 126.723 81.643 12.777 28.65 7.749 79.792 5.695 116.009 1.582.872 4.357 1.942 8.599 2.139 6.397-.286 13.815-2.389 22.069-6.257 6.085-2.846 14.406-2.461 20.48.058l.029.01c9.476 3.385 15.439 10.215 15.589 17.87.184 9.747-8.522 18.165-25.878 25.018-2.118.835-4.694 1.655-7.434 2.525-9.797 3.106-24.6 7.805-28.616 17.271-2.079 4.904-1.256 11.211 2.46 18.748.087.168.166.342.239.515 1.301 3.03 32.615 74.46 102.23 85.934 6.427 1.058 11.163 7.877 7.725 15.859z"]
            },
            faSnapchatSquare: {
                prefix: "fab",
                iconName: "snapchat-square",
                icon: [448, 512, [], "f2ad", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-6.5 314.9c-3.5 8.1-18.1 14-44.8 18.2-1.4 1.9-2.5 9.8-4.3 15.9-1.1 3.7-3.7 5.9-8.1 5.9h-.2c-6.2 0-12.8-2.9-25.8-2.9-17.6 0-23.7 4-37.4 13.7-14.5 10.3-28.4 19.1-49.2 18.2-21 1.6-38.6-11.2-48.5-18.2-13.8-9.7-19.8-13.7-37.4-13.7-12.5 0-20.4 3.1-25.8 3.1-5.4 0-7.5-3.3-8.3-6-1.8-6.1-2.9-14.1-4.3-16-13.8-2.1-44.8-7.5-45.5-21.4-.2-3.6 2.3-6.8 5.9-7.4 46.3-7.6 67.1-55.1 68-57.1 0-.1.1-.2.2-.3 2.5-5 3-9.2 1.6-12.5-3.4-7.9-17.9-10.7-24-13.2-15.8-6.2-18-13.4-17-18.3 1.6-8.5 14.4-13.8 21.9-10.3 5.9 2.8 11.2 4.2 15.7 4.2 3.3 0 5.5-.8 6.6-1.4-1.4-23.9-4.7-58 3.8-77.1C159.1 100 206.7 96 220.7 96c.6 0 6.1-.1 6.7-.1 34.7 0 68 17.8 84.3 54.3 8.5 19.1 5.2 53.1 3.8 77.1 1.1.6 2.9 1.3 5.7 1.4 4.3-.2 9.2-1.6 14.7-4.2 4-1.9 9.6-1.6 13.6 0 6.3 2.3 10.3 6.8 10.4 11.9.1 6.5-5.7 12.1-17.2 16.6-1.4.6-3.1 1.1-4.9 1.7-6.5 2.1-16.4 5.2-19 11.5-1.4 3.3-.8 7.5 1.6 12.5.1.1.1.2.2.3.9 2 21.7 49.5 68 57.1 4 1 7.1 5.5 4.9 10.8z"]
            },
            faSoundcloud: {
                prefix: "fab",
                iconName: "soundcloud",
                icon: [640, 512, [], "f1be", "M111.4 256.3l5.8 65-5.8 68.3c-.3 2.5-2.2 4.4-4.4 4.4s-4.2-1.9-4.2-4.4l-5.6-68.3 5.6-65c0-2.2 1.9-4.2 4.2-4.2 2.2 0 4.1 2 4.4 4.2zm21.4-45.6c-2.8 0-4.7 2.2-5 5l-5 105.6 5 68.3c.3 2.8 2.2 5 5 5 2.5 0 4.7-2.2 4.7-5l5.8-68.3-5.8-105.6c0-2.8-2.2-5-4.7-5zm25.5-24.1c-3.1 0-5.3 2.2-5.6 5.3l-4.4 130 4.4 67.8c.3 3.1 2.5 5.3 5.6 5.3 2.8 0 5.3-2.2 5.3-5.3l5.3-67.8-5.3-130c0-3.1-2.5-5.3-5.3-5.3zM7.2 283.2c-1.4 0-2.2 1.1-2.5 2.5L0 321.3l4.7 35c.3 1.4 1.1 2.5 2.5 2.5s2.2-1.1 2.5-2.5l5.6-35-5.6-35.6c-.3-1.4-1.1-2.5-2.5-2.5zm23.6-21.9c-1.4 0-2.5 1.1-2.5 2.5l-6.4 57.5 6.4 56.1c0 1.7 1.1 2.8 2.5 2.8s2.5-1.1 2.8-2.5l7.2-56.4-7.2-57.5c-.3-1.4-1.4-2.5-2.8-2.5zm25.3-11.4c-1.7 0-3.1 1.4-3.3 3.3L47 321.3l5.8 65.8c.3 1.7 1.7 3.1 3.3 3.1 1.7 0 3.1-1.4 3.1-3.1l6.9-65.8-6.9-68.1c0-1.9-1.4-3.3-3.1-3.3zm25.3-2.2c-1.9 0-3.6 1.4-3.6 3.6l-5.8 70 5.8 67.8c0 2.2 1.7 3.6 3.6 3.6s3.6-1.4 3.9-3.6l6.4-67.8-6.4-70c-.3-2.2-2-3.6-3.9-3.6zm241.4-110.9c-1.1-.8-2.8-1.4-4.2-1.4-2.2 0-4.2.8-5.6 1.9-1.9 1.7-3.1 4.2-3.3 6.7v.8l-3.3 176.7 1.7 32.5 1.7 31.7c.3 4.7 4.2 8.6 8.9 8.6s8.6-3.9 8.6-8.6l3.9-64.2-3.9-177.5c-.4-3-2-5.8-4.5-7.2zm-26.7 15.3c-1.4-.8-2.8-1.4-4.4-1.4s-3.1.6-4.4 1.4c-2.2 1.4-3.6 3.9-3.6 6.7l-.3 1.7-2.8 160.8s0 .3 3.1 65.6v.3c0 1.7.6 3.3 1.7 4.7 1.7 1.9 3.9 3.1 6.4 3.1 2.2 0 4.2-1.1 5.6-2.5 1.7-1.4 2.5-3.3 2.5-5.6l.3-6.7 3.1-58.6-3.3-162.8c-.3-2.8-1.7-5.3-3.9-6.7zm-111.4 22.5c-3.1 0-5.8 2.8-5.8 6.1l-4.4 140.6 4.4 67.2c.3 3.3 2.8 5.8 5.8 5.8 3.3 0 5.8-2.5 6.1-5.8l5-67.2-5-140.6c-.2-3.3-2.7-6.1-6.1-6.1zm376.7 62.8c-10.8 0-21.1 2.2-30.6 6.1-6.4-70.8-65.8-126.4-138.3-126.4-17.8 0-35 3.3-50.3 9.4-6.1 2.2-7.8 4.4-7.8 9.2v249.7c0 5 3.9 8.6 8.6 9.2h218.3c43.3 0 78.6-35 78.6-78.3.1-43.6-35.2-78.9-78.5-78.9zm-296.7-60.3c-4.2 0-7.5 3.3-7.8 7.8l-3.3 136.7 3.3 65.6c.3 4.2 3.6 7.5 7.8 7.5 4.2 0 7.5-3.3 7.5-7.5l3.9-65.6-3.9-136.7c-.3-4.5-3.3-7.8-7.5-7.8zm-53.6-7.8c-3.3 0-6.4 3.1-6.4 6.7l-3.9 145.3 3.9 66.9c.3 3.6 3.1 6.4 6.4 6.4 3.6 0 6.4-2.8 6.7-6.4l4.4-66.9-4.4-145.3c-.3-3.6-3.1-6.7-6.7-6.7zm26.7 3.4c-3.9 0-6.9 3.1-6.9 6.9L227 321.3l3.9 66.4c.3 3.9 3.1 6.9 6.9 6.9s6.9-3.1 6.9-6.9l4.2-66.4-4.2-141.7c0-3.9-3-6.9-6.9-6.9z"]
            },
            faSourcetree: {
                prefix: "fab",
                iconName: "sourcetree",
                icon: [448, 512, [], "f7d3", "M427.2 203c0-112.1-90.9-203-203-203C112.1-.2 21.2 90.6 21 202.6A202.86 202.86 0 0 0 161.5 396v101.7a14.3 14.3 0 0 0 14.3 14.3h96.4a14.3 14.3 0 0 0 14.3-14.3V396.1A203.18 203.18 0 0 0 427.2 203zm-271.6 0c0-90.8 137.3-90.8 137.3 0-.1 89.9-137.3 91-137.3 0z"]
            },
            faSpeakap: {
                prefix: "fab",
                iconName: "speakap",
                icon: [448, 512, [], "f3f3", "M64 391.78C-15.41 303.59-8 167.42 80.64 87.64s224.8-73 304.21 15.24 72 224.36-16.64 304.14c-18.74 16.87 64 43.09 42 52.26-82.06 34.21-253.91 35-346.23-67.5zm213.31-211.6l38.5-40.86c-9.61-8.89-32-26.83-76.17-27.6-52.33-.91-95.86 28.3-96.77 80-.2 11.33.29 36.72 29.42 54.83 34.46 21.42 86.52 21.51 86 52.26-.37 21.28-26.42 25.81-38.59 25.6-3-.05-30.23-.46-47.61-24.62l-40 42.61c28.16 27 59 32.62 83.49 33.05 10.23.18 96.42.33 97.84-81 .28-15.81-2.07-39.72-28.86-56.59-34.36-21.64-85-19.45-84.43-49.75.41-23.25 31-25.37 37.53-25.26.43 0 26.62.26 39.62 17.37z"]
            },
            faSpeakerDeck: {
                prefix: "fab",
                iconName: "speaker-deck",
                icon: [512, 512, [], "f83c", "M213.86 296H100a100 100 0 0 1 0-200h132.84a40 40 0 0 1 0 80H98c-26.47 0-26.45 40 0 40h113.82a100 100 0 0 1 0 200H40a40 40 0 0 1 0-80h173.86c26.48 0 26.46-40 0-40zM298 416a120.21 120.21 0 0 0 51.11-80h64.55a19.83 19.83 0 0 0 19.66-20V196a19.83 19.83 0 0 0-19.66-20H296.42a60.77 60.77 0 0 0 0-80h136.93c43.44 0 78.65 35.82 78.65 80v160c0 44.18-35.21 80-78.65 80z"]
            },
            faSpotify: {
                prefix: "fab",
                iconName: "spotify",
                icon: [496, 512, [], "f1bc", "M248 8C111.1 8 0 119.1 0 256s111.1 248 248 248 248-111.1 248-248S384.9 8 248 8zm100.7 364.9c-4.2 0-6.8-1.3-10.7-3.6-62.4-37.6-135-39.2-206.7-24.5-3.9 1-9 2.6-11.9 2.6-9.7 0-15.8-7.7-15.8-15.8 0-10.3 6.1-15.2 13.6-16.8 81.9-18.1 165.6-16.5 237 26.2 6.1 3.9 9.7 7.4 9.7 16.5s-7.1 15.4-15.2 15.4zm26.9-65.6c-5.2 0-8.7-2.3-12.3-4.2-62.5-37-155.7-51.9-238.6-29.4-4.8 1.3-7.4 2.6-11.9 2.6-10.7 0-19.4-8.7-19.4-19.4s5.2-17.8 15.5-20.7c27.8-7.8 56.2-13.6 97.8-13.6 64.9 0 127.6 16.1 177 45.5 8.1 4.8 11.3 11 11.3 19.7-.1 10.8-8.5 19.5-19.4 19.5zm31-76.2c-5.2 0-8.4-1.3-12.9-3.9-71.2-42.5-198.5-52.7-280.9-29.7-3.6 1-8.1 2.6-12.9 2.6-13.2 0-23.3-10.3-23.3-23.6 0-13.6 8.4-21.3 17.4-23.9 35.2-10.3 74.6-15.2 117.5-15.2 73 0 149.5 15.2 205.4 47.8 7.8 4.5 12.9 10.7 12.9 22.6 0 13.6-11 23.3-23.2 23.3z"]
            },
            faSquarespace: {
                prefix: "fab",
                iconName: "squarespace",
                icon: [512, 512, [], "f5be", "M186.12 343.34c-9.65 9.65-9.65 25.29 0 34.94 9.65 9.65 25.29 9.65 34.94 0L378.24 221.1c19.29-19.29 50.57-19.29 69.86 0s19.29 50.57 0 69.86L293.95 445.1c19.27 19.29 50.53 19.31 69.82.04l.04-.04 119.25-119.24c38.59-38.59 38.59-101.14 0-139.72-38.59-38.59-101.15-38.59-139.72 0l-157.22 157.2zm244.53-104.8c-9.65-9.65-25.29-9.65-34.93 0l-157.2 157.18c-19.27 19.29-50.53 19.31-69.82.05l-.05-.05c-9.64-9.64-25.27-9.65-34.92-.01l-.01.01c-9.65 9.64-9.66 25.28-.02 34.93l.02.02c38.58 38.57 101.14 38.57 139.72 0l157.2-157.2c9.65-9.65 9.65-25.29.01-34.93zm-261.99 87.33l157.18-157.18c9.64-9.65 9.64-25.29 0-34.94-9.64-9.64-25.27-9.64-34.91 0L133.72 290.93c-19.28 19.29-50.56 19.3-69.85.01l-.01-.01c-19.29-19.28-19.31-50.54-.03-69.84l.03-.03L218.03 66.89c-19.28-19.29-50.55-19.3-69.85-.02l-.02.02L28.93 186.14c-38.58 38.59-38.58 101.14 0 139.72 38.6 38.59 101.13 38.59 139.73.01zm-87.33-52.4c9.64 9.64 25.27 9.64 34.91 0l157.21-157.19c19.28-19.29 50.55-19.3 69.84-.02l.02.02c9.65 9.65 25.29 9.65 34.93 0 9.65-9.65 9.65-25.29 0-34.93-38.59-38.59-101.13-38.59-139.72 0L81.33 238.54c-9.65 9.64-9.65 25.28-.01 34.93h.01z"]
            },
            faStackExchange: {
                prefix: "fab",
                iconName: "stack-exchange",
                icon: [448, 512, [], "f18d", "M17.7 332.3h412.7v22c0 37.7-29.3 68-65.3 68h-19L259.3 512v-89.7H83c-36 0-65.3-30.3-65.3-68v-22zm0-23.6h412.7v-85H17.7v85zm0-109.4h412.7v-85H17.7v85zM365 0H83C47 0 17.7 30.3 17.7 67.7V90h412.7V67.7C430.3 30.3 401 0 365 0z"]
            },
            faStackOverflow: {
                prefix: "fab",
                iconName: "stack-overflow",
                icon: [384, 512, [], "f16c", "M290.7 311L95 269.7 86.8 309l195.7 41zm51-87L188.2 95.7l-25.5 30.8 153.5 128.3zm-31.2 39.7L129.2 179l-16.7 36.5L293.7 300zM262 32l-32 24 119.3 160.3 32-24zm20.5 328h-200v39.7h200zm39.7 80H42.7V320h-40v160h359.5V320h-40z"]
            },
            faStackpath: {
                prefix: "fab",
                iconName: "stackpath",
                icon: [448, 512, [], "f842", "M244.6 232.4c0 8.5-4.26 20.49-21.34 20.49h-19.61v-41.47h19.61c17.13 0 21.34 12.36 21.34 20.98zM448 32v448H0V32zM151.3 287.84c0-21.24-12.12-34.54-46.72-44.85-20.57-7.41-26-10.91-26-18.63s7-14.61 20.41-14.61c14.09 0 20.79 8.45 20.79 18.35h30.7l.19-.57c.5-19.57-15.06-41.65-51.12-41.65-23.37 0-52.55 10.75-52.55 38.29 0 19.4 9.25 31.29 50.74 44.37 17.26 6.15 21.91 10.4 21.91 19.48 0 15.2-19.13 14.23-19.47 14.23-20.4 0-25.65-9.1-25.65-21.9h-30.8l-.18.56c-.68 31.32 28.38 45.22 56.63 45.22 29.98 0 51.12-13.55 51.12-38.29zm125.38-55.63c0-25.3-18.43-45.46-53.42-45.46h-51.78v138.18h32.17v-47.36h19.61c30.25 0 53.42-15.95 53.42-45.36zM297.94 325L347 186.78h-31.09L268 325zm106.52-138.22h-31.09L325.46 325h29.94z"]
            },
            faStaylinked: {
                prefix: "fab",
                iconName: "staylinked",
                icon: [440, 512, [], "f3f5", "M382.7 292.5l2.7 2.7-170-167.3c-3.5-3.5-9.7-3.7-13.8-.5L144.3 171c-4.2 3.2-4.6 8.7-1.1 12.2l68.1 64.3c3.6 3.5 9.9 3.7 14 .5l.1-.1c4.1-3.2 10.4-3 14 .5l84 81.3c3.6 3.5 3.2 9-.9 12.2l-93.2 74c-4.2 3.3-10.5 3.1-14.2-.4L63.2 268c-3.5-3.5-9.7-3.7-13.9-.5L3.5 302.4c-4.2 3.2-4.7 8.7-1.2 12.2L211 510.7s7.4 6.8 17.3-.8l198-163.9c4-3.2 4.4-8.7.7-12.2zm54.5-83.4L226.7 2.5c-1.5-1.2-8-5.5-16.3 1.1L3.6 165.7c-4.2 3.2-4.8 8.7-1.2 12.2l42.3 41.7 171.7 165.1c3.7 3.5 10.1 3.7 14.3.4l50.2-38.8-.3-.3 7.7-6c4.2-3.2 4.6-8.7.9-12.2l-57.1-54.4c-3.6-3.5-10-3.7-14.2-.5l-.1.1c-4.2 3.2-10.5 3.1-14.2-.4L109 180.8c-3.6-3.5-3.1-8.9 1.1-12.2l92.2-71.5c4.1-3.2 10.3-3 13.9.5l160.4 159c3.7 3.5 10 3.7 14.1.5l45.8-35.8c4.1-3.2 4.4-8.7.7-12.2z"]
            },
            faSteam: {
                prefix: "fab",
                iconName: "steam",
                icon: [496, 512, [], "f1b6", "M496 256c0 137-111.2 248-248.4 248-113.8 0-209.6-76.3-239-180.4l95.2 39.3c6.4 32.1 34.9 56.4 68.9 56.4 39.2 0 71.9-32.4 70.2-73.5l84.5-60.2c52.1 1.3 95.8-40.9 95.8-93.5 0-51.6-42-93.5-93.7-93.5s-93.7 42-93.7 93.5v1.2L176.6 279c-15.5-.9-30.7 3.4-43.5 12.1L0 236.1C10.2 108.4 117.1 8 247.6 8 384.8 8 496 119 496 256zM155.7 384.3l-30.5-12.6a52.79 52.79 0 0 0 27.2 25.8c26.9 11.2 57.8-1.6 69-28.4 5.4-13 5.5-27.3.1-40.3-5.4-13-15.5-23.2-28.5-28.6-12.9-5.4-26.7-5.2-38.9-.6l31.5 13c19.8 8.2 29.2 30.9 20.9 50.7-8.3 19.9-31 29.2-50.8 21zm173.8-129.9c-34.4 0-62.4-28-62.4-62.3s28-62.3 62.4-62.3 62.4 28 62.4 62.3-27.9 62.3-62.4 62.3zm.1-15.6c25.9 0 46.9-21 46.9-46.8 0-25.9-21-46.8-46.9-46.8s-46.9 21-46.9 46.8c.1 25.8 21.1 46.8 46.9 46.8z"]
            },
            faSteamSquare: {
                prefix: "fab",
                iconName: "steam-square",
                icon: [448, 512, [], "f1b7", "M185.2 356.5c7.7-18.5-1-39.7-19.6-47.4l-29.5-12.2c11.4-4.3 24.3-4.5 36.4.5 12.2 5.1 21.6 14.6 26.7 26.7 5 12.2 5 25.6-.1 37.7-10.5 25.1-39.4 37-64.6 26.5-11.6-4.8-20.4-13.6-25.4-24.2l28.5 11.8c18.6 7.8 39.9-.9 47.6-19.4zM400 32H48C21.5 32 0 53.5 0 80v160.7l116.6 48.1c12-8.2 26.2-12.1 40.7-11.3l55.4-80.2v-1.1c0-48.2 39.3-87.5 87.6-87.5s87.6 39.3 87.6 87.5c0 49.2-40.9 88.7-89.6 87.5l-79 56.3c1.6 38.5-29.1 68.8-65.7 68.8-31.8 0-58.5-22.7-64.5-52.7L0 319.2V432c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-99.7 222.5c-32.2 0-58.4-26.1-58.4-58.3s26.2-58.3 58.4-58.3 58.4 26.2 58.4 58.3-26.2 58.3-58.4 58.3zm.1-14.6c24.2 0 43.9-19.6 43.9-43.8 0-24.2-19.6-43.8-43.9-43.8-24.2 0-43.9 19.6-43.9 43.8 0 24.2 19.7 43.8 43.9 43.8z"]
            },
            faSteamSymbol: {
                prefix: "fab",
                iconName: "steam-symbol",
                icon: [448, 512, [], "f3f6", "M395.5 177.5c0 33.8-27.5 61-61 61-33.8 0-61-27.3-61-61s27.3-61 61-61c33.5 0 61 27.2 61 61zm52.5.2c0 63-51 113.8-113.7 113.8L225 371.3c-4 43-40.5 76.8-84.5 76.8-40.5 0-74.7-28.8-83-67L0 358V250.7L97.2 290c15.1-9.2 32.2-13.3 52-11.5l71-101.7c.5-62.3 51.5-112.8 114-112.8C397 64 448 115 448 177.7zM203 363c0-34.7-27.8-62.5-62.5-62.5-4.5 0-9 .5-13.5 1.5l26 10.5c25.5 10.2 38 39 27.7 64.5-10.2 25.5-39.2 38-64.7 27.5-10.2-4-20.5-8.3-30.7-12.2 10.5 19.7 31.2 33.2 55.2 33.2 34.7 0 62.5-27.8 62.5-62.5zm207.5-185.3c0-42-34.3-76.2-76.2-76.2-42.3 0-76.5 34.2-76.5 76.2 0 42.2 34.3 76.2 76.5 76.2 41.9.1 76.2-33.9 76.2-76.2z"]
            },
            faStickerMule: {
                prefix: "fab",
                iconName: "sticker-mule",
                icon: [576, 512, [], "f3f7", "M561.7 199.6c-1.3.3.3 0 0 0zm-6.2-77.4c-7.7-22.3-5.1-7.2-13.4-36.9-1.6-6.5-3.6-14.5-6.2-20-4.4-8.7-4.6-7.5-4.6-9.5 0-5.3 30.7-45.3 19-46.9-5.7-.6-12.2 11.6-20.6 17-8.6 4.2-8 5-10.3 5-2.6 0-5.7-3-6.2-5-2-5.7 1.9-25.9-3.6-25.9-3.6 0-12.3 24.8-17 25.8-5.2 1.3-27.9-11.4-75.1 18-25.3 13.2-86.9 65.2-87 65.3-6.7 4.7-20 4.7-35.5 16-44.4 30.1-109.6 9.4-110.7 9-110.6-26.8-128-15.2-159 11.5-20.8 17.9-23.7 36.5-24.2 38.9-4.2 20.4 5.2 48.3 6.7 64.3 1.8 19.3-2.7 17.7 7.7 98.3.5 1 4.1 0 5.1 1.5 0 8.4-3.8 12.1-4.1 13-1.5 4.5-1.5 10.5 0 16 2.3 8.2 8.2 37.2 8.2 46.9 0 41.8.4 44 2.6 49.4 3.9 10 12.5 9.1 17 12 3.1 3.5-.5 8.5 1 12.5.5 2 3.6 4 6.2 5 9.2 3.6 27 .3 29.9-2.5 1.6-1.5.5-4.5 3.1-5 5.1 0 10.8-.5 14.4-2.5 5.1-2.5 4.1-6 1.5-10.5-.4-.8-7-13.3-9.8-16-2.1-2-5.1-3-7.2-4.5-5.8-4.9-10.3-19.4-10.3-19.5-4.6-19.4-10.3-46.3-4.1-66.8 4.6-17.2 39.5-87.7 39.6-87.8 4.1-6.5 17-11.5 27.3-7 6 1.9 19.3 22 65.4 30.9 47.9 8.7 97.4-2 112.2-2 2.8 2-1.9 13-.5 38.9 0 26.4-.4 13.7-4.1 29.9-2.2 9.7 3.4 23.2-1.5 46.9-1.4 9.8-9.9 32.7-8.2 43.4.5 1 1 2 1.5 3.5.5 4.5 1.5 8.5 4.6 10 7.3 3.6 12-3.5 9.8 11.5-.7 3.1-2.6 12 1.5 15 4.4 3.7 30.6 3.4 36.5.5 2.6-1.5 1.6-4.5 6.4-7.4 1.9-.9 11.3-.4 11.3-6.5.3-1.8-9.2-19.9-9.3-20-2.6-3.5-9.2-4.5-11.3-8-6.9-10.1-1.7-52.6.5-59.4 3-11 5.6-22.4 8.7-32.4 11-42.5 10.3-50.6 16.5-68.3.8-1.8 6.4-23.1 10.3-29.9 9.3-17 21.7-32.4 33.5-47.4 18-22.9 34-46.9 52-69.8 6.1-7 8.2-13.7 18-8 10.8 5.7 21.6 7 31.9 17 14.6 12.8 10.2 18.2 11.8 22.9 1.5 5 7.7 10.5 14.9 9.5 10.4-2 13-2.5 13.4-2.5 2.6-.5 5.7-5 7.2-8 3.1-5.5 7.2-9 7.2-16.5 0-7.7-.4-2.8-20.6-52.9z"]
            },
            faStrava: {
                prefix: "fab",
                iconName: "strava",
                icon: [384, 512, [], "f428", "M158.4 0L7 292h89.2l62.2-116.1L220.1 292h88.5zm150.2 292l-43.9 88.2-44.6-88.2h-67.6l112.2 220 111.5-220z"]
            },
            faStripe: {
                prefix: "fab",
                iconName: "stripe",
                icon: [640, 512, [], "f429", "M165 144.7l-43.3 9.2-.2 142.4c0 26.3 19.8 43.3 46.1 43.3 14.6 0 25.3-2.7 31.2-5.9v-33.8c-5.7 2.3-33.7 10.5-33.7-15.7V221h33.7v-37.8h-33.7zm89.1 51.6l-2.7-13.1H213v153.2h44.3V233.3c10.5-13.8 28.2-11.1 33.9-9.3v-40.8c-6-2.1-26.7-6-37.1 13.1zm92.3-72.3l-44.6 9.5v36.2l44.6-9.5zM44.9 228.3c0-6.9 5.8-9.6 15.1-9.7 13.5 0 30.7 4.1 44.2 11.4v-41.8c-14.7-5.8-29.4-8.1-44.1-8.1-36 0-60 18.8-60 50.2 0 49.2 67.5 41.2 67.5 62.4 0 8.2-7.1 10.9-17 10.9-14.7 0-33.7-6.1-48.6-14.2v40c16.5 7.1 33.2 10.1 48.5 10.1 36.9 0 62.3-15.8 62.3-47.8 0-52.9-67.9-43.4-67.9-63.4zM640 261.6c0-45.5-22-81.4-64.2-81.4s-67.9 35.9-67.9 81.1c0 53.5 30.3 78.2 73.5 78.2 21.2 0 37.1-4.8 49.2-11.5v-33.4c-12.1 6.1-26 9.8-43.6 9.8-17.3 0-32.5-6.1-34.5-26.9h86.9c.2-2.3.6-11.6.6-15.9zm-87.9-16.8c0-20 12.3-28.4 23.4-28.4 10.9 0 22.5 8.4 22.5 28.4zm-112.9-64.6c-17.4 0-28.6 8.2-34.8 13.9l-2.3-11H363v204.8l44.4-9.4.1-50.2c6.4 4.7 15.9 11.2 31.4 11.2 31.8 0 60.8-23.2 60.8-79.6.1-51.6-29.3-79.7-60.5-79.7zm-10.6 122.5c-10.4 0-16.6-3.8-20.9-8.4l-.3-66c4.6-5.1 11-8.8 21.2-8.8 16.2 0 27.4 18.2 27.4 41.4.1 23.9-10.9 41.8-27.4 41.8zm-126.7 33.7h44.6V183.2h-44.6z"]
            },
            faStripeS: {
                prefix: "fab",
                iconName: "stripe-s",
                icon: [384, 512, [], "f42a", "M155.3 154.6c0-22.3 18.6-30.9 48.4-30.9 43.4 0 98.5 13.3 141.9 36.7V26.1C298.3 7.2 251.1 0 203.8 0 88.1 0 11 60.4 11 161.4c0 157.9 216.8 132.3 216.8 200.4 0 26.4-22.9 34.9-54.7 34.9-47.2 0-108.2-19.5-156.1-45.5v128.5a396.09 396.09 0 0 0 156 32.4c118.6 0 200.3-51 200.3-153.6 0-170.2-218-139.7-218-203.9z"]
            },
            faStudiovinari: {
                prefix: "fab",
                iconName: "studiovinari",
                icon: [512, 512, [], "f3f8", "M480.3 187.7l4.2 28v28l-25.1 44.1-39.8 78.4-56.1 67.5-79.1 37.8-17.7 24.5-7.7 12-9.6 4s17.3-63.6 19.4-63.6c2.1 0 20.3.7 20.3.7l66.7-38.6-92.5 26.1-55.9 36.8-22.8 28-6.6 1.4 20.8-73.6 6.9-5.5 20.7 12.9 88.3-45.2 56.8-51.5 14.8-68.4-125.4 23.3 15.2-18.2-173.4-53.3 81.9-10.5-166-122.9L133.5 108 32.2 0l252.9 126.6-31.5-38L378 163 234.7 64l18.7 38.4-49.6-18.1L158.3 0l194.6 122L310 66.2l108 96.4 12-8.9-21-16.4 4.2-37.8L451 89.1l29.2 24.7 11.5 4.2-7 6.2 8.5 12-13.1 7.4-10.3 20.2 10.5 23.9z"]
            },
            faStumbleupon: {
                prefix: "fab",
                iconName: "stumbleupon",
                icon: [512, 512, [], "f1a4", "M502.9 266v69.7c0 62.1-50.3 112.4-112.4 112.4-61.8 0-112.4-49.8-112.4-111.3v-70.2l34.3 16 51.1-15.2V338c0 14.7 12 26.5 26.7 26.5S417 352.7 417 338v-72h85.9zm-224.7-58.2l34.3 16 51.1-15.2V173c0-60.5-51.1-109-112.1-109-60.8 0-112.1 48.2-112.1 108.2v162.4c0 14.9-12 26.7-26.7 26.7S86 349.5 86 334.6V266H0v69.7C0 397.7 50.3 448 112.4 448c61.6 0 112.4-49.5 112.4-110.8V176.9c0-14.7 12-26.7 26.7-26.7s26.7 12 26.7 26.7v30.9z"]
            },
            faStumbleuponCircle: {
                prefix: "fab",
                iconName: "stumbleupon-circle",
                icon: [496, 512, [], "f1a3", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 177.5c-9.8 0-17.8 8-17.8 17.8v106.9c0 40.9-33.9 73.9-74.9 73.9-41.4 0-74.9-33.5-74.9-74.9v-46.5h57.3v45.8c0 10 8 17.8 17.8 17.8s17.8-7.9 17.8-17.8V200.1c0-40 34.2-72.1 74.7-72.1 40.7 0 74.7 32.3 74.7 72.6v23.7l-34.1 10.1-22.9-10.7v-20.6c.1-9.6-7.9-17.6-17.7-17.6zm167.6 123.6c0 41.4-33.5 74.9-74.9 74.9-41.2 0-74.9-33.2-74.9-74.2V263l22.9 10.7 34.1-10.1v47.1c0 9.8 8 17.6 17.8 17.6s17.8-7.9 17.8-17.6v-48h57.3c-.1 45.9-.1 46.4-.1 46.4z"]
            },
            faSuperpowers: {
                prefix: "fab",
                iconName: "superpowers",
                icon: [448, 512, [], "f2dd", "M448 32c-83.3 11-166.8 22-250 33-92 12.5-163.3 86.7-169 180-3.3 55.5 18 109.5 57.8 148.2L0 480c83.3-11 166.5-22 249.8-33 91.8-12.5 163.3-86.8 168.7-179.8 3.5-55.5-18-109.5-57.7-148.2L448 32zm-79.7 232.3c-4.2 79.5-74 139.2-152.8 134.5-79.5-4.7-140.7-71-136.3-151 4.5-79.2 74.3-139.3 153-134.5 79.3 4.7 140.5 71 136.1 151z"]
            },
            faSupple: {
                prefix: "fab",
                iconName: "supple",
                icon: [640, 512, [], "f3f9", "M640 262.5c0 64.1-109 116.1-243.5 116.1-24.8 0-48.6-1.8-71.1-5 7.7.4 15.5.6 23.4.6 134.5 0 243.5-56.9 243.5-127.1 0-29.4-19.1-56.4-51.2-78 60 21.1 98.9 55.1 98.9 93.4zM47.7 227.9c-.1-70.2 108.8-127.3 243.3-127.6 7.9 0 15.6.2 23.3.5-22.5-3.2-46.3-4.9-71-4.9C108.8 96.3-.1 148.5 0 212.6c.1 38.3 39.1 72.3 99.3 93.3-32.3-21.5-51.5-48.6-51.6-78zm60.2 39.9s10.5 13.2 29.3 13.2c17.9 0 28.4-11.5 28.4-25.1 0-28-40.2-25.1-40.2-39.7 0-5.4 5.3-9.1 12.5-9.1 5.7 0 11.3 2.6 11.3 6.6v3.9h14.2v-7.9c0-12.1-15.4-16.8-25.4-16.8-16.5 0-28.5 10.2-28.5 24.1 0 26.6 40.2 25.4 40.2 39.9 0 6.6-5.8 10.1-12.3 10.1-11.9 0-20.7-10.1-20.7-10.1l-8.8 10.9zm120.8-73.6v54.4c0 11.3-7.1 17.8-17.8 17.8-10.7 0-17.8-6.5-17.8-17.7v-54.5h-15.8v55c0 18.9 13.4 31.9 33.7 31.9 20.1 0 33.4-13 33.4-31.9v-55h-15.7zm34.4 85.4h15.8v-29.5h15.5c16 0 27.2-11.5 27.2-28.1s-11.2-27.8-27.2-27.8h-39.1v13.4h7.8v72zm15.8-43v-29.1h12.9c8.7 0 13.7 5.7 13.7 14.4 0 8.9-5.1 14.7-14 14.7h-12.6zm57 43h15.8v-29.5h15.5c16 0 27.2-11.5 27.2-28.1s-11.2-27.8-27.2-27.8h-39.1v13.4h7.8v72zm15.7-43v-29.1h12.9c8.7 0 13.7 5.7 13.7 14.4 0 8.9-5 14.7-14 14.7h-12.6zm57.1 34.8c0 5.8 2.4 8.2 8.2 8.2h37.6c5.8 0 8.2-2.4 8.2-8.2v-13h-14.3v5.2c0 1.7-1 2.6-2.6 2.6h-18.6c-1.7 0-2.6-1-2.6-2.6v-61.2c0-5.7-2.4-8.2-8.2-8.2H401v13.4h5.2c1.7 0 2.6 1 2.6 2.6v61.2zm63.4 0c0 5.8 2.4 8.2 8.2 8.2H519c5.7 0 8.2-2.4 8.2-8.2v-13h-14.3v5.2c0 1.7-1 2.6-2.6 2.6h-19.7c-1.7 0-2.6-1-2.6-2.6v-20.3h27.7v-13.4H488v-22.4h19.2c1.7 0 2.6 1 2.6 2.6v5.2H524v-13c0-5.7-2.5-8.2-8.2-8.2h-51.6v13.4h7.8v63.9zm58.9-76v5.9h1.6v-5.9h2.7v-1.2h-7v1.2h2.7zm5.7-1.2v7.1h1.5v-5.7l2.3 5.7h1.3l2.3-5.7v5.7h1.5v-7.1h-2.3l-2.1 5.1-2.1-5.1h-2.4z"]
            },
            faSuse: {
                prefix: "fab",
                iconName: "suse",
                icon: [640, 512, [], "f7d6", "M471.08 102.66s-.3 18.3-.3 20.3c-9.1-3-74.4-24.1-135.7-26.3-51.9-1.8-122.8-4.3-223 57.3-19.4 12.4-73.9 46.1-99.6 109.7C7 277-.12 307 7 335.06a111 111 0 0 0 16.5 35.7c17.4 25 46.6 41.6 78.1 44.4 44.4 3.9 78.1-16 90-53.3 8.2-25.8 0-63.6-31.5-82.9-25.6-15.7-53.3-12.1-69.2-1.6-13.9 9.2-21.8 23.5-21.6 39.2.3 27.8 24.3 42.6 41.5 42.6a49 49 0 0 0 15.8-2.7c6.5-1.8 13.3-6.5 13.3-14.9 0-12.1-11.6-14.8-16.8-13.9-2.9.5-4.5 2-11.8 2.4-2-.2-12-3.1-12-14V316c.2-12.3 13.2-18 25.5-16.9 32.3 2.8 47.7 40.7 28.5 65.7-18.3 23.7-76.6 23.2-99.7-20.4-26-49.2 12.7-111.2 87-98.4 33.2 5.7 83.6 35.5 102.4 104.3h45.9c-5.7-17.6-8.9-68.3 42.7-68.3 56.7 0 63.9 39.9 79.8 68.3H460c-12.8-18.3-21.7-38.7-18.9-55.8 5.6-33.8 39.7-18.4 82.4-17.4 66.5.4 102.1-27 103.1-28 3.7-3.1 6.5-15.8 7-17.7 1.3-5.1-3.2-2.4-3.2-2.4-8.7 5.2-30.5 15.2-50.9 15.6-25.3.5-76.2-25.4-81.6-28.2-.3-.4.1 1.2-11-25.5 88.4 58.3 118.3 40.5 145.2 21.7.8-.6 4.3-2.9 3.6-5.7-13.8-48.1-22.4-62.7-34.5-69.6-37-21.6-125-34.7-129.2-35.3.1-.1-.9-.3-.9.7zm60.4 72.8a37.54 37.54 0 0 1 38.9-36.3c33.4 1.2 48.8 42.3 24.4 65.2-24.2 22.7-64.4 4.6-63.3-28.9zm38.6-25.3a26.27 26.27 0 1 0 25.4 27.2 26.19 26.19 0 0 0-25.4-27.2zm4.3 28.8c-15.4 0-15.4-15.6 0-15.6s15.4 15.64 0 15.64z"]
            },
            faSwift: {
                prefix: "fab",
                iconName: "swift",
                icon: [448, 512, [], "f8e1", "M448 156.09c0-4.51-.08-9-.2-13.52a196.31 196.31 0 0 0-2.58-29.42 99.62 99.62 0 0 0-9.22-28A94.08 94.08 0 0 0 394.84 44a99.17 99.17 0 0 0-28-9.22 195 195 0 0 0-29.43-2.59c-4.51-.12-9-.17-13.52-.2H124.14c-4.51 0-9 .08-13.52.2-2.45.07-4.91.15-7.37.27a171.68 171.68 0 0 0-22.06 2.32 103.06 103.06 0 0 0-21.21 6.1q-3.46 1.45-6.81 3.12a94.66 94.66 0 0 0-18.39 12.32c-1.88 1.61-3.69 3.28-5.43 5A93.86 93.86 0 0 0 12 85.17a99.45 99.45 0 0 0-9.22 28 196.31 196.31 0 0 0-2.54 29.4c-.13 4.51-.18 9-.21 13.52v199.83c0 4.51.08 9 .21 13.51a196.08 196.08 0 0 0 2.58 29.42 99.3 99.3 0 0 0 9.22 28A94.31 94.31 0 0 0 53.17 468a99.47 99.47 0 0 0 28 9.21 195 195 0 0 0 29.43 2.59c4.5.12 9 .17 13.52.2H323.91c4.51 0 9-.08 13.52-.2a196.59 196.59 0 0 0 29.44-2.59 99.57 99.57 0 0 0 28-9.21A94.22 94.22 0 0 0 436 426.84a99.3 99.3 0 0 0 9.22-28 194.79 194.79 0 0 0 2.59-29.42c.12-4.5.17-9 .2-13.51V172.14c-.01-5.35-.01-10.7-.01-16.05zm-69.88 241c-20-38.93-57.23-29.27-76.31-19.47-1.72 1-3.48 2-5.25 3l-.42.25c-39.5 21-92.53 22.54-145.85-.38A234.64 234.64 0 0 1 45 290.12a230.63 230.63 0 0 0 39.17 23.37c56.36 26.4 113 24.49 153 0-57-43.85-104.6-101-141.09-147.22a197.09 197.09 0 0 1-18.78-25.9c43.7 40 112.7 90.22 137.48 104.12-52.57-55.49-98.89-123.94-96.72-121.74 82.79 83.42 159.18 130.59 159.18 130.59 2.88 1.58 5 2.85 6.73 4a127.44 127.44 0 0 0 4.16-12.47c13.22-48.33-1.66-103.58-35.31-149.2C329.61 141.75 375 229.34 356.4 303.42c-.44 1.73-.95 3.4-1.44 5.09 38.52 47.4 28.04 98.17 23.13 88.59z"]
            },
            faSymfony: {
                prefix: "fab",
                iconName: "symfony",
                icon: [512, 512, [], "f83d", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm133.74 143.54c-11.47.41-19.4-6.45-19.77-16.87-.27-9.18 6.68-13.44 6.53-18.85-.23-6.55-10.16-6.82-12.87-6.67-39.78 1.29-48.59 57-58.89 113.85 21.43 3.15 36.65-.72 45.14-6.22 12-7.75-3.34-15.72-1.42-24.56 4-18.16 32.55-19 32 5.3-.36 17.86-25.92 41.81-77.6 35.7-10.76 59.52-18.35 115-58.2 161.72-29 34.46-58.4 39.82-71.58 40.26-24.65.85-41-12.31-41.58-29.84-.56-17 14.45-26.26 24.31-26.59 21.89-.75 30.12 25.67 14.88 34-12.09 9.71.11 12.61 2.05 12.55 10.42-.36 17.34-5.51 22.18-9 24-20 33.24-54.86 45.35-118.35 8.19-49.66 17-78 18.23-82-16.93-12.75-27.08-28.55-49.85-34.72-15.61-4.23-25.12-.63-31.81 7.83-7.92 10-5.29 23 2.37 30.7l12.63 14c15.51 17.93 24 31.87 20.8 50.62-5.06 29.93-40.72 52.9-82.88 39.94-36-11.11-42.7-36.56-38.38-50.62 7.51-24.15 42.36-11.72 34.62 13.6-2.79 8.6-4.92 8.68-6.28 13.07-4.56 14.77 41.85 28.4 51-1.39 4.47-14.52-5.3-21.71-22.25-39.85-28.47-31.75-16-65.49 2.95-79.67C204.23 140.13 251.94 197 262 205.29c37.17-109 100.53-105.46 102.43-105.53 25.16-.81 44.19 10.59 44.83 28.65.25 7.69-4.17 22.59-19.52 23.13z"]
            },
            faTeamspeak: {
                prefix: "fab",
                iconName: "teamspeak",
                icon: [512, 512, [], "f4f9", "M244.2 346.79c2.4-12.3-12-30-32.4-48.7-20.9-19.2-48.2-39.1-63.4-46.6-21.7-12-41.7-1.8-46.3 22.7-5 26.2 0 51.4 14.5 73.9 10.2 15.5 25.4 22.7 43.4 24 11.6.6 52.5 2.2 61.7-1 11.9-4.3 20.1-11.8 22.5-24.3zm205 20.8a5.22 5.22 0 0 0-8.3 2.4c-8 25.4-44.7 112.5-172.1 121.5-149.7 10.5 80.3 43.6 145.4-6.4 22.7-17.4 47.6-35 46.6-85.4-.4-10.1-4.9-26.69-11.6-32.1zm62-122.4c-.3-18.9-8.6-33.4-26-42.2-2.9-1.3-5-2.7-5.9-6.4A222.64 222.64 0 0 0 438.9 103c-1.1-1.5-3.5-3.2-2.2-5 8.5-11.5-.3-18-7-24.4Q321.4-31.11 177.4 13.09c-40.1 12.3-73.9 35.6-102 67.4-4 4.3-6.7 9.1-3 14.5 3 4 1.3 6.2-1 9.3C51.6 132 38.2 162.59 32.1 196c-.7 4.3-2.9 6-6.4 7.8-14.2 7-22.5 18.5-24.9 34L0 264.29v20.9c0 30.8 21 50.4 51.8 49 7.7-.3 11.7-4.3 12-11.5 2-77.5-2.4-95.4 3.7-125.8C92.1 72.39 234.3 5 345.3 65.39 411.4 102 445.7 159 447.6 234.79c.8 28.2 0 56.5 0 84.6 0 7 2.2 12.5 9.4 14.2 24.1 5 49.2-12 53.2-36.7 2.9-17.1 1-34.5 1-51.7zm-159.6 131.5c36.5 2.8 59.3-28.5 58.4-60.5-2.1-45.2-66.2-16.5-87.8-8-73.2 28.1-45 54.9-22.2 60.8z"]
            },
            faTelegram: {
                prefix: "fab",
                iconName: "telegram",
                icon: [496, 512, [], "f2c6", "M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm121.8 169.9l-40.7 191.8c-3 13.6-11.1 16.9-22.4 10.5l-62-45.7-29.9 28.8c-3.3 3.3-6.1 6.1-12.5 6.1l4.4-63.1 114.9-103.8c5-4.4-1.1-6.9-7.7-2.5l-142 89.4-61.2-19.1c-13.3-4.2-13.6-13.3 2.8-19.7l239.1-92.2c11.1-4 20.8 2.7 17.2 19.5z"]
            },
            faTelegramPlane: {
                prefix: "fab",
                iconName: "telegram-plane",
                icon: [448, 512, [], "f3fe", "M446.7 98.6l-67.6 318.8c-5.1 22.5-18.4 28.1-37.3 17.5l-103-75.9-49.7 47.8c-5.5 5.5-10.1 10.1-20.7 10.1l7.4-104.9 190.9-172.5c8.3-7.4-1.8-11.5-12.9-4.1L117.8 284 16.2 252.2c-22.1-6.9-22.5-22.1 4.6-32.7L418.2 66.4c18.4-6.9 34.5 4.1 28.5 32.2z"]
            },
            faTencentWeibo: {
                prefix: "fab",
                iconName: "tencent-weibo",
                icon: [384, 512, [], "f1d5", "M72.3 495.8c1.4 19.9-27.6 22.2-29.7 2.9C31 368.8 73.7 259.2 144 185.5c-15.6-34 9.2-77.1 50.6-77.1 30.3 0 55.1 24.6 55.1 55.1 0 44-49.5 70.8-86.9 45.1-65.7 71.3-101.4 169.8-90.5 287.2zM192 .1C66.1.1-12.3 134.3 43.7 242.4 52.4 259.8 79 246.9 70 229 23.7 136.4 91 29.8 192 29.8c75.4 0 136.9 61.4 136.9 136.9 0 90.8-86.9 153.9-167.7 133.1-19.1-4.1-25.6 24.4-6.6 29.1 110.7 23.2 204-60 204-162.3C358.6 74.7 284 .1 192 .1z"]
            },
            faTheRedYeti: {
                prefix: "fab",
                iconName: "the-red-yeti",
                icon: [512, 512, [], "f69d", "M488.23 241.7l20.7 7.1c-9.6-23.9-23.9-37-31.7-44.8l7.1-18.2c.2 0 12.3-27.8-2.5-30.7-.6-11.3-6.6-27-18.4-27-7.6-10.6-17.7-12.3-30.7-5.9a122.2 122.2 0 0 0-25.3 16.5c-5.3-6.4-3 .4-3-29.8-37.1-24.3-45.4-11.7-74.8 3l.5.5a239.36 239.36 0 0 0-68.4-13.3c-5.5-8.7-18.6-19.1-25.1-25.1l24.8 7.1c-5.5-5.5-26.8-12.9-34.2-15.2 18.2-4.1 29.8-20.8 42.5-33-34.9-10.1-67.9-5.9-97.9 11.8l12-44.2L182 0c-31.6 24.2-33 41.9-33.7 45.5-.9-2.4-6.3-19.6-15.2-27a35.12 35.12 0 0 0-.5 25.3c3 8.4 5.9 14.8 8.4 18.9-16-3.3-28.3-4.9-49.2 0h-3.7l33 14.3a194.26 194.26 0 0 0-46.7 67.4l-1.7 8.4 1.7 1.7 7.6-4.7c-3.3 11.6-5.3 19.4-6.6 25.8a200.18 200.18 0 0 0-27.8 40.3c-15 1-31.8 10.8-40.3 14.3l3 3.4 28.8 1c-.5 1-.7 2.2-1.2 3.2-7.3 6.4-39.8 37.7-33 80.7l20.2-22.4c.5 1.7.7 3.4 1.2 5.2 0 25.5.4 89.6 64.9 150.5 43.6 40 96 60.2 157.5 60.2 121.7 0 223-87.3 223-211.5 6.8-9.7-1.2 3 16.7-25.1l13 14.3 2.5-.5A181.84 181.84 0 0 0 495 255a44.74 44.74 0 0 0-6.8-13.3zM398 111.2l-.5 21.9c5.5 18.1 16.9 17.2 22.4 17.2l-3.4-4.7 22.4-5.4a242.44 242.44 0 0 1-27 0c12.8-2.1 33.3-29 43-11.3 3.4 7.6 6.4 17.2 9.3 27.8l1.7-5.9a56.38 56.38 0 0 1-1.7-15.2c5.4.5 8.8 3.4 9.3 10.1.5 6.4 1.7 14.8 3.4 25.3l4.7-11.3c4.6 0 4.5-3.6-2.5 20.7-20.9-8.7-35.1-8.4-46.5-8.4l18.2-16c-25.3 8.2-33 10.8-54.8 20.9-1.1-5.4-5-13.5-16-19.9-3.2 3.8-2.8.9-.7 14.8h-2.5a62.32 62.32 0 0 0-8.4-23.1l4.2-3.4c8.4-7.1 11.8-14.3 10.6-21.9-.5-6.4-5.4-13.5-13.5-20.7 5.6-3.4 15.2-.4 28.3 8.5zm-39.6-10.1c2.7 1.9 11.4 5.4 18.9 17.2 4.2 8.4 4 9.8 3.4 11.1-.5 2.4-.5 4.3-3 7.1-1.7 2.5-5.4 4.7-11.8 7.6-7.6-13-16.5-23.6-27.8-31.2zM91 143.1l1.2-1.7c1.2-2.9 4.2-7.6 9.3-15.2l2.5-3.4-13 12.3 5.4-4.7-10.1 9.3-4.2 1.2c12.3-24.1 23.1-41.3 32.5-50.2 9.3-9.3 16-16 20.2-19.4l-6.4 1.2c-11.3-4.2-19.4-7.1-24.8-8.4 2.5-.5 3.7-.5 3.2-.5 10.3 0 17.5.5 20.9 1.2a52.35 52.35 0 0 0 16 2.5l.5-1.7-8.4-35.8 13.5 29a42.89 42.89 0 0 0 5.9-14.3c1.7-6.4 5.4-13 10.1-19.4s7.6-10.6 9.3-11.3a234.68 234.68 0 0 0-6.4 25.3l-1.7 7.1-.5 4.7 2.5 2.5C190.4 39.9 214 34 239.8 34.5l21.1.5c-11.8 13.5-27.8 21.9-48.5 24.8a201.26 201.26 0 0 1-23.4 2.9l-.2-.5-2.5-1.2a20.75 20.75 0 0 0-14 2c-2.5-.2-4.9-.5-7.1-.7l-2.5 1.7.5 1.2c2 .2 3.9.5 6.2.7l-2 3.4 3.4-.5-10.6 11.3c-4.2 3-5.4 6.4-4.2 9.3l5.4-3.4h1.2a39.4 39.4 0 0 1 25.3-15.2v-3c6.4.5 13 1 19.4 1.2 6.4 0 8.4.5 5.4 1.2a189.6 189.6 0 0 1 20.7 13.5c13.5 10.1 23.6 21.9 30 35.4 8.8 18.2 13.5 37.1 13.5 56.6a141.13 141.13 0 0 1-3 28.3 209.91 209.91 0 0 1-16 46l2.5.5c18.2-19.7 41.9-16 49.2-16l-6.4 5.9 22.4 17.7-1.7 30.7c-5.4-12.3-16.5-21.1-33-27.8 16.5 14.8 23.6 21.1 21.9 20.2-4.8-2.8-3.5-1.9-10.8-3.7 4.1 4.1 17.5 18.8 18.2 20.7l.2.2-.2.2c0 1.8 1.6-1.2-14 22.9-75.2-15.3-106.27-42.7-141.2-63.2l11.8 1.2c-11.8-18.5-15.6-17.7-38.4-26.1L149 225c-8.8-3-18.2-3-28.3.5l7.6-10.6-1.2-1.7c-14.9 4.3-19.8 9.2-22.6 11.3-1.1-5.5-2.8-12.4-12.3-28.8l-1.2 27-13.2-5c1.5-25.2 5.4-50.5 13.2-74.6zm276.5 330c-49.9 25-56.1 22.4-59 23.9-29.8-11.8-50.9-31.7-63.5-58.8l30 16.5c-9.8-9.3-18.3-16.5-38.4-44.3l11.8 23.1-17.7-7.6c14.2 21.1 23.5 51.7 66.6 73.5-120.8 24.2-199-72.1-200.9-74.3a262.57 262.57 0 0 0 35.4 24.8c3.4 1.7 7.1 2.5 10.1 1.2l-16-20.7c9.2 4.2 9.5 4.5 69.1 29-42.5-20.7-73.8-40.8-93.2-60.2-.5 6.4-1.2 10.1-1.2 10.1a80.25 80.25 0 0 1 20.7 26.6c-39-18.9-57.6-47.6-71.3-82.6 49.9 55.1 118.9 37.5 120.5 37.1 34.8 16.4 69.9 23.6 113.9 10.6 3.3 0 20.3 17 25.3 39.1l4.2-3-2.5-23.6c9 9 24.9 22.6 34.4 13-15.6-5.3-23.5-9.5-29.5-31.7 4.6 4.2 7.6 9 27.8 15l1.2-1.2-10.5-14.2c11.7-4.8-3.5 1 32-10.8 4.3 34.3 9 49.2.7 89.5zm115.3-214.4l-2.5.5 3 9.3c-3.5 5.9-23.7 44.3-71.6 79.7-39.5 29.8-76.6 39.1-80.9 40.3l-7.6-7.1-1.2 3 14.3 16-7.1-4.7 3.4 4.2h-1.2l-21.9-13.5 9.3 26.6-19-27.9-1.2 2.5 7.6 29c-6.1-8.2-21-32.6-56.8-39.6l32.5 21.2a214.82 214.82 0 0 1-93.2-6.4c-4.2-1.2-8.9-2.5-13.5-4.2l1.2-3-44.8-22.4 26.1 22.4c-57.7 9.1-113-25.4-126.4-83.4l-2.5-16.4-22.27 22.3c19.5-57.5 25.6-57.9 51.4-70.1-9.1-5.3-1.6-3.3-38.4-9.3 15.8-5.8 33-15.4 73 5.2a18.5 18.5 0 0 1 3.7-1.7c.6-3.2.4-.8 1-11.8 3.9 10 3.6 8.7 3 9.3l1.7.5c12.7-6.5 8.9-4.5 17-8.9l-5.4 13.5 22.3-5.8-8.4 8.4 2.5 2.5c4.5-1.8 30.3 3.4 40.8 16l-23.6-2.5c39.4 23 51.5 54 55.8 69.6l1.7-1.2c-2.8-22.3-12.4-33.9-16-40.1 4.2 5 39.2 34.6 110.4 46-11.3-.5-23.1 5.4-34.9 18.9l46.7-20.2-9.3 21.9c7.6-10.1 14.8-23.6 21.2-39.6v-.5l1.2-3-1.2 16c13.5-41.8 25.3-78.5 35.4-109.7l13.5-27.8v-2l-5.4-4.2h10.1l5.9 4.2 2.5-1.2-3.4-16 12.3 18.9 41.8-20.2-14.8 13 .5 2.9 17.7-.5a184 184 0 0 1 33 4.2l-23.6 2.5-1.2 3 26.6 23.1a254.21 254.21 0 0 1 27 32c-11.2-3.3-10.3-3.4-21.2-3.4l12.3 32.5zm-6.1-71.3l-3.9 13-14.3-11.8zm-254.8 7.1c1.7 10.6 4.7 17.7 8.8 21.9-9.3 6.6-27.5 13.9-46.5 16l.5 1.2a50.22 50.22 0 0 0 24.8-2.5l-7.1 13c4.2-1.7 10.1-7.1 17.7-14.8 11.9-5.5 12.7-5.1 20.2-16-12.7-6.4-15.7-13.7-18.4-18.8zm3.7-102.3c-6.4-3.4-10.6 3-12.3 18.9s2.5 29.5 11.8 39.6 18.2 10.6 26.1 3 3.4-23.6-11.3-47.7a39.57 39.57 0 0 0-14.27-13.8zm-4.7 46.3c5.4 2.2 10.5 1.9 12.3-10.6v-4.7l-1.2.5c-4.3-3.1-2.5-4.5-1.7-6.2l.5-.5c-.9-1.2-5-8.1-12.5 4.7-.5-13.5.5-21.9 3-24.8 1.2-2.5 4.7-1.2 11.3 4.2 6.4 5.4 11.3 16 15.2 32.5 6.5 28-19.8 26.2-26.9 4.9zm-45-5.5c1.6.3 9.3-1.1 9.3-14.8h-.5c-5.4-1.1-2.2-5.5-.7-5.9-1.7-3-3.4-4.2-5.4-4.7-8.1 0-11.6 12.7-8.1 21.2a7.51 7.51 0 0 0 5.43 4.2zM216 82.9l-2.5.5.5 3a48.94 48.94 0 0 1 26.1 5.9c-2.5-5.5-10-14.3-28.3-14.3l.5 2.5zm-71.8 49.4c21.7 16.8 16.5 21.4 46.5 23.6l-2.9-4.7a42.67 42.67 0 0 0 14.8-28.3c1.7-16-1.2-29.5-8.8-41.3l13-7.6a2.26 2.26 0 0 0-.5-1.7 14.21 14.21 0 0 0-13.5 1.7c-12.7 6.7-28 20.9-29 22.4-1.7 1.7-3.4 5.9-5.4 13.5a99.61 99.61 0 0 0-2.9 23.6c-4.7-8-10.5-6.4-19.9-5.9l7.1 7.6c-16.5 0-23.3 15.4-23.6 16 6.8 0 4.6-7.6 30-12.3-4.3-6.3-3.3-5-4.9-6.6zm18.7-18.7c1.2-7.6 3.4-13 6.4-17.2 5.4-6.4 10.6-10.1 16-11.8 4.2-1.7 7.1 1.2 10.1 9.3a72.14 72.14 0 0 1 3 25.3c-.5 9.3-3.4 17.2-8.4 23.1-2.9 3.4-5.4 5.9-6.4 7.6a39.21 39.21 0 0 1-11.3-.5l-7.1-3.4-5.4-6.4c.8-10 1.3-18.8 3.1-26zm42 56.1c-34.8 14.4-34.7 14-36.1 14.3-20.8 4.7-19-24.4-18.9-24.8l5.9-1.2-.5-2.5c-20.2-2.6-31 4.2-32.5 4.9.5.5 3 3.4 5.9 9.3 4.2-6.4 8.8-10.1 15.2-10.6a83.47 83.47 0 0 0 1.7 33.7c.1.5 2.6 17.4 27.5 24.1 11.3 3 27 1.2 48.9-5.4l-9.2.5c-4.2-14.8-6.4-24.8-5.9-29.5 11.3-8.8 21.9-11.3 30.7-7.6h2.5l-11.8-7.6-7.1.5c-5.9 1.2-12.3 4.2-19.4 8.4z"]
            },
            faThemeco: {
                prefix: "fab",
                iconName: "themeco",
                icon: [448, 512, [], "f5c6", "M202.9 8.43c9.9-5.73 26-5.82 35.95-.21L430 115.85c10 5.6 18 19.44 18 30.86V364c0 11.44-8.06 25.29-18 31L238.81 503.74c-9.93 5.66-26 5.57-35.85-.21L17.86 395.12C8 389.34 0 375.38 0 364V146.71c0-11.44 8-25.36 17.91-31.08zm-77.4 199.83c-15.94 0-31.89.14-47.83.14v101.45H96.8V280h28.7c49.71 0 49.56-71.74 0-71.74zm140.14 100.29l-30.73-34.64c37-7.51 34.8-65.23-10.87-65.51-16.09 0-32.17-.14-48.26-.14v101.59h19.13v-33.91h18.41l29.56 33.91h22.76zm-41.59-82.32c23.34 0 23.26 32.46 0 32.46h-29.13v-32.46zm-95.56-1.6c21.18 0 21.11 38.85 0 38.85H96.18v-38.84zm192.65-18.25c-68.46 0-71 105.8 0 105.8 69.48-.01 69.41-105.8 0-105.8zm0 17.39c44.12 0 44.8 70.86 0 70.86s-44.43-70.86 0-70.86z"]
            },
            faThemeisle: {
                prefix: "fab",
                iconName: "themeisle",
                icon: [512, 512, [], "f2b2", "M208 88.286c0-10 6.286-21.714 17.715-21.714 11.142 0 17.714 11.714 17.714 21.714 0 10.285-6.572 21.714-17.714 21.714C214.286 110 208 98.571 208 88.286zm304 160c0 36.001-11.429 102.286-36.286 129.714-22.858 24.858-87.428 61.143-120.857 70.572l-1.143.286v32.571c0 16.286-12.572 30.571-29.143 30.571-10 0-19.429-5.714-24.572-14.286-5.427 8.572-14.856 14.286-24.856 14.286-10 0-19.429-5.714-24.858-14.286-5.142 8.572-14.571 14.286-24.57 14.286-10.286 0-19.429-5.714-24.858-14.286-5.143 8.572-14.571 14.286-24.571 14.286-18.857 0-29.429-15.714-29.429-32.857-16.286 12.285-35.715 19.428-56.571 19.428-22 0-43.429-8.285-60.286-22.857 10.285-.286 20.571-2.286 30.285-5.714-20.857-5.714-39.428-18.857-52-36.286 21.37 4.645 46.209 1.673 67.143-11.143-22-22-56.571-58.857-68.572-87.428C1.143 321.714 0 303.714 0 289.429c0-49.714 20.286-160 86.286-160 10.571 0 18.857 4.858 23.143 14.857a158.792 158.792 0 0 1 12-15.428c2-2.572 5.714-5.429 7.143-8.286 7.999-12.571 11.714-21.142 21.714-34C182.571 45.428 232 17.143 285.143 17.143c6 0 12 .285 17.714 1.143C313.714 6.571 328.857 0 344.572 0c14.571 0 29.714 6 40 16.286.857.858 1.428 2.286 1.428 3.428 0 3.714-10.285 13.429-12.857 16.286 4.286 1.429 15.714 6.858 15.714 12 0 2.857-2.857 5.143-4.571 7.143 31.429 27.714 49.429 67.143 56.286 108 4.286-5.143 10.285-8.572 17.143-8.572 10.571 0 20.857 7.144 28.571 14.001C507.143 187.143 512 221.714 512 248.286zM188 89.428c0 18.286 12.571 37.143 32.286 37.143 19.714 0 32.285-18.857 32.285-37.143 0-18-12.571-36.857-32.285-36.857-19.715 0-32.286 18.858-32.286 36.857zM237.714 194c0-19.714 3.714-39.143 8.571-58.286-52.039 79.534-13.531 184.571 68.858 184.571 21.428 0 42.571-7.714 60-20 2-7.429 3.714-14.857 3.714-22.572 0-14.286-6.286-21.428-20.572-21.428-4.571 0-9.143.857-13.429 1.714-63.343 12.668-107.142 3.669-107.142-63.999zm-41.142 254.858c0-11.143-8.858-20.857-20.286-20.857-11.429 0-20 9.715-20 20.857v32.571c0 11.143 8.571 21.142 20 21.142 11.428 0 20.286-9.715 20.286-21.142v-32.571zm49.143 0c0-11.143-8.572-20.857-20-20.857-11.429 0-20.286 9.715-20.286 20.857v32.571c0 11.143 8.857 21.142 20.286 21.142 11.428 0 20-10 20-21.142v-32.571zm49.713 0c0-11.143-8.857-20.857-20.285-20.857-11.429 0-20.286 9.715-20.286 20.857v32.571c0 11.143 8.857 21.142 20.286 21.142 11.428 0 20.285-9.715 20.285-21.142v-32.571zm49.715 0c0-11.143-8.857-20.857-20.286-20.857-11.428 0-20.286 9.715-20.286 20.857v32.571c0 11.143 8.858 21.142 20.286 21.142 11.429 0 20.286-10 20.286-21.142v-32.571zM421.714 286c-30.857 59.142-90.285 102.572-158.571 102.572-96.571 0-160.571-84.572-160.571-176.572 0-16.857 2-33.429 6-49.714-20 33.715-29.714 72.572-29.714 111.429 0 60.286 24.857 121.715 71.429 160.857 5.143-9.714 14.857-16.286 26-16.286 10 0 19.428 5.714 24.571 14.286 5.429-8.571 14.571-14.286 24.858-14.286 10 0 19.428 5.714 24.571 14.286 5.429-8.571 14.857-14.286 24.858-14.286 10 0 19.428 5.714 24.857 14.286 5.143-8.571 14.571-14.286 24.572-14.286 10.857 0 20.857 6.572 25.714 16 43.427-36.286 68.569-92 71.426-148.286zm10.572-99.714c0-53.714-34.571-105.714-92.572-105.714-30.285 0-58.571 15.143-78.857 36.857C240.862 183.812 233.41 254 302.286 254c28.805 0 97.357-28.538 84.286 36.857 28.857-26 45.714-65.714 45.714-104.571z"]
            },
            faThinkPeaks: {
                prefix: "fab",
                iconName: "think-peaks",
                icon: [576, 512, [], "f731", "M465.4 409.4l87.1-150.2-32-.3-55.1 95L259.2 0 23 407.4l32 .3L259.2 55.6zm-355.3-44.1h32.1l117.4-202.5L463 511.9l32.5.1-235.8-404.6z"]
            },
            faTiktok: {
                prefix: "fab",
                iconName: "tiktok",
                icon: [448, 512, [], "e07b", "M448,209.91a210.06,210.06,0,0,1-122.77-39.25V349.38A162.55,162.55,0,1,1,185,188.31V278.2a74.62,74.62,0,1,0,52.23,71.18V0l88,0a121.18,121.18,0,0,0,1.86,22.17h0A122.18,122.18,0,0,0,381,102.39a121.43,121.43,0,0,0,67,20.14Z"]
            },
            faTradeFederation: {
                prefix: "fab",
                iconName: "trade-federation",
                icon: [496, 512, [], "f513", "M248 8.8c-137 0-248 111-248 248s111 248 248 248 248-111 248-248-111-248-248-248zm0 482.8c-129.7 0-234.8-105.1-234.8-234.8S118.3 22 248 22s234.8 105.1 234.8 234.8S377.7 491.6 248 491.6zm155.1-328.5v-46.8H209.3V198H54.2l36.7 46h117.7v196.8h48.8V245h83.3v-47h-83.3v-34.8h145.7zm-73.3 45.1v23.9h-82.9v197.4h-26.8V232.1H96.3l-20.1-23.9h143.9v-80.6h171.8V152h-145v56.2zm-161.3-69l-12.4-20.7 2.1 23.8-23.5 5.4 23.3 5.4-2.1 24 12.3-20.5 22.2 9.5-15.7-18.1 15.8-18.1zm-29.6-19.7l9.3-11.5-12.7 5.9-8-12.4 1.7 13.9-14.3 3.8 13.7 2.7-.8 14.7 6.8-12.2 13.8 5.3zm165.4 145.2l-13.1 5.6-7.3-12.2 1.3 14.2-13.9 3.2 13.9 3.2-1.2 14.2 7.3-12.2 13.1 5.5-9.4-10.7zm106.9-77.2l-20.9 9.1-12-19.6 2.2 22.7-22.3 5.4 22.2 4.9-1.8 22.9 11.5-19.6 21.2 8.8-15.1-17zM248 29.9c-125.3 0-226.9 101.6-226.9 226.9S122.7 483.7 248 483.7s226.9-101.6 226.9-226.9S373.3 29.9 248 29.9zM342.6 196v51h-83.3v195.7h-52.7V245.9H89.9l-40-49.9h157.4v-81.6h197.8v50.7H259.4V196zM248 43.2c60.3 0 114.8 25 153.6 65.2H202.5V190H45.1C73.1 104.8 153.4 43.2 248 43.2zm0 427.1c-117.9 0-213.6-95.6-213.6-213.5 0-21.2 3.1-41.8 8.9-61.1L87.1 252h114.7v196.8h64.6V253h83.3v-62.7h-83.2v-19.2h145.6v-50.8c30.8 37 49.3 84.6 49.3 136.5.1 117.9-95.5 213.5-213.4 213.5zM178.8 275l-11-21.4 1.7 24.5-23.7 3.9 23.8 5.9-3.7 23.8 13-20.9 21.5 10.8-15.8-18.8 16.9-17.1z"]
            },
            faTrello: {
                prefix: "fab",
                iconName: "trello",
                icon: [448, 512, [], "f181", "M392.3 32H56.1C25.1 32 0 57.1 0 88c-.1 0 0-4 0 336 0 30.9 25.1 56 56 56h336.2c30.8-.2 55.7-25.2 55.7-56V88c.1-30.8-24.8-55.8-55.6-56zM197 371.3c-.2 14.7-12.1 26.6-26.9 26.6H87.4c-14.8.1-26.9-11.8-27-26.6V117.1c0-14.8 12-26.9 26.9-26.9h82.9c14.8 0 26.9 12 26.9 26.9v254.2zm193.1-112c0 14.8-12 26.9-26.9 26.9h-81c-14.8 0-26.9-12-26.9-26.9V117.2c0-14.8 12-26.9 26.8-26.9h81.1c14.8 0 26.9 12 26.9 26.9v142.1z"]
            },
            faTripadvisor: {
                prefix: "fab",
                iconName: "tripadvisor",
                icon: [576, 512, [], "f262", "M528.91,178.82,576,127.58H471.66a326.11,326.11,0,0,0-367,0H0l47.09,51.24A143.911,143.911,0,0,0,241.86,390.73L288,440.93l46.11-50.17A143.94,143.94,0,0,0,575.88,285.18h-.03A143.56,143.56,0,0,0,528.91,178.82ZM144.06,382.57a97.39,97.39,0,1,1,97.39-97.39A97.39,97.39,0,0,1,144.06,382.57ZM288,282.37c0-64.09-46.62-119.08-108.09-142.59a281,281,0,0,1,216.17,0C334.61,163.3,288,218.29,288,282.37Zm143.88,100.2h-.01a97.405,97.405,0,1,1,.01,0ZM144.06,234.12h-.01a51.06,51.06,0,1,0,51.06,51.06v-.11A51,51,0,0,0,144.06,234.12Zm287.82,0a51.06,51.06,0,1,0,51.06,51.06A51.06,51.06,0,0,0,431.88,234.12Z"]
            },
            faTumblr: {
                prefix: "fab",
                iconName: "tumblr",
                icon: [320, 512, [], "f173", "M309.8 480.3c-13.6 14.5-50 31.7-97.4 31.7-120.8 0-147-88.8-147-140.6v-144H17.9c-5.5 0-10-4.5-10-10v-68c0-7.2 4.5-13.6 11.3-16 62-21.8 81.5-76 84.3-117.1.8-11 6.5-16.3 16.1-16.3h70.9c5.5 0 10 4.5 10 10v115.2h83c5.5 0 10 4.4 10 9.9v81.7c0 5.5-4.5 10-10 10h-83.4V360c0 34.2 23.7 53.6 68 35.8 4.8-1.9 9-3.2 12.7-2.2 3.5.9 5.8 3.4 7.4 7.9l22 64.3c1.8 5 3.3 10.6-.4 14.5z"]
            },
            faTumblrSquare: {
                prefix: "fab",
                iconName: "tumblr-square",
                icon: [448, 512, [], "f174", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-82.3 364.2c-8.5 9.1-31.2 19.8-60.9 19.8-75.5 0-91.9-55.5-91.9-87.9v-90h-29.7c-3.4 0-6.2-2.8-6.2-6.2v-42.5c0-4.5 2.8-8.5 7.1-10 38.8-13.7 50.9-47.5 52.7-73.2.5-6.9 4.1-10.2 10-10.2h44.3c3.4 0 6.2 2.8 6.2 6.2v72h51.9c3.4 0 6.2 2.8 6.2 6.2v51.1c0 3.4-2.8 6.2-6.2 6.2h-52.1V321c0 21.4 14.8 33.5 42.5 22.4 3-1.2 5.6-2 8-1.4 2.2.5 3.6 2.1 4.6 4.9l13.8 40.2c1 3.2 2 6.7-.3 9.1z"]
            },
            faTwitch: {
                prefix: "fab",
                iconName: "twitch",
                icon: [512, 512, [], "f1e8", "M391.17,103.47H352.54v109.7h38.63ZM285,103H246.37V212.75H285ZM120.83,0,24.31,91.42V420.58H140.14V512l96.53-91.42h77.25L487.69,256V0ZM449.07,237.75l-77.22,73.12H294.61l-67.6,64v-64H140.14V36.58H449.07Z"]
            },
            faTwitter: {
                prefix: "fab",
                iconName: "twitter",
                icon: [512, 512, [], "f099", "M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"]
            },
            faTwitterSquare: {
                prefix: "fab",
                iconName: "twitter-square",
                icon: [448, 512, [], "f081", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-48.9 158.8c.2 2.8.2 5.7.2 8.5 0 86.7-66 186.6-186.6 186.6-37.2 0-71.7-10.8-100.7-29.4 5.3.6 10.4.8 15.8.8 30.7 0 58.9-10.4 81.4-28-28.8-.6-53-19.5-61.3-45.5 10.1 1.5 19.2 1.5 29.6-1.2-30-6.1-52.5-32.5-52.5-64.4v-.8c8.7 4.9 18.9 7.9 29.6 8.3a65.447 65.447 0 0 1-29.2-54.6c0-12.2 3.2-23.4 8.9-33.1 32.3 39.8 80.8 65.8 135.2 68.6-9.3-44.5 24-80.6 64-80.6 18.9 0 35.9 7.9 47.9 20.7 14.8-2.8 29-8.3 41.6-15.8-4.9 15.2-15.2 28-28.8 36.1 13.2-1.4 26-5.1 37.8-10.2-8.9 13.1-20.1 24.7-32.9 34z"]
            },
            faTypo3: {
                prefix: "fab",
                iconName: "typo3",
                icon: [448, 512, [], "f42b", "M178.7 78.4c0-24.7 5.4-32.4 13.9-39.4-69.5 8.5-149.3 34-176.3 66.4-5.4 7.7-9.3 20.8-9.3 37.1C7 246 113.8 480 191.1 480c36.3 0 97.3-59.5 146.7-139-7 2.3-11.6 2.3-18.5 2.3-57.2 0-140.6-198.5-140.6-264.9zM301.5 32c-30.1 0-41.7 5.4-41.7 36.3 0 66.4 53.8 198.5 101.7 198.5 26.3 0 78.8-99.7 78.8-182.3 0-40.9-67-52.5-138.8-52.5z"]
            },
            faUber: {
                prefix: "fab",
                iconName: "uber",
                icon: [448, 512, [], "f402", "M414.1 32H33.9C15.2 32 0 47.2 0 65.9V446c0 18.8 15.2 34 33.9 34H414c18.7 0 33.9-15.2 33.9-33.9V65.9C448 47.2 432.8 32 414.1 32zM237.6 391.1C163 398.6 96.4 344.2 88.9 269.6h94.4V290c0 3.7 3 6.8 6.8 6.8H258c3.7 0 6.8-3 6.8-6.8v-67.9c0-3.7-3-6.8-6.8-6.8h-67.9c-3.7 0-6.8 3-6.8 6.8v20.4H88.9c7-69.4 65.4-122.2 135.1-122.2 69.7 0 128.1 52.8 135.1 122.2 7.5 74.5-46.9 141.1-121.5 148.6z"]
            },
            faUbuntu: {
                prefix: "fab",
                iconName: "ubuntu",
                icon: [496, 512, [], "f7df", "M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm52.7 93c8.8-15.2 28.3-20.5 43.5-11.7 15.3 8.8 20.5 28.3 11.7 43.6-8.8 15.2-28.3 20.5-43.5 11.7-15.3-8.9-20.5-28.4-11.7-43.6zM87.4 287.9c-17.6 0-31.9-14.3-31.9-31.9 0-17.6 14.3-31.9 31.9-31.9 17.6 0 31.9 14.3 31.9 31.9 0 17.6-14.3 31.9-31.9 31.9zm28.1 3.1c22.3-17.9 22.4-51.9 0-69.9 8.6-32.8 29.1-60.7 56.5-79.1l23.7 39.6c-51.5 36.3-51.5 112.5 0 148.8L172 370c-27.4-18.3-47.8-46.3-56.5-79zm228.7 131.7c-15.3 8.8-34.7 3.6-43.5-11.7-8.8-15.3-3.6-34.8 11.7-43.6 15.2-8.8 34.7-3.6 43.5 11.7 8.8 15.3 3.6 34.8-11.7 43.6zm.3-69.5c-26.7-10.3-56.1 6.6-60.5 35-5.2 1.4-48.9 14.3-96.7-9.4l22.5-40.3c57 26.5 123.4-11.7 128.9-74.4l46.1.7c-2.3 34.5-17.3 65.5-40.3 88.4zm-5.9-105.3c-5.4-62-71.3-101.2-128.9-74.4l-22.5-40.3c47.9-23.7 91.5-10.8 96.7-9.4 4.4 28.3 33.8 45.3 60.5 35 23.1 22.9 38 53.9 40.2 88.5l-46 .6z"]
            },
            faUikit: {
                prefix: "fab",
                iconName: "uikit",
                icon: [448, 512, [], "f403", "M443.9 128v256L218 512 0 384V169.7l87.6 45.1v117l133.5 75.5 135.8-75.5v-151l-101.1-57.6 87.6-53.1L443.9 128zM308.6 49.1L223.8 0l-88.6 54.8 86 47.3 87.4-53z"]
            },
            faUmbraco: {
                prefix: "fab",
                iconName: "umbraco",
                icon: [510, 512, [], "f8e8", "M255.35 8C118.36 7.83 7.14 118.72 7 255.68c-.07 137 111 248.2 248 248.27 136.85 0 247.82-110.7 248-247.67S392.34 8.17 255.35 8zm145 266q-1.14 40.68-14 65t-43.51 35q-30.61 10.7-85.45 10.47h-4.6q-54.78.22-85.44-10.47t-43.52-35q-12.85-24.36-14-65a224.81 224.81 0 0 1 0-30.71 418.37 418.37 0 0 1 3.6-43.88c1.88-13.39 3.57-22.58 5.4-32 1-4.88 1.28-6.42 1.82-8.45a5.09 5.09 0 0 1 4.9-3.89h.69l32 5a5.07 5.07 0 0 1 4.16 5 5 5 0 0 1 0 .77l-1.7 8.78q-2.41 13.25-4.84 33.68a380.62 380.62 0 0 0-2.64 42.15q-.28 40.43 8.13 59.83a43.87 43.87 0 0 0 31.31 25.18A243 243 0 0 0 250 340.6h10.25a242.64 242.64 0 0 0 57.27-5.16 43.86 43.86 0 0 0 31.15-25.23q8.53-19.42 8.13-59.78a388 388 0 0 0-2.6-42.15q-2.48-20.38-4.89-33.68l-1.69-8.78a5 5 0 0 1 0-.77 5 5 0 0 1 4.2-5l32-5h.82a5 5 0 0 1 4.9 3.89c.55 2.05.81 3.57 1.83 8.45 1.82 9.62 3.52 18.78 5.39 32a415.71 415.71 0 0 1 3.61 43.88 228.06 228.06 0 0 1-.04 30.73z"]
            },
            faUncharted: {
                prefix: "fab",
                iconName: "uncharted",
                icon: [448, 512, [], "e084", "M171.73,232.813A5.381,5.381,0,0,0,176.7,229.5,48.081,48.081,0,0,1,191.6,204.244c1.243-.828,1.657-2.484,1.657-4.141a4.22,4.22,0,0,0-2.071-3.312L74.429,128.473,148.958,85a9.941,9.941,0,0,0,4.968-8.281,9.108,9.108,0,0,0-4.968-8.281L126.6,55.6a9.748,9.748,0,0,0-9.523,0l-100.2,57.966a9.943,9.943,0,0,0-4.969,8.281V236.954a9.109,9.109,0,0,0,4.969,8.281L39.235,258.07a8.829,8.829,0,0,0,4.968,1.242,9.4,9.4,0,0,0,6.625-2.484,10.8,10.8,0,0,0,2.9-7.039V164.5L169.66,232.4A4.5,4.5,0,0,0,171.73,232.813ZM323.272,377.73a12.478,12.478,0,0,0-4.969,1.242l-74.528,43.062V287.882c0-2.9-2.9-5.8-6.211-4.555a53.036,53.036,0,0,1-28.984.414,4.86,4.86,0,0,0-6.21,4.555V421.619l-74.529-43.061a8.83,8.83,0,0,0-4.969-1.242,9.631,9.631,0,0,0-9.523,9.523v26.085a9.107,9.107,0,0,0,4.969,8.281l100.2,57.553A8.829,8.829,0,0,0,223.486,480a11.027,11.027,0,0,0,4.969-1.242l100.2-57.553a9.941,9.941,0,0,0,4.968-8.281V386.839C332.8,382.285,328.24,377.73,323.272,377.73ZM286.007,78a23,23,0,1,0-23-23A23,23,0,0,0,286.007,78Zm63.627-10.086a23,23,0,1,0,23,23A23,23,0,0,0,349.634,67.914ZM412.816,151.6a23,23,0,1,0-23-23A23,23,0,0,0,412.816,151.6Zm-63.182-9.2a23,23,0,1,0,23,23A23,23,0,0,0,349.634,142.4Zm-63.627,83.244a23,23,0,1,0-23-23A23,23,0,0,0,286.007,225.648Zm-62.074,36.358a23,23,0,1,0-23-23A23,23,0,0,0,223.933,262.006Zm188.883-82.358a23,23,0,1,0,23,23A23,23,0,0,0,412.816,179.648Zm0,72.272a23,23,0,1,0,23,23A23,23,0,0,0,412.816,251.92Z"]
            },
            faUniregistry: {
                prefix: "fab",
                iconName: "uniregistry",
                icon: [384, 512, [], "f404", "M192 480c39.5 0 76.2-11.8 106.8-32.2H85.3C115.8 468.2 152.5 480 192 480zm-89.1-193.1v-12.4H0v12.4c0 2.5 0 5 .1 7.4h103.1c-.2-2.4-.3-4.9-.3-7.4zm20.5 57H8.5c2.6 8.5 5.8 16.8 9.6 24.8h138.3c-12.9-5.7-24.1-14.2-33-24.8zm-17.7-34.7H1.3c.9 7.6 2.2 15 3.9 22.3h109.7c-4-6.9-7.2-14.4-9.2-22.3zm-2.8-69.3H0v17.3h102.9zm0-173.2H0v4.9h102.9zm0-34.7H0v2.5h102.9zm0 69.3H0v7.4h102.9zm0 104H0v14.8h102.9zm0-69.3H0v9.9h102.9zm0 34.6H0V183h102.9zm166.2 160.9h109.7c1.8-7.3 3.1-14.7 3.9-22.3H278.3c-2.1 7.9-5.2 15.4-9.2 22.3zm12-185.7H384V136H281.1zm0 37.2H384v-12.4H281.1zm0-74.3H384v-7.4H281.1zm0-76.7v2.5H384V32zm-203 410.9h227.7c11.8-8.7 22.7-18.6 32.2-29.7H44.9c9.6 11 21.4 21 33.2 29.7zm203-371.3H384v-4.9H281.1zm0 148.5H384v-14.8H281.1zM38.8 405.7h305.3c6.7-8.5 12.6-17.6 17.8-27.2H23c5.2 9.6 9.2 18.7 15.8 27.2zm188.8-37.1H367c3.7-8 5.8-16.2 8.5-24.8h-115c-8.8 10.7-20.1 19.2-32.9 24.8zm53.5-81.7c0 2.5-.1 5-.4 7.4h103.1c.1-2.5.2-4.9.2-7.4v-12.4H281.1zm0-29.7H384v-17.3H281.1z"]
            },
            faUnity: {
                prefix: "fab",
                iconName: "unity",
                icon: [576, 512, [], "e049", "M498.11,206.4,445.31,14.72,248.2,66.08,219,116.14l-59.2-.43L15.54,256,159.82,396.32l59.17-.43,29.24,50,197.08,51.36,52.8-191.62-30-49.63ZM223.77,124.2,374.55,86.51,288,232.33H114.87Zm0,263.63L114.87,279.71H288l86.55,145.81Zm193,14L330.17,256l86.58-145.84L458.56,256Z"]
            },
            faUnsplash: {
                prefix: "fab",
                iconName: "unsplash",
                icon: [448, 512, [], "e07c", "M448,230.17V480H0V230.17H141.13V355.09H306.87V230.17ZM306.87,32H141.13V156.91H306.87Z"]
            },
            faUntappd: {
                prefix: "fab",
                iconName: "untappd",
                icon: [640, 512, [], "f405", "M401.3 49.9c-79.8 160.1-84.6 152.5-87.9 173.2l-5.2 32.8c-1.9 12-6.6 23.5-13.7 33.4L145.6 497.1c-7.6 10.6-20.4 16.2-33.4 14.6-40.3-5-77.8-32.2-95.3-68.5-5.7-11.8-4.5-25.8 3.1-36.4l148.9-207.9c7.1-9.9 16.4-18 27.2-23.7l29.3-15.5c18.5-9.8 9.7-11.9 135.6-138.9 1-4.8 1-7.3 3.6-8 3-.7 6.6-1 6.3-4.6l-.4-4.6c-.2-1.9 1.3-3.6 3.2-3.6 4.5-.1 13.2 1.2 25.6 10 12.3 8.9 16.4 16.8 17.7 21.1.6 1.8-.6 3.7-2.4 4.2l-4.5 1.1c-3.4.9-2.5 4.4-2.3 7.4.1 2.8-2.3 3.6-6.5 6.1zM230.1 36.4c3.4.9 2.5 4.4 2.3 7.4-.2 2.7 2.1 3.5 6.4 6 7.9 15.9 15.3 30.5 22.2 44 .7 1.3 2.3 1.5 3.3.5 11.2-12 24.6-26.2 40.5-42.6 1.3-1.4 1.4-3.5.1-4.9-8-8.2-16.5-16.9-25.6-26.1-1-4.7-1-7.3-3.6-8-3-.8-6.6-1-6.3-4.6.3-3.3 1.4-8.1-2.8-8.2-4.5-.1-13.2 1.1-25.6 10-12.3 8.9-16.4 16.8-17.7 21.1-1.4 4.2 3.6 4.6 6.8 5.4zM620 406.7L471.2 198.8c-13.2-18.5-26.6-23.4-56.4-39.1-11.2-5.9-14.2-10.9-30.5-28.9-1-1.1-2.9-.9-3.6.5-46.3 88.8-47.1 82.8-49 94.8-1.7 10.7-1.3 20 .3 29.8 1.9 12 6.6 23.5 13.7 33.4l148.9 207.9c7.6 10.6 20.2 16.2 33.1 14.7 40.3-4.9 78-32 95.7-68.6 5.4-11.9 4.3-25.9-3.4-36.6z"]
            },
            faUps: {
                prefix: "fab",
                iconName: "ups",
                icon: [384, 512, [], "f7e0", "M103.2 303c-5.2 3.6-32.6 13.1-32.6-19V180H37.9v102.6c0 74.9 80.2 51.1 97.9 39V180h-32.6zM4 74.82v220.9c0 103.7 74.9 135.2 187.7 184.1 112.4-48.9 187.7-80.2 187.7-184.1V74.82c-116.3-61.6-281.8-49.6-375.4 0zm358.1 220.9c0 86.6-53.2 113.6-170.4 165.3-117.5-51.8-170.5-78.7-170.5-165.3v-126.4c102.3-93.8 231.6-100 340.9-89.8zm-209.6-107.4v212.8h32.7v-68.7c24.4 7.3 71.7-2.6 71.7-78.5 0-97.4-80.7-80.92-104.4-65.6zm32.7 117.3v-100.3c8.4-4.2 38.4-12.7 38.4 49.3 0 67.9-36.4 51.8-38.4 51zm79.1-86.4c.1 47.3 51.6 42.5 52.2 70.4.6 23.5-30.4 23-50.8 4.9v30.1c36.2 21.5 81.9 8.1 83.2-33.5 1.7-51.5-54.1-46.6-53.4-73.2.6-20.3 30.6-20.5 48.5-2.2v-28.4c-28.5-22-79.9-9.2-79.7 31.9z"]
            },
            faUsb: {
                prefix: "fab",
                iconName: "usb",
                icon: [640, 512, [], "f287", "M641.5 256c0 3.1-1.7 6.1-4.5 7.5L547.9 317c-1.4.8-2.8 1.4-4.5 1.4-1.4 0-3.1-.3-4.5-1.1-2.8-1.7-4.5-4.5-4.5-7.8v-35.6H295.7c25.3 39.6 40.5 106.9 69.6 106.9H392V354c0-5 3.9-8.9 8.9-8.9H490c5 0 8.9 3.9 8.9 8.9v89.1c0 5-3.9 8.9-8.9 8.9h-89.1c-5 0-8.9-3.9-8.9-8.9v-26.7h-26.7c-75.4 0-81.1-142.5-124.7-142.5H140.3c-8.1 30.6-35.9 53.5-69 53.5C32 327.3 0 295.3 0 256s32-71.3 71.3-71.3c33.1 0 61 22.8 69 53.5 39.1 0 43.9 9.5 74.6-60.4C255 88.7 273 95.7 323.8 95.7c7.5-20.9 27-35.6 50.4-35.6 29.5 0 53.5 23.9 53.5 53.5s-23.9 53.5-53.5 53.5c-23.4 0-42.9-14.8-50.4-35.6H294c-29.1 0-44.3 67.4-69.6 106.9h310.1v-35.6c0-3.3 1.7-6.1 4.5-7.8 2.8-1.7 6.4-1.4 8.9.3l89.1 53.5c2.8 1.1 4.5 4.1 4.5 7.2z"]
            },
            faUsps: {
                prefix: "fab",
                iconName: "usps",
                icon: [576, 512, [], "f7e1", "M460.3 241.7c25.8-41.3 15.2-48.8-11.7-48.8h-27c-.1 0-1.5-1.4-10.9 8-11.2 5.6-37.9 6.3-37.9 8.7 0 4.5 70.3-3.1 88.1 0 9.5 1.5-1.5 20.4-4.4 32-.5 4.5 2.4 2.3 3.8.1zm-112.1 22.6c64-21.3 97.3-23.9 102-26.2 4.4-2.9-4.4-6.6-26.2-5.8-51.7 2.2-137.6 37.1-172.6 53.9l-30.7-93.3h196.6c-2.7-28.2-152.9-22.6-337.9-22.6L27 415.8c196.4-97.3 258.9-130.3 321.2-151.5zM94.7 96c253.3 53.7 330 65.7 332.1 85.2 36.4 0 45.9 0 52.4 6.6 21.1 19.7-14.6 67.7-14.6 67.7-4.4 2.9-406.4 160.2-406.4 160.2h423.1L549 96z"]
            },
            faUssunnah: {
                prefix: "fab",
                iconName: "ussunnah",
                icon: [512, 512, [], "f407", "M156.8 285.1l5.7 14.4h-8.2c-1.3-3.2-3.1-7.7-3.8-9.5-2.5-6.3-1.1-8.4 0-10 1.9-2.7 3.2-4.4 3.6-5.2 0 2.2.8 5.7 2.7 10.3zm297.3 18.8c-2.1 13.8-5.7 27.1-10.5 39.7l43 23.4-44.8-18.8c-5.3 13.2-12 25.6-19.9 37.2l34.2 30.2-36.8-26.4c-8.4 11.8-18 22.6-28.7 32.3l24.9 34.7-28.1-31.8c-11 9.6-23.1 18-36.1 25.1l15.7 37.2-19.3-35.3c-13.1 6.8-27 12.1-41.6 15.9l6.7 38.4-10.5-37.4c-14.3 3.4-29.2 5.3-44.5 5.4L256 512l-1.9-38.4c-15.3-.1-30.2-2-44.5-5.3L199 505.6l6.7-38.2c-14.6-3.7-28.6-9.1-41.7-15.8l-19.2 35.1 15.6-37c-13-7-25.2-15.4-36.2-25.1l-27.9 31.6 24.7-34.4c-10.7-9.7-20.4-20.5-28.8-32.3l-36.5 26.2 33.9-29.9c-7.9-11.6-14.6-24.1-20-37.3l-44.4 18.7L67.8 344c-4.8-12.7-8.4-26.1-10.5-39.9l-51 9 50.3-14.2c-1.1-8.5-1.7-17.1-1.7-25.9 0-4.7.2-9.4.5-14.1L0 256l56-2.8c1.3-13.1 3.8-25.8 7.5-38.1L6.4 199l58.9 10.4c4-12 9.1-23.5 15.2-34.4l-55.1-30 58.3 24.6C90 159 97.2 149.2 105.3 140L55.8 96.4l53.9 38.7c8.1-8.6 17-16.5 26.6-23.6l-40-55.6 45.6 51.6c9.5-6.6 19.7-12.3 30.3-17.2l-27.3-64.9 33.8 62.1c10.5-4.4 21.4-7.9 32.7-10.4L199 6.4l19.5 69.2c11-2.1 22.3-3.2 33.8-3.4L256 0l3.6 72.2c11.5.2 22.8 1.4 33.8 3.5L313 6.4l-12.4 70.7c11.3 2.6 22.2 6.1 32.6 10.5l33.9-62.2-27.4 65.1c10.6 4.9 20.7 10.7 30.2 17.2l45.8-51.8-40.1 55.9c9.5 7.1 18.4 15 26.5 23.6l54.2-38.9-49.7 43.9c8 9.1 15.2 18.9 21.5 29.4l58.7-24.7-55.5 30.2c6.1 10.9 11.1 22.3 15.1 34.3l59.3-10.4-57.5 16.2c3.7 12.2 6.2 24.9 7.5 37.9L512 256l-56 2.8c.3 4.6.5 9.3.5 14.1 0 8.7-.6 17.3-1.6 25.8l50.7 14.3-51.5-9.1zm-21.8-31c0-97.5-79-176.5-176.5-176.5s-176.5 79-176.5 176.5 79 176.5 176.5 176.5 176.5-79 176.5-176.5zm-24 0c0 84.3-68.3 152.6-152.6 152.6s-152.6-68.3-152.6-152.6 68.3-152.6 152.6-152.6 152.6 68.3 152.6 152.6zM195 241c0 2.1 1.3 3.8 3.6 5.1 3.3 1.9 6.2 4.6 8.2 8.2 2.8-5.7 4.3-9.5 4.3-11.2 0-2.2-1.1-4.4-3.2-7-2.1-2.5-3.2-5.2-3.3-7.7-6.5 6.8-9.6 10.9-9.6 12.6zm-40.7-19c0 2.1 1.3 3.8 3.6 5.1 3.5 1.9 6.2 4.6 8.2 8.2 2.8-5.7 4.3-9.5 4.3-11.2 0-2.2-1.1-4.4-3.2-7-2.1-2.5-3.2-5.2-3.3-7.7-6.5 6.8-9.6 10.9-9.6 12.6zm-19 0c0 2.1 1.3 3.8 3.6 5.1 3.3 1.9 6.2 4.6 8.2 8.2 2.8-5.7 4.3-9.5 4.3-11.2 0-2.2-1.1-4.4-3.2-7-2.1-2.5-3.2-5.2-3.3-7.7-6.4 6.8-9.6 10.9-9.6 12.6zm204.9 87.9c-8.4-3-8.7-6.8-8.7-15.6V182c-8.2 12.5-14.2 18.6-18 18.6 6.3 14.4 9.5 23.9 9.5 28.3v64.3c0 2.2-2.2 6.5-4.7 6.5h-18c-2.8-7.5-10.2-26.9-15.3-40.3-2 2.5-7.2 9.2-10.7 13.7 2.4 1.6 4.1 3.6 5.2 6.3 2.6 6.7 6.4 16.5 7.9 20.2h-9.2c-3.9-10.4-9.6-25.4-11.8-31.1-2 2.5-7.2 9.2-10.7 13.7 2.4 1.6 4.1 3.6 5.2 6.3.8 2 2.8 7.3 4.3 10.9H256c-1.5-4.1-5.6-14.6-8.4-22-2 2.5-7.2 9.2-10.7 13.7 2.5 1.6 4.3 3.6 5.2 6.3.2.6.5 1.4.6 1.7H225c-4.6-13.9-11.4-27.7-11.4-34.1 0-2.2.3-5.1 1.1-8.2-8.8 10.8-14 15.9-14 25 0 7.5 10.4 28.3 10.4 33.3 0 1.7-.5 3.3-1.4 4.9-9.6-12.7-15.5-20.7-18.8-20.7h-12l-11.2-28c-3.8-9.6-5.7-16-5.7-18.8 0-3.8.5-7.7 1.7-12.2-1 1.3-3.7 4.7-5.5 7.1-.8-2.1-3.1-7.7-4.6-11.5-2.1 2.5-7.5 9.1-11.2 13.6.9 2.3 3.3 8.1 4.9 12.2-2.5 3.3-9.1 11.8-13.6 17.7-4 5.3-5.8 13.3-2.7 21.8 2.5 6.7 2 7.9-1.7 14.1H191c5.5 0 14.3 14 15.5 22 13.2-16 15.4-19.6 16.8-21.6h107c3.9 0 7.2-1.9 9.9-5.8zm20.1-26.6V181.7c-9 12.5-15.9 18.6-20.7 18.6 7.1 14.4 10.7 23.9 10.7 28.3v66.3c0 17.5 8.6 20.4 24 20.4 8.1 0 12.5-.8 13.7-2.7-4.3-1.6-7.6-2.5-9.9-3.3-8.1-3.2-17.8-7.4-17.8-26z"]
            },
            faVaadin: {
                prefix: "fab",
                iconName: "vaadin",
                icon: [448, 512, [], "f408", "M224.5 140.7c1.5-17.6 4.9-52.7 49.8-52.7h98.6c20.7 0 32.1-7.8 32.1-21.6V54.1c0-12.2 9.3-22.1 21.5-22.1S448 41.9 448 54.1v36.5c0 42.9-21.5 62-66.8 62H280.7c-30.1 0-33 14.7-33 27.1 0 1.3-.1 2.5-.2 3.7-.7 12.3-10.9 22.2-23.4 22.2s-22.7-9.8-23.4-22.2c-.1-1.2-.2-2.4-.2-3.7 0-12.3-3-27.1-33-27.1H66.8c-45.3 0-66.8-19.1-66.8-62V54.1C0 41.9 9.4 32 21.6 32s21.5 9.9 21.5 22.1v12.3C43.1 80.2 54.5 88 75.2 88h98.6c44.8 0 48.3 35.1 49.8 52.7h.9zM224 456c11.5 0 21.4-7 25.7-16.3 1.1-1.8 97.1-169.6 98.2-171.4 11.9-19.6-3.2-44.3-27.2-44.3-13.9 0-23.3 6.4-29.8 20.3L224 362l-66.9-117.7c-6.4-13.9-15.9-20.3-29.8-20.3-24 0-39.1 24.6-27.2 44.3 1.1 1.9 97.1 169.6 98.2 171.4 4.3 9.3 14.2 16.3 25.7 16.3z"]
            },
            faViacoin: {
                prefix: "fab",
                iconName: "viacoin",
                icon: [384, 512, [], "f237", "M384 32h-64l-80.7 192h-94.5L64 32H0l48 112H0v48h68.5l13.8 32H0v48h102.8L192 480l89.2-208H384v-48h-82.3l13.8-32H384v-48h-48l48-112zM192 336l-27-64h54l-27 64z"]
            },
            faViadeo: {
                prefix: "fab",
                iconName: "viadeo",
                icon: [448, 512, [], "f2a9", "M276.2 150.5v.7C258.3 98.6 233.6 47.8 205.4 0c43.3 29.2 67 100 70.8 150.5zm32.7 121.7c7.6 18.2 11 37.5 11 57 0 77.7-57.8 141-137.8 139.4l3.8-.3c74.2-46.7 109.3-118.6 109.3-205.1 0-38.1-6.5-75.9-18.9-112 1 11.7 1 23.7 1 35.4 0 91.8-18.1 241.6-116.6 280C95 455.2 49.4 398 49.4 329.2c0-75.6 57.4-142.3 135.4-142.3 16.8 0 33.7 3.1 49.1 9.6 1.7-15.1 6.5-29.9 13.4-43.3-19.9-7.2-41.2-10.7-62.5-10.7-161.5 0-238.7 195.9-129.9 313.7 67.9 74.6 192 73.9 259.8 0 56.6-61.3 60.9-142.4 36.4-201-12.7 8-27.1 13.9-42.2 17zM418.1 11.7c-31 66.5-81.3 47.2-115.8 80.1-12.4 12-20.6 34-20.6 50.5 0 14.1 4.5 27.1 12 38.8 47.4-11 98.3-46 118.2-90.7-.7 5.5-4.8 14.4-7.2 19.2-20.3 35.7-64.6 65.6-99.7 84.9 14.8 14.4 33.7 25.8 55 25.8 79 0 110.1-134.6 58.1-208.6z"]
            },
            faViadeoSquare: {
                prefix: "fab",
                iconName: "viadeo-square",
                icon: [448, 512, [], "f2aa", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM280.7 381.2c-42.4 46.2-120 46.6-162.4 0-68-73.6-19.8-196.1 81.2-196.1 13.3 0 26.6 2.1 39.1 6.7-4.3 8.4-7.3 17.6-8.4 27.1-9.7-4.1-20.2-6-30.7-6-48.8 0-84.6 41.7-84.6 88.9 0 43 28.5 78.7 69.5 85.9 61.5-24 72.9-117.6 72.9-175 0-7.3 0-14.8-.6-22.1-11.2-32.9-26.6-64.6-44.2-94.5 27.1 18.3 41.9 62.5 44.2 94.1v.4c7.7 22.5 11.8 46.2 11.8 70 0 54.1-21.9 99-68.3 128.2l-2.4.2c50 1 86.2-38.6 86.2-87.2 0-12.2-2.1-24.3-6.9-35.7 9.5-1.9 18.5-5.6 26.4-10.5 15.3 36.6 12.6 87.3-22.8 125.6zM309 233.7c-13.3 0-25.1-7.1-34.4-16.1 21.9-12 49.6-30.7 62.3-53 1.5-3 4.1-8.6 4.5-12-12.5 27.9-44.2 49.8-73.9 56.7-4.7-7.3-7.5-15.5-7.5-24.3 0-10.3 5.2-24.1 12.9-31.6 21.6-20.5 53-8.5 72.4-50 32.5 46.2 13.1 130.3-36.3 130.3z"]
            },
            faViber: {
                prefix: "fab",
                iconName: "viber",
                icon: [512, 512, [], "f409", "M444 49.9C431.3 38.2 379.9.9 265.3.4c0 0-135.1-8.1-200.9 52.3C27.8 89.3 14.9 143 13.5 209.5c-1.4 66.5-3.1 191.1 117 224.9h.1l-.1 51.6s-.8 20.9 13 25.1c16.6 5.2 26.4-10.7 42.3-27.8 8.7-9.4 20.7-23.2 29.8-33.7 82.2 6.9 145.3-8.9 152.5-11.2 16.6-5.4 110.5-17.4 125.7-142 15.8-128.6-7.6-209.8-49.8-246.5zM457.9 287c-12.9 104-89 110.6-103 115.1-6 1.9-61.5 15.7-131.2 11.2 0 0-52 62.7-68.2 79-5.3 5.3-11.1 4.8-11-5.7 0-6.9.4-85.7.4-85.7-.1 0-.1 0 0 0-101.8-28.2-95.8-134.3-94.7-189.8 1.1-55.5 11.6-101 42.6-131.6 55.7-50.5 170.4-43 170.4-43 96.9.4 143.3 29.6 154.1 39.4 35.7 30.6 53.9 103.8 40.6 211.1zm-139-80.8c.4 8.6-12.5 9.2-12.9.6-1.1-22-11.4-32.7-32.6-33.9-8.6-.5-7.8-13.4.7-12.9 27.9 1.5 43.4 17.5 44.8 46.2zm20.3 11.3c1-42.4-25.5-75.6-75.8-79.3-8.5-.6-7.6-13.5.9-12.9 58 4.2 88.9 44.1 87.8 92.5-.1 8.6-13.1 8.2-12.9-.3zm47 13.4c.1 8.6-12.9 8.7-12.9.1-.6-81.5-54.9-125.9-120.8-126.4-8.5-.1-8.5-12.9 0-12.9 73.7.5 133 51.4 133.7 139.2zM374.9 329v.2c-10.8 19-31 40-51.8 33.3l-.2-.3c-21.1-5.9-70.8-31.5-102.2-56.5-16.2-12.8-31-27.9-42.4-42.4-10.3-12.9-20.7-28.2-30.8-46.6-21.3-38.5-26-55.7-26-55.7-6.7-20.8 14.2-41 33.3-51.8h.2c9.2-4.8 18-3.2 23.9 3.9 0 0 12.4 14.8 17.7 22.1 5 6.8 11.7 17.7 15.2 23.8 6.1 10.9 2.3 22-3.7 26.6l-12 9.6c-6.1 4.9-5.3 14-5.3 14s17.8 67.3 84.3 84.3c0 0 9.1.8 14-5.3l9.6-12c4.6-6 15.7-9.8 26.6-3.7 14.7 8.3 33.4 21.2 45.8 32.9 7 5.7 8.6 14.4 3.8 23.6z"]
            },
            faVimeo: {
                prefix: "fab",
                iconName: "vimeo",
                icon: [448, 512, [], "f40a", "M403.2 32H44.8C20.1 32 0 52.1 0 76.8v358.4C0 459.9 20.1 480 44.8 480h358.4c24.7 0 44.8-20.1 44.8-44.8V76.8c0-24.7-20.1-44.8-44.8-44.8zM377 180.8c-1.4 31.5-23.4 74.7-66 129.4-44 57.2-81.3 85.8-111.7 85.8-18.9 0-34.8-17.4-47.9-52.3-25.5-93.3-36.4-148-57.4-148-2.4 0-10.9 5.1-25.4 15.2l-15.2-19.6c37.3-32.8 72.9-69.2 95.2-71.2 25.2-2.4 40.7 14.8 46.5 51.7 20.7 131.2 29.9 151 67.6 91.6 13.5-21.4 20.8-37.7 21.8-48.9 3.5-33.2-25.9-30.9-45.8-22.4 15.9-52.1 46.3-77.4 91.2-76 33.3.9 49 22.5 47.1 64.7z"]
            },
            faVimeoSquare: {
                prefix: "fab",
                iconName: "vimeo-square",
                icon: [448, 512, [], "f194", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-16.2 149.6c-1.4 31.1-23.2 73.8-65.3 127.9-43.5 56.5-80.3 84.8-110.4 84.8-18.7 0-34.4-17.2-47.3-51.6-25.2-92.3-35.9-146.4-56.7-146.4-2.4 0-10.8 5-25.1 15.1L64 192c36.9-32.4 72.1-68.4 94.1-70.4 24.9-2.4 40.2 14.6 46 51.1 20.5 129.6 29.6 149.2 66.8 90.5 13.4-21.2 20.6-37.2 21.5-48.3 3.4-32.8-25.6-30.6-45.2-22.2 15.7-51.5 45.8-76.5 90.1-75.1 32.9 1 48.4 22.4 46.5 64z"]
            },
            faVimeoV: {
                prefix: "fab",
                iconName: "vimeo-v",
                icon: [448, 512, [], "f27d", "M447.8 153.6c-2 43.6-32.4 103.3-91.4 179.1-60.9 79.2-112.4 118.8-154.6 118.8-26.1 0-48.2-24.1-66.3-72.3C100.3 250 85.3 174.3 56.2 174.3c-3.4 0-15.1 7.1-35.2 21.1L0 168.2c51.6-45.3 100.9-95.7 131.8-98.5 34.9-3.4 56.3 20.5 64.4 71.5 28.7 181.5 41.4 208.9 93.6 126.7 18.7-29.6 28.8-52.1 30.2-67.6 4.8-45.9-35.8-42.8-63.3-31 22-72.1 64.1-107.1 126.2-105.1 45.8 1.2 67.5 31.1 64.9 89.4z"]
            },
            faVine: {
                prefix: "fab",
                iconName: "vine",
                icon: [384, 512, [], "f1ca", "M384 254.7v52.1c-18.4 4.2-36.9 6.1-52.1 6.1-36.9 77.4-103 143.8-125.1 156.2-14 7.9-27.1 8.4-42.7-.8C137 452 34.2 367.7 0 102.7h74.5C93.2 261.8 139 343.4 189.3 404.5c27.9-27.9 54.8-65.1 75.6-106.9-49.8-25.3-80.1-80.9-80.1-145.6 0-65.6 37.7-115.1 102.2-115.1 114.9 0 106.2 127.9 81.6 181.5 0 0-46.4 9.2-63.5-20.5 3.4-11.3 8.2-30.8 8.2-48.5 0-31.3-11.3-46.6-28.4-46.6-18.2 0-30.8 17.1-30.8 50 .1 79.2 59.4 118.7 129.9 101.9z"]
            },
            faVk: {
                prefix: "fab",
                iconName: "vk",
                icon: [576, 512, [], "f189", "M545 117.7c3.7-12.5 0-21.7-17.8-21.7h-58.9c-15 0-21.9 7.9-25.6 16.7 0 0-30 73.1-72.4 120.5-13.7 13.7-20 18.1-27.5 18.1-3.7 0-9.4-4.4-9.4-16.9V117.7c0-15-4.2-21.7-16.6-21.7h-92.6c-9.4 0-15 7-15 13.5 0 14.2 21.2 17.5 23.4 57.5v86.8c0 19-3.4 22.5-10.9 22.5-20 0-68.6-73.4-97.4-157.4-5.8-16.3-11.5-22.9-26.6-22.9H38.8c-16.8 0-20.2 7.9-20.2 16.7 0 15.6 20 93.1 93.1 195.5C160.4 378.1 229 416 291.4 416c37.5 0 42.1-8.4 42.1-22.9 0-66.8-3.4-73.1 15.4-73.1 8.7 0 23.7 4.4 58.7 38.1 40 40 46.6 57.9 69 57.9h58.9c16.8 0 25.3-8.4 20.4-25-11.2-34.9-86.9-106.7-90.3-111.5-8.7-11.2-6.2-16.2 0-26.2.1-.1 72-101.3 79.4-135.6z"]
            },
            faVnv: {
                prefix: "fab",
                iconName: "vnv",
                icon: [640, 512, [], "f40b", "M104.9 352c-34.1 0-46.4-30.4-46.4-30.4L2.6 210.1S-7.8 192 13 192h32.8c10.4 0 13.2 8.7 18.8 18.1l36.7 74.5s5.2 13.1 21.1 13.1 21.1-13.1 21.1-13.1l36.7-74.5c5.6-9.5 8.4-18.1 18.8-18.1h32.8c20.8 0 10.4 18.1 10.4 18.1l-55.8 111.5S174.2 352 140 352h-35.1zm395 0c-34.1 0-46.4-30.4-46.4-30.4l-55.9-111.5S387.2 192 408 192h32.8c10.4 0 13.2 8.7 18.8 18.1l36.7 74.5s5.2 13.1 21.1 13.1 21.1-13.1 21.1-13.1l36.8-74.5c5.6-9.5 8.4-18.1 18.8-18.1H627c20.8 0 10.4 18.1 10.4 18.1l-55.9 111.5S569.3 352 535.1 352h-35.2zM337.6 192c34.1 0 46.4 30.4 46.4 30.4l55.9 111.5s10.4 18.1-10.4 18.1h-32.8c-10.4 0-13.2-8.7-18.8-18.1l-36.7-74.5s-5.2-13.1-21.1-13.1c-15.9 0-21.1 13.1-21.1 13.1l-36.7 74.5c-5.6 9.4-8.4 18.1-18.8 18.1h-32.9c-20.8 0-10.4-18.1-10.4-18.1l55.9-111.5s12.2-30.4 46.4-30.4h35.1z"]
            },
            faVuejs: {
                prefix: "fab",
                iconName: "vuejs",
                icon: [448, 512, [], "f41f", "M356.9 64.3H280l-56 88.6-48-88.6H0L224 448 448 64.3h-91.1zm-301.2 32h53.8L224 294.5 338.4 96.3h53.8L224 384.5 55.7 96.3z"]
            },
            faWatchmanMonitoring: {
                prefix: "fab",
                iconName: "watchman-monitoring",
                icon: [512, 512, [], "e087", "M256,16C123.452,16,16,123.452,16,256S123.452,496,256,496,496,388.548,496,256,388.548,16,256,16ZM121.69,429.122C70.056,388.972,36.741,326.322,36.741,256a218.519,218.519,0,0,1,9.587-64.122l102.9-17.895-.121,10.967-13.943,2.013s-.144,12.5-.144,19.549a12.778,12.778,0,0,0,4.887,10.349l9.468,7.4Zm105.692-283.27,8.48-7.618s6.934-5.38-.143-9.344c-7.188-4.024-39.53-34.5-39.53-34.5-5.348-5.477-8.257-7.347-15.46,0,0,0-32.342,30.474-39.529,34.5-7.078,3.964-.144,9.344-.144,9.344l8.481,7.618-.048,4.369L75.982,131.045c39.644-56.938,105.532-94.3,180.018-94.3A218.754,218.754,0,0,1,420.934,111.77l-193.512,37.7Zm34.063,329.269-33.9-250.857,9.467-7.4a12.778,12.778,0,0,0,4.888-10.349c0-7.044-.144-19.549-.144-19.549l-13.943-2.013-.116-10.474,241.711,31.391A218.872,218.872,0,0,1,475.259,256C475.259,375.074,379.831,472.212,261.445,475.121Z"]
            },
            faWaze: {
                prefix: "fab",
                iconName: "waze",
                icon: [512, 512, [], "f83f", "M502.17 201.67C516.69 287.53 471.23 369.59 389 409.8c13 34.1-12.4 70.2-48.32 70.2a51.68 51.68 0 0 1-51.57-49c-6.44.19-64.2 0-76.33-.64A51.69 51.69 0 0 1 159 479.92c-33.86-1.36-57.95-34.84-47-67.92-37.21-13.11-72.54-34.87-99.62-70.8-13-17.28-.48-41.8 20.84-41.8 46.31 0 32.22-54.17 43.15-110.26C94.8 95.2 193.12 32 288.09 32c102.48 0 197.15 70.67 214.08 169.67zM373.51 388.28c42-19.18 81.33-56.71 96.29-102.14 40.48-123.09-64.15-228-181.71-228-83.45 0-170.32 55.42-186.07 136-9.53 48.91 5 131.35-68.75 131.35C58.21 358.6 91.6 378.11 127 389.54c24.66-21.8 63.87-15.47 79.83 14.34 14.22 1 79.19 1.18 87.9.82a51.69 51.69 0 0 1 78.78-16.42zM205.12 187.13c0-34.74 50.84-34.75 50.84 0s-50.84 34.74-50.84 0zm116.57 0c0-34.74 50.86-34.75 50.86 0s-50.86 34.75-50.86 0zm-122.61 70.69c-3.44-16.94 22.18-22.18 25.62-5.21l.06.28c4.14 21.42 29.85 44 64.12 43.07 35.68-.94 59.25-22.21 64.11-42.77 4.46-16.05 28.6-10.36 25.47 6-5.23 22.18-31.21 62-91.46 62.9-42.55 0-80.88-27.84-87.9-64.25z"]
            },
            faWeebly: {
                prefix: "fab",
                iconName: "weebly",
                icon: [512, 512, [], "f5cc", "M425.09 65.83c-39.88 0-73.28 25.73-83.66 64.33-18.16-58.06-65.5-64.33-84.95-64.33-19.78 0-66.8 6.28-85.28 64.33-10.38-38.6-43.45-64.33-83.66-64.33C38.59 65.83 0 99.72 0 143.03c0 28.96 4.18 33.27 77.17 233.48 22.37 60.57 67.77 69.35 92.74 69.35 39.23 0 70.04-19.46 85.93-53.98 15.89 34.83 46.69 54.29 85.93 54.29 24.97 0 70.36-9.1 92.74-69.67 76.55-208.65 77.5-205.58 77.5-227.2.63-48.32-36.01-83.47-86.92-83.47zm26.34 114.81l-65.57 176.44c-7.92 21.49-21.22 37.22-46.24 37.22-23.44 0-37.38-12.41-44.03-33.9l-39.28-117.42h-.95L216.08 360.4c-6.96 21.5-20.9 33.6-44.02 33.6-25.02 0-38.33-15.74-46.24-37.22L60.88 181.55c-5.38-14.83-7.92-23.91-7.92-34.5 0-16.34 15.84-29.36 38.33-29.36 18.69 0 31.99 11.8 36.11 29.05l44.03 139.82h.95l44.66-136.79c6.02-19.67 16.47-32.08 38.96-32.08s32.94 12.11 38.96 32.08l44.66 136.79h.95l44.03-139.82c4.12-17.25 17.42-29.05 36.11-29.05 22.17 0 38.33 13.32 38.33 35.71-.32 7.87-4.12 16.04-7.61 27.24z"]
            },
            faWeibo: {
                prefix: "fab",
                iconName: "weibo",
                icon: [512, 512, [], "f18a", "M407 177.6c7.6-24-13.4-46.8-37.4-41.7-22 4.8-28.8-28.1-7.1-32.8 50.1-10.9 92.3 37.1 76.5 84.8-6.8 21.2-38.8 10.8-32-10.3zM214.8 446.7C108.5 446.7 0 395.3 0 310.4c0-44.3 28-95.4 76.3-143.7C176 67 279.5 65.8 249.9 161c-4 13.1 12.3 5.7 12.3 6 79.5-33.6 140.5-16.8 114 51.4-3.7 9.4 1.1 10.9 8.3 13.1 135.7 42.3 34.8 215.2-169.7 215.2zm143.7-146.3c-5.4-55.7-78.5-94-163.4-85.7-84.8 8.6-148.8 60.3-143.4 116s78.5 94 163.4 85.7c84.8-8.6 148.8-60.3 143.4-116zM347.9 35.1c-25.9 5.6-16.8 43.7 8.3 38.3 72.3-15.2 134.8 52.8 111.7 124-7.4 24.2 29.1 37 37.4 12 31.9-99.8-55.1-195.9-157.4-174.3zm-78.5 311c-17.1 38.8-66.8 60-109.1 46.3-40.8-13.1-58-53.4-40.3-89.7 17.7-35.4 63.1-55.4 103.4-45.1 42 10.8 63.1 50.2 46 88.5zm-86.3-30c-12.9-5.4-30 .3-38 12.9-8.3 12.9-4.3 28 8.6 34 13.1 6 30.8.3 39.1-12.9 8-13.1 3.7-28.3-9.7-34zm32.6-13.4c-5.1-1.7-11.4.6-14.3 5.4-2.9 5.1-1.4 10.6 3.7 12.9 5.1 2 11.7-.3 14.6-5.4 2.8-5.2 1.1-10.9-4-12.9z"]
            },
            faWeixin: {
                prefix: "fab",
                iconName: "weixin",
                icon: [576, 512, [], "f1d7", "M385.2 167.6c6.4 0 12.6.3 18.8 1.1C387.4 90.3 303.3 32 207.7 32 100.5 32 13 104.8 13 197.4c0 53.4 29.3 97.5 77.9 131.6l-19.3 58.6 68-34.1c24.4 4.8 43.8 9.7 68.2 9.7 6.2 0 12.1-.3 18.3-.8-4-12.9-6.2-26.6-6.2-40.8-.1-84.9 72.9-154 165.3-154zm-104.5-52.9c14.5 0 24.2 9.7 24.2 24.4 0 14.5-9.7 24.2-24.2 24.2-14.8 0-29.3-9.7-29.3-24.2.1-14.7 14.6-24.4 29.3-24.4zm-136.4 48.6c-14.5 0-29.3-9.7-29.3-24.2 0-14.8 14.8-24.4 29.3-24.4 14.8 0 24.4 9.7 24.4 24.4 0 14.6-9.6 24.2-24.4 24.2zM563 319.4c0-77.9-77.9-141.3-165.4-141.3-92.7 0-165.4 63.4-165.4 141.3S305 460.7 397.6 460.7c19.3 0 38.9-5.1 58.6-9.9l53.4 29.3-14.8-48.6C534 402.1 563 363.2 563 319.4zm-219.1-24.5c-9.7 0-19.3-9.7-19.3-19.6 0-9.7 9.7-19.3 19.3-19.3 14.8 0 24.4 9.7 24.4 19.3 0 10-9.7 19.6-24.4 19.6zm107.1 0c-9.7 0-19.3-9.7-19.3-19.6 0-9.7 9.7-19.3 19.3-19.3 14.5 0 24.4 9.7 24.4 19.3.1 10-9.9 19.6-24.4 19.6z"]
            },
            faWhatsapp: {
                prefix: "fab",
                iconName: "whatsapp",
                icon: [448, 512, [], "f232", "M380.9 97.1C339 55.1 283.2 32 223.9 32c-122.4 0-222 99.6-222 222 0 39.1 10.2 77.3 29.6 111L0 480l117.7-30.9c32.4 17.7 68.9 27 106.1 27h.1c122.3 0 224.1-99.6 224.1-222 0-59.3-25.2-115-67.1-157zm-157 341.6c-33.2 0-65.7-8.9-94-25.7l-6.7-4-69.8 18.3L72 359.2l-4.4-7c-18.5-29.4-28.2-63.3-28.2-98.2 0-101.7 82.8-184.5 184.6-184.5 49.3 0 95.6 19.2 130.4 54.1 34.8 34.9 56.2 81.2 56.1 130.5 0 101.8-84.9 184.6-186.6 184.6zm101.2-138.2c-5.5-2.8-32.8-16.2-37.9-18-5.1-1.9-8.8-2.8-12.5 2.8-3.7 5.6-14.3 18-17.6 21.8-3.2 3.7-6.5 4.2-12 1.4-32.6-16.3-54-29.1-75.5-66-5.7-9.8 5.7-9.1 16.3-30.3 1.8-3.7.9-6.9-.5-9.7-1.4-2.8-12.5-30.1-17.1-41.2-4.5-10.8-9.1-9.3-12.5-9.5-3.2-.2-6.9-.2-10.6-.2-3.7 0-9.7 1.4-14.8 6.9-5.1 5.6-19.4 19-19.4 46.3 0 27.3 19.9 53.7 22.6 57.4 2.8 3.7 39.1 59.7 94.8 83.8 35.2 15.2 49 16.5 66.6 13.9 10.7-1.6 32.8-13.4 37.4-26.4 4.6-13 4.6-24.1 3.2-26.4-1.3-2.5-5-3.9-10.5-6.6z"]
            },
            faWhatsappSquare: {
                prefix: "fab",
                iconName: "whatsapp-square",
                icon: [448, 512, [], "f40c", "M224 122.8c-72.7 0-131.8 59.1-131.9 131.8 0 24.9 7 49.2 20.2 70.1l3.1 5-13.3 48.6 49.9-13.1 4.8 2.9c20.2 12 43.4 18.4 67.1 18.4h.1c72.6 0 133.3-59.1 133.3-131.8 0-35.2-15.2-68.3-40.1-93.2-25-25-58-38.7-93.2-38.7zm77.5 188.4c-3.3 9.3-19.1 17.7-26.7 18.8-12.6 1.9-22.4.9-47.5-9.9-39.7-17.2-65.7-57.2-67.7-59.8-2-2.6-16.2-21.5-16.2-41s10.2-29.1 13.9-33.1c3.6-4 7.9-5 10.6-5 2.6 0 5.3 0 7.6.1 2.4.1 5.7-.9 8.9 6.8 3.3 7.9 11.2 27.4 12.2 29.4s1.7 4.3.3 6.9c-7.6 15.2-15.7 14.6-11.6 21.6 15.3 26.3 30.6 35.4 53.9 47.1 4 2 6.3 1.7 8.6-1 2.3-2.6 9.9-11.6 12.5-15.5 2.6-4 5.3-3.3 8.9-2 3.6 1.3 23.1 10.9 27.1 12.9s6.6 3 7.6 4.6c.9 1.9.9 9.9-2.4 19.1zM400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM223.9 413.2c-26.6 0-52.7-6.7-75.8-19.3L64 416l22.5-82.2c-13.9-24-21.2-51.3-21.2-79.3C65.4 167.1 136.5 96 223.9 96c42.4 0 82.2 16.5 112.2 46.5 29.9 30 47.9 69.8 47.9 112.2 0 87.4-72.7 158.5-160.1 158.5z"]
            },
            faWhmcs: {
                prefix: "fab",
                iconName: "whmcs",
                icon: [448, 512, [], "f40d", "M448 161v-21.3l-28.5-8.8-2.2-10.4 20.1-20.7L427 80.4l-29 7.5-7.2-7.5 7.5-28.2-19.1-11.6-21.3 21-10.7-3.2-7-26.4h-22.6l-6.2 26.4-12.1 3.2-19.7-21-19.4 11 8.1 27.7-8.1 8.4-28.5-7.5-11 19.1 20.7 21-2.9 10.4-28.5 7.8-.3 21.7 28.8 7.5 2.4 12.1-20.1 19.9 10.4 18.5 29.6-7.5 7.2 8.6-8.1 26.9 19.9 11.6 19.4-20.4 11.6 2.9 6.7 28.5 22.6.3 6.7-28.8 11.6-3.5 20.7 21.6 20.4-12.1-8.8-28 7.8-8.1 28.8 8.8 10.3-20.1-20.9-18.8 2.2-12.1 29.1-7zm-119.2 45.2c-31.3 0-56.8-25.4-56.8-56.8s25.4-56.8 56.8-56.8 56.8 25.4 56.8 56.8c0 31.5-25.4 56.8-56.8 56.8zm72.3 16.4l46.9 14.5V277l-55.1 13.4-4.1 22.7 38.9 35.3-19.2 37.9-54-16.7-14.6 15.2 16.7 52.5-38.3 22.7-38.9-40.5-21.7 6.6-12.6 54-42.4-.5-12.6-53.6-21.7-5.6-36.4 38.4-37.4-21.7 15.2-50.5-13.7-16.1-55.5 14.1-19.7-34.8 37.9-37.4-4.8-22.8-54-14.1.5-40.9L54 219.9l5.7-19.7-38.9-39.4L41.5 125l53.6 14.1 15.2-15.7-15.2-52 36.4-20.7 36.8 39.4L191 84l11.6-52H245l11.6 45.9L234 72l-6.3-1.7-3.3 5.7-11 19.1-3.3 5.6 4.6 4.6 17.2 17.4-.3 1-23.8 6.5-6.2 1.7-.1 6.4-.2 12.9C153.8 161.6 118 204 118 254.7c0 58.3 47.3 105.7 105.7 105.7 50.5 0 92.7-35.4 103.2-82.8l13.2.2 6.9.1 1.6-6.7 5.6-24 1.9-.6 17.1 17.8 4.7 4.9 5.8-3.4 20.4-12.1 5.8-3.5-2-6.5-6.8-21.2z"]
            },
            faWikipediaW: {
                prefix: "fab",
                iconName: "wikipedia-w",
                icon: [640, 512, [], "f266", "M640 51.2l-.3 12.2c-28.1.8-45 15.8-55.8 40.3-25 57.8-103.3 240-155.3 358.6H415l-81.9-193.1c-32.5 63.6-68.3 130-99.2 193.1-.3.3-15 0-15-.3C172 352.3 122.8 243.4 75.8 133.4 64.4 106.7 26.4 63.4.2 63.7c0-3.1-.3-10-.3-14.2h161.9v13.9c-19.2 1.1-52.8 13.3-43.3 34.2 21.9 49.7 103.6 240.3 125.6 288.6 15-29.7 57.8-109.2 75.3-142.8-13.9-28.3-58.6-133.9-72.8-160-9.7-17.8-36.1-19.4-55.8-19.7V49.8l142.5.3v13.1c-19.4.6-38.1 7.8-29.4 26.1 18.9 40 30.6 68.1 48.1 104.7 5.6-10.8 34.7-69.4 48.1-100.8 8.9-20.6-3.9-28.6-38.6-29.4.3-3.6 0-10.3.3-13.6 44.4-.3 111.1-.3 123.1-.6v13.6c-22.5.8-45.8 12.8-58.1 31.7l-59.2 122.8c6.4 16.1 63.3 142.8 69.2 156.7L559.2 91.8c-8.6-23.1-36.4-28.1-47.2-28.3V49.6l127.8 1.1.2.5z"]
            },
            faWindows: {
                prefix: "fab",
                iconName: "windows",
                icon: [448, 512, [], "f17a", "M0 93.7l183.6-25.3v177.4H0V93.7zm0 324.6l183.6 25.3V268.4H0v149.9zm203.8 28L448 480V268.4H203.8v177.9zm0-380.6v180.1H448V32L203.8 65.7z"]
            },
            faWix: {
                prefix: "fab",
                iconName: "wix",
                icon: [640, 512, [], "f5cf", "M393.38 131.69c0 13.03 2.08 32.69-28.68 43.83-9.52 3.45-15.95 9.66-15.95 9.66 0-31 4.72-42.22 17.4-48.86 9.75-5.11 27.23-4.63 27.23-4.63zm-115.8 35.54l-34.24 132.66-28.48-108.57c-7.69-31.99-20.81-48.53-48.43-48.53-27.37 0-40.66 16.18-48.43 48.53L89.52 299.89 55.28 167.23C49.73 140.51 23.86 128.96 0 131.96l65.57 247.93s21.63 1.56 32.46-3.96c14.22-7.25 20.98-12.84 29.59-46.57 7.67-30.07 29.11-118.41 31.12-124.7 4.76-14.94 11.09-13.81 15.4 0 1.97 6.3 23.45 94.63 31.12 124.7 8.6 33.73 15.37 39.32 29.59 46.57 10.82 5.52 32.46 3.96 32.46 3.96l65.57-247.93c-24.42-3.07-49.82 8.93-55.3 35.27zm115.78 5.21s-4.1 6.34-13.46 11.57c-6.01 3.36-11.78 5.64-17.97 8.61-15.14 7.26-13.18 13.95-13.18 35.2v152.07s16.55 2.09 27.37-3.43c13.93-7.1 17.13-13.95 17.26-44.78V181.41l-.02.01v-8.98zm163.44 84.08L640 132.78s-35.11-5.98-52.5 9.85c-13.3 12.1-24.41 29.55-54.18 72.47-.47.73-6.25 10.54-13.07 0-29.29-42.23-40.8-60.29-54.18-72.47-17.39-15.83-52.5-9.85-52.5-9.85l83.2 123.74-82.97 123.36s36.57 4.62 53.95-11.21c11.49-10.46 17.58-20.37 52.51-70.72 6.81-10.52 12.57-.77 13.07 0 29.4 42.38 39.23 58.06 53.14 70.72 17.39 15.83 53.32 11.21 53.32 11.21L556.8 256.52z"]
            },
            faWizardsOfTheCoast: {
                prefix: "fab",
                iconName: "wizards-of-the-coast",
                icon: [640, 512, [], "f730", "M219.19 345.69c-1.9 1.38-11.07 8.44-.26 23.57 4.64 6.42 14.11 12.79 21.73 6.55 6.5-4.88 7.35-12.92.26-23.04-5.47-7.76-14.28-12.88-21.73-7.08zm336.75 75.94c-.34 1.7-.55 1.67.79 0 2.09-4.19 4.19-10.21 4.98-19.9 3.14-38.49-40.33-71.49-101.34-78.03-54.73-6.02-124.38 9.17-188.8 60.49l-.26 1.57c2.62 4.98 4.98 10.74 3.4 21.21l.79.26c63.89-58.4 131.19-77.25 184.35-73.85 58.4 3.67 100.03 34.04 100.03 68.08-.01 9.96-2.63 15.72-3.94 20.17zM392.28 240.42c.79 7.07 4.19 10.21 9.17 10.47 5.5.26 9.43-2.62 10.47-6.55.79-3.4 2.09-29.85 2.09-29.85s-11.26 6.55-14.93 10.47c-3.66 3.68-7.33 8.39-6.8 15.46zm-50.02-151.1C137.75 89.32 13.1 226.8.79 241.2c-1.05.52-1.31.79.79 1.31 60.49 16.5 155.81 81.18 196.13 202.16l1.05.26c55.25-69.92 140.88-128.05 236.99-128.05 80.92 0 130.15 42.16 130.15 80.39 0 18.33-6.55 33.52-22.26 46.35 0 .96-.2.79.79.79 14.66-10.74 27.5-28.8 27.5-48.18 0-22.78-12.05-38.23-12.05-38.23 7.07 7.07 10.74 16.24 10.74 16.24 5.76-40.85 26.97-62.32 26.97-62.32-2.36-9.69-6.81-17.81-6.81-17.81 7.59 8.12 14.4 27.5 14.4 41.37 0 10.47-3.4 22.78-12.57 31.95l.26.52c8.12-4.98 16.5-16.76 16.5-37.97 0-15.71-4.71-25.92-4.71-25.92 5.76-5.24 11.26-9.17 15.97-11.78.79 3.4 2.09 9.69 2.36 14.93 0 1.05.79 1.83 1.05 0 .79-5.76-.26-16.24-.26-16.5 6.02-3.14 9.69-4.45 9.69-4.45C617.74 176 489.43 89.32 342.26 89.32zm-99.24 289.62c-11.06 8.99-24.2 4.08-30.64-4.19-7.45-9.58-6.76-24.09 4.19-32.47 14.85-11.35 27.08-.49 31.16 5.5.28.39 12.13 16.57-4.71 31.16zm2.09-136.43l9.43-17.81 11.78 70.96-12.57 6.02-24.62-28.8 14.14-26.71 3.67 4.45-1.83-8.11zm18.59 117.58l-.26-.26c2.05-4.1-2.5-6.61-17.54-31.69-1.31-2.36-3.14-2.88-4.45-2.62l-.26-.52c7.86-5.76 15.45-10.21 25.4-15.71l.52.26c1.31 1.83 2.09 2.88 3.4 4.71l-.26.52c-1.05-.26-2.36-.79-5.24.26-2.09.79-7.86 3.67-12.31 7.59v1.31c1.57 2.36 3.93 6.55 5.76 9.69h.26c10.05-6.28 7.56-4.55 11.52-7.86h.26c.52 1.83.52 1.83 1.83 5.5l-.26.26c-3.06.61-4.65.34-11.52 5.5v.26c9.46 17.02 11.01 16.75 12.57 15.97l.26.26c-2.34 1.59-6.27 4.21-9.68 6.57zm55.26-32.47c-3.14 1.57-6.02 2.88-9.95 4.98l-.26-.26c1.29-2.59 1.16-2.71-11.78-32.47l-.26-.26c-.15 0-8.9 3.65-9.95 7.33h-.52l-1.05-5.76.26-.52c7.29-4.56 25.53-11.64 27.76-12.57l.52.26 3.14 4.98-.26.52c-3.53-1.76-7.35.76-12.31 2.62v.26c12.31 32.01 12.67 30.64 14.66 30.64v.25zm44.77-16.5c-4.19 1.05-5.24 1.31-9.69 2.88l-.26-.26.52-4.45c-1.05-3.4-3.14-11.52-3.67-13.62l-.26-.26c-3.4.79-8.9 2.62-12.83 3.93l-.26.26c.79 2.62 3.14 9.95 4.19 13.88.79 2.36 1.83 2.88 2.88 3.14v.52c-3.67 1.05-7.07 2.62-10.21 3.93l-.26-.26c1.05-1.31 1.05-2.88.26-4.98-1.05-3.14-8.12-23.83-9.17-27.23-.52-1.83-1.57-3.14-2.62-3.14v-.52c3.14-1.05 6.02-2.09 10.74-3.4l.26.26-.26 4.71c1.31 3.93 2.36 7.59 3.14 9.69h.26c3.93-1.31 9.43-2.88 12.83-3.93l.26-.26-2.62-9.43c-.52-1.83-1.05-3.4-2.62-3.93v-.26c4.45-1.05 7.33-1.83 10.74-2.36l.26.26c-1.05 1.31-1.05 2.88-.52 4.45 1.57 6.28 4.71 20.43 6.28 26.45.54 2.62 1.85 3.41 2.63 3.93zm32.21-6.81l-.26.26c-4.71.52-14.14 2.36-22.52 4.19l-.26-.26.79-4.19c-1.57-7.86-3.4-18.59-4.98-26.19-.26-1.83-.79-2.88-2.62-3.67l.79-.52c9.17-1.57 20.16-2.36 24.88-2.62l.26.26c.52 2.36.79 3.14 1.57 5.5l-.26.26c-1.14-1.14-3.34-3.2-16.24-.79l-.26.26c.26 1.57 1.05 6.55 1.57 9.95l.26.26c9.52-1.68 4.76-.06 10.74-2.36h.26c0 1.57-.26 1.83-.26 5.24h-.26c-4.81-1.03-2.15-.9-10.21 0l-.26.26c.26 2.09 1.57 9.43 2.09 12.57l.26.26c1.15.38 14.21-.65 16.24-4.71h.26c-.53 2.38-1.05 4.21-1.58 6.04zm10.74-44.51c-4.45 2.36-8.12 2.88-11 2.88-.25.02-11.41 1.09-17.54-9.95-6.74-10.79-.98-25.2 5.5-31.69 8.8-8.12 23.35-10.1 28.54-17.02 8.03-10.33-13.04-22.31-29.59-5.76l-2.62-2.88 5.24-16.24c25.59-1.57 45.2-3.04 50.02 16.24.79 3.14 0 9.43-.26 12.05 0 2.62-1.83 18.85-2.09 23.04-.52 4.19-.79 18.33-.79 20.69.26 2.36.52 4.19 1.57 5.5 1.57 1.83 5.76 1.83 5.76 1.83l-.79 4.71c-11.82-1.07-10.28-.59-20.43-1.05-3.22-5.15-2.23-3.28-4.19-7.86 0 .01-4.19 3.94-7.33 5.51zm37.18 21.21c-6.35-10.58-19.82-7.16-21.73 5.5-2.63 17.08 14.3 19.79 20.69 10.21l.26.26c-.52 1.83-1.83 6.02-1.83 6.28l-.52.52c-10.3 6.87-28.5-2.5-25.66-18.59 1.94-10.87 14.44-18.93 28.8-9.95l.26.52c0 1.06-.27 3.41-.27 5.25zm5.77-87.73v-6.55c.69 0 19.65 3.28 27.76 7.33l-1.57 17.54s10.21-9.43 15.45-10.74c5.24-1.57 14.93 7.33 14.93 7.33l-11.26 11.26c-12.07-6.35-19.59-.08-20.69.79-5.29 38.72-8.6 42.17 4.45 46.09l-.52 4.71c-17.55-4.29-18.53-4.5-36.92-7.33l.79-4.71c7.25 0 7.48-5.32 7.59-6.81 0 0 4.98-53.16 4.98-55.25-.02-2.87-4.99-3.66-4.99-3.66zm10.99 114.44c-8.12-2.09-14.14-11-10.74-20.69 3.14-9.43 12.31-12.31 18.85-10.21 9.17 2.62 12.83 11.78 10.74 19.38-2.61 8.9-9.42 13.87-18.85 11.52zm42.16 9.69c-2.36-.52-7.07-2.36-8.64-2.88v-.26l1.57-1.83c.59-8.24.59-7.27.26-7.59-4.82-1.81-6.66-2.36-7.07-2.36-1.31 1.83-2.88 4.45-3.67 5.5l-.79 3.4v.26c-1.31-.26-3.93-1.31-6.02-1.57v-.26l2.62-1.83c3.4-4.71 9.95-14.14 13.88-20.16v-2.09l.52-.26c2.09.79 5.5 2.09 7.59 2.88.48.48.18-1.87-1.05 25.14-.24 1.81.02 2.6.8 3.91zm-4.71-89.82c11.25-18.27 30.76-16.19 34.04-3.4L539.7 198c2.34-6.25-2.82-9.9-4.45-11.26l1.83-3.67c12.22 10.37 16.38 13.97 22.52 20.43-25.91 73.07-30.76 80.81-24.62 84.32l-1.83 4.45c-6.37-3.35-8.9-4.42-17.81-8.64l2.09-6.81c-.26-.26-3.93 3.93-9.69 3.67-19.06-1.3-22.89-31.75-9.67-52.9zm29.33 79.34c0-5.71-6.34-7.89-7.86-5.24-1.31 2.09 1.05 4.98 2.88 8.38 1.57 2.62 2.62 6.28 1.05 9.43-2.64 6.34-12.4 5.31-15.45-.79 0-.7-.27.09 1.83-4.71l.79-.26c-.57 5.66 6.06 9.61 8.38 4.98 1.05-2.09-.52-5.5-2.09-8.38-1.57-2.62-3.67-6.28-1.83-9.69 2.72-5.06 11.25-4.47 14.66 2.36v.52l-2.36 3.4zm21.21 13.36c-1.96-3.27-.91-2.14-4.45-4.71h-.26c-2.36 4.19-5.76 10.47-8.64 16.24-1.31 2.36-1.05 3.4-.79 3.93l-.26.26-5.76-4.45.26-.26 2.09-1.31c3.14-5.76 6.55-12.05 9.17-17.02v-.26c-2.64-1.98-1.22-1.51-6.02-1.83v-.26l3.14-3.4h.26c3.67 2.36 9.95 6.81 12.31 8.9l.26.26-1.31 3.91zm27.23-44.26l-2.88-2.88c.79-2.36 1.83-4.98 2.09-7.59.75-9.74-11.52-11.84-11.52-4.98 0 4.98 7.86 19.38 7.86 27.76 0 10.21-5.76 15.71-13.88 16.5-8.38.79-20.16-10.47-20.16-10.47l4.98-14.4 2.88 2.09c-2.97 17.8 17.68 20.37 13.35 5.24-1.06-4.02-18.75-34.2 2.09-38.23 13.62-2.36 23.04 16.5 23.04 16.5l-7.85 10.46zm35.62-10.21c-11-30.38-60.49-127.53-191.95-129.62-53.42-1.05-94.27 15.45-132.76 37.97l85.63-9.17-91.39 20.69 25.14 19.64-3.93-16.5c7.5-1.71 39.15-8.45 66.77-8.9l-22.26 80.39c13.61-.7 18.97-8.98 19.64-22.78l4.98-1.05.26 26.71c-22.46 3.21-37.3 6.69-49.49 9.95l13.09-43.21-61.54-36.66 2.36 8.12 10.21 4.98c6.28 18.59 19.38 56.56 20.43 58.66 1.95 4.28 3.16 5.78 12.05 4.45l1.05 4.98c-16.08 4.86-23.66 7.61-39.02 14.4l-2.36-4.71c4.4-2.94 8.73-3.94 5.5-12.83-23.7-62.5-21.48-58.14-22.78-59.44l2.36-4.45 33.52 67.3c-3.84-11.87 1.68 1.69-32.99-78.82l-41.9 88.51 4.71-13.88-35.88-42.16 27.76 93.48-11.78 8.38C95 228.58 101.05 231.87 93.23 231.52c-5.5-.26-13.62 5.5-13.62 5.5L74.63 231c30.56-23.53 31.62-24.33 58.4-42.68l4.19 7.07s-5.76 4.19-7.86 7.07c-5.9 9.28 1.67 13.28 61.8 75.68l-18.85-58.92 39.8-10.21 25.66 30.64 4.45-12.31-4.98-24.62 13.09-3.4.52 3.14 3.67-10.47-94.27 29.33 11.26-4.98-13.62-42.42 17.28-9.17 30.11 36.14 28.54-13.09c-1.41-7.47-2.47-14.5-4.71-19.64l17.28 13.88 4.71-2.09-59.18-42.68 23.08 11.5c18.98-6.07 25.23-7.47 32.21-9.69l2.62 11c-12.55 12.55 1.43 16.82 6.55 19.38l-13.62-61.01 12.05 28.28c4.19-1.31 7.33-2.09 7.33-2.09l2.62 8.64s-3.14 1.05-6.28 2.09l8.9 20.95 33.78-65.73-20.69 61.01c42.42-24.09 81.44-36.66 131.98-35.88 67.04 1.05 167.33 40.85 199.8 139.83.78 2.1-.01 2.63-.79.27zM203.48 152.43s1.83-.52 4.19-1.31l9.43 7.59c-.4 0-3.44-.25-11.26 2.36l-2.36-8.64zm143.76 38.5c-1.57-.6-26.46-4.81-33.26 20.69l21.73 17.02 11.53-37.71zM318.43 67.07c-58.4 0-106.05 12.05-114.96 14.4v.79c8.38 2.09 14.4 4.19 21.21 11.78l1.57.26c6.55-1.83 48.97-13.88 110.24-13.88 180.16 0 301.67 116.79 301.67 223.37v9.95c0 1.31.79 2.62 1.05.52.52-2.09.79-8.64.79-19.64.26-83.79-96.63-227.55-321.57-227.55zm211.06 169.68c1.31-5.76 0-12.31-7.33-13.09-9.62-1.13-16.14 23.79-17.02 33.52-.79 5.5-1.31 14.93 6.02 14.93 4.68-.01 9.72-.91 18.33-35.36zm-61.53 42.95c-2.62-.79-9.43-.79-12.57 10.47-1.83 6.81.52 13.35 6.02 14.66 3.67 1.05 8.9.52 11.78-10.74 2.62-9.94-1.83-13.61-5.23-14.39zM491 300.65c1.83.52 3.14 1.05 5.76 1.83 0-1.83.52-8.38.79-12.05-1.05 1.31-5.5 8.12-6.55 9.95v.27z"]
            },
            faWodu: {
                prefix: "fab",
                iconName: "wodu",
                icon: [640, 512, [], "e088", "M178.414 339.706H141.1L112.166 223.475h-.478L83.228 339.706H45.2L0 168.946H37.548L64.574 285.177h.478L94.707 168.946h35.157l29.178 117.667h.479L187.5 168.946h36.831zM271.4 212.713c38.984 0 64.1 25.828 64.1 65.291 0 39.222-25.111 65.05-64.1 65.05-38.743 0-63.855-25.828-63.855-65.05C207.547 238.541 232.659 212.713 271.4 212.713zm0 104.753c23.2 0 30.133-19.852 30.133-39.462 0-19.852-6.934-39.7-30.133-39.7-27.7 0-29.894 19.85-29.894 39.7C241.508 297.614 248.443 317.466 271.4 317.466zM435.084 323.922h-.478c-7.893 13.392-21.765 19.132-37.548 19.132-37.31 0-55.485-32.045-55.485-66.246 0-33.243 18.415-64.095 54.767-64.095 14.589 0 28.938 6.218 36.831 18.416h.24V168.946h33.96v170.76H435.084zM405.428 238.3c-22.24 0-29.894 19.134-29.894 39.463 0 19.371 8.848 39.7 29.894 39.7 22.482 0 29.178-19.613 29.178-39.94C434.606 257.436 427.432 238.3 405.428 238.3zM592.96 339.706H560.673V322.487h-.718c-8.609 13.87-23.436 20.567-37.786 20.567-36.113 0-45.2-20.328-45.2-50.941V216.061h33.959V285.9c0 20.329 5.979 30.372 21.765 30.372 18.415 0 26.306-10.283 26.306-35.393V216.061H592.96zM602.453 302.876H640v36.83H602.453z"]
            },
            faWolfPackBattalion: {
                prefix: "fab",
                iconName: "wolf-pack-battalion",
                icon: [512, 512, [], "f514", "M267.73 471.53l10.56 15.84 5.28-12.32 5.28 7V512c21.06-7.92 21.11-66.86 25.51-97.21 4.62-31.89-.88-92.81 81.37-149.11-8.88-23.61-12-49.43-2.64-80.05C421 189 447 196.21 456.43 239.73l-30.35 8.36c11.15 23 17 46.76 13.2 72.14L412 313.18l-6.16 33.43-18.47-7-8.8 33.39-19.35-7 26.39 21.11 8.8-28.15L419 364.2l7-35.63 26.39 14.52c.25-20 7-58.06-8.8-84.45l26.39 5.28c4-22.07-2.38-39.21-7.92-56.74l22.43 9.68c-.44-25.07-29.94-56.79-61.58-58.5-20.22-1.09-56.74-25.17-54.1-51.9 2-19.87 17.45-42.62 43.11-49.7-44 36.51-9.68 67.3 5.28 73.46 4.4-11.44 17.54-69.08 0-130.2-40.39 22.87-89.65 65.1-93.2 147.79l-58 38.71-3.52 93.25L369.78 220l7 7-17.59 3.52-44 38.71-15.84-5.28-28.1 49.25-3.52 119.64 21.11 15.84-32.55 15.84-32.55-15.84 21.11-15.84-3.52-119.64-28.15-49.26-15.84 5.28-44-38.71-17.58-3.51 7-7 107.33 59.82-3.52-93.25-58.06-38.71C185 65.1 135.77 22.87 95.3 0c-17.54 61.12-4.4 118.76 0 130.2 15-6.16 49.26-36.95 5.28-73.46 25.66 7.08 41.15 29.83 43.11 49.7 2.63 26.74-33.88 50.81-54.1 51.9-31.65 1.72-61.15 33.44-61.59 58.51l22.43-9.68c-5.54 17.53-11.91 34.67-7.92 56.74l26.39-5.28c-15.76 26.39-9.05 64.43-8.8 84.45l26.39-14.52 7 35.63 24.63-5.28 8.8 28.15L153.35 366 134 373l-8.8-33.43-18.47 7-6.16-33.43-27.27 7c-3.82-25.38 2-49.1 13.2-72.14l-30.35-8.36c9.4-43.52 35.47-50.77 63.34-54.1 9.36 30.62 6.24 56.45-2.64 80.05 82.25 56.3 76.75 117.23 81.37 149.11 4.4 30.35 4.45 89.29 25.51 97.21v-29.83l5.28-7 5.28 12.32 10.56-15.84 11.44 21.11 11.43-21.1zm79.17-95L331.06 366c7.47-4.36 13.76-8.42 19.35-12.32-.6 7.22-.27 13.84-3.51 22.84zm28.15-49.26c-.4 10.94-.9 21.66-1.76 31.67-7.85-1.86-15.57-3.8-21.11-7 8.24-7.94 15.55-16.32 22.87-24.68zm24.63 5.28c0-13.43-2.05-24.21-5.28-33.43a235 235 0 0 1-18.47 27.27zm3.52-80.94c19.44 12.81 27.8 33.66 29.91 56.3-12.32-4.53-24.63-9.31-36.95-10.56 5.06-12 6.65-28.14 7-45.74zm-1.76-45.74c.81 14.3 1.84 28.82 1.76 42.23 19.22-8.11 29.78-9.72 44-14.08-10.61-18.96-27.2-25.53-45.76-28.16zM165.68 376.52L181.52 366c-7.47-4.36-13.76-8.42-19.35-12.32.6 7.26.27 13.88 3.51 22.88zm-28.15-49.26c.4 10.94.9 21.66 1.76 31.67 7.85-1.86 15.57-3.8 21.11-7-8.24-7.93-15.55-16.31-22.87-24.67zm-24.64 5.28c0-13.43 2-24.21 5.28-33.43a235 235 0 0 0 18.47 27.27zm-3.52-80.94c-19.44 12.81-27.8 33.66-29.91 56.3 12.32-4.53 24.63-9.31 37-10.56-5-12-6.65-28.14-7-45.74zm1.76-45.74c-.81 14.3-1.84 28.82-1.76 42.23-19.22-8.11-29.78-9.72-44-14.08 10.63-18.95 27.23-25.52 45.76-28.15z"]
            },
            faWordpress: {
                prefix: "fab",
                iconName: "wordpress",
                icon: [512, 512, [], "f19a", "M61.7 169.4l101.5 278C92.2 413 43.3 340.2 43.3 256c0-30.9 6.6-60.1 18.4-86.6zm337.9 75.9c0-26.3-9.4-44.5-17.5-58.7-10.8-17.5-20.9-32.4-20.9-49.9 0-19.6 14.8-37.8 35.7-37.8.9 0 1.8.1 2.8.2-37.9-34.7-88.3-55.9-143.7-55.9-74.3 0-139.7 38.1-177.8 95.9 5 .2 9.7.3 13.7.3 22.2 0 56.7-2.7 56.7-2.7 11.5-.7 12.8 16.2 1.4 17.5 0 0-11.5 1.3-24.3 2l77.5 230.4L249.8 247l-33.1-90.8c-11.5-.7-22.3-2-22.3-2-11.5-.7-10.1-18.2 1.3-17.5 0 0 35.1 2.7 56 2.7 22.2 0 56.7-2.7 56.7-2.7 11.5-.7 12.8 16.2 1.4 17.5 0 0-11.5 1.3-24.3 2l76.9 228.7 21.2-70.9c9-29.4 16-50.5 16-68.7zm-139.9 29.3l-63.8 185.5c19.1 5.6 39.2 8.7 60.1 8.7 24.8 0 48.5-4.3 70.6-12.1-.6-.9-1.1-1.9-1.5-2.9l-65.4-179.2zm183-120.7c.9 6.8 1.4 14 1.4 21.9 0 21.6-4 45.8-16.2 76.2l-65 187.9C426.2 403 468.7 334.5 468.7 256c0-37-9.4-71.8-26-102.1zM504 256c0 136.8-111.3 248-248 248C119.2 504 8 392.7 8 256 8 119.2 119.2 8 256 8c136.7 0 248 111.2 248 248zm-11.4 0c0-130.5-106.2-236.6-236.6-236.6C125.5 19.4 19.4 125.5 19.4 256S125.6 492.6 256 492.6c130.5 0 236.6-106.1 236.6-236.6z"]
            },
            faWordpressSimple: {
                prefix: "fab",
                iconName: "wordpress-simple",
                icon: [512, 512, [], "f411", "M256 8C119.3 8 8 119.2 8 256c0 136.7 111.3 248 248 248s248-111.3 248-248C504 119.2 392.7 8 256 8zM33 256c0-32.3 6.9-63 19.3-90.7l106.4 291.4C84.3 420.5 33 344.2 33 256zm223 223c-21.9 0-43-3.2-63-9.1l66.9-194.4 68.5 187.8c.5 1.1 1 2.1 1.6 3.1-23.1 8.1-48 12.6-74 12.6zm30.7-327.5c13.4-.7 25.5-2.1 25.5-2.1 12-1.4 10.6-19.1-1.4-18.4 0 0-36.1 2.8-59.4 2.8-21.9 0-58.7-2.8-58.7-2.8-12-.7-13.4 17.7-1.4 18.4 0 0 11.4 1.4 23.4 2.1l34.7 95.2L200.6 393l-81.2-241.5c13.4-.7 25.5-2.1 25.5-2.1 12-1.4 10.6-19.1-1.4-18.4 0 0-36.1 2.8-59.4 2.8-4.2 0-9.1-.1-14.4-.3C109.6 73 178.1 33 256 33c58 0 110.9 22.2 150.6 58.5-1-.1-1.9-.2-2.9-.2-21.9 0-37.4 19.1-37.4 39.6 0 18.4 10.6 33.9 21.9 52.3 8.5 14.8 18.4 33.9 18.4 61.5 0 19.1-7.3 41.2-17 72.1l-22.2 74.3-80.7-239.6zm81.4 297.2l68.1-196.9c12.7-31.8 17-57.2 17-79.9 0-8.2-.5-15.8-1.5-22.9 17.4 31.8 27.3 68.2 27.3 107 0 82.3-44.6 154.1-110.9 192.7z"]
            },
            faWpbeginner: {
                prefix: "fab",
                iconName: "wpbeginner",
                icon: [512, 512, [], "f297", "M462.799 322.374C519.01 386.682 466.961 480 370.944 480c-39.602 0-78.824-17.687-100.142-50.04-6.887.356-22.702.356-29.59 0C219.848 462.381 180.588 480 141.069 480c-95.49 0-148.348-92.996-91.855-157.626C-29.925 190.523 80.479 32 256.006 32c175.632 0 285.87 158.626 206.793 290.374zm-339.647-82.972h41.529v-58.075h-41.529v58.075zm217.18 86.072v-23.839c-60.506 20.915-132.355 9.198-187.589-33.971l.246 24.897c51.101 46.367 131.746 57.875 187.343 32.913zm-150.753-86.072h166.058v-58.075H189.579v58.075z"]
            },
            faWpexplorer: {
                prefix: "fab",
                iconName: "wpexplorer",
                icon: [512, 512, [], "f2de", "M512 256c0 141.2-114.7 256-256 256C114.8 512 0 397.3 0 256S114.7 0 256 0s256 114.7 256 256zm-32 0c0-123.2-100.3-224-224-224C132.5 32 32 132.5 32 256s100.5 224 224 224 224-100.5 224-224zM160.9 124.6l86.9 37.1-37.1 86.9-86.9-37.1 37.1-86.9zm110 169.1l46.6 94h-14.6l-50-100-48.9 100h-14l51.1-106.9-22.3-9.4 6-14 68.6 29.1-6 14.3-16.5-7.1zm-11.8-116.3l68.6 29.4-29.4 68.3L230 246l29.1-68.6zm80.3 42.9l54.6 23.1-23.4 54.3-54.3-23.1 23.1-54.3z"]
            },
            faWpforms: {
                prefix: "fab",
                iconName: "wpforms",
                icon: [448, 512, [], "f298", "M448 75.2v361.7c0 24.3-19 43.2-43.2 43.2H43.2C19.3 480 0 461.4 0 436.8V75.2C0 51.1 18.8 32 43.2 32h361.7c24 0 43.1 18.8 43.1 43.2zm-37.3 361.6V75.2c0-3-2.6-5.8-5.8-5.8h-9.3L285.3 144 224 94.1 162.8 144 52.5 69.3h-9.3c-3.2 0-5.8 2.8-5.8 5.8v361.7c0 3 2.6 5.8 5.8 5.8h361.7c3.2.1 5.8-2.7 5.8-5.8zM150.2 186v37H76.7v-37h73.5zm0 74.4v37.3H76.7v-37.3h73.5zm11.1-147.3l54-43.7H96.8l64.5 43.7zm210 72.9v37h-196v-37h196zm0 74.4v37.3h-196v-37.3h196zm-84.6-147.3l64.5-43.7H232.8l53.9 43.7zM371.3 335v37.3h-99.4V335h99.4z"]
            },
            faWpressr: {
                prefix: "fab",
                iconName: "wpressr",
                icon: [496, 512, [], "f3e4", "M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm171.33 158.6c-15.18 34.51-30.37 69.02-45.63 103.5-2.44 5.51-6.89 8.24-12.97 8.24-23.02-.01-46.03.06-69.05-.05-5.12-.03-8.25 1.89-10.34 6.72-10.19 23.56-20.63 47-30.95 70.5-1.54 3.51-4.06 5.29-7.92 5.29-45.94-.01-91.87-.02-137.81 0-3.13 0-5.63-1.15-7.72-3.45-11.21-12.33-22.46-24.63-33.68-36.94-2.69-2.95-2.79-6.18-1.21-9.73 8.66-19.54 17.27-39.1 25.89-58.66 12.93-29.35 25.89-58.69 38.75-88.08 1.7-3.88 4.28-5.68 8.54-5.65 14.24.1 28.48.02 42.72.05 6.24.01 9.2 4.84 6.66 10.59-13.6 30.77-27.17 61.55-40.74 92.33-5.72 12.99-11.42 25.99-17.09 39-3.91 8.95 7.08 11.97 10.95 5.6.23-.37-1.42 4.18 30.01-67.69 1.36-3.1 3.41-4.4 6.77-4.39 15.21.08 30.43.02 45.64.04 5.56.01 7.91 3.64 5.66 8.75-8.33 18.96-16.71 37.9-24.98 56.89-4.98 11.43 8.08 12.49 11.28 5.33.04-.08 27.89-63.33 32.19-73.16 2.02-4.61 5.44-6.51 10.35-6.5 26.43.05 52.86 0 79.29.05 12.44.02 13.93-13.65 3.9-13.64-25.26.03-50.52.02-75.78.02-6.27 0-7.84-2.47-5.27-8.27 5.78-13.06 11.59-26.11 17.3-39.21 1.73-3.96 4.52-5.79 8.84-5.78 23.09.06 25.98.02 130.78.03 6.08-.01 8.03 2.79 5.62 8.27z"]
            },
            faXbox: {
                prefix: "fab",
                iconName: "xbox",
                icon: [512, 512, [], "f412", "M369.9 318.2c44.3 54.3 64.7 98.8 54.4 118.7-7.9 15.1-56.7 44.6-92.6 55.9-29.6 9.3-68.4 13.3-100.4 10.2-38.2-3.7-76.9-17.4-110.1-39C93.3 445.8 87 438.3 87 423.4c0-29.9 32.9-82.3 89.2-142.1 32-33.9 76.5-73.7 81.4-72.6 9.4 2.1 84.3 75.1 112.3 109.5zM188.6 143.8c-29.7-26.9-58.1-53.9-86.4-63.4-15.2-5.1-16.3-4.8-28.7 8.1-29.2 30.4-53.5 79.7-60.3 122.4-5.4 34.2-6.1 43.8-4.2 60.5 5.6 50.5 17.3 85.4 40.5 120.9 9.5 14.6 12.1 17.3 9.3 9.9-4.2-11-.3-37.5 9.5-64 14.3-39 53.9-112.9 120.3-194.4zm311.6 63.5C483.3 127.3 432.7 77 425.6 77c-7.3 0-24.2 6.5-36 13.9-23.3 14.5-41 31.4-64.3 52.8C367.7 197 427.5 283.1 448.2 346c6.8 20.7 9.7 41.1 7.4 52.3-1.7 8.5-1.7 8.5 1.4 4.6 6.1-7.7 19.9-31.3 25.4-43.5 7.4-16.2 15-40.2 18.6-58.7 4.3-22.5 3.9-70.8-.8-93.4zM141.3 43C189 40.5 251 77.5 255.6 78.4c.7.1 10.4-4.2 21.6-9.7 63.9-31.1 94-25.8 107.4-25.2-63.9-39.3-152.7-50-233.9-11.7-23.4 11.1-24 11.9-9.4 11.2z"]
            },
            faXing: {
                prefix: "fab",
                iconName: "xing",
                icon: [384, 512, [], "f168", "M162.7 210c-1.8 3.3-25.2 44.4-70.1 123.5-4.9 8.3-10.8 12.5-17.7 12.5H9.8c-7.7 0-12.1-7.5-8.5-14.4l69-121.3c.2 0 .2-.1 0-.3l-43.9-75.6c-4.3-7.8.3-14.1 8.5-14.1H100c7.3 0 13.3 4.1 18 12.2l44.7 77.5zM382.6 46.1l-144 253v.3L330.2 466c3.9 7.1.2 14.1-8.5 14.1h-65.2c-7.6 0-13.6-4-18-12.2l-92.4-168.5c3.3-5.8 51.5-90.8 144.8-255.2 4.6-8.1 10.4-12.2 17.5-12.2h65.7c8 0 12.3 6.7 8.5 14.1z"]
            },
            faXingSquare: {
                prefix: "fab",
                iconName: "xing-square",
                icon: [448, 512, [], "f169", "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM140.4 320.2H93.8c-5.5 0-8.7-5.3-6-10.3l49.3-86.7c.1 0 .1-.1 0-.2l-31.4-54c-3-5.6.2-10.1 6-10.1h46.6c5.2 0 9.5 2.9 12.9 8.7l31.9 55.3c-1.3 2.3-18 31.7-50.1 88.2-3.5 6.2-7.7 9.1-12.6 9.1zm219.7-214.1L257.3 286.8v.2l65.5 119c2.8 5.1.1 10.1-6 10.1h-46.6c-5.5 0-9.7-2.9-12.9-8.7l-66-120.3c2.3-4.1 36.8-64.9 103.4-182.3 3.3-5.8 7.4-8.7 12.5-8.7h46.9c5.7-.1 8.8 4.7 6 10z"]
            },
            faYCombinator: {
                prefix: "fab",
                iconName: "y-combinator",
                icon: [448, 512, [], "f23b", "M448 32v448H0V32h448zM236 287.5L313.5 142h-32.7L235 233c-4.7 9.3-9 18.3-12.8 26.8L210 233l-45.2-91h-35l76.7 143.8v94.5H236v-92.8z"]
            },
            faYahoo: {
                prefix: "fab",
                iconName: "yahoo",
                icon: [512, 512, [], "f19e", "M223.69,141.06,167,284.23,111,141.06H14.93L120.76,390.19,82.19,480h94.17L317.27,141.06Zm105.4,135.79a58.22,58.22,0,1,0,58.22,58.22A58.22,58.22,0,0,0,329.09,276.85ZM394.65,32l-93,223.47H406.44L499.07,32Z"]
            },
            faYammer: {
                prefix: "fab",
                iconName: "yammer",
                icon: [512, 512, [], "f840", "M421.78 152.17A23.06 23.06 0 0 0 400.9 112c-.83.43-1.71.9-2.63 1.4-15.25 8.4-118.33 80.62-106.69 88.77s82.04-23.61 130.2-50zm0 217.17c-48.16-26.38-118.64-58.1-130.2-50s91.42 80.35 106.69 88.74c.92.51 1.8 1 2.63 1.41a23.07 23.07 0 0 0 20.88-40.15zM464.21 237c-.95 0-1.95-.06-3-.06-17.4 0-142.52 13.76-136.24 26.51s83.3 18.74 138.21 18.76a23 23 0 0 0 1-45.21zM31 96.65a24.88 24.88 0 0 1 46.14-18.4l81 205.06h1.21l77-203.53a23.52 23.52 0 0 1 44.45 15.27L171.2 368.44C152.65 415.66 134.08 448 77.91 448a139.67 139.67 0 0 1-23.81-1.95 21.31 21.31 0 0 1 6.9-41.77c.66.06 10.91.66 13.86.66 30.47 0 43.74-18.94 58.07-59.41z"]
            },
            faYandex: {
                prefix: "fab",
                iconName: "yandex",
                icon: [256, 512, [], "f413", "M153.1 315.8L65.7 512H2l96-209.8c-45.1-22.9-75.2-64.4-75.2-141.1C22.7 53.7 90.8 0 171.7 0H254v512h-55.1V315.8h-45.8zm45.8-269.3h-29.4c-44.4 0-87.4 29.4-87.4 114.6 0 82.3 39.4 108.8 87.4 108.8h29.4V46.5z"]
            },
            faYandexInternational: {
                prefix: "fab",
                iconName: "yandex-international",
                icon: [320, 512, [], "f414", "M129.5 512V345.9L18.5 48h55.8l81.8 229.7L250.2 0h51.3L180.8 347.8V512h-51.3z"]
            },
            faYarn: {
                prefix: "fab",
                iconName: "yarn",
                icon: [496, 512, [], "f7e3", "M393.9 345.2c-39 9.3-48.4 32.1-104 47.4 0 0-2.7 4-10.4 5.8-13.4 3.3-63.9 6-68.5 6.1-12.4.1-19.9-3.2-22-8.2-6.4-15.3 9.2-22 9.2-22-8.1-5-9-9.9-9.8-8.1-2.4 5.8-3.6 20.1-10.1 26.5-8.8 8.9-25.5 5.9-35.3.8-10.8-5.7.8-19.2.8-19.2s-5.8 3.4-10.5-3.6c-6-9.3-17.1-37.3 11.5-62-1.3-10.1-4.6-53.7 40.6-85.6 0 0-20.6-22.8-12.9-43.3 5-13.4 7-13.3 8.6-13.9 5.7-2.2 11.3-4.6 15.4-9.1 20.6-22.2 46.8-18 46.8-18s12.4-37.8 23.9-30.4c3.5 2.3 16.3 30.6 16.3 30.6s13.6-7.9 15.1-5c8.2 16 9.2 46.5 5.6 65.1-6.1 30.6-21.4 47.1-27.6 57.5-1.4 2.4 16.5 10 27.8 41.3 10.4 28.6 1.1 52.7 2.8 55.3.8 1.4 13.7.8 36.4-13.2 12.8-7.9 28.1-16.9 45.4-17 16.7-.5 17.6 19.2 4.9 22.2zM496 256c0 136.9-111.1 248-248 248S0 392.9 0 256 111.1 8 248 8s248 111.1 248 248zm-79.3 75.2c-1.7-13.6-13.2-23-28-22.8-22 .3-40.5 11.7-52.8 19.2-4.8 3-8.9 5.2-12.4 6.8 3.1-44.5-22.5-73.1-28.7-79.4 7.8-11.3 18.4-27.8 23.4-53.2 4.3-21.7 3-55.5-6.9-74.5-1.6-3.1-7.4-11.2-21-7.4-9.7-20-13-22.1-15.6-23.8-1.1-.7-23.6-16.4-41.4 28-12.2.9-31.3 5.3-47.5 22.8-2 2.2-5.9 3.8-10.1 5.4h.1c-8.4 3-12.3 9.9-16.9 22.3-6.5 17.4.2 34.6 6.8 45.7-17.8 15.9-37 39.8-35.7 82.5-34 36-11.8 73-5.6 79.6-1.6 11.1 3.7 19.4 12 23.8 12.6 6.7 30.3 9.6 43.9 2.8 4.9 5.2 13.8 10.1 30 10.1 6.8 0 58-2.9 72.6-6.5 6.8-1.6 11.5-4.5 14.6-7.1 9.8-3.1 36.8-12.3 62.2-28.7 18-11.7 24.2-14.2 37.6-17.4 12.9-3.2 21-15.1 19.4-28.2z"]
            },
            faYelp: {
                prefix: "fab",
                iconName: "yelp",
                icon: [384, 512, [], "f1e9", "M42.9 240.32l99.62 48.61c19.2 9.4 16.2 37.51-4.5 42.71L30.5 358.45a22.79 22.79 0 0 1-28.21-19.6 197.16 197.16 0 0 1 9-85.32 22.8 22.8 0 0 1 31.61-13.21zm44 239.25a199.45 199.45 0 0 0 79.42 32.11A22.78 22.78 0 0 0 192.94 490l3.9-110.82c.7-21.3-25.5-31.91-39.81-16.1l-74.21 82.4a22.82 22.82 0 0 0 4.09 34.09zm145.34-109.92l58.81 94a22.93 22.93 0 0 0 34 5.5 198.36 198.36 0 0 0 52.71-67.61A23 23 0 0 0 364.17 370l-105.42-34.26c-20.31-6.5-37.81 15.8-26.51 33.91zm148.33-132.23a197.44 197.44 0 0 0-50.41-69.31 22.85 22.85 0 0 0-34 4.4l-62 91.92c-11.9 17.7 4.7 40.61 25.2 34.71L366 268.63a23 23 0 0 0 14.61-31.21zM62.11 30.18a22.86 22.86 0 0 0-9.9 32l104.12 180.44c11.7 20.2 42.61 11.9 42.61-11.4V22.88a22.67 22.67 0 0 0-24.5-22.8 320.37 320.37 0 0 0-112.33 30.1z"]
            },
            faYoast: {
                prefix: "fab",
                iconName: "yoast",
                icon: [448, 512, [], "f2b1", "M91.3 76h186l-7 18.9h-179c-39.7 0-71.9 31.6-71.9 70.3v205.4c0 35.4 24.9 70.3 84 70.3V460H91.3C41.2 460 0 419.8 0 370.5V165.2C0 115.9 40.7 76 91.3 76zm229.1-56h66.5C243.1 398.1 241.2 418.9 202.2 459.3c-20.8 21.6-49.3 31.7-78.3 32.7v-51.1c49.2-7.7 64.6-49.9 64.6-75.3 0-20.1.6-12.6-82.1-223.2h61.4L218.2 299 320.4 20zM448 161.5V460H234c6.6-9.6 10.7-16.3 12.1-19.4h182.5V161.5c0-32.5-17.1-51.9-48.2-62.9l6.7-17.6c41.7 13.6 60.9 43.1 60.9 80.5z"]
            },
            faYoutube: {
                prefix: "fab",
                iconName: "youtube",
                icon: [576, 512, [], "f167", "M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.5 48.284 47.821C117.22 448 288 448 288 448s170.78 0 213.371-11.486c23.497-6.321 42.003-24.171 48.284-47.821 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zm-317.51 213.508V175.185l142.739 81.205-142.739 81.201z"]
            },
            faYoutubeSquare: {
                prefix: "fab",
                iconName: "youtube-square",
                icon: [448, 512, [], "f431", "M186.8 202.1l95.2 54.1-95.2 54.1V202.1zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-42 176.3s0-59.6-7.6-88.2c-4.2-15.8-16.5-28.2-32.2-32.4C337.9 128 224 128 224 128s-113.9 0-142.2 7.7c-15.7 4.2-28 16.6-32.2 32.4-7.6 28.5-7.6 88.2-7.6 88.2s0 59.6 7.6 88.2c4.2 15.8 16.5 27.7 32.2 31.9C110.1 384 224 384 224 384s113.9 0 142.2-7.7c15.7-4.2 28-16.1 32.2-31.9 7.6-28.5 7.6-88.1 7.6-88.1z"]
            },
            faZhihu: {
                prefix: "fab",
                iconName: "zhihu",
                icon: [640, 512, [], "f63f", "M170.54 148.13v217.54l23.43.01 7.71 26.37 42.01-26.37h49.53V148.13H170.54zm97.75 193.93h-27.94l-27.9 17.51-5.08-17.47-11.9-.04V171.75h72.82v170.31zm-118.46-94.39H97.5c1.74-27.1 2.2-51.59 2.2-73.46h51.16s1.97-22.56-8.58-22.31h-88.5c3.49-13.12 7.87-26.66 13.12-40.67 0 0-24.07 0-32.27 21.57-3.39 8.9-13.21 43.14-30.7 78.12 5.89-.64 25.37-1.18 36.84-22.21 2.11-5.89 2.51-6.66 5.14-14.53h28.87c0 10.5-1.2 66.88-1.68 73.44H20.83c-11.74 0-15.56 23.62-15.56 23.62h65.58C66.45 321.1 42.83 363.12 0 396.34c20.49 5.85 40.91-.93 51-9.9 0 0 22.98-20.9 35.59-69.25l53.96 64.94s7.91-26.89-1.24-39.99c-7.58-8.92-28.06-33.06-36.79-41.81L87.9 311.95c4.36-13.98 6.99-27.55 7.87-40.67h61.65s-.09-23.62-7.59-23.62v.01zm412.02-1.6c20.83-25.64 44.98-58.57 44.98-58.57s-18.65-14.8-27.38-4.06c-6 8.15-36.83 48.2-36.83 48.2l19.23 14.43zm-150.09-59.09c-9.01-8.25-25.91 2.13-25.91 2.13s39.52 55.04 41.12 57.45l19.46-13.73s-25.67-37.61-34.66-45.86h-.01zM640 258.35c-19.78 0-130.91.93-131.06.93v-101c4.81 0 12.42-.4 22.85-1.2 40.88-2.41 70.13-4 87.77-4.81 0 0 12.22-27.19-.59-33.44-3.07-1.18-23.17 4.58-23.17 4.58s-165.22 16.49-232.36 18.05c1.6 8.82 7.62 17.08 15.78 19.55 13.31 3.48 22.69 1.7 49.15.89 24.83-1.6 43.68-2.43 56.51-2.43v99.81H351.41s2.82 22.31 25.51 22.85h107.94v70.92c0 13.97-11.19 21.99-24.48 21.12-14.08.11-26.08-1.15-41.69-1.81 1.99 3.97 6.33 14.39 19.31 21.84 9.88 4.81 16.17 6.57 26.02 6.57 29.56 0 45.67-17.28 44.89-45.31v-73.32h122.36c9.68 0 8.7-23.78 8.7-23.78l.03-.01z"]
            }
        }),
        St.watch();
        const Jn = n(573),
        Kn = n(669);
        let $n,
        ei,
        ti,
        ni,
        ii,
        ai,
        ri,
        oi,
        si,
        ci,
        li,
        hi,
        ui,
        fi,
        di,
        pi,
        mi,
        vi,
        gi,
        xi = 1e3,
        yi = 0,
        bi = .5;
        new kt.Vector3,
        new kt.Clock;
        let Mi,
        zi,
        wi = !1;
        window.currentSection = "";
        let _i = !1;
        window.playerObject,
        window.playerLabObject;
        let Si = !1,
        Li = !1;
        window.checkCurrentSection = () => {
            let e,
            t;
            if (_i)
                switch (window.currentSection) {
                case "home":
                    Jt.x = -20,
                    Jt.y = 0,
                    Jt.z = 0,
                    Qt.x = 0,
                    Qt.y = 0,
                    Qt.z = 10,
                    mi[0].classList.remove("in"),
                    di.colorR = 1,
                    di.colorG = 1,
                    di.colorB = 1,
                    fi.sunColor = new kt.Color(1, .1, 0),
                    e = document.getElementsByClassName("bt-menu");
                    for (let t = 0; t < e.length; t++)
                        e[t].classList.remove("off");
                    Vi("home");
                    break;
                case "about":
                    Jt.x = -20,
                    Jt.y = 0,
                    Jt.z = -10,
                    Qt.x = -50,
                    Qt.y = 20,
                    Qt.z = -20,
                    di.colorR = 1,
                    di.colorG = 1,
                    di.colorB = 1,
                    mi[0].classList.add("in"),
                    fi.sunColor = new kt.Color(.6, .6, .8),
                    e = document.getElementsByClassName("bt-menu");
                    for (let t = 0; t < e.length; t++)
                        e[t].classList.remove("off");
                    t = document.getElementById("bt-about"),
                    t.classList.add("off"),
                    Vi("about");
                    break;
                case "works":
                    Jt.x = 30,
                    Jt.y = 45,
                    Jt.z = 0,
                    Qt.x = -20,
                    Qt.y = 45,
                    Qt.z = 10,
                    di.colorR = .7,
                    di.colorG = .2,
                    di.colorB = .1,
                    mi[0].classList.add("in"),
                    fi.sunColor = new kt.Color(1, .1, 0),
                    e = document.getElementsByClassName("bt-menu");
                    for (let t = 0; t < e.length; t++)
                        e[t].classList.remove("off");
                    t = document.getElementById("bt-works"),
                    t.classList.add("off"),
                    Vi("works");
                    break;
                case "lab":
                    Jt.x = -18,
                    Jt.y = -50,
                    Jt.z = 0,
                    Qt.x = 0,
                    Qt.y = -50,
                    Qt.z = 10,
                    di.colorR = 1,
                    di.colorG = 1,
                    di.colorB = 1,
                    mi[0].classList.add("in"),
                    fi.sunColor = new kt.Color(1, .1, 0),
                    e = document.getElementsByClassName("bt-menu");
                    for (let t = 0; t < e.length; t++)
                        e[t].classList.remove("off");
                    t = document.getElementById("bt-lab"),
                    t.classList.add("off"),
                    Vi("lab");
                    break;
                case "contact":
                    Jt.x = 400,
                    Jt.y = 125,
                    Jt.z = 0,
                    Qt.x = 300,
                    Qt.y = 125,
                    Qt.z = 0,
                    di.colorR = 1,
                    di.colorG = 1,
                    di.colorB = 1,
                    mi[0].classList.add("in"),
                    fi.sunColor = new kt.Color(1, .1, 0),
                    e = document.getElementsByClassName("bt-menu");
                    for (let t = 0; t < e.length; t++)
                        e[t].classList.remove("off");
                    t = document.getElementById("bt-contact"),
                    t.classList.add("off"),
                    Vi("contact")
                }
        };
        const Ai = (e, t, n, i, a) => {
            switch (t) {
            case "normal":
                let t = document.createElement("div");
                t.classList.add("card"),
                t.dataset.cardId = e;
                let i = document.createElement("div");
                i.classList.add("bg"),
                t.style.backgroundImage = `url(${a})`,
                "works" == currentSection ? i.style.backgroundImage = `linear-gradient(\n        rgba(255, 120, 0, 1), \n        rgba(255, 120, 0, 1)\n      ), url(${a})` : i.style.backgroundImage = `linear-gradient(\n          rgba(120, 00, 255, 1), \n          rgba(120, 00, 255, 1)\n        ), url(${a})`,
                t.appendChild(i);
                let r = document.createElement("div");
                return r.classList.add("title"),
                r.innerHTML = n,
                t.appendChild(r),
                t;
            case "tall":
                let o = document.createElement("div");
                o.classList.add("card", "card-tall"),
                o.dataset.cardId = e;
                let s = document.createElement("div");
                s.classList.add("bg"),
                o.style.backgroundImage = `url(${a})`,
                "works" == currentSection ? s.style.backgroundImage = `linear-gradient(\n        rgba(255, 120, 0, 1), \n        rgba(255, 120, 0, 1)\n      ), url(${a})` : s.style.backgroundImage = `linear-gradient(\n          rgba(120, 00, 255, 1), \n          rgba(120, 00, 255, 1)\n        ), url(${a})`,
                o.appendChild(s);
                let c = document.createElement("div");
                return c.classList.add("title"),
                c.innerHTML = n,
                o.appendChild(c),
                o;
            case "wide":
                let l = document.createElement("div");
                l.classList.add("card", "card-wide"),
                l.dataset.cardId = e;
                let h = document.createElement("div");
                h.classList.add("bg"),
                h.classList.add("bg-wide"),
                l.style.backgroundImage = `url(${a})`,
                "works" == currentSection ? h.style.backgroundImage = `linear-gradient(\n        rgba(255, 120, 0, 1), \n        rgba(255, 120, 0, 1)\n      ), url(${a})` : h.style.backgroundImage = `linear-gradient(\n          rgba(120, 00, 255, 1), \n          rgba(120, 00, 255, 1)\n        ), url(${a})`,
                l.appendChild(h);
                let u = document.createElement("div");
                return u.classList.add("title"),
                u.innerHTML = n,
                l.appendChild(u),
                l;
            case "tallWide":
                let f = document.createElement("div");
                f.classList.add("card", "card-tall", "card-wide"),
                f.dataset.cardId = e;
                let d = document.createElement("div");
                d.classList.add("bg"),
                f.style.backgroundImage = `url(${a})`,
                "works" == currentSection ? d.style.backgroundImage = `linear-gradient(\n        rgba(255, 120, 0, 1), \n        rgba(255, 120, 0, 1)\n      ), url(${a})` : d.style.backgroundImage = `linear-gradient(\n          rgba(120, 00, 255, 1), \n          rgba(120, 00, 255, 1)\n        ), url(${a})`,
                f.appendChild(d);
                let p = document.createElement("div");
                return p.classList.add("title"),
                p.innerHTML = n,
                f.appendChild(p),
                f
            }
        },
        Ti = e => {
            e.target.classList.add("on"),
            e.target.querySelector(".bg").classList.add("on"),
            e.target.querySelector(".title").classList.add("on"),
            "lab" == currentSection && e.target.querySelector(".title").classList.add("deep")
        },
        Ci = e => {
            e.target.classList.remove("on"),
            e.target.querySelector(".bg").classList.remove("on"),
            e.target.querySelector(".title").classList.remove("on"),
            "lab" == currentSection && e.target.querySelector(".title").classList.remove("deep")
        },
        Ei = (e, t) => {
            e.target.classList.remove("on"),
            e.target.querySelector(".title").classList.remove("on"),
            document.getElementById("content-works").classList.remove("on");
            let n = document.getElementById("card-inside");
            window.playerObject.load(Zn[t].content.videoID),
            window.playerObject.setVolume(100),
            window.playerObject.on("playing", (() => {
                    console.log("playing"),
                    Si = !0
                })),
            window.playerObject.on("paused", (() => {
                    Si = !1
                })),
            document.getElementById("card-inside-title").innerHTML = Zn[t].title,
            document.getElementById("card-inside-subtitle").innerHTML = `<span>Client:</span> ${Zn[t].client} <span>Category:</span> ${Zn[t].category} <span>Tech:</span> ${Zn[t].technology} `,
            document.getElementById("card-inside-description").innerHTML = Zn[t].description,
            zi = setTimeout((() => {
                        clearTimeout(zi),
                        document.getElementById("bt-fechar").addEventListener("click", Hi),
                        n.classList.add("on")
                    }), 1e3)
        },
        Hi = e => {
            document.getElementById("content-works").classList.add("on"),
            document.getElementById("card-inside").classList.remove("on");
            try {
                Si = !1,
                window.playerObject.pause()
            } catch (e) {}
        },
        Ni = (e, t) => {
            e.target.classList.remove("on"),
            e.target.querySelector(".title").classList.remove("on"),
            document.getElementById("content-lab").classList.remove("on");
            let n = document.getElementById("card-inside-lab");
            window.playerLabObject.load(Qn[t].content.videoID),
            window.playerLabObject.setVolume(100),
            window.playerLabObject.on("playing", (() => {
                    Li = !0
                })),
            window.playerLabObject.on("paused", (() => {
                    Li = !1
                })),
            document.getElementById("card-inside-lab-title").innerHTML = Qn[t].title,
            document.getElementById("card-inside-lab-subtitle").innerHTML = `<span>Client:</span> ${Qn[t].client} <span>Category:</span> ${Qn[t].category} <span>Tech:</span> ${Qn[t].technology} `,
            document.getElementById("card-inside-lab-description").innerHTML = Qn[t].description,
            zi = setTimeout((() => {
                        clearTimeout(zi),
                        document.getElementById("bt-fechar-lab").addEventListener("click", Pi),
                        n.classList.add("on")
                    }), 1e3)
        },
        Pi = e => {
            document.getElementById("content-lab").classList.add("on"),
            document.getElementById("card-inside-lab").classList.remove("on");
            try {
                Li = !1,
                window.playerLabObject.pause()
            } catch (e) {}
        },
        Vi = e => {
            for (; void 0 === Mi; )
                Mi = document.getElementById("dom-elements");
            wi = !1;
            try {
                clearTimeout(zi)
            } catch (e) {}
            if (void 0 !== Mi) {
                for (; Mi.firstChild; )
                    Mi.removeChild(Mi.firstChild);
                Mi.classList.remove("on");
                const t = document.createElement("div");
                let n;
                t.classList.add("div-null"),
                Mi.appendChild(t);
                try {
                    n.classList.remove("on")
                } catch (e) {}
                switch (e) {
                case "home":
                    Si = !1,
                    Li = !1;
                    break;
                case "about":
                    Si = !1,
                    Li = !1,
                    n = document.createElement("div"),
                    n.id = "content-about";
                    const e = document.createElement("img");
                    e.id = "about-photo",
                    e.src = "https://z-z-m.github.io/webpage/images/mustang.jpg";
                    const i = document.createElement("div");
                    i.id = "about-text";
                    const a = document.createElement("p");
                    a.innerHTML = 'Hi! test\n        <br />\n        <br />\n        Feel free to <span class="send-message">send me a message</span>!\n        <br />\n        <br />\n        My Curriculum Vitae: <a href="https://z-z-m.github.io/cv-test.pdf" target="_blank">click here</a>\n        <br />\n        <br />\n        e-mail: <a href="mailto:test@test.com">test@test.com.br</a>\n        <br />\n        linkedin: <a href="https://www.linkedin.com/in/test" target="_blank">test</a>\n        <br />\n        instagram: <a href="https://www.instagram.com/test" target="_blank">test</a>\n        <br />\n        github: <a href="https://github.com/test" target="_blank">test</a>',
                    i.appendChild(a),
                    n.appendChild(e),
                    n.appendChild(i),
                    t.appendChild(n),
                    zi = setTimeout((() => {
                                clearTimeout(zi),
                                document.getElementsByClassName("send-message")[0].addEventListener("click", (e => {
                                        Fi("bt-contact")
                                    })),
                                wi = !0,
                                Mi.classList.add("on"),
                                n.classList.add("on")
                            }), 3e3);
                    break;
                case "works":
                    Si = !1,
                    Li = !1,
                    window.playerObject = void 0,
                    n = document.createElement("div"),
                    n.id = "content-works",
                    n.classList.add("image-mosaic"),
                    Zn.map((e => {
                            let t = Ai(e.id, e.cardType, e.title, e.client, e.backgroundImage);
                            n.appendChild(t)
                        }));
                    const r = document.createElement("div");
                    r.id = "card-inside";
                    let o = document.createElement("div");
                    o.id = "bt-fechar",
                    r.appendChild(o);
                    let s = document.createElement("h1");
                    s.id = "card-inside-title",
                    r.appendChild(s);
                    let c = document.createElement("h2");
                    c.id = "card-inside-subtitle",
                    r.appendChild(c);
                    let l = document.createElement("div");
                    l.id = "player",
                    r.appendChild(l);
                    let h = document.createElement("p");
                    h.id = "card-inside-description",
                    r.appendChild(h),
                    Mi.appendChild(r),
                    t.appendChild(n),
                    zi = setTimeout((() => {
                                clearTimeout(zi),
                                Mi.classList.add("on"),
                                n.classList.add("on"),
                                void 0 === window.playerObject && (window.playerObject = new Jn("#player"));
                                for (var e = document.getElementsByClassName("card"), t = 0; t < e.length; t++) {
                                    let n = e[t].dataset.cardId;
                                    e[t].addEventListener("mouseover", Ti),
                                    e[t].addEventListener("mouseout", Ci),
                                    e[t].addEventListener("click", (e => {
                                            Ei(e, n)
                                        }))
                                }
                            }), 3e3);
                    break;
                case "lab":
                    Si = !1,
                    Li = !1,
                    window.playerLabObject = void 0,
                    n = document.createElement("div"),
                    n.id = "content-lab",
                    n.classList.add("image-mosaic"),
                    Qn.map((e => {
                            let t = Ai(e.id, e.cardType, e.title, e.client, e.backgroundImage);
                            n.appendChild(t)
                        }));
                    const u = document.createElement("div");
                    u.id = "card-inside-lab";
                    let f = document.createElement("div");
                    f.id = "bt-fechar-lab",
                    u.appendChild(f);
                    let d = document.createElement("h1");
                    d.id = "card-inside-lab-title",
                    u.appendChild(d);
                    let p = document.createElement("h2");
                    p.id = "card-inside-lab-subtitle",
                    u.appendChild(p);
                    let m = document.createElement("div");
                    m.id = "player-lab",
                    u.appendChild(m);
                    let v = document.createElement("p");
                    v.id = "card-inside-lab-description",
                    u.appendChild(v),
                    Mi.appendChild(u),
                    t.appendChild(n),
                    zi = setTimeout((() => {
                                clearTimeout(zi),
                                Mi.classList.add("on"),
                                n.classList.add("on"),
                                void 0 === window.playerLabObject && (window.playerLabObject = new Jn("#player-lab"));
                                for (var e = document.getElementsByClassName("card"), t = 0; t < e.length; t++) {
                                    let n = e[t].dataset.cardId;
                                    e[t].addEventListener("mouseover", Ti),
                                    e[t].addEventListener("mouseout", Ci),
                                    e[t].addEventListener("click", (e => {
                                            Ni(e, n)
                                        }))
                                }
                            }), 3e3);
                    break;
                case "contact":
                    Si = !1,
                    Li = !1;
                    const g = document.createElement("form"),
                    x = document.createElement("br"),
                    y = document.createElement("input");
                    y.setAttribute("type", "text"),
                    y.setAttribute("name", "name"),
                    y.id = "name",
                    y.setAttribute("required", "true"),
                    y.setAttribute("placeholder", "Name");
                    const b = document.createElement("input");
                    b.setAttribute("type", "email"),
                    b.setAttribute("name", "email"),
                    b.id = "email",
                    b.setAttribute("required", "true"),
                    b.setAttribute("placeholder", "E-mail");
                    const M = document.createElement("textarea");
                    M.setAttribute("name", "message"),
                    M.id = "message",
                    M.setAttribute("rows", "5"),
                    M.setAttribute("cols", "50"),
                    M.setAttribute("required", "true"),
                    M.setAttribute("placeholder", "Message");
                    const z = document.createElement("input");
                    z.setAttribute("type", "submit"),
                    z.setAttribute("value", "Submit"),
                    g.appendChild(y),
                    g.appendChild(x.cloneNode()),
                    g.appendChild(b),
                    g.appendChild(x.cloneNode()),
                    g.appendChild(M),
                    g.appendChild(x.cloneNode()),
                    g.appendChild(z);
                    const w = document.createElement("div");
                    w.id = "infos",
                    w.innerHTML = '<p><i class="fas fa-envelope"></i> <a href="mailto:test@test.com">test@test.com</a>&nbsp;&nbsp;|&nbsp;&nbsp;<i class="fab fa-instagram-square"></i> <a href="https://www.instagram.com/test/"  target="_blank">@test</a>&nbsp;&nbsp;|&nbsp;&nbsp;<i class="fab fa-linkedin" aria-hidden="true"></i> <a href="https://www.linkedin.com/in/test"  target="_blank">test</a></p><br />';
                    let _ = document.createElement("div");
                    _.id = "feedback",
                    _.addEventListener("click", (e => {
                            e.stopPropagation(),
                            e.target.classList.remove("on"),
                            document.querySelector("form").classList.remove("off")
                        })),
                    g.appendChild(w),
                    t.appendChild(g),
                    t.appendChild(_),
                    g.addEventListener("submit", (e => {
                            e.preventDefault();
                            var t = {
                                name: document.getElementById("name").value,
                                email: document.getElementById("email").value,
                                message: document.getElementById("message").value
                            };
                            Kn.post("/send", t).then((e => {
                                    if (200 == e.status) {
                                        document.getElementById("name").value = "",
                                        document.getElementById("email").value = "",
                                        document.getElementById("message").value = "",
                                        document.querySelector("form").classList.add("off");
                                        let e = document.getElementById("feedback");
                                        e.classList.add("on"),
                                        e.innerHTML = "Awesome! I'll answer you<br />as soon as possible!"
                                    }
                                })).catch((e => {
                                    throw e
                                }))
                        })),
                    Mi.classList.add("on"),
                    setTimeout((() => {
                            y.classList.add("on")
                        }), 3e3),
                    setTimeout((() => {
                            b.classList.add("on")
                        }), 3200),
                    setTimeout((() => {
                            M.classList.add("on")
                        }), 3400),
                    setTimeout((() => {
                            z.classList.add("on")
                        }), 3600),
                    setTimeout((() => {
                            w.classList.add("on")
                        }), 3800);
                    break;
                case "soon":
                    n = document.createElement("div"),
                    n.id = "content-soon",
                    n.innerHTML = "I'm sorry!<br />I'm still working on it.<br />Very soon...<br />Maybe tomorrow.",
                    t.appendChild(n),
                    zi = setTimeout((() => {
                                clearTimeout(zi),
                                Mi.classList.add("on"),
                                n.classList.add("on")
                            }), 3e3)
                }
            }
        },
        Ri = () => {
            requestAnimationFrame(Ri),
            Yt.clear(),
            ui.updateParticles(),
            fi.update(),
            $t && (Xt.rotation.x = 0, Xt.rotation.y = 0, Xt.rotation.z = 0, Xt.position.x = tn(Xt.position.x, Qt.x, .01), Xt.position.y = tn(Xt.position.y, Qt.y, .01), Xt.position.z = tn(Xt.position.z, Qt.z, .01), Zt.target.x = tn(Zt.target.x, Jt.x, .01), Zt.target.y = tn(Zt.target.y, Jt.y, .01), Zt.target.z = tn(Zt.target.z, Jt.z, .01)),
            Zt.update(),
            $n.updateAnimal(),
            ei.updateAnimal(),
            ni.updateAnimal(),
            ti.updateAnimal(),
            ii.updateAnimal(),
            ai.updateAnimal(),
            ri.updateAnimal(),
            oi.updateAnimal(),
            void 0 !== gi && (Xt.position.y < -2 ? (xi = 130, yi = 15, bi = .3, si.updateAnimal(), ci.updateAnimal(), li.updateAnimal()) : (xi = 2e3, yi = 0, bi = .5, di.update()), gi.changeLowpass(xi, yi, bi)),
            gi && gi.sound.isPlaying && (Si || Li ? gi.sound.getVolume() > 0 && gi.changeVolume(0) : gi.sound.getVolume() < 1 && gi.changeVolume(1)),
            hi.render()
        },
        Fi = e => {
            "bt-about" == e ? Bt("/about") : "bt-works" == e ? Bt("/works") : "bt-lab" == e ? Bt("/lab") : "bt-contact" == e && Bt("/contact")
        };
        document.addEventListener("DOMContentLoaded", (() => {
                Mi = document.getElementById("dom-elements"),
                ((e, t, n) => {
                    e === document && (e = document.scrollingElement || document.documentElement || document.body.parentNode || document.body);
                    var i = !1,
                    a = e.scrollTop,
                    r = e === document.body && document.documentElement ? document.documentElement : e;
                    function o(t) {
                        t.preventDefault();
                        var n = function (e) {
                            return e.detail ? e.wheelDelta ? e.wheelDelta / e.detail / 40 * (e.detail > 0 ? 1 : -1) : -e.detail / 3 : e.wheelDelta / 120
                        }
                        (t);
                        a += 120 * -n,
                        a = Math.max(0, Math.min(a, e.scrollHeight - r.clientHeight)),
                        i || s()
                    }
                    function s() {
                        i = !0;
                        var t = (a - e.scrollTop) / 12;
                        e.scrollTop += t,
                        Math.abs(t) > .5 ? c(s) : i = !1
                    }
                    e.addEventListener("mousewheel", o, {
                        passive: !1
                    }),
                    e.addEventListener("DOMMouseScroll", o, {
                        passive: !1
                    });
                    var c = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (e) {
                        window.setTimeout(e, 20)
                    }
                })(Mi)
            })),
        window.onload = function () {
            document.querySelector("body").classList.remove("initial-hide"),
            document.querySelector("h1").innerHTML = ""
        },
        window.addEventListener("resize", (function () {
                Xt.aspect = window.innerWidth / window.innerHeight,
                Xt.updateProjectionMatrix(),
                Yt.setPixelRatio(window.devicePixelRatio),
                Yt.setSize(window.innerWidth, window.innerHeight),
                hi.composer.setSize(window.innerWidth, window.innerHeight)
            }), !1),
        document.addEventListener("visibilitychange", (e => {
                document.hidden ? void 0 !== gi && gi.pauseSound() : void 0 !== gi && gi.playSound()
            }), !1),
        vi = document.getElementById("title"),
        vi.addEventListener("click", (e => {
                if ("START HERE" === e.target.innerHTML) {
                    _i = !0,
                    Bt(window.location.pathname),
                    void 0 === gi && (gi = new Yn(qt, Xt, qn)),
                    e.target.innerHTML = "Z Z",
                    document.querySelector("canvas").classList.add("on"),
                    document.getElementsByClassName("menu-home")[0].classList.add("on"),
                    pi = document.getElementsByClassName("bt-menu");
                    for (let e = 0; e < pi.length; e++)
                        pi[e].addEventListener("click", (e => {
                                Fi(e.target.id)
                            }), !1)
                } else
                    Bt("/")
            })),
        mi = document.getElementsByClassName("menu-holder"),
        pi = document.getElementsByClassName("bt-menu"),
        $n = new Pn(Fn, qt, Xt, .0318, 18, 1, -7, -4.1, 150, 600, -11, !1, !1),
        ei = new Pn(In, qt, Xt, .0348, 15, 1, -30, -2.7, 150, 600, -5, !1, !0),
        ni = new Pn(Dn, qt, Xt, .0348, 19, 1, 0, -3.8, 150, 600, -8, !1, !0),
        ti = new Pn(On, qt, Xt, .0348, 30, 1, 90, -4.9, 150, 600, -13, !1, !0),
        ii = new Pn(Un, qt, Xt, .0278, 15, .7, -30, -2.2, 150, 600, -2, !1, !0),
        ai = new Pn(Bn, qt, Xt, .0318, 14, 1, -6, 5, 150, 600, -17, !1, !0),
        ri = new Pn(kn, qt, Xt, .0318, 12, .7, -4, 3, 150, 600, -20, !1, !0),
        oi = new Pn(Gn, qt, Xt, .0318, 11, .6, -26, -6, 150, 600, -21, !0, !0),
        si = new Pn(jn, qt, Xt, .0518, 18, 1.5, -10, -32, 200, 600, -21, !0, !0, !0),
        ci = new Pn(Wn, qt, Xt, .0518, 13, 1, -100, -48, 200, 600, -21, !0, !0, !0),
        li = new Pn(Xn, qt, Xt, .0518, 14, 1.5, 100, -32, 250, 600, -21, !0, !0, !0),
        ui = new class {
            constructor(e, t) {
                this.scene = t,
                this.materials = [],
                this.particlesLength = e,
                this.geometry = new kt.BufferGeometry,
                this.vertices = [],
                this.sprite1 = (new kt.TextureLoader).load(Mn);
                for (var n = 0; n < this.particlesLength; n++) {
                    var i = this.randomFloatFromInterval(-50, 50),
                    a = this.randomFloatFromInterval(0, 35),
                    r = this.randomFloatFromInterval(-40, 10);
                    this.vertices.push(i, a, r)
                }
                for (this.geometry.setAttribute("position", new kt.Float32BufferAttribute(this.vertices, 3)), this.parameters = [[[22, .1, .3], this.sprite1, .34], [[22, .1, .3], this.sprite1, .308], [[22, .1, .3], this.sprite1, .266], [[22, .1, .3], this.sprite1, .244], [[22, .1, .3], this.sprite1, .202]], n = 0; n < this.parameters.length; n++) {
                    var o = this.parameters[n][0],
                    s = this.parameters[n][1],
                    c = this.parameters[n][2];
                    this.materials[n] = new kt.PointsMaterial({
                        size: c,
                        map: s,
                        blending: kt.AdditiveBlending,
                        depthTest: !1,
                        transparent: !0,
                        side: kt.FrontSide
                    }),
                    this.materials[n].color.setHSL(o[0], o[1], o[2]);
                    var l = new kt.Points(this.geometry, this.materials[n]);
                    l.rotation.x = Math.random() * Math.PI,
                    l.rotation.y = Math.random() * Math.PI,
                    l.rotation.z = Math.random() * Math.PI,
                    this.scene.add(l)
                }
            }
            updateParticles() {
                for (var e = 5e-5 * Date.now(), t = 0; t < this.scene.children.length; t++) {
                    var n = this.scene.children[t];
                    n instanceof kt.Points && (n.rotation.y = 2 * e * (t < 4 ? t + 1 :  - (t + 1)), n.rotation.x = e * (t < 4 ? t + 1 :  - (t + 1)) * 1)
                }
            }
            randomFloatFromInterval(e, t) {
                return Math.random() * (t - e) + e
            }
        }
        (2e3, qt),
        fi = new class {
            constructor(e, t) {
                this.scene = e,
                this.camera = t,
                this.sunColor = new kt.Color(1, .1, 0),
                this.geometrySun = new kt.SphereGeometry(30, 32, 32),
                this.materialSun = new kt.MeshBasicMaterial({
                    color: this.sunColor,
                    fog: !1,
                    side: kt.DoubleSide
                }),
                this.sun = new kt.Mesh(this.geometrySun, this.materialSun),
                this.sun.position.x = 300,
                this.sun.position.y = 100,
                this.scene.add(this.sun),
                this.geometry = new kt.PlaneGeometry(200, 300, 150, 150),
                this.line = new Rn.MeshLine,
                this.line.setGeometry(this.geometry, (function (e) {
                        return e
                    })),
                this.material = new kt.MeshStandardMaterial({
                    roughness: 0,
                    color: new kt.Color(.1, .1, .1),
                    transparent: !0
                }),
                this.materialLine = new Rn.MeshLineMaterial({
                    color: new kt.Color(.3, .6, .8),
                    opacity: 1,
                    resolution: new kt.Vector2(window.innerWidth, window.innerHeight),
                    sizeAttenuation: !1,
                    side: kt.BackSide,
                    lineWidth: 7,
                    depthWrite: !0,
                    depthTest: !0,
                    transparent: !0
                }),
                this.clockPlane = new kt.Clock,
                this.plane = new kt.Mesh(this.line.geometry, this.materialLine),
                this.plane.position.z = -20,
                this.plane.position.y = -2,
                this.plane.rotation.x = Math.PI / 2,
                this.scene.add(this.plane),
                this.horizontalMirror = new Vn(this.geometry, {
                    clipBias: .003,
                    textureWidth: 1024 * window.devicePixelRatio,
                    textureHeight: 1024 * window.devicePixelRatio,
                    color: new kt.Color(0, 0, .5, 0),
                    transparent: !0,
                    recursion: 1
                }),
                this.horizontalMirror.position.z = -20,
                this.horizontalMirror.position.y = -2.02,
                this.horizontalMirror.rotation.x = -Math.PI / 2,
                this.scene.add(this.horizontalMirror)
            }
            lerp(e, t, n) {
                return (1 - n) * e + n * t
            }
            update() {
                let e = this.clockPlane.getDelta();
                this.plane.rotation.z += e * Math.PI * .05,
                this.materialSun.color.r = this.lerp(this.materialSun.color.r, this.sunColor.r, .01),
                this.materialSun.color.g = this.lerp(this.materialSun.color.g, this.sunColor.g, .01),
                this.materialSun.color.b = this.lerp(this.materialSun.color.b, this.sunColor.b, .01)
            }
        }
        (qt, Xt),
        di = new class {
            constructor(e, t, n) {
                this.clockRays = new kt.Clock,
                this.amount = e,
                this.scene = t,
                this.camera = n,
                this.geometryBox = new Array(this.amount),
                this.materialBox = new Array(this.amount),
                this.geometryBox = new Array(this.amount),
                this.velocityBox = new Array(this.amount),
                this.borderSizeBox = new Array(this.amount),
                this.meshBox = new Array(this.amount),
                this.colorR = 1,
                this.colorG = 1,
                this.colorB = 1;
                for (let t = 0; t < e; t++)
                    this.velocityBox[t] = this.randomIntFromInterval(50, 200), this.borderSizeBox = this.randomFloatFromInterval(10, 30), this.geometryBox[t] = new kt.BoxGeometry(this.randomIntFromInterval(80, 100), .1, this.borderSizeBox, 1, 1), this.materialBox[t] = new kt.MeshBasicMaterial({
                        color: 16777215,
                        side: kt.DoubleSide
                    }), this.meshBox[t] = new kt.Mesh(this.geometryBox[t], this.materialBox[t]), this.meshBox[t].position.x = this.randomIntFromInterval(-190, 190), this.meshBox[t].position.y = this.randomIntFromInterval(20, 60), this.meshBox[t].position.z = this.randomIntFromInterval(-70, 70), this.scene.add(this.meshBox[t])
            }
            update() {
                let e = this.clockRays.getDelta();
                for (let t = 0; t < this.amount; t++)
                    this.materialBox[t].color.r = this.lerp(this.materialBox[t].color.r, this.colorR, .1), this.materialBox[t].color.g = this.lerp(this.materialBox[t].color.g, this.colorG, .1), this.materialBox[t].color.b = this.lerp(this.materialBox[t].color.b, this.colorB, .01), this.meshBox[t].position.x -= e * this.velocityBox[t], this.meshBox[t].position.x <= -190 && (this.meshBox[t].position.x = 190)
            }
            lerp(e, t, n) {
                return (1 - n) * e + n * t
            }
            randomIntFromInterval(e, t) {
                return Math.floor(Math.random() * (t - e + 1) + e)
            }
            randomFloatFromInterval(e, t) {
                return Math.random() * (t - e) + e
            }
        }
        (25, qt, Xt),
        hi = new class {
            constructor(e, t, n) {
                this.pixelRatio = n.getPixelRatio(),
                this.renderPass = new dn(e, t),
                this.bloomPass = new mn(new kt.Vector2(window.innerWidth, window.innerHeight), 1.5, .4, .85),
                this.bloomPass.threshold = .31,
                this.bloomPass.strength = 1.2,
                this.bloomPass.radius = .55,
                this.bloomPass.renderToScreen = !0,
                this.afterimagePass = new yn(.6),
                this.glitchPass = new gn,
                this.glitchPass.curF = 0,
                this.glitchPass.renderToScreen = !0,
                this.fxaaPass = new cn(bn),
                this.fxaaPass.material.uniforms.resolution.value.x = 1 / (window.innerWidth * this.pixelRatio),
                this.fxaaPass.material.uniforms.resolution.value.y = 1 / (window.innerHeight * this.pixelRatio),
                this.composer = new un(n),
                this.composer.setSize(window.innerWidth, window.innerHeight),
                this.composer.addPass(this.renderPass),
                this.composer.addPass(this.fxaaPass),
                this.composer.addPass(this.glitchPass),
                this.composer.addPass(this.bloomPass)
            }
            render() {
                this.composer.render()
            }
        }
        (qt, Xt, Yt),
        Ri()
    })()
})();
